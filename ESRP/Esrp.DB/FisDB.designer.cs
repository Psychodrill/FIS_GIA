#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Esrp.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GVUZ_Develop")]
	public partial class FisDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAllowedDirection(AllowedDirection instance);
    partial void UpdateAllowedDirection(AllowedDirection instance);
    partial void DeleteAllowedDirection(AllowedDirection instance);
    partial void InsertDirection(Direction instance);
    partial void UpdateDirection(Direction instance);
    partial void DeleteDirection(Direction instance);
    partial void InsertEDU_PROGRAM_TYPE(EDU_PROGRAM_TYPE instance);
    partial void UpdateEDU_PROGRAM_TYPE(EDU_PROGRAM_TYPE instance);
    partial void DeleteEDU_PROGRAM_TYPE(EDU_PROGRAM_TYPE instance);
    partial void InsertInstitution(Institution instance);
    partial void UpdateInstitution(Institution instance);
    partial void DeleteInstitution(Institution instance);
    partial void InsertParentDirection(ParentDirection instance);
    partial void UpdateParentDirection(ParentDirection instance);
    partial void DeleteParentDirection(ParentDirection instance);
    partial void InsertRegionType(RegionType instance);
    partial void UpdateRegionType(RegionType instance);
    partial void DeleteRegionType(RegionType instance);
    partial void InsertInstitutionLicense(InstitutionLicense instance);
    partial void UpdateInstitutionLicense(InstitutionLicense instance);
    partial void DeleteInstitutionLicense(InstitutionLicense instance);
    #endregion
		
		public FisDBDataContext() : 
				base(global::Esrp.DB.Properties.Settings.Default.GVUZ_DevelopConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FisDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FisDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FisDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FisDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AllowedDirection> AllowedDirections
		{
			get
			{
				return this.GetTable<AllowedDirection>();
			}
		}
		
		public System.Data.Linq.Table<Direction> Directions
		{
			get
			{
				return this.GetTable<Direction>();
			}
		}
		
		public System.Data.Linq.Table<EDU_PROGRAM_TYPE> EDU_PROGRAM_TYPEs
		{
			get
			{
				return this.GetTable<EDU_PROGRAM_TYPE>();
			}
		}
		
		public System.Data.Linq.Table<Institution> Institutions
		{
			get
			{
				return this.GetTable<Institution>();
			}
		}
		
		public System.Data.Linq.Table<ParentDirection> ParentDirections
		{
			get
			{
				return this.GetTable<ParentDirection>();
			}
		}
		
		public System.Data.Linq.Table<RegionType> RegionTypes
		{
			get
			{
				return this.GetTable<RegionType>();
			}
		}
		
		public System.Data.Linq.Table<InstitutionLicense> InstitutionLicenses
		{
			get
			{
				return this.GetTable<InstitutionLicense>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllowedDirections")]
	public partial class AllowedDirection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstitutionID;
		
		private int _DirectionID;
		
		private short _AdmissionItemTypeID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _Year;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private int _AllowedDirectionsId;
		
		private string _EIIS_ID;
		
		private System.Nullable<int> _Esrp_ID;
		
		private System.Nullable<int> _AllowedDirectionStatusID;
		
		private EntityRef<Direction> _Direction;
		
		private EntityRef<Institution> _Institution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnDirectionIDChanging(int value);
    partial void OnDirectionIDChanged();
    partial void OnAdmissionItemTypeIDChanging(short value);
    partial void OnAdmissionItemTypeIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnAllowedDirectionsIdChanging(int value);
    partial void OnAllowedDirectionsIdChanged();
    partial void OnEIIS_IDChanging(string value);
    partial void OnEIIS_IDChanged();
    partial void OnEsrp_IDChanging(System.Nullable<int> value);
    partial void OnEsrp_IDChanged();
    partial void OnAllowedDirectionStatusIDChanging(System.Nullable<int> value);
    partial void OnAllowedDirectionStatusIDChanged();
    #endregion
		
		public AllowedDirection()
		{
			this._Direction = default(EntityRef<Direction>);
			this._Institution = default(EntityRef<Institution>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					if (this._Institution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int NOT NULL")]
		public int DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					if (this._Direction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionItemTypeID", DbType="SmallInt NOT NULL")]
		public short AdmissionItemTypeID
		{
			get
			{
				return this._AdmissionItemTypeID;
			}
			set
			{
				if ((this._AdmissionItemTypeID != value))
				{
					this.OnAdmissionItemTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AdmissionItemTypeID = value;
					this.SendPropertyChanged("AdmissionItemTypeID");
					this.OnAdmissionItemTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowedDirectionsId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AllowedDirectionsId
		{
			get
			{
				return this._AllowedDirectionsId;
			}
			set
			{
				if ((this._AllowedDirectionsId != value))
				{
					this.OnAllowedDirectionsIdChanging(value);
					this.SendPropertyChanging();
					this._AllowedDirectionsId = value;
					this.SendPropertyChanged("AllowedDirectionsId");
					this.OnAllowedDirectionsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIIS_ID", DbType="VarChar(50)")]
		public string EIIS_ID
		{
			get
			{
				return this._EIIS_ID;
			}
			set
			{
				if ((this._EIIS_ID != value))
				{
					this.OnEIIS_IDChanging(value);
					this.SendPropertyChanging();
					this._EIIS_ID = value;
					this.SendPropertyChanged("EIIS_ID");
					this.OnEIIS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Esrp_ID", DbType="Int")]
		public System.Nullable<int> Esrp_ID
		{
			get
			{
				return this._Esrp_ID;
			}
			set
			{
				if ((this._Esrp_ID != value))
				{
					this.OnEsrp_IDChanging(value);
					this.SendPropertyChanging();
					this._Esrp_ID = value;
					this.SendPropertyChanged("Esrp_ID");
					this.OnEsrp_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowedDirectionStatusID", DbType="Int")]
		public System.Nullable<int> AllowedDirectionStatusID
		{
			get
			{
				return this._AllowedDirectionStatusID;
			}
			set
			{
				if ((this._AllowedDirectionStatusID != value))
				{
					this.OnAllowedDirectionStatusIDChanging(value);
					this.SendPropertyChanging();
					this._AllowedDirectionStatusID = value;
					this.SendPropertyChanged("AllowedDirectionStatusID");
					this.OnAllowedDirectionStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_AllowedDirection", Storage="_Direction", ThisKey="DirectionID", OtherKey="DirectionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Direction Direction
		{
			get
			{
				return this._Direction.Entity;
			}
			set
			{
				Direction previousValue = this._Direction.Entity;
				if (((previousValue != value) 
							|| (this._Direction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direction.Entity = null;
						previousValue.AllowedDirections.Remove(this);
					}
					this._Direction.Entity = value;
					if ((value != null))
					{
						value.AllowedDirections.Add(this);
						this._DirectionID = value.DirectionID;
					}
					else
					{
						this._DirectionID = default(int);
					}
					this.SendPropertyChanged("Direction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_AllowedDirection", Storage="_Institution", ThisKey="InstitutionID", OtherKey="InstitutionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.AllowedDirections.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.AllowedDirections.Add(this);
						this._InstitutionID = value.InstitutionID;
					}
					else
					{
						this._InstitutionID = default(int);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Direction")]
	public partial class Direction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DirectionID;
		
		private string _EIIS_ID;
		
		private System.Nullable<int> _Esrp_ID;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<int> _ParentID;
		
		private string _SYS_GUID;
		
		private string _EDULEVEL;
		
		private System.Nullable<short> _EducationLevelId;
		
		private string _EDUPROGRAMTYPE;
		
		private System.Nullable<int> _EducationProgramTypeId;
		
		private string _UGSCODE;
		
		private string _UGSNAME;
		
		private string _QUALIFICATIONCODE;
		
		private string _QUALIFICATIONNAME;
		
		private string _PERIOD;
		
		private string _EDU_DIRECTORY;
		
		private string _EDUPR_ADDITIONAL;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _NewCode;
		
		private EntitySet<AllowedDirection> _AllowedDirections;
		
		private EntityRef<EDU_PROGRAM_TYPE> _EDU_PROGRAM_TYPE;
		
		private EntityRef<ParentDirection> _ParentDirection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDirectionIDChanging(int value);
    partial void OnDirectionIDChanged();
    partial void OnEIIS_IDChanging(string value);
    partial void OnEIIS_IDChanged();
    partial void OnEsrp_IDChanging(System.Nullable<int> value);
    partial void OnEsrp_IDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnSYS_GUIDChanging(string value);
    partial void OnSYS_GUIDChanged();
    partial void OnEDULEVELChanging(string value);
    partial void OnEDULEVELChanged();
    partial void OnEducationLevelIdChanging(System.Nullable<short> value);
    partial void OnEducationLevelIdChanged();
    partial void OnEDUPROGRAMTYPEChanging(string value);
    partial void OnEDUPROGRAMTYPEChanged();
    partial void OnEducationProgramTypeIdChanging(System.Nullable<int> value);
    partial void OnEducationProgramTypeIdChanged();
    partial void OnUGSCODEChanging(string value);
    partial void OnUGSCODEChanged();
    partial void OnUGSNAMEChanging(string value);
    partial void OnUGSNAMEChanged();
    partial void OnQUALIFICATIONCODEChanging(string value);
    partial void OnQUALIFICATIONCODEChanged();
    partial void OnQUALIFICATIONNAMEChanging(string value);
    partial void OnQUALIFICATIONNAMEChanged();
    partial void OnPERIODChanging(string value);
    partial void OnPERIODChanged();
    partial void OnEDU_DIRECTORYChanging(string value);
    partial void OnEDU_DIRECTORYChanged();
    partial void OnEDUPR_ADDITIONALChanging(string value);
    partial void OnEDUPR_ADDITIONALChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnNewCodeChanging(string value);
    partial void OnNewCodeChanged();
    #endregion
		
		public Direction()
		{
			this._AllowedDirections = new EntitySet<AllowedDirection>(new Action<AllowedDirection>(this.attach_AllowedDirections), new Action<AllowedDirection>(this.detach_AllowedDirections));
			this._EDU_PROGRAM_TYPE = default(EntityRef<EDU_PROGRAM_TYPE>);
			this._ParentDirection = default(EntityRef<ParentDirection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIIS_ID", DbType="VarChar(50)")]
		public string EIIS_ID
		{
			get
			{
				return this._EIIS_ID;
			}
			set
			{
				if ((this._EIIS_ID != value))
				{
					this.OnEIIS_IDChanging(value);
					this.SendPropertyChanging();
					this._EIIS_ID = value;
					this.SendPropertyChanged("EIIS_ID");
					this.OnEIIS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Esrp_ID", DbType="Int")]
		public System.Nullable<int> Esrp_ID
		{
			get
			{
				return this._Esrp_ID;
			}
			set
			{
				if ((this._Esrp_ID != value))
				{
					this.OnEsrp_IDChanging(value);
					this.SendPropertyChanging();
					this._Esrp_ID = value;
					this.SendPropertyChanged("Esrp_ID");
					this.OnEsrp_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._ParentDirection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SYS_GUID", DbType="VarChar(50)")]
		public string SYS_GUID
		{
			get
			{
				return this._SYS_GUID;
			}
			set
			{
				if ((this._SYS_GUID != value))
				{
					this.OnSYS_GUIDChanging(value);
					this.SendPropertyChanging();
					this._SYS_GUID = value;
					this.SendPropertyChanged("SYS_GUID");
					this.OnSYS_GUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDULEVEL", DbType="VarChar(500)")]
		public string EDULEVEL
		{
			get
			{
				return this._EDULEVEL;
			}
			set
			{
				if ((this._EDULEVEL != value))
				{
					this.OnEDULEVELChanging(value);
					this.SendPropertyChanging();
					this._EDULEVEL = value;
					this.SendPropertyChanged("EDULEVEL");
					this.OnEDULEVELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelId", DbType="SmallInt")]
		public System.Nullable<short> EducationLevelId
		{
			get
			{
				return this._EducationLevelId;
			}
			set
			{
				if ((this._EducationLevelId != value))
				{
					this.OnEducationLevelIdChanging(value);
					this.SendPropertyChanging();
					this._EducationLevelId = value;
					this.SendPropertyChanged("EducationLevelId");
					this.OnEducationLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDUPROGRAMTYPE", DbType="VarChar(500)")]
		public string EDUPROGRAMTYPE
		{
			get
			{
				return this._EDUPROGRAMTYPE;
			}
			set
			{
				if ((this._EDUPROGRAMTYPE != value))
				{
					this.OnEDUPROGRAMTYPEChanging(value);
					this.SendPropertyChanging();
					this._EDUPROGRAMTYPE = value;
					this.SendPropertyChanged("EDUPROGRAMTYPE");
					this.OnEDUPROGRAMTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationProgramTypeId", DbType="Int")]
		public System.Nullable<int> EducationProgramTypeId
		{
			get
			{
				return this._EducationProgramTypeId;
			}
			set
			{
				if ((this._EducationProgramTypeId != value))
				{
					if (this._EDU_PROGRAM_TYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEducationProgramTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EducationProgramTypeId = value;
					this.SendPropertyChanged("EducationProgramTypeId");
					this.OnEducationProgramTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UGSCODE", DbType="Char(8)")]
		public string UGSCODE
		{
			get
			{
				return this._UGSCODE;
			}
			set
			{
				if ((this._UGSCODE != value))
				{
					this.OnUGSCODEChanging(value);
					this.SendPropertyChanging();
					this._UGSCODE = value;
					this.SendPropertyChanged("UGSCODE");
					this.OnUGSCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UGSNAME", DbType="VarChar(500)")]
		public string UGSNAME
		{
			get
			{
				return this._UGSNAME;
			}
			set
			{
				if ((this._UGSNAME != value))
				{
					this.OnUGSNAMEChanging(value);
					this.SendPropertyChanging();
					this._UGSNAME = value;
					this.SendPropertyChanged("UGSNAME");
					this.OnUGSNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUALIFICATIONCODE", DbType="Char(10)")]
		public string QUALIFICATIONCODE
		{
			get
			{
				return this._QUALIFICATIONCODE;
			}
			set
			{
				if ((this._QUALIFICATIONCODE != value))
				{
					this.OnQUALIFICATIONCODEChanging(value);
					this.SendPropertyChanging();
					this._QUALIFICATIONCODE = value;
					this.SendPropertyChanged("QUALIFICATIONCODE");
					this.OnQUALIFICATIONCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUALIFICATIONNAME", DbType="VarChar(500)")]
		public string QUALIFICATIONNAME
		{
			get
			{
				return this._QUALIFICATIONNAME;
			}
			set
			{
				if ((this._QUALIFICATIONNAME != value))
				{
					this.OnQUALIFICATIONNAMEChanging(value);
					this.SendPropertyChanging();
					this._QUALIFICATIONNAME = value;
					this.SendPropertyChanged("QUALIFICATIONNAME");
					this.OnQUALIFICATIONNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERIOD", DbType="VarChar(50)")]
		public string PERIOD
		{
			get
			{
				return this._PERIOD;
			}
			set
			{
				if ((this._PERIOD != value))
				{
					this.OnPERIODChanging(value);
					this.SendPropertyChanging();
					this._PERIOD = value;
					this.SendPropertyChanged("PERIOD");
					this.OnPERIODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDU_DIRECTORY", DbType="VarChar(500)")]
		public string EDU_DIRECTORY
		{
			get
			{
				return this._EDU_DIRECTORY;
			}
			set
			{
				if ((this._EDU_DIRECTORY != value))
				{
					this.OnEDU_DIRECTORYChanging(value);
					this.SendPropertyChanging();
					this._EDU_DIRECTORY = value;
					this.SendPropertyChanged("EDU_DIRECTORY");
					this.OnEDU_DIRECTORYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDUPR_ADDITIONAL", DbType="VarChar(500)")]
		public string EDUPR_ADDITIONAL
		{
			get
			{
				return this._EDUPR_ADDITIONAL;
			}
			set
			{
				if ((this._EDUPR_ADDITIONAL != value))
				{
					this.OnEDUPR_ADDITIONALChanging(value);
					this.SendPropertyChanging();
					this._EDUPR_ADDITIONAL = value;
					this.SendPropertyChanged("EDUPR_ADDITIONAL");
					this.OnEDUPR_ADDITIONALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCode", DbType="Char(8)")]
		public string NewCode
		{
			get
			{
				return this._NewCode;
			}
			set
			{
				if ((this._NewCode != value))
				{
					this.OnNewCodeChanging(value);
					this.SendPropertyChanging();
					this._NewCode = value;
					this.SendPropertyChanged("NewCode");
					this.OnNewCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_AllowedDirection", Storage="_AllowedDirections", ThisKey="DirectionID", OtherKey="DirectionID")]
		public EntitySet<AllowedDirection> AllowedDirections
		{
			get
			{
				return this._AllowedDirections;
			}
			set
			{
				this._AllowedDirections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EDU_PROGRAM_TYPE_Direction", Storage="_EDU_PROGRAM_TYPE", ThisKey="EducationProgramTypeId", OtherKey="ID", IsForeignKey=true)]
		public EDU_PROGRAM_TYPE EDU_PROGRAM_TYPE
		{
			get
			{
				return this._EDU_PROGRAM_TYPE.Entity;
			}
			set
			{
				EDU_PROGRAM_TYPE previousValue = this._EDU_PROGRAM_TYPE.Entity;
				if (((previousValue != value) 
							|| (this._EDU_PROGRAM_TYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EDU_PROGRAM_TYPE.Entity = null;
						previousValue.Directions.Remove(this);
					}
					this._EDU_PROGRAM_TYPE.Entity = value;
					if ((value != null))
					{
						value.Directions.Add(this);
						this._EducationProgramTypeId = value.ID;
					}
					else
					{
						this._EducationProgramTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("EDU_PROGRAM_TYPE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ParentDirection_Direction", Storage="_ParentDirection", ThisKey="ParentID", OtherKey="ParentDirectionID", IsForeignKey=true)]
		public ParentDirection ParentDirection
		{
			get
			{
				return this._ParentDirection.Entity;
			}
			set
			{
				ParentDirection previousValue = this._ParentDirection.Entity;
				if (((previousValue != value) 
							|| (this._ParentDirection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentDirection.Entity = null;
						previousValue.Directions.Remove(this);
					}
					this._ParentDirection.Entity = value;
					if ((value != null))
					{
						value.Directions.Add(this);
						this._ParentID = value.ParentDirectionID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ParentDirection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AllowedDirections(AllowedDirection entity)
		{
			this.SendPropertyChanging();
			entity.Direction = this;
		}
		
		private void detach_AllowedDirections(AllowedDirection entity)
		{
			this.SendPropertyChanging();
			entity.Direction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EDU_PROGRAM_TYPES")]
	public partial class EDU_PROGRAM_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _EIIS_ID;
		
		private string _NAME;
		
		private string _SHORTNAME;
		
		private System.Nullable<int> _Esrp_Id;
		
		private int _ID;
		
		private EntitySet<Direction> _Directions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnEIIS_IDChanging(string value);
    partial void OnEIIS_IDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnSHORTNAMEChanging(string value);
    partial void OnSHORTNAMEChanged();
    partial void OnEsrp_IdChanging(System.Nullable<int> value);
    partial void OnEsrp_IdChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public EDU_PROGRAM_TYPE()
		{
			this._Directions = new EntitySet<Direction>(new Action<Direction>(this.attach_Directions), new Action<Direction>(this.detach_Directions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(6)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIIS_ID", DbType="VarChar(50)")]
		public string EIIS_ID
		{
			get
			{
				return this._EIIS_ID;
			}
			set
			{
				if ((this._EIIS_ID != value))
				{
					this.OnEIIS_IDChanging(value);
					this.SendPropertyChanging();
					this._EIIS_ID = value;
					this.SendPropertyChanged("EIIS_ID");
					this.OnEIIS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(255)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHORTNAME", DbType="VarChar(25)")]
		public string SHORTNAME
		{
			get
			{
				return this._SHORTNAME;
			}
			set
			{
				if ((this._SHORTNAME != value))
				{
					this.OnSHORTNAMEChanging(value);
					this.SendPropertyChanging();
					this._SHORTNAME = value;
					this.SendPropertyChanged("SHORTNAME");
					this.OnSHORTNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Esrp_Id", DbType="Int")]
		public System.Nullable<int> Esrp_Id
		{
			get
			{
				return this._Esrp_Id;
			}
			set
			{
				if ((this._Esrp_Id != value))
				{
					this.OnEsrp_IdChanging(value);
					this.SendPropertyChanging();
					this._Esrp_Id = value;
					this.SendPropertyChanged("Esrp_Id");
					this.OnEsrp_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EDU_PROGRAM_TYPE_Direction", Storage="_Directions", ThisKey="ID", OtherKey="EducationProgramTypeId")]
		public EntitySet<Direction> Directions
		{
			get
			{
				return this._Directions;
			}
			set
			{
				this._Directions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Directions(Direction entity)
		{
			this.SendPropertyChanging();
			entity.EDU_PROGRAM_TYPE = this;
		}
		
		private void detach_Directions(Direction entity)
		{
			this.SendPropertyChanging();
			entity.EDU_PROGRAM_TYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Institution")]
	public partial class Institution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstitutionID;
		
		private short _InstitutionTypeID;
		
		private string _FullName;
		
		private string _BriefName;
		
		private System.Nullable<int> _FormOfLawID;
		
		private System.Nullable<int> _RegionID;
		
		private string _Site;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Fax;
		
		private bool _HasMilitaryDepartment;
		
		private bool _HasHostel;
		
		private System.Nullable<int> _HostelCapacity;
		
		private bool _HasHostelForEntrants;
		
		private System.Nullable<int> _HostelAttachmentID;
		
		private string _INN;
		
		private string _OGRN;
		
		private System.Nullable<System.DateTime> _AdmissionStructurePublishDate;
		
		private System.Nullable<System.DateTime> _ReceivingApplicationDate;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<int> _EsrpOrgID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _OwnerDepartment;
		
		private System.Nullable<int> _MainEsrpOrgId;
		
		private System.Nullable<int> _FounderEsrpOrgId;
		
		private System.Nullable<int> _StatusId;
		
		private string _City;
		
		private bool _IsPrivate;
		
		private bool _IsFilial;
		
		private string _LawAddress;
		
		private string _KPP;
		
		private string _EIIS_ID;
		
		private EntitySet<AllowedDirection> _AllowedDirections;
		
		private EntitySet<InstitutionLicense> _InstitutionLicenses;
		
		private EntityRef<RegionType> _RegionType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnInstitutionTypeIDChanging(short value);
    partial void OnInstitutionTypeIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnBriefNameChanging(string value);
    partial void OnBriefNameChanged();
    partial void OnFormOfLawIDChanging(System.Nullable<int> value);
    partial void OnFormOfLawIDChanged();
    partial void OnRegionIDChanging(System.Nullable<int> value);
    partial void OnRegionIDChanged();
    partial void OnSiteChanging(string value);
    partial void OnSiteChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnHasMilitaryDepartmentChanging(bool value);
    partial void OnHasMilitaryDepartmentChanged();
    partial void OnHasHostelChanging(bool value);
    partial void OnHasHostelChanged();
    partial void OnHostelCapacityChanging(System.Nullable<int> value);
    partial void OnHostelCapacityChanged();
    partial void OnHasHostelForEntrantsChanging(bool value);
    partial void OnHasHostelForEntrantsChanged();
    partial void OnHostelAttachmentIDChanging(System.Nullable<int> value);
    partial void OnHostelAttachmentIDChanged();
    partial void OnINNChanging(string value);
    partial void OnINNChanged();
    partial void OnOGRNChanging(string value);
    partial void OnOGRNChanged();
    partial void OnAdmissionStructurePublishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAdmissionStructurePublishDateChanged();
    partial void OnReceivingApplicationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceivingApplicationDateChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnEsrpOrgIDChanging(System.Nullable<int> value);
    partial void OnEsrpOrgIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnOwnerDepartmentChanging(string value);
    partial void OnOwnerDepartmentChanged();
    partial void OnMainEsrpOrgIdChanging(System.Nullable<int> value);
    partial void OnMainEsrpOrgIdChanged();
    partial void OnFounderEsrpOrgIdChanging(System.Nullable<int> value);
    partial void OnFounderEsrpOrgIdChanged();
    partial void OnStatusIdChanging(System.Nullable<int> value);
    partial void OnStatusIdChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnIsPrivateChanging(bool value);
    partial void OnIsPrivateChanged();
    partial void OnIsFilialChanging(bool value);
    partial void OnIsFilialChanged();
    partial void OnLawAddressChanging(string value);
    partial void OnLawAddressChanged();
    partial void OnKPPChanging(string value);
    partial void OnKPPChanged();
    partial void OnEIIS_IDChanging(string value);
    partial void OnEIIS_IDChanged();
    #endregion
		
		public Institution()
		{
			this._AllowedDirections = new EntitySet<AllowedDirection>(new Action<AllowedDirection>(this.attach_AllowedDirections), new Action<AllowedDirection>(this.detach_AllowedDirections));
			this._InstitutionLicenses = new EntitySet<InstitutionLicense>(new Action<InstitutionLicense>(this.attach_InstitutionLicenses), new Action<InstitutionLicense>(this.detach_InstitutionLicenses));
			this._RegionType = default(EntityRef<RegionType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionTypeID", DbType="SmallInt NOT NULL")]
		public short InstitutionTypeID
		{
			get
			{
				return this._InstitutionTypeID;
			}
			set
			{
				if ((this._InstitutionTypeID != value))
				{
					this.OnInstitutionTypeIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionTypeID = value;
					this.SendPropertyChanged("InstitutionTypeID");
					this.OnInstitutionTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(1000)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BriefName", DbType="VarChar(500)")]
		public string BriefName
		{
			get
			{
				return this._BriefName;
			}
			set
			{
				if ((this._BriefName != value))
				{
					this.OnBriefNameChanging(value);
					this.SendPropertyChanging();
					this._BriefName = value;
					this.SendPropertyChanged("BriefName");
					this.OnBriefNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormOfLawID", DbType="Int")]
		public System.Nullable<int> FormOfLawID
		{
			get
			{
				return this._FormOfLawID;
			}
			set
			{
				if ((this._FormOfLawID != value))
				{
					this.OnFormOfLawIDChanging(value);
					this.SendPropertyChanging();
					this._FormOfLawID = value;
					this.SendPropertyChanged("FormOfLawID");
					this.OnFormOfLawIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int")]
		public System.Nullable<int> RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					if (this._RegionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="VarChar(255)")]
		public string Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasMilitaryDepartment", DbType="Bit NOT NULL")]
		public bool HasMilitaryDepartment
		{
			get
			{
				return this._HasMilitaryDepartment;
			}
			set
			{
				if ((this._HasMilitaryDepartment != value))
				{
					this.OnHasMilitaryDepartmentChanging(value);
					this.SendPropertyChanging();
					this._HasMilitaryDepartment = value;
					this.SendPropertyChanged("HasMilitaryDepartment");
					this.OnHasMilitaryDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasHostel", DbType="Bit NOT NULL")]
		public bool HasHostel
		{
			get
			{
				return this._HasHostel;
			}
			set
			{
				if ((this._HasHostel != value))
				{
					this.OnHasHostelChanging(value);
					this.SendPropertyChanging();
					this._HasHostel = value;
					this.SendPropertyChanged("HasHostel");
					this.OnHasHostelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostelCapacity", DbType="Int")]
		public System.Nullable<int> HostelCapacity
		{
			get
			{
				return this._HostelCapacity;
			}
			set
			{
				if ((this._HostelCapacity != value))
				{
					this.OnHostelCapacityChanging(value);
					this.SendPropertyChanging();
					this._HostelCapacity = value;
					this.SendPropertyChanged("HostelCapacity");
					this.OnHostelCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasHostelForEntrants", DbType="Bit NOT NULL")]
		public bool HasHostelForEntrants
		{
			get
			{
				return this._HasHostelForEntrants;
			}
			set
			{
				if ((this._HasHostelForEntrants != value))
				{
					this.OnHasHostelForEntrantsChanging(value);
					this.SendPropertyChanging();
					this._HasHostelForEntrants = value;
					this.SendPropertyChanged("HasHostelForEntrants");
					this.OnHasHostelForEntrantsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostelAttachmentID", DbType="Int")]
		public System.Nullable<int> HostelAttachmentID
		{
			get
			{
				return this._HostelAttachmentID;
			}
			set
			{
				if ((this._HostelAttachmentID != value))
				{
					this.OnHostelAttachmentIDChanging(value);
					this.SendPropertyChanging();
					this._HostelAttachmentID = value;
					this.SendPropertyChanged("HostelAttachmentID");
					this.OnHostelAttachmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INN", DbType="VarChar(14)")]
		public string INN
		{
			get
			{
				return this._INN;
			}
			set
			{
				if ((this._INN != value))
				{
					this.OnINNChanging(value);
					this.SendPropertyChanging();
					this._INN = value;
					this.SendPropertyChanged("INN");
					this.OnINNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OGRN", DbType="VarChar(18)")]
		public string OGRN
		{
			get
			{
				return this._OGRN;
			}
			set
			{
				if ((this._OGRN != value))
				{
					this.OnOGRNChanging(value);
					this.SendPropertyChanging();
					this._OGRN = value;
					this.SendPropertyChanged("OGRN");
					this.OnOGRNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionStructurePublishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AdmissionStructurePublishDate
		{
			get
			{
				return this._AdmissionStructurePublishDate;
			}
			set
			{
				if ((this._AdmissionStructurePublishDate != value))
				{
					this.OnAdmissionStructurePublishDateChanging(value);
					this.SendPropertyChanging();
					this._AdmissionStructurePublishDate = value;
					this.SendPropertyChanged("AdmissionStructurePublishDate");
					this.OnAdmissionStructurePublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivingApplicationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceivingApplicationDate
		{
			get
			{
				return this._ReceivingApplicationDate;
			}
			set
			{
				if ((this._ReceivingApplicationDate != value))
				{
					this.OnReceivingApplicationDateChanging(value);
					this.SendPropertyChanging();
					this._ReceivingApplicationDate = value;
					this.SendPropertyChanged("ReceivingApplicationDate");
					this.OnReceivingApplicationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EsrpOrgID", DbType="Int")]
		public System.Nullable<int> EsrpOrgID
		{
			get
			{
				return this._EsrpOrgID;
			}
			set
			{
				if ((this._EsrpOrgID != value))
				{
					this.OnEsrpOrgIDChanging(value);
					this.SendPropertyChanging();
					this._EsrpOrgID = value;
					this.SendPropertyChanged("EsrpOrgID");
					this.OnEsrpOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerDepartment", DbType="VarChar(255)")]
		public string OwnerDepartment
		{
			get
			{
				return this._OwnerDepartment;
			}
			set
			{
				if ((this._OwnerDepartment != value))
				{
					this.OnOwnerDepartmentChanging(value);
					this.SendPropertyChanging();
					this._OwnerDepartment = value;
					this.SendPropertyChanged("OwnerDepartment");
					this.OnOwnerDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainEsrpOrgId", DbType="Int")]
		public System.Nullable<int> MainEsrpOrgId
		{
			get
			{
				return this._MainEsrpOrgId;
			}
			set
			{
				if ((this._MainEsrpOrgId != value))
				{
					this.OnMainEsrpOrgIdChanging(value);
					this.SendPropertyChanging();
					this._MainEsrpOrgId = value;
					this.SendPropertyChanged("MainEsrpOrgId");
					this.OnMainEsrpOrgIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FounderEsrpOrgId", DbType="Int")]
		public System.Nullable<int> FounderEsrpOrgId
		{
			get
			{
				return this._FounderEsrpOrgId;
			}
			set
			{
				if ((this._FounderEsrpOrgId != value))
				{
					this.OnFounderEsrpOrgIdChanging(value);
					this.SendPropertyChanging();
					this._FounderEsrpOrgId = value;
					this.SendPropertyChanged("FounderEsrpOrgId");
					this.OnFounderEsrpOrgIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int")]
		public System.Nullable<int> StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(255)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrivate", DbType="Bit NOT NULL")]
		public bool IsPrivate
		{
			get
			{
				return this._IsPrivate;
			}
			set
			{
				if ((this._IsPrivate != value))
				{
					this.OnIsPrivateChanging(value);
					this.SendPropertyChanging();
					this._IsPrivate = value;
					this.SendPropertyChanged("IsPrivate");
					this.OnIsPrivateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFilial", DbType="Bit NOT NULL")]
		public bool IsFilial
		{
			get
			{
				return this._IsFilial;
			}
			set
			{
				if ((this._IsFilial != value))
				{
					this.OnIsFilialChanging(value);
					this.SendPropertyChanging();
					this._IsFilial = value;
					this.SendPropertyChanged("IsFilial");
					this.OnIsFilialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawAddress", DbType="VarChar(1000)")]
		public string LawAddress
		{
			get
			{
				return this._LawAddress;
			}
			set
			{
				if ((this._LawAddress != value))
				{
					this.OnLawAddressChanging(value);
					this.SendPropertyChanging();
					this._LawAddress = value;
					this.SendPropertyChanged("LawAddress");
					this.OnLawAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPP", DbType="VarChar(13)")]
		public string KPP
		{
			get
			{
				return this._KPP;
			}
			set
			{
				if ((this._KPP != value))
				{
					this.OnKPPChanging(value);
					this.SendPropertyChanging();
					this._KPP = value;
					this.SendPropertyChanged("KPP");
					this.OnKPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIIS_ID", DbType="VarChar(50)")]
		public string EIIS_ID
		{
			get
			{
				return this._EIIS_ID;
			}
			set
			{
				if ((this._EIIS_ID != value))
				{
					this.OnEIIS_IDChanging(value);
					this.SendPropertyChanging();
					this._EIIS_ID = value;
					this.SendPropertyChanged("EIIS_ID");
					this.OnEIIS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_AllowedDirection", Storage="_AllowedDirections", ThisKey="InstitutionID", OtherKey="InstitutionID")]
		public EntitySet<AllowedDirection> AllowedDirections
		{
			get
			{
				return this._AllowedDirections;
			}
			set
			{
				this._AllowedDirections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_InstitutionLicense", Storage="_InstitutionLicenses", ThisKey="InstitutionID", OtherKey="InstitutionID")]
		public EntitySet<InstitutionLicense> InstitutionLicenses
		{
			get
			{
				return this._InstitutionLicenses;
			}
			set
			{
				this._InstitutionLicenses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegionType_Institution", Storage="_RegionType", ThisKey="RegionID", OtherKey="RegionId", IsForeignKey=true)]
		public RegionType RegionType
		{
			get
			{
				return this._RegionType.Entity;
			}
			set
			{
				RegionType previousValue = this._RegionType.Entity;
				if (((previousValue != value) 
							|| (this._RegionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegionType.Entity = null;
						previousValue.Institutions.Remove(this);
					}
					this._RegionType.Entity = value;
					if ((value != null))
					{
						value.Institutions.Add(this);
						this._RegionID = value.RegionId;
					}
					else
					{
						this._RegionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RegionType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AllowedDirections(AllowedDirection entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_AllowedDirections(AllowedDirection entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
		
		private void attach_InstitutionLicenses(InstitutionLicense entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_InstitutionLicenses(InstitutionLicense entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ParentDirection")]
	public partial class ParentDirection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ParentDirectionID;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _EIIS_ID;
		
		private System.Nullable<int> _Esrp_Id;
		
		private EntitySet<Direction> _Directions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParentDirectionIDChanging(int value);
    partial void OnParentDirectionIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnEIIS_IDChanging(string value);
    partial void OnEIIS_IDChanged();
    partial void OnEsrp_IdChanging(System.Nullable<int> value);
    partial void OnEsrp_IdChanged();
    #endregion
		
		public ParentDirection()
		{
			this._Directions = new EntitySet<Direction>(new Action<Direction>(this.attach_Directions), new Action<Direction>(this.detach_Directions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentDirectionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ParentDirectionID
		{
			get
			{
				return this._ParentDirectionID;
			}
			set
			{
				if ((this._ParentDirectionID != value))
				{
					this.OnParentDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._ParentDirectionID = value;
					this.SendPropertyChanged("ParentDirectionID");
					this.OnParentDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(8)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIIS_ID", DbType="VarChar(50)")]
		public string EIIS_ID
		{
			get
			{
				return this._EIIS_ID;
			}
			set
			{
				if ((this._EIIS_ID != value))
				{
					this.OnEIIS_IDChanging(value);
					this.SendPropertyChanging();
					this._EIIS_ID = value;
					this.SendPropertyChanged("EIIS_ID");
					this.OnEIIS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Esrp_Id", DbType="Int")]
		public System.Nullable<int> Esrp_Id
		{
			get
			{
				return this._Esrp_Id;
			}
			set
			{
				if ((this._Esrp_Id != value))
				{
					this.OnEsrp_IdChanging(value);
					this.SendPropertyChanging();
					this._Esrp_Id = value;
					this.SendPropertyChanged("Esrp_Id");
					this.OnEsrp_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ParentDirection_Direction", Storage="_Directions", ThisKey="ParentDirectionID", OtherKey="ParentID")]
		public EntitySet<Direction> Directions
		{
			get
			{
				return this._Directions;
			}
			set
			{
				this._Directions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Directions(Direction entity)
		{
			this.SendPropertyChanging();
			entity.ParentDirection = this;
		}
		
		private void detach_Directions(Direction entity)
		{
			this.SendPropertyChanging();
			entity.ParentDirection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegionType")]
	public partial class RegionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CountryID;
		
		private string _Name;
		
		private string _OkatoCode;
		
		private System.Nullable<System.DateTime> _OkatoModified;
		
		private int _DisplayOrder;
		
		private string _EsrpCode;
		
		private int _RegionId;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<Institution> _Institutions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOkatoCodeChanging(string value);
    partial void OnOkatoCodeChanged();
    partial void OnOkatoModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnOkatoModifiedChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnEsrpCodeChanging(string value);
    partial void OnEsrpCodeChanged();
    partial void OnRegionIdChanging(int value);
    partial void OnRegionIdChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public RegionType()
		{
			this._Institutions = new EntitySet<Institution>(new Action<Institution>(this.attach_Institutions), new Action<Institution>(this.detach_Institutions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OkatoCode", DbType="VarChar(16)")]
		public string OkatoCode
		{
			get
			{
				return this._OkatoCode;
			}
			set
			{
				if ((this._OkatoCode != value))
				{
					this.OnOkatoCodeChanging(value);
					this.SendPropertyChanging();
					this._OkatoCode = value;
					this.SendPropertyChanged("OkatoCode");
					this.OnOkatoCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OkatoModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> OkatoModified
		{
			get
			{
				return this._OkatoModified;
			}
			set
			{
				if ((this._OkatoModified != value))
				{
					this.OnOkatoModifiedChanging(value);
					this.SendPropertyChanging();
					this._OkatoModified = value;
					this.SendPropertyChanged("OkatoModified");
					this.OnOkatoModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EsrpCode", DbType="VarChar(5)")]
		public string EsrpCode
		{
			get
			{
				return this._EsrpCode;
			}
			set
			{
				if ((this._EsrpCode != value))
				{
					this.OnEsrpCodeChanging(value);
					this.SendPropertyChanging();
					this._EsrpCode = value;
					this.SendPropertyChanged("EsrpCode");
					this.OnEsrpCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegionType_Institution", Storage="_Institutions", ThisKey="RegionId", OtherKey="RegionID")]
		public EntitySet<Institution> Institutions
		{
			get
			{
				return this._Institutions;
			}
			set
			{
				this._Institutions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Institutions(Institution entity)
		{
			this.SendPropertyChanging();
			entity.RegionType = this;
		}
		
		private void detach_Institutions(Institution entity)
		{
			this.SendPropertyChanging();
			entity.RegionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstitutionLicense")]
	public partial class InstitutionLicense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LicenseID;
		
		private int _InstitutionID;
		
		private string _LicenseNumber;
		
		private System.DateTime _LicenseDate;
		
		private System.Nullable<int> _AttachmentID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _EIIS_ID;
		
		private System.Nullable<int> _Esrp_Id;
		
		private EntityRef<Institution> _Institution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLicenseIDChanging(int value);
    partial void OnLicenseIDChanged();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnLicenseNumberChanging(string value);
    partial void OnLicenseNumberChanged();
    partial void OnLicenseDateChanging(System.DateTime value);
    partial void OnLicenseDateChanged();
    partial void OnAttachmentIDChanging(System.Nullable<int> value);
    partial void OnAttachmentIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnEIIS_IDChanging(string value);
    partial void OnEIIS_IDChanged();
    partial void OnEsrp_IdChanging(System.Nullable<int> value);
    partial void OnEsrp_IdChanged();
    #endregion
		
		public InstitutionLicense()
		{
			this._Institution = default(EntityRef<Institution>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LicenseID
		{
			get
			{
				return this._LicenseID;
			}
			set
			{
				if ((this._LicenseID != value))
				{
					this.OnLicenseIDChanging(value);
					this.SendPropertyChanging();
					this._LicenseID = value;
					this.SendPropertyChanged("LicenseID");
					this.OnLicenseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					if (this._Institution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LicenseNumber
		{
			get
			{
				return this._LicenseNumber;
			}
			set
			{
				if ((this._LicenseNumber != value))
				{
					this.OnLicenseNumberChanging(value);
					this.SendPropertyChanging();
					this._LicenseNumber = value;
					this.SendPropertyChanged("LicenseNumber");
					this.OnLicenseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseDate", DbType="DateTime NOT NULL")]
		public System.DateTime LicenseDate
		{
			get
			{
				return this._LicenseDate;
			}
			set
			{
				if ((this._LicenseDate != value))
				{
					this.OnLicenseDateChanging(value);
					this.SendPropertyChanging();
					this._LicenseDate = value;
					this.SendPropertyChanged("LicenseDate");
					this.OnLicenseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentID", DbType="Int")]
		public System.Nullable<int> AttachmentID
		{
			get
			{
				return this._AttachmentID;
			}
			set
			{
				if ((this._AttachmentID != value))
				{
					this.OnAttachmentIDChanging(value);
					this.SendPropertyChanging();
					this._AttachmentID = value;
					this.SendPropertyChanged("AttachmentID");
					this.OnAttachmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIIS_ID", DbType="VarChar(50)")]
		public string EIIS_ID
		{
			get
			{
				return this._EIIS_ID;
			}
			set
			{
				if ((this._EIIS_ID != value))
				{
					this.OnEIIS_IDChanging(value);
					this.SendPropertyChanging();
					this._EIIS_ID = value;
					this.SendPropertyChanged("EIIS_ID");
					this.OnEIIS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Esrp_Id", DbType="Int")]
		public System.Nullable<int> Esrp_Id
		{
			get
			{
				return this._Esrp_Id;
			}
			set
			{
				if ((this._Esrp_Id != value))
				{
					this.OnEsrp_IdChanging(value);
					this.SendPropertyChanging();
					this._Esrp_Id = value;
					this.SendPropertyChanged("Esrp_Id");
					this.OnEsrp_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_InstitutionLicense", Storage="_Institution", ThisKey="InstitutionID", OtherKey="InstitutionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.InstitutionLicenses.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.InstitutionLicenses.Add(this);
						this._InstitutionID = value.InstitutionID;
					}
					else
					{
						this._InstitutionID = default(int);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
