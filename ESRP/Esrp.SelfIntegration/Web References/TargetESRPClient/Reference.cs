//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Esrp.SelfIntegration.TargetESRPClient {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SetDataSoap", Namespace="urn:ersp:v1")]
    public partial class SetData : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ApplyBatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback SyncWithFisOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SetData() {
            this.Url = global::Esrp.SelfIntegration.Properties.Settings.Default.Esrp_SelfIntegration_TargetESRPClient_SetData;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ApplyBatchCompletedEventHandler ApplyBatchCompleted;
        
        /// <remarks/>
        public event SyncWithFisCompletedEventHandler SyncWithFisCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:ersp:v1/ApplyBatch", RequestNamespace="urn:ersp:v1", ResponseNamespace="urn:ersp:v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] ApplyBatch(System.Xml.XmlElement batch, out string errorInfo) {
            object[] results = this.Invoke("ApplyBatch", new object[] {
                        batch});
            errorInfo = ((string)(results[1]));
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void ApplyBatchAsync(System.Xml.XmlElement batch) {
            this.ApplyBatchAsync(batch, null);
        }
        
        /// <remarks/>
        public void ApplyBatchAsync(System.Xml.XmlElement batch, object userState) {
            if ((this.ApplyBatchOperationCompleted == null)) {
                this.ApplyBatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplyBatchOperationCompleted);
            }
            this.InvokeAsync("ApplyBatch", new object[] {
                        batch}, this.ApplyBatchOperationCompleted, userState);
        }
        
        private void OnApplyBatchOperationCompleted(object arg) {
            if ((this.ApplyBatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplyBatchCompleted(this, new ApplyBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:ersp:v1/SyncWithFis", RequestNamespace="urn:ersp:v1", ResponseNamespace="urn:ersp:v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SyncWithFis(int maxRowCount, out string errorInfo) {
            object[] results = this.Invoke("SyncWithFis", new object[] {
                        maxRowCount});
            errorInfo = ((string)(results[1]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SyncWithFisAsync(int maxRowCount) {
            this.SyncWithFisAsync(maxRowCount, null);
        }
        
        /// <remarks/>
        public void SyncWithFisAsync(int maxRowCount, object userState) {
            if ((this.SyncWithFisOperationCompleted == null)) {
                this.SyncWithFisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSyncWithFisOperationCompleted);
            }
            this.InvokeAsync("SyncWithFis", new object[] {
                        maxRowCount}, this.SyncWithFisOperationCompleted, userState);
        }
        
        private void OnSyncWithFisOperationCompleted(object arg) {
            if ((this.SyncWithFisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SyncWithFisCompleted(this, new SyncWithFisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ApplyBatchCompletedEventHandler(object sender, ApplyBatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplyBatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplyBatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SyncWithFisCompletedEventHandler(object sender, SyncWithFisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SyncWithFisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SyncWithFisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591