#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Esrp.Core
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="fbs_db")]
	public partial class PressContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void DeleteDocument(Document instance);
    partial void DeleteNews(News instance);
    partial void DeleteAskedQuestion(AskedQuestion instance);
    #endregion
		
		public PressContext() : 
				base(global::Esrp.Core.Properties.Settings.Default.EsrpConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PressContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PressContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PressContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PressContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Document> Documents
		{
			get
			{
				return this.GetTable<Document>();
			}
		}
		
		public System.Data.Linq.Table<News> News
		{
			get
			{
				return this.GetTable<News>();
			}
		}
		
		public System.Data.Linq.Table<AskedQuestion> AskedQuestions
		{
			get
			{
				return this.GetTable<AskedQuestion>();
			}
		}
		
		private void InsertDocument(Document obj)
		{
			System.Nullable<long> p1 = obj.Id;
			this.UpdateDocument(ref p1, obj.Name, obj.Description, obj.InternalContent, ((System.Nullable<int>)(obj.ContentSize)), obj.InternalContentType, ((System.Nullable<bool>)(obj.IsActive)), obj.ContextCodes, obj.InternalRelativeUrl, obj.EditorLogin, obj.EditorIp);
			obj.Id = p1.GetValueOrDefault();
		}
		
		private void UpdateDocument(Document obj)
		{
			System.Nullable<long> p1 = obj.Id;
			this.UpdateDocument(ref p1, obj.Name, obj.Description, obj.InternalContent, ((System.Nullable<int>)(obj.ContentSize)), obj.InternalContentType, ((System.Nullable<bool>)(obj.IsActive)), obj.ContextCodes, obj.InternalRelativeUrl, obj.EditorLogin, obj.EditorIp);
			obj.Id = p1.GetValueOrDefault();
		}
		
		private void InsertNews(News obj)
		{
			System.Nullable<long> p1 = obj.Id;
			this.UpdateNews(ref p1, ((System.Nullable<System.DateTime>)(obj.Date)), obj.Name, obj.Description, obj.Text, ((System.Nullable<bool>)(obj.IsActive)), obj.EditorLogin, obj.EditorIp);
			obj.Id = p1.GetValueOrDefault();
		}
		
		private void UpdateNews(News obj)
		{
			System.Nullable<long> p1 = obj.Id;
			this.UpdateNews(ref p1, ((System.Nullable<System.DateTime>)(obj.Date)), obj.Name, obj.Description, obj.Text, ((System.Nullable<bool>)(obj.IsActive)), obj.EditorLogin, obj.EditorIp);
			obj.Id = p1.GetValueOrDefault();
		}
		
		private void InsertAskedQuestion(AskedQuestion obj)
		{
			System.Nullable<long> p1 = obj.Id;
			this.UpdateAskedQuestion(ref p1, obj.Name, obj.Question, obj.Answer, ((System.Nullable<bool>)(obj.IsActive)), obj.ContextCodes, obj.EditorLogin, obj.EditorIp);
			obj.Id = p1.GetValueOrDefault();
		}
		
		private void UpdateAskedQuestion(AskedQuestion obj)
		{
			System.Nullable<long> p1 = obj.Id;
			this.UpdateAskedQuestion(ref p1, obj.Name, obj.Question, obj.Answer, ((System.Nullable<bool>)(obj.IsActive)), obj.ContextCodes, obj.EditorLogin, obj.EditorIp);
			obj.Id = p1.GetValueOrDefault();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteDocument")]
		internal int DeleteDocument([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string ids, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string editorLogin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string editorIp)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ids, editorLogin, editorIp);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateNews")]
		internal int UpdateNews([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] ref System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string text, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string editorLogin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string editorIp)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, date, name, description, text, isActive, editorLogin, editorIp);
			id = ((System.Nullable<long>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetActiveDocument")]
		internal int SetActiveDocument([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string ids, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string editorLogin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string editorIp)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ids, isActive, editorLogin, editorIp);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNews")]
		internal ISingleResult<News> GetNews([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<News>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetActiveNews")]
		internal int SetActiveNews([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string ids, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string editorLogin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string editorIp)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ids, isActive, editorLogin, editorIp);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteNews")]
		internal int DeleteNews([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string ids, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string editorLogin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string editorIp)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ids, editorLogin, editorIp);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDocument")]
		internal ISingleResult<Document> GetDocument([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<Document>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateDocument")]
		internal int UpdateDocument([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] ref System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Image")] System.Data.Linq.Binary content, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> contentSize, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string contentType, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(4000)")] string contextCodes, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string relativeUrl, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string editorLogin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string editorIp)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, name, description, content, contentSize, contentType, isActive, contextCodes, relativeUrl, editorLogin, editorIp);
			id = ((System.Nullable<long>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteAskedQuestion")]
		internal int DeleteAskedQuestion([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string ids, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string editorLogin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string editorIp)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ids, editorLogin, editorIp);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SetActiveAskedQuestion")]
		internal int SetActiveAskedQuestion([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string ids, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string editorLogin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string editorIp)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ids, isActive, editorLogin, editorIp);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAskedQuestion")]
		internal ISingleResult<AskedQuestion> GetAskedQuestion([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isViewCount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, isViewCount);
			return ((ISingleResult<AskedQuestion>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateAskedQuestion")]
		internal int UpdateAskedQuestion([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] ref System.Nullable<long> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string question, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string answer, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isActive, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(4000)")] string contextCodes, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string editorLogin, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string editorIp)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, name, question, answer, isActive, contextCodes, editorLogin, editorIp);
			id = ((System.Nullable<long>)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetDocumentByUrl")]
		internal ISingleResult<GetDocumentByUrlResult> GetDocumentByUrl([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(255)")] string relativeUrl)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), relativeUrl);
			return ((ISingleResult<GetDocumentByUrlResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="")]
	public partial class Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _Description;
		
		private System.Data.Linq.Binary _Content;
		
		private int _ContentSize;
		
		private string _ContentType;
		
		private bool _IsActive;
		
		private System.Nullable<System.DateTime> _ActivateDate = default(System.Nullable<System.DateTime>);
		
		private string _ContextCodes;
		
		private string _EditorLogin;
		
		private string _EditorIp;
		
		private string _RelativeUrl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnInternalContentChanging(System.Data.Linq.Binary value);
    partial void OnInternalContentChanged();
    partial void OnContentSizeChanging(int value);
    partial void OnContentSizeChanged();
    partial void OnInternalContentTypeChanging(string value);
    partial void OnInternalContentTypeChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnContextCodesChanging(string value);
    partial void OnContextCodesChanged();
    partial void OnEditorLoginChanging(string value);
    partial void OnEditorLoginChanged();
    partial void OnEditorIpChanging(string value);
    partial void OnEditorIpChanged();
    partial void OnInternalRelativeUrlChanging(string value);
    partial void OnInternalRelativeUrlChanged();
    #endregion
		
		public Document()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Content", Storage="_Content", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary InternalContent
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnInternalContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("InternalContent");
					this.OnInternalContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentSize", DbType="Int NOT NULL")]
		public int ContentSize
		{
			get
			{
				return this._ContentSize;
			}
			set
			{
				if ((this._ContentSize != value))
				{
					this.OnContentSizeChanging(value);
					this.SendPropertyChanging();
					this._ContentSize = value;
					this.SendPropertyChanged("ContentSize");
					this.OnContentSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ContentType", Storage="_ContentType", DbType="NVarChar(255)")]
		internal string InternalContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this.OnInternalContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ContentType = value;
					this.SendPropertyChanged("InternalContentType");
					this.OnInternalContentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivateDate", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> ActivateDate
		{
			get
			{
				return this._ActivateDate;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContextCodes", DbType="NVarChar(4000)")]
		public string ContextCodes
		{
			get
			{
				return this._ContextCodes;
			}
			set
			{
				if ((this._ContextCodes != value))
				{
					this.OnContextCodesChanging(value);
					this.SendPropertyChanging();
					this._ContextCodes = value;
					this.SendPropertyChanged("ContextCodes");
					this.OnContextCodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorLogin", DbType="NVarChar(50)", CanBeNull=false)]
		internal string EditorLogin
		{
			get
			{
				return this._EditorLogin;
			}
			set
			{
				if ((this._EditorLogin != value))
				{
					this.OnEditorLoginChanging(value);
					this.SendPropertyChanging();
					this._EditorLogin = value;
					this.SendPropertyChanged("EditorLogin");
					this.OnEditorLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorIp", DbType="NVarChar(255)", CanBeNull=false)]
		internal string EditorIp
		{
			get
			{
				return this._EditorIp;
			}
			set
			{
				if ((this._EditorIp != value))
				{
					this.OnEditorIpChanging(value);
					this.SendPropertyChanging();
					this._EditorIp = value;
					this.SendPropertyChanged("EditorIp");
					this.OnEditorIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="RelativeUrl", Storage="_RelativeUrl", DbType="NVarChar(255)")]
		internal string InternalRelativeUrl
		{
			get
			{
				return this._RelativeUrl;
			}
			set
			{
				if ((this._RelativeUrl != value))
				{
					this.OnInternalRelativeUrlChanging(value);
					this.SendPropertyChanging();
					this._RelativeUrl = value;
					this.SendPropertyChanged("InternalRelativeUrl");
					this.OnInternalRelativeUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.News")]
	public partial class News : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _Date;
		
		private string _Name;
		
		private string _Description;
		
		private string _Text;
		
		private bool _IsActive;
		
		private string _EditorLogin;
		
		private string _EditorIp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnEditorLoginChanging(string value);
    partial void OnEditorLoginChanged();
    partial void OnEditorIpChanging(string value);
    partial void OnEditorIpChanged();
    #endregion
		
		public News()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorLogin", DbType="NVarChar(50)", CanBeNull=false)]
		internal string EditorLogin
		{
			get
			{
				return this._EditorLogin;
			}
			set
			{
				if ((this._EditorLogin != value))
				{
					this.OnEditorLoginChanging(value);
					this.SendPropertyChanging();
					this._EditorLogin = value;
					this.SendPropertyChanged("EditorLogin");
					this.OnEditorLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorIp", DbType="NVarChar(255)", CanBeNull=false)]
		internal string EditorIp
		{
			get
			{
				return this._EditorIp;
			}
			set
			{
				if ((this._EditorIp != value))
				{
					this.OnEditorIpChanging(value);
					this.SendPropertyChanging();
					this._EditorIp = value;
					this.SendPropertyChanged("EditorIp");
					this.OnEditorIpChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AskedQuestion")]
	public partial class AskedQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Guid _UpdateId;
		
		private string _EditorLogin;
		
		private string _EditorIp;
		
		private string _Name;
		
		private string _Question;
		
		private string _Answer;
		
		private bool _IsActive;
		
		private int _ViewCount;
		
		private decimal _Popularity;
		
		private string _ContextCodes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateIdChanging(System.Guid value);
    partial void OnUpdateIdChanged();
    partial void OnEditorLoginChanging(string value);
    partial void OnEditorLoginChanged();
    partial void OnEditorIpChanging(string value);
    partial void OnEditorIpChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnViewCountChanging(int value);
    partial void OnViewCountChanged();
    partial void OnPopularityChanging(decimal value);
    partial void OnPopularityChanged();
    partial void OnContextCodesChanging(string value);
    partial void OnContextCodesChanged();
    #endregion
		
		public AskedQuestion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EditorAccountId", Storage="_EditorLogin", DbType="NVarChar(50)", CanBeNull=false)]
		public string EditorLogin
		{
			get
			{
				return this._EditorLogin;
			}
			set
			{
				if ((this._EditorLogin != value))
				{
					this.OnEditorLoginChanging(value);
					this.SendPropertyChanging();
					this._EditorLogin = value;
					this.SendPropertyChanged("EditorLogin");
					this.OnEditorLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorIp", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string EditorIp
		{
			get
			{
				return this._EditorIp;
			}
			set
			{
				if ((this._EditorIp != value))
				{
					this.OnEditorIpChanging(value);
					this.SendPropertyChanging();
					this._EditorIp = value;
					this.SendPropertyChanged("EditorIp");
					this.OnEditorIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewCount", DbType="Int NOT NULL")]
		public int ViewCount
		{
			get
			{
				return this._ViewCount;
			}
			set
			{
				if ((this._ViewCount != value))
				{
					this.OnViewCountChanging(value);
					this.SendPropertyChanging();
					this._ViewCount = value;
					this.SendPropertyChanged("ViewCount");
					this.OnViewCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Popularity", DbType="Decimal(18,4) NOT NULL")]
		public decimal Popularity
		{
			get
			{
				return this._Popularity;
			}
			set
			{
				if ((this._Popularity != value))
				{
					this.OnPopularityChanging(value);
					this.SendPropertyChanging();
					this._Popularity = value;
					this.SendPropertyChanged("Popularity");
					this.OnPopularityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContextCodes", DbType="NVarChar(4000)")]
		public string ContextCodes
		{
			get
			{
				return this._ContextCodes;
			}
			set
			{
				if ((this._ContextCodes != value))
				{
					this.OnContextCodesChanging(value);
					this.SendPropertyChanging();
					this._ContextCodes = value;
					this.SendPropertyChanged("ContextCodes");
					this.OnContextCodesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetDocumentByUrlResult
	{
		
		private System.Nullable<long> _Id;
		
		public GetDocumentByUrlResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt")]
		public System.Nullable<long> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
