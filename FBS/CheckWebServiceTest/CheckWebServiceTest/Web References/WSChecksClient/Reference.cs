//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CheckWebService.WSChecksClient {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSChecksSoap", Namespace="urn:fbs:v2")]
    public partial class WSChecks : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private UserCredentials userCredentialsValueField;
        
        private System.Threading.SendOrPostCallback BatchCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback BatchCheckNNOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchCheckQuerySampleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchCheckQuerySampleNNOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchCheckResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBatchCheckResultNNOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSingleCheckQuerySampleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSingleCheckQuerySampleNNOperationCompleted;
        
        private System.Threading.SendOrPostCallback SingleCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback SingleCheckNNOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WSChecks() {
            this.Url = global::CheckWebService.Properties.Settings.Default.CheckWebService_WSChecksClient_WSChecks;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public UserCredentials UserCredentialsValue {
            get {
                return this.userCredentialsValueField;
            }
            set {
                this.userCredentialsValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event BatchCheckCompletedEventHandler BatchCheckCompleted;
        
        /// <remarks/>
        public event BatchCheckNNCompletedEventHandler BatchCheckNNCompleted;
        
        /// <remarks/>
        public event GetBatchCheckQuerySampleCompletedEventHandler GetBatchCheckQuerySampleCompleted;
        
        /// <remarks/>
        public event GetBatchCheckQuerySampleNNCompletedEventHandler GetBatchCheckQuerySampleNNCompleted;
        
        /// <remarks/>
        public event GetBatchCheckResultCompletedEventHandler GetBatchCheckResultCompleted;
        
        /// <remarks/>
        public event GetBatchCheckResultNNCompletedEventHandler GetBatchCheckResultNNCompleted;
        
        /// <remarks/>
        public event GetSingleCheckQuerySampleCompletedEventHandler GetSingleCheckQuerySampleCompleted;
        
        /// <remarks/>
        public event GetSingleCheckQuerySampleNNCompletedEventHandler GetSingleCheckQuerySampleNNCompleted;
        
        /// <remarks/>
        public event SingleCheckCompletedEventHandler SingleCheckCompleted;
        
        /// <remarks/>
        public event SingleCheckNNCompletedEventHandler SingleCheckNNCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:fbs:v2/BatchCheck", RequestNamespace="urn:fbs:v2", ResponseNamespace="urn:fbs:v2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BatchCheck(string queryXML) {
            object[] results = this.Invoke("BatchCheck", new object[] {
                        queryXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BatchCheckAsync(string queryXML) {
            this.BatchCheckAsync(queryXML, null);
        }
        
        /// <remarks/>
        public void BatchCheckAsync(string queryXML, object userState) {
            if ((this.BatchCheckOperationCompleted == null)) {
                this.BatchCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchCheckOperationCompleted);
            }
            this.InvokeAsync("BatchCheck", new object[] {
                        queryXML}, this.BatchCheckOperationCompleted, userState);
        }
        
        private void OnBatchCheckOperationCompleted(object arg) {
            if ((this.BatchCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchCheckCompleted(this, new BatchCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:fbs:v2/BatchCheckNN", RequestNamespace="urn:fbs:v2", ResponseNamespace="urn:fbs:v2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BatchCheckNN(string queryXML) {
            object[] results = this.Invoke("BatchCheckNN", new object[] {
                        queryXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BatchCheckNNAsync(string queryXML) {
            this.BatchCheckNNAsync(queryXML, null);
        }
        
        /// <remarks/>
        public void BatchCheckNNAsync(string queryXML, object userState) {
            if ((this.BatchCheckNNOperationCompleted == null)) {
                this.BatchCheckNNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchCheckNNOperationCompleted);
            }
            this.InvokeAsync("BatchCheckNN", new object[] {
                        queryXML}, this.BatchCheckNNOperationCompleted, userState);
        }
        
        private void OnBatchCheckNNOperationCompleted(object arg) {
            if ((this.BatchCheckNNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchCheckNNCompleted(this, new BatchCheckNNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:fbs:v2/GetBatchCheckQuerySample", RequestNamespace="urn:fbs:v2", ResponseNamespace="urn:fbs:v2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBatchCheckQuerySample() {
            object[] results = this.Invoke("GetBatchCheckQuerySample", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchCheckQuerySampleAsync() {
            this.GetBatchCheckQuerySampleAsync(null);
        }
        
        /// <remarks/>
        public void GetBatchCheckQuerySampleAsync(object userState) {
            if ((this.GetBatchCheckQuerySampleOperationCompleted == null)) {
                this.GetBatchCheckQuerySampleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchCheckQuerySampleOperationCompleted);
            }
            this.InvokeAsync("GetBatchCheckQuerySample", new object[0], this.GetBatchCheckQuerySampleOperationCompleted, userState);
        }
        
        private void OnGetBatchCheckQuerySampleOperationCompleted(object arg) {
            if ((this.GetBatchCheckQuerySampleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchCheckQuerySampleCompleted(this, new GetBatchCheckQuerySampleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:fbs:v2/GetBatchCheckQuerySampleNN", RequestNamespace="urn:fbs:v2", ResponseNamespace="urn:fbs:v2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBatchCheckQuerySampleNN() {
            object[] results = this.Invoke("GetBatchCheckQuerySampleNN", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchCheckQuerySampleNNAsync() {
            this.GetBatchCheckQuerySampleNNAsync(null);
        }
        
        /// <remarks/>
        public void GetBatchCheckQuerySampleNNAsync(object userState) {
            if ((this.GetBatchCheckQuerySampleNNOperationCompleted == null)) {
                this.GetBatchCheckQuerySampleNNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchCheckQuerySampleNNOperationCompleted);
            }
            this.InvokeAsync("GetBatchCheckQuerySampleNN", new object[0], this.GetBatchCheckQuerySampleNNOperationCompleted, userState);
        }
        
        private void OnGetBatchCheckQuerySampleNNOperationCompleted(object arg) {
            if ((this.GetBatchCheckQuerySampleNNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchCheckQuerySampleNNCompleted(this, new GetBatchCheckQuerySampleNNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:fbs:v2/GetBatchCheckResult", RequestNamespace="urn:fbs:v2", ResponseNamespace="urn:fbs:v2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBatchCheckResult(string queryXML) {
            object[] results = this.Invoke("GetBatchCheckResult", new object[] {
                        queryXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchCheckResultAsync(string queryXML) {
            this.GetBatchCheckResultAsync(queryXML, null);
        }
        
        /// <remarks/>
        public void GetBatchCheckResultAsync(string queryXML, object userState) {
            if ((this.GetBatchCheckResultOperationCompleted == null)) {
                this.GetBatchCheckResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchCheckResultOperationCompleted);
            }
            this.InvokeAsync("GetBatchCheckResult", new object[] {
                        queryXML}, this.GetBatchCheckResultOperationCompleted, userState);
        }
        
        private void OnGetBatchCheckResultOperationCompleted(object arg) {
            if ((this.GetBatchCheckResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchCheckResultCompleted(this, new GetBatchCheckResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:fbs:v2/GetBatchCheckResultNN", RequestNamespace="urn:fbs:v2", ResponseNamespace="urn:fbs:v2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetBatchCheckResultNN(string queryXML) {
            object[] results = this.Invoke("GetBatchCheckResultNN", new object[] {
                        queryXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBatchCheckResultNNAsync(string queryXML) {
            this.GetBatchCheckResultNNAsync(queryXML, null);
        }
        
        /// <remarks/>
        public void GetBatchCheckResultNNAsync(string queryXML, object userState) {
            if ((this.GetBatchCheckResultNNOperationCompleted == null)) {
                this.GetBatchCheckResultNNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBatchCheckResultNNOperationCompleted);
            }
            this.InvokeAsync("GetBatchCheckResultNN", new object[] {
                        queryXML}, this.GetBatchCheckResultNNOperationCompleted, userState);
        }
        
        private void OnGetBatchCheckResultNNOperationCompleted(object arg) {
            if ((this.GetBatchCheckResultNNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBatchCheckResultNNCompleted(this, new GetBatchCheckResultNNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:fbs:v2/GetSingleCheckQuerySample", RequestNamespace="urn:fbs:v2", ResponseNamespace="urn:fbs:v2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSingleCheckQuerySample() {
            object[] results = this.Invoke("GetSingleCheckQuerySample", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSingleCheckQuerySampleAsync() {
            this.GetSingleCheckQuerySampleAsync(null);
        }
        
        /// <remarks/>
        public void GetSingleCheckQuerySampleAsync(object userState) {
            if ((this.GetSingleCheckQuerySampleOperationCompleted == null)) {
                this.GetSingleCheckQuerySampleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSingleCheckQuerySampleOperationCompleted);
            }
            this.InvokeAsync("GetSingleCheckQuerySample", new object[0], this.GetSingleCheckQuerySampleOperationCompleted, userState);
        }
        
        private void OnGetSingleCheckQuerySampleOperationCompleted(object arg) {
            if ((this.GetSingleCheckQuerySampleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSingleCheckQuerySampleCompleted(this, new GetSingleCheckQuerySampleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:fbs:v2/GetSingleCheckQuerySampleNN", RequestNamespace="urn:fbs:v2", ResponseNamespace="urn:fbs:v2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSingleCheckQuerySampleNN() {
            object[] results = this.Invoke("GetSingleCheckQuerySampleNN", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSingleCheckQuerySampleNNAsync() {
            this.GetSingleCheckQuerySampleNNAsync(null);
        }
        
        /// <remarks/>
        public void GetSingleCheckQuerySampleNNAsync(object userState) {
            if ((this.GetSingleCheckQuerySampleNNOperationCompleted == null)) {
                this.GetSingleCheckQuerySampleNNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSingleCheckQuerySampleNNOperationCompleted);
            }
            this.InvokeAsync("GetSingleCheckQuerySampleNN", new object[0], this.GetSingleCheckQuerySampleNNOperationCompleted, userState);
        }
        
        private void OnGetSingleCheckQuerySampleNNOperationCompleted(object arg) {
            if ((this.GetSingleCheckQuerySampleNNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSingleCheckQuerySampleNNCompleted(this, new GetSingleCheckQuerySampleNNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:fbs:v2/SingleCheck", RequestNamespace="urn:fbs:v2", ResponseNamespace="urn:fbs:v2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SingleCheck(string queryXML) {
            object[] results = this.Invoke("SingleCheck", new object[] {
                        queryXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SingleCheckAsync(string queryXML) {
            this.SingleCheckAsync(queryXML, null);
        }
        
        /// <remarks/>
        public void SingleCheckAsync(string queryXML, object userState) {
            if ((this.SingleCheckOperationCompleted == null)) {
                this.SingleCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSingleCheckOperationCompleted);
            }
            this.InvokeAsync("SingleCheck", new object[] {
                        queryXML}, this.SingleCheckOperationCompleted, userState);
        }
        
        private void OnSingleCheckOperationCompleted(object arg) {
            if ((this.SingleCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SingleCheckCompleted(this, new SingleCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("UserCredentialsValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:fbs:v2/SingleCheckNN", RequestNamespace="urn:fbs:v2", ResponseNamespace="urn:fbs:v2", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SingleCheckNN(string queryXML) {
            object[] results = this.Invoke("SingleCheckNN", new object[] {
                        queryXML});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SingleCheckNNAsync(string queryXML) {
            this.SingleCheckNNAsync(queryXML, null);
        }
        
        /// <remarks/>
        public void SingleCheckNNAsync(string queryXML, object userState) {
            if ((this.SingleCheckNNOperationCompleted == null)) {
                this.SingleCheckNNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSingleCheckNNOperationCompleted);
            }
            this.InvokeAsync("SingleCheckNN", new object[] {
                        queryXML}, this.SingleCheckNNOperationCompleted, userState);
        }
        
        private void OnSingleCheckNNOperationCompleted(object arg) {
            if ((this.SingleCheckNNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SingleCheckNNCompleted(this, new SingleCheckNNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:fbs:v2")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="urn:fbs:v2", IsNullable=false)]
    public partial class UserCredentials : System.Web.Services.Protocols.SoapHeader {
        
        private string clientField;
        
        private string loginField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Client {
            get {
                return this.clientField;
            }
            set {
                this.clientField = value;
            }
        }
        
        /// <remarks/>
        public string Login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void BatchCheckCompletedEventHandler(object sender, BatchCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void BatchCheckNNCompletedEventHandler(object sender, BatchCheckNNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchCheckNNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BatchCheckNNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetBatchCheckQuerySampleCompletedEventHandler(object sender, GetBatchCheckQuerySampleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchCheckQuerySampleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchCheckQuerySampleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetBatchCheckQuerySampleNNCompletedEventHandler(object sender, GetBatchCheckQuerySampleNNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchCheckQuerySampleNNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchCheckQuerySampleNNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetBatchCheckResultCompletedEventHandler(object sender, GetBatchCheckResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchCheckResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchCheckResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetBatchCheckResultNNCompletedEventHandler(object sender, GetBatchCheckResultNNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBatchCheckResultNNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBatchCheckResultNNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSingleCheckQuerySampleCompletedEventHandler(object sender, GetSingleCheckQuerySampleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSingleCheckQuerySampleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSingleCheckQuerySampleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetSingleCheckQuerySampleNNCompletedEventHandler(object sender, GetSingleCheckQuerySampleNNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSingleCheckQuerySampleNNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSingleCheckQuerySampleNNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SingleCheckCompletedEventHandler(object sender, SingleCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SingleCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SingleCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SingleCheckNNCompletedEventHandler(object sender, SingleCheckNNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SingleCheckNNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SingleCheckNNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591