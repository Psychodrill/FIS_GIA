//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FbsChecksClient.InnerDataReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InnerDataReference.InnerDataServiceSoap")]
    public interface InnerDataServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CNELastUpdateDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime CNELastUpdateDate();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckCommonNationalExamCertificateByNumberForXml", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CheckCommonNationalExamCertificateByNumberForXml(string number, string checkSubjectMarks, string participantid, string login, string ip, bool shouldCheckMarks, ref System.Xml.XmlElement xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SelectCheckHystoryCount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SelectCheckHystoryCount(string login, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SelectCheckHystory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SelectCheckHystory(string login, int startRowIndex, int maxRowCount, int type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckCommonNationalExamCertificateByPassportForXml", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CheckCommonNationalExamCertificateByPassportForXml(string passportSeria, string passportNumber, string checkSubjectMarks, string login, string ip, bool shouldWriteLog, ref System.Xml.XmlElement xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCertificateByFioAndPassport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCertificateByFioAndPassport(string currentCertificateNumber, string passportNumber, string passportSeria, string lastName, string firstName, string patronymicName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReportCertificateLoadShortTVF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ReportCertificateLoadShortTVF();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SearchCommonNationalExamCertificateCheckByOuterId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SearchCommonNationalExamCertificateCheckByOuterId(string login, long batchId, ref System.Xml.XmlElement xml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SelectCNECCheckHystoryByOrgId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SelectCNECCheckHystoryByOrgId(long orgId, int startRow, int maxRow, string sortBy, bool isUniqueCheck, int sortorder, string typeCheck, string family, string dats, string datf);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CountCNECCheckHystoryByOrgId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int CountCNECCheckHystoryByOrgId(long orgId, bool isUniqueCheck, string typeCheck, string family, string dats, string datf);
        
        // CODEGEN: Parameter 'StartBatchCheckResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StartBatchCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        FbsChecksClient.InnerDataReference.StartBatchCheckResponse StartBatchCheck(FbsChecksClient.InnerDataReference.StartBatchCheckRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartBatchCheck", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class StartBatchCheckRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string login;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string data;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public long batchId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> year;
        
        public StartBatchCheckRequest() {
        }
        
        public StartBatchCheckRequest(string login, string data, int type, long batchId, System.Nullable<int> year) {
            this.login = login;
            this.data = data;
            this.type = type;
            this.batchId = batchId;
            this.year = year;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="StartBatchCheckResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class StartBatchCheckResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.Guid> StartBatchCheckResult;
        
        public StartBatchCheckResponse() {
        }
        
        public StartBatchCheckResponse(System.Nullable<System.Guid> StartBatchCheckResult) {
            this.StartBatchCheckResult = StartBatchCheckResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface InnerDataServiceSoapChannel : FbsChecksClient.InnerDataReference.InnerDataServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InnerDataServiceSoapClient : System.ServiceModel.ClientBase<FbsChecksClient.InnerDataReference.InnerDataServiceSoap>, FbsChecksClient.InnerDataReference.InnerDataServiceSoap {
        
        public InnerDataServiceSoapClient() {
        }
        
        public InnerDataServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InnerDataServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InnerDataServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InnerDataServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.DateTime CNELastUpdateDate() {
            return base.Channel.CNELastUpdateDate();
        }
        
        public int CheckCommonNationalExamCertificateByNumberForXml(string number, string checkSubjectMarks, string participantid, string login, string ip, bool shouldCheckMarks, ref System.Xml.XmlElement xml) {
            return base.Channel.CheckCommonNationalExamCertificateByNumberForXml(number, checkSubjectMarks, participantid, login, ip, shouldCheckMarks, ref xml);
        }
        
        public int SelectCheckHystoryCount(string login, int type) {
            return base.Channel.SelectCheckHystoryCount(login, type);
        }
        
        public string SelectCheckHystory(string login, int startRowIndex, int maxRowCount, int type) {
            return base.Channel.SelectCheckHystory(login, startRowIndex, maxRowCount, type);
        }
        
        public int CheckCommonNationalExamCertificateByPassportForXml(string passportSeria, string passportNumber, string checkSubjectMarks, string login, string ip, bool shouldWriteLog, ref System.Xml.XmlElement xml) {
            return base.Channel.CheckCommonNationalExamCertificateByPassportForXml(passportSeria, passportNumber, checkSubjectMarks, login, ip, shouldWriteLog, ref xml);
        }
        
        public string GetCertificateByFioAndPassport(string currentCertificateNumber, string passportNumber, string passportSeria, string lastName, string firstName, string patronymicName) {
            return base.Channel.GetCertificateByFioAndPassport(currentCertificateNumber, passportNumber, passportSeria, lastName, firstName, patronymicName);
        }
        
        public string ReportCertificateLoadShortTVF() {
            return base.Channel.ReportCertificateLoadShortTVF();
        }
        
        public int SearchCommonNationalExamCertificateCheckByOuterId(string login, long batchId, ref System.Xml.XmlElement xml) {
            return base.Channel.SearchCommonNationalExamCertificateCheckByOuterId(login, batchId, ref xml);
        }
        
        public string SelectCNECCheckHystoryByOrgId(long orgId, int startRow, int maxRow, string sortBy, bool isUniqueCheck, int sortorder, string typeCheck, string family, string dats, string datf) {
            return base.Channel.SelectCNECCheckHystoryByOrgId(orgId, startRow, maxRow, sortBy, isUniqueCheck, sortorder, typeCheck, family, dats, datf);
        }
        
        public int CountCNECCheckHystoryByOrgId(long orgId, bool isUniqueCheck, string typeCheck, string family, string dats, string datf) {
            return base.Channel.CountCNECCheckHystoryByOrgId(orgId, isUniqueCheck, typeCheck, family, dats, datf);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FbsChecksClient.InnerDataReference.StartBatchCheckResponse FbsChecksClient.InnerDataReference.InnerDataServiceSoap.StartBatchCheck(FbsChecksClient.InnerDataReference.StartBatchCheckRequest request) {
            return base.Channel.StartBatchCheck(request);
        }
        
        public System.Nullable<System.Guid> StartBatchCheck(string login, string data, int type, long batchId, System.Nullable<int> year) {
            FbsChecksClient.InnerDataReference.StartBatchCheckRequest inValue = new FbsChecksClient.InnerDataReference.StartBatchCheckRequest();
            inValue.login = login;
            inValue.data = data;
            inValue.type = type;
            inValue.batchId = batchId;
            inValue.year = year;
            FbsChecksClient.InnerDataReference.StartBatchCheckResponse retVal = ((FbsChecksClient.InnerDataReference.InnerDataServiceSoap)(this)).StartBatchCheck(inValue);
            return retVal.StartBatchCheckResult;
        }
    }
}
