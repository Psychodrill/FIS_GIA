// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace FBS.Tests.FBSCheckRegNumberAndMarks
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Запрос по номеру и серии документа, и баллам по предметам")]
    public partial class ЗапросПоНомеруИСерииДокументаИБалламПоПредметамFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "FBSCheckRegNumberAndMarks.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("ru-RU"), "Запрос по номеру и серии документа, и баллам по предметам", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line 4
 testRunner.Given("Я захожу под пользователем \"super\"");
#line 5
 testRunner.And("Я открываю страницу Запрос по номеру и серии документа, и баллам по предметам");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01. Проверка открытия страницы с Запрос по номеру и серии документа, и баллам по " +
            "предметам")]
        public virtual void _01_ПроверкаОткрытияСтраницыСЗапросПоНомеруИСерииДокументаИБалламПоПредметам()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01. Проверка открытия страницы с Запрос по номеру и серии документа, и баллам по " +
                    "предметам", ((string[])(null)));
#line 7
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 8
 testRunner.Then("нахожусь на странице Запрос по номеру и серии документа, и баллам по предметам");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02. Проверка присутствия хлебных крошек на странице Запрос по номеру и серии доку" +
            "мента, и баллам по предметам")]
        public virtual void _02_ПроверкаПрисутствияХлебныхКрошекНаСтраницеЗапросПоНомеруИСерииДокументаИБалламПоПредметам()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02. Проверка присутствия хлебных крошек на странице Запрос по номеру и серии доку" +
                    "мента, и баллам по предметам", ((string[])(null)));
#line 10
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Text"});
            table1.AddRow(new string[] {
                        "Свидетельства"});
            table1.AddRow(new string[] {
                        "Свидетельства ЕГЭ"});
            table1.AddRow(new string[] {
                        "Запрос по номеру и серии документа, и баллам по предметам"});
#line 11
 testRunner.Then("на странице есть следующие хлебные крошки:", ((string)(null)), table1);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03. Проверка полей по умолчанию")]
        public virtual void _03_ПроверкаПолейПоУмолчанию()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03. Проверка полей по умолчанию", ((string[])(null)));
#line 17
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Value"});
            table2.AddRow(new string[] {
                        "cSeries",
                        "Серия документа"});
            table2.AddRow(new string[] {
                        "cNumber",
                        "Номер документа"});
            table2.AddRow(new string[] {
                        "rpSubjects_ctl01_txtValue",
                        ""});
            table2.AddRow(new string[] {
                        "rpSubjects_ctl02_txtValue",
                        ""});
            table2.AddRow(new string[] {
                        "rpSubjects_ctl03_txtValue",
                        ""});
            table2.AddRow(new string[] {
                        "rpSubjects_ctl04_txtValue",
                        ""});
            table2.AddRow(new string[] {
                        "rpSubjects_ctl05_txtValue",
                        ""});
            table2.AddRow(new string[] {
                        "rpSubjects_ctl06_txtValue",
                        ""});
            table2.AddRow(new string[] {
                        "rpSubjects_ctl07_txtValue",
                        ""});
            table2.AddRow(new string[] {
                        "rpSubjects_ctl08_txtValue",
                        ""});
            table2.AddRow(new string[] {
                        "rpSubjects_ctl09_txtValue",
                        ""});
            table2.AddRow(new string[] {
                        "rpSubjects_ctl10_txtValue",
                        ""});
            table2.AddRow(new string[] {
                        "rpSubjects_ctl11_txtValue",
                        ""});
            table2.AddRow(new string[] {
                        "rpSubjects_ctl12_txtValue",
                        ""});
            table2.AddRow(new string[] {
                        "rpSubjects_ctl13_txtValue",
                        ""});
            table2.AddRow(new string[] {
                        "rpSubjects_ctl14_txtValue",
                        ""});
#line 18
testRunner.Then("вижу в полях следующие данные:", ((string)(null)), table2);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("04. Проверка обязательный полей")]
        public virtual void _04_ПроверкаОбязательныйПолей()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04. Проверка обязательный полей", ((string[])(null)));
#line 37
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Value"});
            table3.AddRow(new string[] {
                        "cSeries",
                        ""});
            table3.AddRow(new string[] {
                        "cNumber",
                        ""});
            table3.AddRow(new string[] {
                        "rpSubjects_ctl01_txtValue",
                        ""});
            table3.AddRow(new string[] {
                        "rpSubjects_ctl02_txtValue",
                        ""});
            table3.AddRow(new string[] {
                        "rpSubjects_ctl03_txtValue",
                        ""});
            table3.AddRow(new string[] {
                        "rpSubjects_ctl04_txtValue",
                        ""});
            table3.AddRow(new string[] {
                        "rpSubjects_ctl05_txtValue",
                        ""});
            table3.AddRow(new string[] {
                        "rpSubjects_ctl06_txtValue",
                        ""});
            table3.AddRow(new string[] {
                        "rpSubjects_ctl07_txtValue",
                        ""});
            table3.AddRow(new string[] {
                        "rpSubjects_ctl08_txtValue",
                        ""});
            table3.AddRow(new string[] {
                        "rpSubjects_ctl09_txtValue",
                        ""});
            table3.AddRow(new string[] {
                        "rpSubjects_ctl10_txtValue",
                        ""});
            table3.AddRow(new string[] {
                        "rpSubjects_ctl11_txtValue",
                        ""});
            table3.AddRow(new string[] {
                        "rpSubjects_ctl12_txtValue",
                        ""});
            table3.AddRow(new string[] {
                        "rpSubjects_ctl13_txtValue",
                        ""});
            table3.AddRow(new string[] {
                        "rpSubjects_ctl14_txtValue",
                        ""});
#line 38
 testRunner.When("вношу в поля следующие данные:", ((string)(null)), table3);
#line 56
 testRunner.And("нажимаю кнопку \"Проверить\"");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Value"});
            table4.AddRow(new string[] {
                        "Произошли следующие ошибки:"});
            table4.AddRow(new string[] {
                        "Поле \"Номер документа\" обязательно для заполнения"});
#line 57
 testRunner.Then("на экране есть:", ((string)(null)), table4);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("05. Проверка обязательности заполнения полей с баллами")]
        public virtual void _05_ПроверкаОбязательностиЗаполненияПолейСБаллами()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05. Проверка обязательности заполнения полей с баллами", ((string[])(null)));
#line 62
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Value"});
            table5.AddRow(new string[] {
                        "cSeries",
                        "9205"});
            table5.AddRow(new string[] {
                        "cNumber",
                        "527439"});
            table5.AddRow(new string[] {
                        "rpSubjects_ctl01_txtValue",
                        ""});
            table5.AddRow(new string[] {
                        "rpSubjects_ctl02_txtValue",
                        ""});
            table5.AddRow(new string[] {
                        "rpSubjects_ctl03_txtValue",
                        ""});
            table5.AddRow(new string[] {
                        "rpSubjects_ctl04_txtValue",
                        ""});
            table5.AddRow(new string[] {
                        "rpSubjects_ctl05_txtValue",
                        ""});
            table5.AddRow(new string[] {
                        "rpSubjects_ctl06_txtValue",
                        ""});
            table5.AddRow(new string[] {
                        "rpSubjects_ctl07_txtValue",
                        ""});
            table5.AddRow(new string[] {
                        "rpSubjects_ctl08_txtValue",
                        ""});
            table5.AddRow(new string[] {
                        "rpSubjects_ctl09_txtValue",
                        ""});
            table5.AddRow(new string[] {
                        "rpSubjects_ctl10_txtValue",
                        ""});
            table5.AddRow(new string[] {
                        "rpSubjects_ctl11_txtValue",
                        ""});
            table5.AddRow(new string[] {
                        "rpSubjects_ctl12_txtValue",
                        ""});
            table5.AddRow(new string[] {
                        "rpSubjects_ctl13_txtValue",
                        ""});
            table5.AddRow(new string[] {
                        "rpSubjects_ctl14_txtValue",
                        ""});
#line 63
 testRunner.When("вношу в поля следующие данные:", ((string)(null)), table5);
#line 81
 testRunner.And("нажимаю кнопку \"Проверить\"");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Value"});
            table6.AddRow(new string[] {
                        "Произошли следующие ошибки:"});
            table6.AddRow(new string[] {
                        "Укажите баллы хотя бы по двум предметам"});
#line 82
 testRunner.Then("на экране есть:", ((string)(null)), table6);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("06. Проверка очистки полей с помощью кнопки \"Очистить\"")]
        public virtual void _06_ПроверкаОчисткиПолейСПомощьюКнопкиОчистить()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06. Проверка очистки полей с помощью кнопки \"Очистить\"", ((string[])(null)));
#line 87
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Value"});
            table7.AddRow(new string[] {
                        "txtSeries",
                        "9205"});
            table7.AddRow(new string[] {
                        "txtNumber",
                        "527439"});
            table7.AddRow(new string[] {
                        "rpSubjects_ctl01_txtValue",
                        "44"});
            table7.AddRow(new string[] {
                        "rpSubjects_ctl02_txtValue",
                        "44"});
            table7.AddRow(new string[] {
                        "rpSubjects_ctl03_txtValue",
                        "44"});
            table7.AddRow(new string[] {
                        "rpSubjects_ctl04_txtValue",
                        "55"});
            table7.AddRow(new string[] {
                        "rpSubjects_ctl05_txtValue",
                        "66"});
            table7.AddRow(new string[] {
                        "rpSubjects_ctl06_txtValue",
                        "77"});
            table7.AddRow(new string[] {
                        "rpSubjects_ctl07_txtValue",
                        "88"});
            table7.AddRow(new string[] {
                        "rpSubjects_ctl08_txtValue",
                        "99"});
            table7.AddRow(new string[] {
                        "rpSubjects_ctl09_txtValue",
                        "99"});
            table7.AddRow(new string[] {
                        "rpSubjects_ctl10_txtValue",
                        "10"});
            table7.AddRow(new string[] {
                        "rpSubjects_ctl11_txtValue",
                        "11"});
            table7.AddRow(new string[] {
                        "rpSubjects_ctl12_txtValue",
                        "10"});
            table7.AddRow(new string[] {
                        "rpSubjects_ctl13_txtValue",
                        "11"});
            table7.AddRow(new string[] {
                        "rpSubjects_ctl14_txtValue",
                        "10"});
#line 88
 testRunner.When("вношу в поля следующие данные:", ((string)(null)), table7);
#line 106
 testRunner.And("нажимаю кнопку \"Очистить\"");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Value"});
            table8.AddRow(new string[] {
                        "cSeries",
                        "Серия документа"});
            table8.AddRow(new string[] {
                        "cNumber",
                        "Номер документа"});
            table8.AddRow(new string[] {
                        "rpSubjects_ctl01_txtValue",
                        ""});
            table8.AddRow(new string[] {
                        "rpSubjects_ctl02_txtValue",
                        ""});
            table8.AddRow(new string[] {
                        "rpSubjects_ctl03_txtValue",
                        ""});
            table8.AddRow(new string[] {
                        "rpSubjects_ctl04_txtValue",
                        ""});
            table8.AddRow(new string[] {
                        "rpSubjects_ctl05_txtValue",
                        ""});
            table8.AddRow(new string[] {
                        "rpSubjects_ctl06_txtValue",
                        ""});
            table8.AddRow(new string[] {
                        "rpSubjects_ctl07_txtValue",
                        ""});
            table8.AddRow(new string[] {
                        "rpSubjects_ctl08_txtValue",
                        ""});
            table8.AddRow(new string[] {
                        "rpSubjects_ctl09_txtValue",
                        ""});
            table8.AddRow(new string[] {
                        "rpSubjects_ctl10_txtValue",
                        ""});
            table8.AddRow(new string[] {
                        "rpSubjects_ctl11_txtValue",
                        ""});
            table8.AddRow(new string[] {
                        "rpSubjects_ctl12_txtValue",
                        ""});
            table8.AddRow(new string[] {
                        "rpSubjects_ctl13_txtValue",
                        ""});
            table8.AddRow(new string[] {
                        "rpSubjects_ctl14_txtValue",
                        ""});
#line 107
 testRunner.Then("вижу в полях следующие данные:", ((string)(null)), table8);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("07. Проверка результата, если внесены верные данные")]
        public virtual void _07_ПроверкаРезультатаЕслиВнесеныВерныеДанные()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07. Проверка результата, если внесены верные данные", ((string[])(null)));
#line 126
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Value"});
            table9.AddRow(new string[] {
                        "txtSeries",
                        "9205"});
            table9.AddRow(new string[] {
                        "txtNumber",
                        "527439"});
            table9.AddRow(new string[] {
                        "rpSubjects_ctl01_txtValue",
                        ""});
            table9.AddRow(new string[] {
                        "rpSubjects_ctl02_txtValue",
                        ""});
            table9.AddRow(new string[] {
                        "rpSubjects_ctl03_txtValue",
                        "44"});
            table9.AddRow(new string[] {
                        "rpSubjects_ctl04_txtValue",
                        ""});
            table9.AddRow(new string[] {
                        "rpSubjects_ctl05_txtValue",
                        "70"});
            table9.AddRow(new string[] {
                        "rpSubjects_ctl06_txtValue",
                        ""});
            table9.AddRow(new string[] {
                        "rpSubjects_ctl07_txtValue",
                        ""});
            table9.AddRow(new string[] {
                        "rpSubjects_ctl08_txtValue",
                        ""});
            table9.AddRow(new string[] {
                        "rpSubjects_ctl09_txtValue",
                        ""});
            table9.AddRow(new string[] {
                        "rpSubjects_ctl10_txtValue",
                        ""});
            table9.AddRow(new string[] {
                        "rpSubjects_ctl11_txtValue",
                        ""});
            table9.AddRow(new string[] {
                        "rpSubjects_ctl12_txtValue",
                        ""});
            table9.AddRow(new string[] {
                        "rpSubjects_ctl13_txtValue",
                        ""});
            table9.AddRow(new string[] {
                        "rpSubjects_ctl14_txtValue",
                        ""});
#line 127
 testRunner.When("вношу в поля следующие данные:", ((string)(null)), table9);
#line 145
 testRunner.And("нажимаю кнопку \"Проверить\"");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Value"});
            table10.AddRow(new string[] {
                        "Результат запроса по номеру и серии документа, и баллам по предметам"});
            table10.AddRow(new string[] {
                        "Если не удается найти результаты участника ЕГЭ или свидетельство аннулировано без" +
                            " объяснения причины, то обращайтесь за информацией в Региональный Центр Обработк" +
                            "и Информации, находящийся на территории региона, в котором было выдано данное св" +
                            "идетельство."});
#line 146
 testRunner.Then("на экране есть:", ((string)(null)), table10);
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Value"});
            table11.AddRow(new string[] {
                        "Свидетельство"});
            table11.AddRow(new string[] {
                        "16-000027009-10"});
            table11.AddRow(new string[] {
                        "16-000027009-11"});
            table11.AddRow(new string[] {
                        "16-000027009-12"});
            table11.AddRow(new string[] {
                        "ТН"});
            table11.AddRow(new string[] {
                        "6856345"});
            table11.AddRow(new string[] {
                        "6856345"});
            table11.AddRow(new string[] {
                        "6856345"});
            table11.AddRow(new string[] {
                        "Документ"});
            table11.AddRow(new string[] {
                        "9205"});
            table11.AddRow(new string[] {
                        "527439"});
            table11.AddRow(new string[] {
                        "9205"});
            table11.AddRow(new string[] {
                        "527439"});
            table11.AddRow(new string[] {
                        "9205"});
            table11.AddRow(new string[] {
                        "527439"});
            table11.AddRow(new string[] {
                        "Регион"});
            table11.AddRow(new string[] {
                        "Республика Татарстан (Татарстан)"});
            table11.AddRow(new string[] {
                        "Республика Татарстан (Татарстан)"});
            table11.AddRow(new string[] {
                        "Республика Татарстан (Татарстан)"});
            table11.AddRow(new string[] {
                        "Год"});
            table11.AddRow(new string[] {
                        "2010"});
            table11.AddRow(new string[] {
                        "2011"});
            table11.AddRow(new string[] {
                        "2012"});
            table11.AddRow(new string[] {
                        "Статус"});
            table11.AddRow(new string[] {
                        "Истек срок"});
            table11.AddRow(new string[] {
                        "Действительно"});
            table11.AddRow(new string[] {
                        "Действительно"});
            table11.AddRow(new string[] {
                        "Проверки *"});
            table11.AddRow(new string[] {
                        "1"});
            table11.AddRow(new string[] {
                        "0"});
            table11.AddRow(new string[] {
                        "0"});
#line 150
 testRunner.And("на экране есть:", ((string)(null)), table11);
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Value"});
            table12.AddRow(new string[] {
                        "* Количество уникальных проверок свидетельства ВУЗами и их филиалами. Для пользов" +
                            "ателей ССУЗов данное поле носит справочный характер."});
#line 183
 testRunner.And("на экране есть:", ((string)(null)), table12);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("08. Проверка результата \"Не найдено\"")]
        public virtual void _08_ПроверкаРезультатаНеНайдено()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("08. Проверка результата \"Не найдено\"", ((string[])(null)));
#line 187
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Value"});
            table13.AddRow(new string[] {
                        "txtSeries",
                        "9205"});
            table13.AddRow(new string[] {
                        "txtNumber",
                        "527438"});
            table13.AddRow(new string[] {
                        "rpSubjects_ctl01_txtValue",
                        ""});
            table13.AddRow(new string[] {
                        "rpSubjects_ctl02_txtValue",
                        ""});
            table13.AddRow(new string[] {
                        "rpSubjects_ctl03_txtValue",
                        "44"});
            table13.AddRow(new string[] {
                        "rpSubjects_ctl04_txtValue",
                        ""});
            table13.AddRow(new string[] {
                        "rpSubjects_ctl05_txtValue",
                        "70"});
            table13.AddRow(new string[] {
                        "rpSubjects_ctl06_txtValue",
                        ""});
            table13.AddRow(new string[] {
                        "rpSubjects_ctl07_txtValue",
                        ""});
            table13.AddRow(new string[] {
                        "rpSubjects_ctl08_txtValue",
                        ""});
            table13.AddRow(new string[] {
                        "rpSubjects_ctl09_txtValue",
                        ""});
            table13.AddRow(new string[] {
                        "rpSubjects_ctl10_txtValue",
                        ""});
            table13.AddRow(new string[] {
                        "rpSubjects_ctl11_txtValue",
                        ""});
            table13.AddRow(new string[] {
                        "rpSubjects_ctl12_txtValue",
                        ""});
            table13.AddRow(new string[] {
                        "rpSubjects_ctl13_txtValue",
                        ""});
            table13.AddRow(new string[] {
                        "rpSubjects_ctl14_txtValue",
                        ""});
#line 188
 testRunner.When("вношу в поля следующие данные:", ((string)(null)), table13);
#line 206
 testRunner.And("нажимаю кнопку \"Проверить\"");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Value"});
            table14.AddRow(new string[] {
                        "Если не удается найти результаты участника ЕГЭ или свидетельство аннулировано без" +
                            " объяснения причины, то обращайтесь за информацией в Региональный Центр Обработк" +
                            "и Информации, находящийся на территории региона, в котором было выдано данное св" +
                            "идетельство."});
#line 207
 testRunner.Then("на экране есть:", ((string)(null)), table14);
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Value"});
            table15.AddRow(new string[] {
                        "По Вашему запросу ничего не найдено"});
#line 210
 testRunner.And("на экране есть:", ((string)(null)), table15);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("09. Проверка правильности ввода данных в поля Номер и Серия документа")]
        public virtual void _09_ПроверкаПравильностиВводаДанныхВПоляНомерИСерияДокумента()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("09. Проверка правильности ввода данных в поля Номер и Серия документа", ((string[])(null)));
#line 214
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Value"});
            table16.AddRow(new string[] {
                        "txtSeries",
                        "Серия документа"});
            table16.AddRow(new string[] {
                        "txtNumber",
                        "Номер документа"});
            table16.AddRow(new string[] {
                        "rpSubjects_ctl01_txtValue",
                        ""});
            table16.AddRow(new string[] {
                        "rpSubjects_ctl02_txtValue",
                        ""});
            table16.AddRow(new string[] {
                        "rpSubjects_ctl03_txtValue",
                        ""});
            table16.AddRow(new string[] {
                        "rpSubjects_ctl04_txtValue",
                        ""});
            table16.AddRow(new string[] {
                        "rpSubjects_ctl05_txtValue",
                        ""});
            table16.AddRow(new string[] {
                        "rpSubjects_ctl06_txtValue",
                        ""});
            table16.AddRow(new string[] {
                        "rpSubjects_ctl07_txtValue",
                        ""});
            table16.AddRow(new string[] {
                        "rpSubjects_ctl08_txtValue",
                        ""});
            table16.AddRow(new string[] {
                        "rpSubjects_ctl09_txtValue",
                        ""});
            table16.AddRow(new string[] {
                        "rpSubjects_ctl10_txtValue",
                        ""});
            table16.AddRow(new string[] {
                        "rpSubjects_ctl11_txtValue",
                        ""});
            table16.AddRow(new string[] {
                        "rpSubjects_ctl12_txtValue",
                        ""});
            table16.AddRow(new string[] {
                        "rpSubjects_ctl13_txtValue",
                        ""});
            table16.AddRow(new string[] {
                        "rpSubjects_ctl14_txtValue",
                        ""});
#line 215
 testRunner.When("вношу в поля следующие данные:", ((string)(null)), table16);
#line 233
 testRunner.And("нажимаю кнопку \"Проверить\"");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Value"});
            table17.AddRow(new string[] {
                        "Произошли следующие ошибки:"});
            table17.AddRow(new string[] {
                        "В поле \"Серия документа\" не должно быть пробелов"});
            table17.AddRow(new string[] {
                        "Поле \"Номер документа\" должно быть до 10 символов. Сейчас 15"});
#line 234
 testRunner.Then("на экране есть:", ((string)(null)), table17);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("10. Проверка правильности заполнения поля Баллы")]
        public virtual void _10_ПроверкаПравильностиЗаполненияПоляБаллы()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("10. Проверка правильности заполнения поля Баллы", ((string[])(null)));
#line 240
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Value"});
            table18.AddRow(new string[] {
                        "txtSeries",
                        "9205"});
            table18.AddRow(new string[] {
                        "txtNumber",
                        "527439"});
            table18.AddRow(new string[] {
                        "rpSubjects_ctl01_txtValue",
                        ""});
            table18.AddRow(new string[] {
                        "rpSubjects_ctl02_txtValue",
                        "test"});
            table18.AddRow(new string[] {
                        "rpSubjects_ctl03_txtValue",
                        ""});
            table18.AddRow(new string[] {
                        "rpSubjects_ctl04_txtValue",
                        ""});
            table18.AddRow(new string[] {
                        "rpSubjects_ctl05_txtValue",
                        ""});
            table18.AddRow(new string[] {
                        "rpSubjects_ctl06_txtValue",
                        ""});
            table18.AddRow(new string[] {
                        "rpSubjects_ctl07_txtValue",
                        ""});
            table18.AddRow(new string[] {
                        "rpSubjects_ctl08_txtValue",
                        ""});
            table18.AddRow(new string[] {
                        "rpSubjects_ctl09_txtValue",
                        ""});
            table18.AddRow(new string[] {
                        "rpSubjects_ctl10_txtValue",
                        ""});
            table18.AddRow(new string[] {
                        "rpSubjects_ctl11_txtValue",
                        ""});
            table18.AddRow(new string[] {
                        "rpSubjects_ctl12_txtValue",
                        ""});
            table18.AddRow(new string[] {
                        "rpSubjects_ctl13_txtValue",
                        ""});
            table18.AddRow(new string[] {
                        "rpSubjects_ctl14_txtValue",
                        ""});
#line 241
 testRunner.When("вношу в поля следующие данные:", ((string)(null)), table18);
#line 259
 testRunner.And("нажимаю кнопку \"Проверить\"");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Value"});
            table19.AddRow(new string[] {
                        "Произошли следующие ошибки:"});
            table19.AddRow(new string[] {
                        "Проверьте правильность заполнения баллов"});
#line 260
 testRunner.Then("на экране есть:", ((string)(null)), table19);
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
