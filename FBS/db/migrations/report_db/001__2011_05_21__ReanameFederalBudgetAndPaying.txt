-- =========================================================================
-- Запись информации о текущей миграции в лог
insert into Migrations(MigrationVersion, MigrationName) values (1, '001__2011_05_21__ReanameFederalBudgetAndPaying')
-- =========================================================================
GO

--1
IF NOT EXISTS(select * from sys.columns where Name = N'CNFBFullTime' and Object_ID = Object_ID(N'Organizations'))
BEGIN
	ALTER TABLE dbo.Organizations ADD CNFBFullTime int NOT NULL default 0
END
GO
IF EXISTS(select * from sys.columns where Name = N'CNFBFullTime'
		and Object_ID = Object_ID(N'Organizations'))
	and 
	EXISTS(select * from sys.columns where Name = N'CNFederalBudget'
		and Object_ID = Object_ID(N'Organizations'))
BEGIN
	UPDATE dbo.Organizations
	SET CNFBFullTime = CNFederalBudget;
	
	ALTER TABLE dbo.Organizations DROP COLUMN CNFederalBudget
END
GO

--2
IF NOT EXISTS(select * from sys.columns where Name = N'CNFBEvening' and Object_ID = Object_ID(N'Organizations'))
BEGIN
	ALTER TABLE dbo.Organizations ADD CNFBEvening int NOT NULL default 0
END
GO
IF EXISTS(select * from sys.columns where Name = N'CNFBEvening'
		and Object_ID = Object_ID(N'Organizations'))
	and 
	EXISTS(select * from sys.columns where Name = N'CNTargeted'
		and Object_ID = Object_ID(N'Organizations'))
BEGIN
	UPDATE dbo.Organizations
	SET CNFBEvening = CNTargeted;
	
	ALTER TABLE dbo.Organizations DROP COLUMN CNTargeted
END
GO

--3
IF NOT EXISTS(select * from sys.columns where Name = N'CNFBPostal' and Object_ID = Object_ID(N'Organizations'))
BEGIN
	ALTER TABLE dbo.Organizations ADD CNFBPostal int NOT NULL default 0
END
GO
IF EXISTS(select * from sys.columns where Name = N'CNFBPostal'
		and Object_ID = Object_ID(N'Organizations'))
	and 
	EXISTS(select * from sys.columns where Name = N'CNLocalBudget'
		and Object_ID = Object_ID(N'Organizations'))
BEGIN
	UPDATE dbo.Organizations
	SET CNFBPostal = CNLocalBudget;

	ALTER TABLE dbo.Organizations DROP COLUMN CNLocalBudget
END
GO


--4
IF NOT EXISTS(select * from sys.columns where Name = N'CNPayFullTime' and Object_ID = Object_ID(N'Organizations'))
BEGIN
	ALTER TABLE dbo.Organizations ADD CNPayFullTime int NOT NULL default 0
END
GO
IF EXISTS(select * from sys.columns where Name = N'CNPayFullTime'
		and Object_ID = Object_ID(N'Organizations'))
	and 
	EXISTS(select * from sys.columns where Name = N'CNPaying'
		and Object_ID = Object_ID(N'Organizations'))
BEGIN
	UPDATE dbo.Organizations
	SET CNPayFullTime = CNPaying;

	ALTER TABLE dbo.Organizations DROP COLUMN CNPaying
END
GO


--5
IF NOT EXISTS(select * from sys.columns where Name = N'CNPayEvening' and Object_ID = Object_ID(N'Organizations'))
BEGIN
	ALTER TABLE dbo.Organizations ADD CNPayEvening int NOT NULL default 0
END
GO
IF EXISTS(select * from sys.columns where Name = N'CNPayEvening'
		and Object_ID = Object_ID(N'Organizations'))
	and 
	EXISTS(select * from sys.columns where Name = N'CNFullTime'
		and Object_ID = Object_ID(N'Organizations'))
BEGIN
	UPDATE dbo.Organizations
	SET CNPayEvening = CNFullTime;

	ALTER TABLE dbo.Organizations DROP COLUMN CNFullTime
END
GO


--6
IF NOT EXISTS(select * from sys.columns where Name = N'CNPayPostal' and Object_ID = Object_ID(N'Organizations'))
BEGIN
	ALTER TABLE dbo.Organizations ADD CNPayPostal int NOT NULL default 0
END
GO
IF EXISTS(select * from sys.columns where Name = N'CNPayPostal'
		and Object_ID = Object_ID(N'Organizations'))
	and 
	EXISTS(select * from sys.columns where Name = N'CNEvening'
		and Object_ID = Object_ID(N'Organizations'))
BEGIN
	UPDATE dbo.Organizations
	SET CNPayPostal = CNEvening;

	ALTER TABLE dbo.Organizations DROP COLUMN CNEvening
END
GO


--7. 
IF EXISTS(select * from sys.columns where Name = N'CNPostal'
		and Object_ID = Object_ID(N'Organizations'))
BEGIN
ALTER TABLE dbo.Organizations DROP COLUMN CNPostal

END
GO



ALTER procedure [dbo].[ReportConsolidatedOrg]
	@ReportType int, -- тип отчета (0 - на дату, 1 - нарастающим итогом)
	@FactDate datetime, -- дата, на которую формируется отчет
	@FDId int,
    @RegionId int,
    @OrgType int,
    @OrgKind int,
    @IsPrivate int,
    @OrgName nvarchar(1000),
    @IsFilial int,
    @IsAccredited int,
    @DepartmentId int,
    @INN_OGRN nvarchar(13),
    @IsRegister int, -- подана ли заявка на регистрацию
    @AccountsCount nvarchar(10), -- количество пользователей
    @ActivatedAccounts nvarchar(10), -- пользователей активировано
    @UniqueChecks nvarchar(10), -- уникальных проверок всего
    @Incorrect nvarchar(10) -- неправильных проверок
as
begin

declare 
	@sql nvarchar(4000),
    @daySql nvarchar(4000),
    @periodSql nvarchar(4000)

set @daySql =
N'
select
	O.FDName,
    O.RegionName,
    O.OrgTypeName,
    O.OrgKindName,
    O.IsPrivate,
    O.ShortName,
    O.FullName,
    O.MainId,
    O.IsAccredited,
    O.DepartmentId,
    (select ORG.ShortName from Organizations ORG where ORG.OrgId = O.DepartmentId) DepartmentName,
    O.INN,
    O.OGRN,
    O.CNFBFullTime,
    O.CNFBEvening,
    O.CNFBPostal,
    O.CNPayFullTime,
    O.CNPayEvening,
    O.CNPayPostal,
    PA.FirstCheck,
    PA.LastCheck,
    coalesce(PA.UniqueByCertNumber, 0) UniqueByCertNumber,
    coalesce(PA.UniqueByPassport, 0) UniqueByPassport,
    coalesce(PA.UniqueByTypoNumber, 0) UniqueByTypoNumber,
    coalesce(PA.UniqueInteractive, 0) UniqueInteractive,
    coalesce(PA.ByCertNumber, 0) ByCertNumber,
    coalesce(PA.ByPassport, 0) ByPassport,
    coalesce(PA.ByTypoNumber, 0) ByTypoNumber,
    coalesce(PA.[Interactive], 0) [Interactive],
    PA.FirstActivated,
    PA.LastActivated,
    PA.FirstRegistered,
    PA.LastRegistered,
    coalesce(PA.AccountsInConsideration, 0) AccountsInConsideration,
    coalesce(PA.DeactivatedAccounts, 0) DeactivatedAccounts,
    coalesce(PA.AccountsOnRegistration, 0) AccountsOnRegistration,
    coalesce(PA.AccountsOnRevision, 0) AccountsOnRevision
from
	Organizations O
    left join ByDayOrgAggregates PA on PA.OrgId = O.OrgId and PA.FactDate = @FactDate 
where
	1 = 1
'

set @periodSql =
N'
select
	O.FDName,
    O.RegionName,
    O.OrgTypeName,
    O.OrgKindName,
    O.IsPrivate,
    O.ShortName,
    O.FullName,
    O.MainId,
    O.IsAccredited,
    O.DepartmentId,
    (select ORG.ShortName from Organizations ORG where ORG.OrgId = O.DepartmentId) DepartmentName,
    O.INN,
    O.OGRN,
    O.CNFBFullTime,
    O.CNFBEvening,
    O.CNFBPostal,
    O.CNPayFullTime,
    O.CNPayEvening,
    O.CNPayPostal,
    PA.FirstCheck,
    PA.LastCheck,
    coalesce(PA.UniqueByCertNumber, 0) UniqueByCertNumber,
    coalesce(PA.UniqueByPassport, 0) UniqueByPassport,
    coalesce(PA.UniqueByTypoNumber, 0) UniqueByTypoNumber,
    coalesce(PA.UniqueInteractive, 0) UniqueInteractive,
    coalesce(PA.ByCertNumber, 0) ByCertNumber,
    coalesce(PA.ByPassport, 0) ByPassport,
    coalesce(PA.ByTypoNumber, 0) ByTypoNumber,
    coalesce(PA.[Interactive], 0) [Interactive],
    PA.FirstActivated,
    PA.LastActivated,
    PA.FirstRegistered,
    PA.LastRegistered,
    coalesce(PA.AccountsInConsideration, 0) AccountsInConsideration,
    coalesce(PA.DeactivatedAccounts, 0) DeactivatedAccounts,
    coalesce(PA.AccountsOnRegistration, 0) AccountsOnRegistration,
    coalesce(PA.AccountsOnRevision, 0) AccountsOnRevision
from
	Organizations O
    left join 
    (
    select 
    	PA.OrgId,
        PA.FactDate,
	    PA.FirstCheck,
	    PA.LastCheck,
	    PA.UniqueByCertNumber,
	    PA.UniqueByPassport,
	    PA.UniqueByTypoNumber,
	    PA.UniqueInteractive,
	    PA.ByCertNumber,
	    PA.ByPassport,
	    PA.ByTypoNumber,
	    PA.[Interactive],
	    PA.FirstActivated,
	    PA.LastActivated,
	    PA.FirstRegistered,
	    PA.LastRegistered,
	    PA.AccountsInConsideration,
	    PA.DeactivatedAccounts,
	    PA.AccountsOnRegistration,
	    PA.AccountsOnRevision,
        PA.AccountsCount,
        PA.ActivatedAccounts,
        PA.UniqueChecks,
        PA.Incorrect
    from
	    ByPeriodOrgAggregates PA
	    inner join 
	    (
		select
			PA.OrgId,
		    max(PA.FactDate) FactDate
		from
			ByPeriodOrgAggregates PA
		where
			PA.FactDate <= @FactDate
		group by
			PA.OrgId
	    ) A on A.OrgId = PA.OrgId and A.FactDate = PA.FactDate
    ) PA on PA.OrgId = O.OrgId
where
	1 = 1    
'

set @FactDate = GETDATE()

if (@ReportType = 0)
begin
	set @sql = @daySql
end
else begin
	set @sql = @periodSql
end


-- Федеральный округ
if (@FDId != -1) 
begin 
	set @sql = @sql + ' and O.FDId = @FDId '
end

-- Субъект РФ
if (@RegionId != -1) 
begin 
	set @sql = @sql + ' and O.RegionId = @RegionId '
end

-- Тип образовательного учреждения
if (@OrgType != -1) 
begin 
	set @sql = @sql + ' and O.OrgType = @OrgType '
end

-- Вид образовательного учреждения
if (@OrgKind != -1) 
begin 
	set @sql = @sql + ' and O.OrgKind = @OrgKind '
end

-- Организационно-правовая форма
if (@IsPrivate != -1) 
begin 
	set @sql = @sql + ' and O.IsPrivate = @IsPrivate '
end

-- Название организации
if (@OrgName is not null and LEN(@OrgName) != 0) 
begin 
	set @OrgName = '%' + @OrgName + '%'
	set @sql = @sql + ' and (O.ShortName like @OrgName or O.FullName like @OrgName) '
end

-- Является ли филиалом
if (@IsFilial != -1) 
begin 
	if (@IsFilial = 1)
    begin
		set @sql = @sql + ' and O.MainId is not null '
    end
    else begin
		set @sql = @sql + ' and O.MainId is null '
    end
end

-- Признак аккредитации
if (@IsAccredited != -1) 
begin 
	set @sql = @sql + ' and O.IsAccredited = @IsAccredited '
end

-- Учредитель ОУ
if (@DepartmentId != -1) 
begin 
	set @sql = @sql + ' and O.DepartmentId = @DepartmentId '
end

-- ИНН/ОГРН
if (@INN_OGRN is not null and LEN(@INN_OGRN) != 0) 
begin 
	set @sql = @sql + ' and (O.INN = @INN_OGRN or O.OGRN = @INN_OGRN) '
end

-- Подана ли заявка на регистрацию
if (@IsRegister != -1) 
begin 
	if (@IsRegister = 1)
    begin
		set @sql = @sql + ' and O.RegisterDate <= @FactDate '
    end
    else begin
		set @sql = @sql + ' and O.RegisterDate is null '
    end
end


-- Количество пользователей
-- Это потенциальная дырка для sql injection. Надо проверять строку с выражением
if (@AccountsCount is not null and LEN(@AccountsCount) != 0)
begin
	set @sql = @sql + ' and PA.AccountsCount ' + @AccountsCount + ' '
end


-- Пользователей активировано
-- Это потенциальная дырка для sql injection. Надо проверять строку с выражением
if (@ActivatedAccounts is not null and LEN(@ActivatedAccounts) != 0)
begin
	set @sql = @sql + ' and PA.ActivatedAccounts ' + @ActivatedAccounts + ' '
end

-- Уникальных проверок всего
-- Это потенциальная дырка для sql injection. Надо проверять строку с выражением
if (@UniqueChecks is not null and LEN(@UniqueChecks) != 0)
begin
	set @sql = @sql + ' and PA.UniqueChecks ' + @UniqueChecks + ' '
end

-- Неправильных проверок
-- Это потенциальная дырка для sql injection. Надо проверять строку с выражением
if (@Incorrect is not null and LEN(@Incorrect) != 0)
begin
	set @sql = @sql + ' and PA.Incorrect ' + @Incorrect + ' '
end


execute sp_executesql 
	@sql,
    N'
    @FactDate datetime,
    @FDId int,
    @RegionId int,
    @OrgType int,
    @OrgKind int,
    @IsPrivate int,
    @OrgName nvarchar(1000),
    @IsFilial int,
    @IsAccredited int,
    @DepartmentId int,
    @INN_OGRN nvarchar(13)
    ',
    @FactDate,
    @FDId,
    @RegionId,
    @OrgType,
    @OrgKind,
    @IsPrivate,
    @OrgName,
    @IsFilial,
    @IsAccredited,
    @DepartmentId,
    @INN_OGRN
        
end
