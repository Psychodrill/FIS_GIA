//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ege.Check.App.Web.Blanks.CheckAuth {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:ersp:v1", ConfigurationName="CheckAuth.CheckAuthSoap")]
    public interface CheckAuthSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ersp:v1/CheckUserAccess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Ege.Check.App.Web.Blanks.CheckAuth.UserCheckResult CheckUserAccess(string userLogin, string userPassword, int systemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ersp:v1/CheckUserAccess", ReplyAction="*")]
        System.Threading.Tasks.Task<Ege.Check.App.Web.Blanks.CheckAuth.UserCheckResult> CheckUserAccessAsync(string userLogin, string userPassword, int systemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ersp:v1/CheckUserTicket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        Ege.Check.App.Web.Blanks.CheckAuth.UserCheckResult CheckUserTicket(string login, System.Guid receivedUID, int systemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ersp:v1/CheckUserTicket", ReplyAction="*")]
        System.Threading.Tasks.Task<Ege.Check.App.Web.Blanks.CheckAuth.UserCheckResult> CheckUserTicketAsync(string login, System.Guid receivedUID, int systemID);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:ersp:v1")]
    public partial class UserCheckResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int statusIDField;
        
        private string loginField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int StatusID {
            get {
                return this.statusIDField;
            }
            set {
                this.statusIDField = value;
                this.RaisePropertyChanged("StatusID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
                this.RaisePropertyChanged("Login");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CheckAuthSoapChannel : Ege.Check.App.Web.Blanks.CheckAuth.CheckAuthSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckAuthSoapClient : System.ServiceModel.ClientBase<Ege.Check.App.Web.Blanks.CheckAuth.CheckAuthSoap>, Ege.Check.App.Web.Blanks.CheckAuth.CheckAuthSoap {
        
        public CheckAuthSoapClient() {
        }
        
        public CheckAuthSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CheckAuthSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CheckAuthSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CheckAuthSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Ege.Check.App.Web.Blanks.CheckAuth.UserCheckResult CheckUserAccess(string userLogin, string userPassword, int systemID) {
            return base.Channel.CheckUserAccess(userLogin, userPassword, systemID);
        }
        
        public System.Threading.Tasks.Task<Ege.Check.App.Web.Blanks.CheckAuth.UserCheckResult> CheckUserAccessAsync(string userLogin, string userPassword, int systemID) {
            return base.Channel.CheckUserAccessAsync(userLogin, userPassword, systemID);
        }
        
        public Ege.Check.App.Web.Blanks.CheckAuth.UserCheckResult CheckUserTicket(string login, System.Guid receivedUID, int systemID) {
            return base.Channel.CheckUserTicket(login, receivedUID, systemID);
        }
        
        public System.Threading.Tasks.Task<Ege.Check.App.Web.Blanks.CheckAuth.UserCheckResult> CheckUserTicketAsync(string login, System.Guid receivedUID, int systemID) {
            return base.Channel.CheckUserTicketAsync(login, receivedUID, systemID);
        }
    }
}
