//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GVUZ.Data.Model
{
    using System;
    using System.Collections.Generic;
    
    public partial class Application
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Application()
        {
            this.ApplicationCompetitiveGroupItem = new HashSet<ApplicationCompetitiveGroupItem>();
            this.ApplicationCompositionResults = new HashSet<ApplicationCompositionResults>();
            this.ApplicationCompositionResults_Approb = new HashSet<ApplicationCompositionResults_Approb>();
            this.ApplicationConsidered = new HashSet<ApplicationConsidered>();
            this.ApplicationEntranceTestDocument = new HashSet<ApplicationEntranceTestDocument>();
            this.ApplicationEntrantDocument = new HashSet<ApplicationEntrantDocument>();
            this.ApplicationExtra = new HashSet<ApplicationExtra>();
            this.ApplicationSelectedCompetitiveGroup = new HashSet<ApplicationSelectedCompetitiveGroup>();
            this.ApplicationSelectedCompetitiveGroupItem = new HashSet<ApplicationSelectedCompetitiveGroupItem>();
            this.ApplicationSelectedCompetitiveGroupTarget = new HashSet<ApplicationSelectedCompetitiveGroupTarget>();
            this.IndividualAchivement = new HashSet<IndividualAchivement>();
            this.OrderOfAdmissionHistory = new HashSet<OrderOfAdmissionHistory>();
        }
    
        public int ApplicationID { get; set; }
        public int EntrantID { get; set; }
        public System.DateTime RegistrationDate { get; set; }
        public int InstitutionID { get; set; }
        public Nullable<bool> ApproveInstitutionCount { get; set; }
        public Nullable<bool> NeedHostel { get; set; }
        public Nullable<bool> FirstHigherEducation { get; set; }
        public Nullable<bool> ApprovePersonalData { get; set; }
        public Nullable<bool> FamiliarWithLicenseAndRules { get; set; }
        public Nullable<bool> FamiliarWithAdmissionType { get; set; }
        public Nullable<bool> FamiliarWithOriginalDocumentDeliveryDate { get; set; }
        public int StatusID { get; set; }
        public int WizardStepID { get; set; }
        public int ViolationID { get; set; }
        public string StatusDecision { get; set; }
        public Nullable<System.DateTime> LastCheckDate { get; set; }
        public string ViolationErrors { get; set; }
        public Nullable<System.DateTime> PublishDate { get; set; }
        public byte SourceID { get; set; }
        public string ApplicationNumber { get; set; }
        public bool OriginalDocumentsReceived { get; set; }
        public Nullable<int> OrderCompetitiveGroupID { get; set; }
        public Nullable<int> OrderOfAdmissionID { get; set; }
        public Nullable<int> OrderCompetitiveGroupItemID { get; set; }
        public Nullable<decimal> OrderCalculatedRating { get; set; }
        public Nullable<short> OrderCalculatedBenefitID { get; set; }
        public Nullable<short> OrderEducationFormID { get; set; }
        public Nullable<short> OrderEducationSourceID { get; set; }
        public Nullable<System.DateTime> LastDenyDate { get; set; }
        public string UID { get; set; }
        public bool IsRequiresBudgetO { get; set; }
        public bool IsRequiresBudgetOZ { get; set; }
        public bool IsRequiresBudgetZ { get; set; }
        public bool IsRequiresPaidO { get; set; }
        public bool IsRequiresPaidOZ { get; set; }
        public bool IsRequiresPaidZ { get; set; }
        public Nullable<System.DateTime> CreatedDate { get; set; }
        public Nullable<System.DateTime> ModifiedDate { get; set; }
        public Nullable<System.DateTime> OriginalDocumentsReceivedDate { get; set; }
        public Nullable<System.DateTime> LastEgeDocumentsCheckDate { get; set; }
        public Nullable<int> OrderCompetitiveGroupTargetID { get; set; }
        public bool IsRequiresTargetO { get; set; }
        public bool IsRequiresTargetOZ { get; set; }
        public bool IsRequiresTargetZ { get; set; }
        public Nullable<System.Guid> ApplicationGUID { get; set; }
        public Nullable<int> Priority { get; set; }
        public Nullable<int> OrderIdLevelBudget { get; set; }
    
        public virtual AdmissionItemType AdmissionItemType { get; set; }
        public virtual AdmissionItemType AdmissionItemType1 { get; set; }
        public virtual ApplicationStatusType ApplicationStatusType { get; set; }
        public virtual Benefit Benefit { get; set; }
        public virtual CompetitiveGroup CompetitiveGroup { get; set; }
        public virtual CompetitiveGroupItem CompetitiveGroupItem { get; set; }
        public virtual CompetitiveGroupTarget CompetitiveGroupTarget { get; set; }
        public virtual Entrant Entrant { get; set; }
        public virtual Institution Institution { get; set; }
        public virtual LevelBudget LevelBudget { get; set; }
        public virtual OrderOfAdmission OrderOfAdmission { get; set; }
        public virtual ViolationType ViolationType { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ApplicationCompetitiveGroupItem> ApplicationCompetitiveGroupItem { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ApplicationCompositionResults> ApplicationCompositionResults { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ApplicationCompositionResults_Approb> ApplicationCompositionResults_Approb { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ApplicationConsidered> ApplicationConsidered { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ApplicationEntranceTestDocument> ApplicationEntranceTestDocument { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ApplicationEntrantDocument> ApplicationEntrantDocument { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ApplicationExtra> ApplicationExtra { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ApplicationSelectedCompetitiveGroup> ApplicationSelectedCompetitiveGroup { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ApplicationSelectedCompetitiveGroupItem> ApplicationSelectedCompetitiveGroupItem { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ApplicationSelectedCompetitiveGroupTarget> ApplicationSelectedCompetitiveGroupTarget { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<IndividualAchivement> IndividualAchivement { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrderOfAdmissionHistory> OrderOfAdmissionHistory { get; set; }
    }
}
