//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace GVUZ.TestServices.InformationService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="InformationServiceSoap", Namespace="urn:fbd:v1")]
    public partial class InformationService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetEgeInformationOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public InformationService() {
            this.Url = global::GVUZ.TestServices.Properties.Settings.Default.GVUZ_TestServices_InformationService_InformationService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetEgeInformationCompletedEventHandler GetEgeInformationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:fbd:v1/GetEgeInformation", RequestNamespace="urn:fbd:v1", ResponseNamespace="urn:fbd:v1", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EgeResultAndStatus GetEgeInformation(string AppId, EgeParameters AppXml) {
            object[] results = this.Invoke("GetEgeInformation", new object[] {
                        AppId,
                        AppXml});
            return ((EgeResultAndStatus)(results[0]));
        }
        
        /// <remarks/>
        public void GetEgeInformationAsync(string AppId, EgeParameters AppXml) {
            this.GetEgeInformationAsync(AppId, AppXml, null);
        }
        
        /// <remarks/>
        public void GetEgeInformationAsync(string AppId, EgeParameters AppXml, object userState) {
            if ((this.GetEgeInformationOperationCompleted == null)) {
                this.GetEgeInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEgeInformationOperationCompleted);
            }
            this.InvokeAsync("GetEgeInformation", new object[] {
                        AppId,
                        AppXml}, this.GetEgeInformationOperationCompleted, userState);
        }
        
        private void OnGetEgeInformationOperationCompleted(object arg) {
            if ((this.GetEgeInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEgeInformationCompleted(this, new GetEgeInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:fbd:v1")]
    public partial class EgeParameters {
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string patronymicNameField;
        
        private string passportSeriaField;
        
        private string passportNumberField;
        
        private string certificateNumberField;
        
        private string checkCodeField;
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string PatronymicName {
            get {
                return this.patronymicNameField;
            }
            set {
                this.patronymicNameField = value;
            }
        }
        
        /// <remarks/>
        public string PassportSeria {
            get {
                return this.passportSeriaField;
            }
            set {
                this.passportSeriaField = value;
            }
        }
        
        /// <remarks/>
        public string PassportNumber {
            get {
                return this.passportNumberField;
            }
            set {
                this.passportNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CertificateNumber {
            get {
                return this.certificateNumberField;
            }
            set {
                this.certificateNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CheckCode {
            get {
                return this.checkCodeField;
            }
            set {
                this.checkCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:fbd:v1")]
    public partial class Mark {
        
        private string subjectNameField;
        
        private string subjectMarkField;
        
        /// <remarks/>
        public string subjectName {
            get {
                return this.subjectNameField;
            }
            set {
                this.subjectNameField = value;
            }
        }
        
        /// <remarks/>
        public string subjectMark {
            get {
                return this.subjectMarkField;
            }
            set {
                this.subjectMarkField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:fbd:v1")]
    public partial class EgeCertificate {
        
        private int yearField;
        
        private string statusField;
        
        private Mark[] marksField;
        
        /// <remarks/>
        public int year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("mark")]
        public Mark[] marks {
            get {
                return this.marksField;
            }
            set {
                this.marksField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:fbd:v1")]
    public partial class EgeResult {
        
        private EgeCertificate[] certificateField;
        
        private string[] errorsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("certificate")]
        public EgeCertificate[] certificate {
            get {
                return this.certificateField;
            }
            set {
                this.certificateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("error")]
        public string[] errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:fbd:v1")]
    public partial class EgeResultAndStatus {
        
        private string statusCodeField;
        
        private EgeResult resultXmlField;
        
        /// <remarks/>
        public string StatusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        public EgeResult ResultXml {
            get {
                return this.resultXmlField;
            }
            set {
                this.resultXmlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetEgeInformationCompletedEventHandler(object sender, GetEgeInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEgeInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEgeInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EgeResultAndStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EgeResultAndStatus)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591