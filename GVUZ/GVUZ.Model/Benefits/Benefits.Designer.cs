//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BenefitsModel", "FK_BenefitItemC_Benefit", "Benefit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Benefits.Benefit), "BenefitItemC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Benefits.BenefitItemC), true)]
[assembly: EdmRelationshipAttribute("BenefitsModel", "FK_BenefitItemC_OlympicDiplomType", "OlympicDiplomType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Benefits.OlympicDiplomType), "BenefitItemC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Benefits.BenefitItemC), true)]
[assembly: EdmRelationshipAttribute("BenefitsModel", "FK_BenefitItemCOlympicType_BenefitItemC", "BenefitItemC", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Benefits.BenefitItemC), "BenefitItemCOlympicType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Benefits.BenefitItemCOlympicType), true)]
[assembly: EdmRelationshipAttribute("BenefitsModel", "FK_OlympicTypeSubjectLink_Subject", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Benefits.Subject), "OlympicTypeSubjectLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Benefits.OlympicTypeSubjectLink), true)]
[assembly: EdmRelationshipAttribute("BenefitsModel", "FK_AdmissionRules_Institution", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Benefits.Institution), "AdmissionRules", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Benefits.AdmissionRules), true)]
[assembly: EdmRelationshipAttribute("BenefitsModel", "FK_OlympicLevel_OlympicTypeSubjectLink", "OlympicLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.Model.Benefits.OlympicLevel), "OlympicTypeSubjectLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Benefits.OlympicTypeSubjectLink), true)]
[assembly: EdmRelationshipAttribute("BenefitsModel", "FK_BenefitItemCOlympicType_OlympicType", "OlympicType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Benefits.OlympicType), "BenefitItemCOlympicType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Benefits.BenefitItemCOlympicType), true)]
[assembly: EdmRelationshipAttribute("BenefitsModel", "FK_OlympicType_OlympicLevel", "OlympicLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.Model.Benefits.OlympicLevel), "OlympicType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Benefits.OlympicType), true)]
[assembly: EdmRelationshipAttribute("BenefitsModel", "FK_OlympicTypeSubjectLink_OlympicType", "OlympicType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Benefits.OlympicType), "OlympicTypeSubjectLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Benefits.OlympicTypeSubjectLink), true)]
[assembly: EdmRelationshipAttribute("BenefitsModel", "FK_BenefitItemSubject_BenefitItemC1", "BenefitItemC", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Benefits.BenefitItemC), "BenefitItemSubject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Benefits.BenefitItemSubject), true)]
[assembly: EdmRelationshipAttribute("BenefitsModel", "FK_BenefitItemSubject_Subject1", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Benefits.Subject), "BenefitItemSubject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Benefits.BenefitItemSubject), true)]

#endregion

namespace GVUZ.Model.Benefits
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BenefitsEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BenefitsEntities object using the connection string found in the 'BenefitsEntities' section of the application configuration file.
        /// </summary>
        public BenefitsEntities() : base("name=BenefitsEntities", "BenefitsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BenefitsEntities object.
        /// </summary>
        public BenefitsEntities(string connectionString) : base(connectionString, "BenefitsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BenefitsEntities object.
        /// </summary>
        public BenefitsEntities(EntityConnection connection) : base(connection, "BenefitsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Benefit> Benefit
        {
            get
            {
                if ((_Benefit == null))
                {
                    _Benefit = base.CreateObjectSet<Benefit>("Benefit");
                }
                return _Benefit;
            }
        }
        private ObjectSet<Benefit> _Benefit;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OlympicDiplomType> OlympicDiplomType
        {
            get
            {
                if ((_OlympicDiplomType == null))
                {
                    _OlympicDiplomType = base.CreateObjectSet<OlympicDiplomType>("OlympicDiplomType");
                }
                return _OlympicDiplomType;
            }
        }
        private ObjectSet<OlympicDiplomType> _OlympicDiplomType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OlympicLevel> OlympicLevel
        {
            get
            {
                if ((_OlympicLevel == null))
                {
                    _OlympicLevel = base.CreateObjectSet<OlympicLevel>("OlympicLevel");
                }
                return _OlympicLevel;
            }
        }
        private ObjectSet<OlympicLevel> _OlympicLevel;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BenefitItemC> BenefitItemC
        {
            get
            {
                if ((_BenefitItemC == null))
                {
                    _BenefitItemC = base.CreateObjectSet<BenefitItemC>("BenefitItemC");
                }
                return _BenefitItemC;
            }
        }
        private ObjectSet<BenefitItemC> _BenefitItemC;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BenefitItemCOlympicType> BenefitItemCOlympicType
        {
            get
            {
                if ((_BenefitItemCOlympicType == null))
                {
                    _BenefitItemCOlympicType = base.CreateObjectSet<BenefitItemCOlympicType>("BenefitItemCOlympicType");
                }
                return _BenefitItemCOlympicType;
            }
        }
        private ObjectSet<BenefitItemCOlympicType> _BenefitItemCOlympicType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subject> Subject
        {
            get
            {
                if ((_Subject == null))
                {
                    _Subject = base.CreateObjectSet<Subject>("Subject");
                }
                return _Subject;
            }
        }
        private ObjectSet<Subject> _Subject;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Institution> Institution
        {
            get
            {
                if ((_Institution == null))
                {
                    _Institution = base.CreateObjectSet<Institution>("Institution");
                }
                return _Institution;
            }
        }
        private ObjectSet<Institution> _Institution;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OlympicTypeSubjectLink> OlympicTypeSubjectLink
        {
            get
            {
                if ((_OlympicTypeSubjectLink == null))
                {
                    _OlympicTypeSubjectLink = base.CreateObjectSet<OlympicTypeSubjectLink>("OlympicTypeSubjectLink");
                }
                return _OlympicTypeSubjectLink;
            }
        }
        private ObjectSet<OlympicTypeSubjectLink> _OlympicTypeSubjectLink;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdmissionRules> AdmissionRules
        {
            get
            {
                if ((_AdmissionRules == null))
                {
                    _AdmissionRules = base.CreateObjectSet<AdmissionRules>("AdmissionRules");
                }
                return _AdmissionRules;
            }
        }
        private ObjectSet<AdmissionRules> _AdmissionRules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OlympicType> OlympicType
        {
            get
            {
                if ((_OlympicType == null))
                {
                    _OlympicType = base.CreateObjectSet<OlympicType>("OlympicType");
                }
                return _OlympicType;
            }
        }
        private ObjectSet<OlympicType> _OlympicType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BenefitItemSubject> BenefitItemSubject
        {
            get
            {
                if ((_BenefitItemSubject == null))
                {
                    _BenefitItemSubject = base.CreateObjectSet<BenefitItemSubject>("BenefitItemSubject");
                }
                return _BenefitItemSubject;
            }
        }
        private ObjectSet<BenefitItemSubject> _BenefitItemSubject;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GlobalMinEge> GlobalMinEge
        {
            get
            {
                if ((_GlobalMinEge == null))
                {
                    _GlobalMinEge = base.CreateObjectSet<GlobalMinEge>("GlobalMinEge");
                }
                return _GlobalMinEge;
            }
        }
        private ObjectSet<GlobalMinEge> _GlobalMinEge;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Benefit EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBenefit(Benefit benefit)
        {
            base.AddObject("Benefit", benefit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OlympicDiplomType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOlympicDiplomType(OlympicDiplomType olympicDiplomType)
        {
            base.AddObject("OlympicDiplomType", olympicDiplomType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OlympicLevel EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOlympicLevel(OlympicLevel olympicLevel)
        {
            base.AddObject("OlympicLevel", olympicLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BenefitItemC EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBenefitItemC(BenefitItemC benefitItemC)
        {
            base.AddObject("BenefitItemC", benefitItemC);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BenefitItemCOlympicType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBenefitItemCOlympicType(BenefitItemCOlympicType benefitItemCOlympicType)
        {
            base.AddObject("BenefitItemCOlympicType", benefitItemCOlympicType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subject EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubject(Subject subject)
        {
            base.AddObject("Subject", subject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Institution EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstitution(Institution institution)
        {
            base.AddObject("Institution", institution);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OlympicTypeSubjectLink EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOlympicTypeSubjectLink(OlympicTypeSubjectLink olympicTypeSubjectLink)
        {
            base.AddObject("OlympicTypeSubjectLink", olympicTypeSubjectLink);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdmissionRules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdmissionRules(AdmissionRules admissionRules)
        {
            base.AddObject("AdmissionRules", admissionRules);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OlympicType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOlympicType(OlympicType olympicType)
        {
            base.AddObject("OlympicType", olympicType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BenefitItemSubject EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBenefitItemSubject(BenefitItemSubject benefitItemSubject)
        {
            base.AddObject("BenefitItemSubject", benefitItemSubject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GlobalMinEge EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGlobalMinEge(GlobalMinEge globalMinEge)
        {
            base.AddObject("GlobalMinEge", globalMinEge);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BenefitsModel", Name="AdmissionRules")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdmissionRules : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdmissionRules object.
        /// </summary>
        /// <param name="recordID">Initial value of the RecordID property.</param>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="mimeType">Initial value of the MimeType property.</param>
        /// <param name="file">Initial value of the File property.</param>
        public static AdmissionRules CreateAdmissionRules(global::System.Int32 recordID, global::System.Int32 institutionID, global::System.Int32 year, global::System.String fileName, global::System.String mimeType, global::System.Byte[] file)
        {
            AdmissionRules admissionRules = new AdmissionRules();
            admissionRules.RecordID = recordID;
            admissionRules.InstitutionID = institutionID;
            admissionRules.Year = year;
            admissionRules.FileName = fileName;
            admissionRules.MimeType = mimeType;
            admissionRules.File = file;
            return admissionRules;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecordID
        {
            get
            {
                return _RecordID;
            }
            set
            {
                if (_RecordID != value)
                {
                    OnRecordIDChanging(value);
                    ReportPropertyChanging("RecordID");
                    _RecordID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RecordID");
                    OnRecordIDChanged();
                }
            }
        }
        private global::System.Int32 _RecordID;
        partial void OnRecordIDChanging(global::System.Int32 value);
        partial void OnRecordIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                OnInstitutionIDChanging(value);
                ReportPropertyChanging("InstitutionID");
                _InstitutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionID");
                OnInstitutionIDChanged();
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MimeType
        {
            get
            {
                return _MimeType;
            }
            set
            {
                OnMimeTypeChanging(value);
                ReportPropertyChanging("MimeType");
                _MimeType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MimeType");
                OnMimeTypeChanged();
            }
        }
        private global::System.String _MimeType;
        partial void OnMimeTypeChanging(global::System.String value);
        partial void OnMimeTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] File
        {
            get
            {
                return StructuralObject.GetValidValue(_File);
            }
            set
            {
                OnFileChanging(value);
                ReportPropertyChanging("File");
                _File = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("File");
                OnFileChanged();
            }
        }
        private global::System.Byte[] _File;
        partial void OnFileChanging(global::System.Byte[] value);
        partial void OnFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationDate;
        partial void OnCreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChangeDate;
        partial void OnChangeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnChangeDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_AdmissionRules_Institution", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("BenefitsModel.FK_AdmissionRules_Institution", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("BenefitsModel.FK_AdmissionRules_Institution", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("BenefitsModel.FK_AdmissionRules_Institution", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("BenefitsModel.FK_AdmissionRules_Institution", "Institution", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BenefitsModel", Name="Benefit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Benefit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Benefit object.
        /// </summary>
        /// <param name="benefitID">Initial value of the BenefitID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="shortName">Initial value of the ShortName property.</param>
        public static Benefit CreateBenefit(global::System.Int16 benefitID, global::System.String name, global::System.String shortName)
        {
            Benefit benefit = new Benefit();
            benefit.BenefitID = benefitID;
            benefit.Name = name;
            benefit.ShortName = shortName;
            return benefit;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 BenefitID
        {
            get
            {
                return _BenefitID;
            }
            set
            {
                if (_BenefitID != value)
                {
                    OnBenefitIDChanging(value);
                    ReportPropertyChanging("BenefitID");
                    _BenefitID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BenefitID");
                    OnBenefitIDChanged();
                }
            }
        }
        private global::System.Int16 _BenefitID;
        partial void OnBenefitIDChanging(global::System.Int16 value);
        partial void OnBenefitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_BenefitItemC_Benefit", "BenefitItemC")]
        public EntityCollection<BenefitItemC> BenefitItemC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitItemC>("BenefitsModel.FK_BenefitItemC_Benefit", "BenefitItemC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitItemC>("BenefitsModel.FK_BenefitItemC_Benefit", "BenefitItemC", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BenefitsModel", Name="BenefitItemC")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BenefitItemC : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BenefitItemC object.
        /// </summary>
        /// <param name="benefitItemID">Initial value of the BenefitItemID property.</param>
        /// <param name="olympicDiplomTypeID">Initial value of the OlympicDiplomTypeID property.</param>
        /// <param name="olympicLevelFlags">Initial value of the OlympicLevelFlags property.</param>
        /// <param name="benefitID">Initial value of the BenefitID property.</param>
        /// <param name="isForAllOlympic">Initial value of the IsForAllOlympic property.</param>
        /// <param name="isProfileSubject">Initial value of the IsProfileSubject property.</param>
        /// <param name="competitiveGroupID">Initial value of the CompetitiveGroupID property.</param>
        /// <param name="olympicYear">Initial value of the OlympicYear property.</param>
        public static BenefitItemC CreateBenefitItemC(global::System.Int32 benefitItemID, global::System.Int16 olympicDiplomTypeID, global::System.Int16 olympicLevelFlags, global::System.Int16 benefitID, global::System.Boolean isForAllOlympic, global::System.Boolean isProfileSubject, global::System.Int32 competitiveGroupID, global::System.Int32 olympicYear)
        {
            BenefitItemC benefitItemC = new BenefitItemC();
            benefitItemC.BenefitItemID = benefitItemID;
            benefitItemC.OlympicDiplomTypeID = olympicDiplomTypeID;
            benefitItemC.OlympicLevelFlags = olympicLevelFlags;
            benefitItemC.BenefitID = benefitID;
            benefitItemC.IsForAllOlympic = isForAllOlympic;
            benefitItemC.IsProfileSubject = isProfileSubject;
            benefitItemC.CompetitiveGroupID = competitiveGroupID;
            benefitItemC.OlympicYear = olympicYear;
            return benefitItemC;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenefitItemID
        {
            get
            {
                return _BenefitItemID;
            }
            set
            {
                if (_BenefitItemID != value)
                {
                    OnBenefitItemIDChanging(value);
                    ReportPropertyChanging("BenefitItemID");
                    _BenefitItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BenefitItemID");
                    OnBenefitItemIDChanged();
                }
            }
        }
        private global::System.Int32 _BenefitItemID;
        partial void OnBenefitItemIDChanging(global::System.Int32 value);
        partial void OnBenefitItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EntranceTestItemID
        {
            get
            {
                return _EntranceTestItemID;
            }
            set
            {
                OnEntranceTestItemIDChanging(value);
                ReportPropertyChanging("EntranceTestItemID");
                _EntranceTestItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntranceTestItemID");
                OnEntranceTestItemIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EntranceTestItemID;
        partial void OnEntranceTestItemIDChanging(Nullable<global::System.Int32> value);
        partial void OnEntranceTestItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 OlympicDiplomTypeID
        {
            get
            {
                return _OlympicDiplomTypeID;
            }
            set
            {
                OnOlympicDiplomTypeIDChanging(value);
                ReportPropertyChanging("OlympicDiplomTypeID");
                _OlympicDiplomTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympicDiplomTypeID");
                OnOlympicDiplomTypeIDChanged();
            }
        }
        private global::System.Int16 _OlympicDiplomTypeID;
        partial void OnOlympicDiplomTypeIDChanging(global::System.Int16 value);
        partial void OnOlympicDiplomTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 OlympicLevelFlags
        {
            get
            {
                return _OlympicLevelFlags;
            }
            set
            {
                OnOlympicLevelFlagsChanging(value);
                ReportPropertyChanging("OlympicLevelFlags");
                _OlympicLevelFlags = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympicLevelFlags");
                OnOlympicLevelFlagsChanged();
            }
        }
        private global::System.Int16 _OlympicLevelFlags;
        partial void OnOlympicLevelFlagsChanging(global::System.Int16 value);
        partial void OnOlympicLevelFlagsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 BenefitID
        {
            get
            {
                return _BenefitID;
            }
            set
            {
                OnBenefitIDChanging(value);
                ReportPropertyChanging("BenefitID");
                _BenefitID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenefitID");
                OnBenefitIDChanged();
            }
        }
        private global::System.Int16 _BenefitID;
        partial void OnBenefitIDChanging(global::System.Int16 value);
        partial void OnBenefitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsForAllOlympic
        {
            get
            {
                return _IsForAllOlympic;
            }
            set
            {
                OnIsForAllOlympicChanging(value);
                ReportPropertyChanging("IsForAllOlympic");
                _IsForAllOlympic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsForAllOlympic");
                OnIsForAllOlympicChanged();
            }
        }
        private global::System.Boolean _IsForAllOlympic;
        partial void OnIsForAllOlympicChanging(global::System.Boolean value);
        partial void OnIsForAllOlympicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsProfileSubject
        {
            get
            {
                return _IsProfileSubject;
            }
            set
            {
                OnIsProfileSubjectChanging(value);
                ReportPropertyChanging("IsProfileSubject");
                _IsProfileSubject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsProfileSubject");
                OnIsProfileSubjectChanged();
            }
        }
        private global::System.Boolean _IsProfileSubject;
        partial void OnIsProfileSubjectChanging(global::System.Boolean value);
        partial void OnIsProfileSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitiveGroupID
        {
            get
            {
                return _CompetitiveGroupID;
            }
            set
            {
                OnCompetitiveGroupIDChanging(value);
                ReportPropertyChanging("CompetitiveGroupID");
                _CompetitiveGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitiveGroupID");
                OnCompetitiveGroupIDChanged();
            }
        }
        private global::System.Int32 _CompetitiveGroupID;
        partial void OnCompetitiveGroupIDChanging(global::System.Int32 value);
        partial void OnCompetitiveGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.String _UID;
        partial void OnUIDChanging(global::System.String value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OlympicYear
        {
            get
            {
                return _OlympicYear;
            }
            set
            {
                OnOlympicYearChanging(value);
                ReportPropertyChanging("OlympicYear");
                _OlympicYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympicYear");
                OnOlympicYearChanged();
            }
        }
        private global::System.Int32 _OlympicYear;
        partial void OnOlympicYearChanging(global::System.Int32 value);
        partial void OnOlympicYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EgeMinValue
        {
            get
            {
                return _EgeMinValue;
            }
            set
            {
                OnEgeMinValueChanging(value);
                ReportPropertyChanging("EgeMinValue");
                _EgeMinValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EgeMinValue");
                OnEgeMinValueChanged();
            }
        }
        private Nullable<global::System.Int32> _EgeMinValue;
        partial void OnEgeMinValueChanging(Nullable<global::System.Int32> value);
        partial void OnEgeMinValueChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_BenefitItemC_Benefit", "Benefit")]
        public Benefit Benefit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Benefit>("BenefitsModel.FK_BenefitItemC_Benefit", "Benefit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Benefit>("BenefitsModel.FK_BenefitItemC_Benefit", "Benefit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Benefit> BenefitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Benefit>("BenefitsModel.FK_BenefitItemC_Benefit", "Benefit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Benefit>("BenefitsModel.FK_BenefitItemC_Benefit", "Benefit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_BenefitItemC_OlympicDiplomType", "OlympicDiplomType")]
        public OlympicDiplomType OlympicDiplomType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicDiplomType>("BenefitsModel.FK_BenefitItemC_OlympicDiplomType", "OlympicDiplomType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicDiplomType>("BenefitsModel.FK_BenefitItemC_OlympicDiplomType", "OlympicDiplomType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OlympicDiplomType> OlympicDiplomTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicDiplomType>("BenefitsModel.FK_BenefitItemC_OlympicDiplomType", "OlympicDiplomType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OlympicDiplomType>("BenefitsModel.FK_BenefitItemC_OlympicDiplomType", "OlympicDiplomType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_BenefitItemCOlympicType_BenefitItemC", "BenefitItemCOlympicType")]
        public EntityCollection<BenefitItemCOlympicType> BenefitItemCOlympicType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitItemCOlympicType>("BenefitsModel.FK_BenefitItemCOlympicType_BenefitItemC", "BenefitItemCOlympicType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitItemCOlympicType>("BenefitsModel.FK_BenefitItemCOlympicType_BenefitItemC", "BenefitItemCOlympicType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_BenefitItemSubject_BenefitItemC1", "BenefitItemSubject")]
        public EntityCollection<BenefitItemSubject> BenefitItemSubject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitItemSubject>("BenefitsModel.FK_BenefitItemSubject_BenefitItemC1", "BenefitItemSubject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitItemSubject>("BenefitsModel.FK_BenefitItemSubject_BenefitItemC1", "BenefitItemSubject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BenefitsModel", Name="BenefitItemCOlympicType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BenefitItemCOlympicType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BenefitItemCOlympicType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="benefitItemID">Initial value of the BenefitItemID property.</param>
        /// <param name="olympicTypeID">Initial value of the OlympicTypeID property.</param>
        public static BenefitItemCOlympicType CreateBenefitItemCOlympicType(global::System.Int32 id, global::System.Int32 benefitItemID, global::System.Int32 olympicTypeID)
        {
            BenefitItemCOlympicType benefitItemCOlympicType = new BenefitItemCOlympicType();
            benefitItemCOlympicType.ID = id;
            benefitItemCOlympicType.BenefitItemID = benefitItemID;
            benefitItemCOlympicType.OlympicTypeID = olympicTypeID;
            return benefitItemCOlympicType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenefitItemID
        {
            get
            {
                return _BenefitItemID;
            }
            set
            {
                OnBenefitItemIDChanging(value);
                ReportPropertyChanging("BenefitItemID");
                _BenefitItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenefitItemID");
                OnBenefitItemIDChanged();
            }
        }
        private global::System.Int32 _BenefitItemID;
        partial void OnBenefitItemIDChanging(global::System.Int32 value);
        partial void OnBenefitItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OlympicTypeID
        {
            get
            {
                return _OlympicTypeID;
            }
            set
            {
                OnOlympicTypeIDChanging(value);
                ReportPropertyChanging("OlympicTypeID");
                _OlympicTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympicTypeID");
                OnOlympicTypeIDChanged();
            }
        }
        private global::System.Int32 _OlympicTypeID;
        partial void OnOlympicTypeIDChanging(global::System.Int32 value);
        partial void OnOlympicTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_BenefitItemCOlympicType_BenefitItemC", "BenefitItemC")]
        public BenefitItemC BenefitItemC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitItemC>("BenefitsModel.FK_BenefitItemCOlympicType_BenefitItemC", "BenefitItemC").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitItemC>("BenefitsModel.FK_BenefitItemCOlympicType_BenefitItemC", "BenefitItemC").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BenefitItemC> BenefitItemCReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitItemC>("BenefitsModel.FK_BenefitItemCOlympicType_BenefitItemC", "BenefitItemC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BenefitItemC>("BenefitsModel.FK_BenefitItemCOlympicType_BenefitItemC", "BenefitItemC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_BenefitItemCOlympicType_OlympicType", "OlympicType")]
        public OlympicType OlympicType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicType>("BenefitsModel.FK_BenefitItemCOlympicType_OlympicType", "OlympicType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicType>("BenefitsModel.FK_BenefitItemCOlympicType_OlympicType", "OlympicType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OlympicType> OlympicTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicType>("BenefitsModel.FK_BenefitItemCOlympicType_OlympicType", "OlympicType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OlympicType>("BenefitsModel.FK_BenefitItemCOlympicType_OlympicType", "OlympicType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BenefitsModel", Name="BenefitItemSubject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BenefitItemSubject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BenefitItemSubject object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="benefitItemId">Initial value of the BenefitItemId property.</param>
        /// <param name="subjectId">Initial value of the SubjectId property.</param>
        /// <param name="egeMinValue">Initial value of the EgeMinValue property.</param>
        public static BenefitItemSubject CreateBenefitItemSubject(global::System.Int32 id, global::System.Int32 benefitItemId, global::System.Int32 subjectId, global::System.Int32 egeMinValue)
        {
            BenefitItemSubject benefitItemSubject = new BenefitItemSubject();
            benefitItemSubject.Id = id;
            benefitItemSubject.BenefitItemId = benefitItemId;
            benefitItemSubject.SubjectId = subjectId;
            benefitItemSubject.EgeMinValue = egeMinValue;
            return benefitItemSubject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenefitItemId
        {
            get
            {
                return _BenefitItemId;
            }
            set
            {
                OnBenefitItemIdChanging(value);
                ReportPropertyChanging("BenefitItemId");
                _BenefitItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenefitItemId");
                OnBenefitItemIdChanged();
            }
        }
        private global::System.Int32 _BenefitItemId;
        partial void OnBenefitItemIdChanging(global::System.Int32 value);
        partial void OnBenefitItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectId
        {
            get
            {
                return _SubjectId;
            }
            set
            {
                OnSubjectIdChanging(value);
                ReportPropertyChanging("SubjectId");
                _SubjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectId");
                OnSubjectIdChanged();
            }
        }
        private global::System.Int32 _SubjectId;
        partial void OnSubjectIdChanging(global::System.Int32 value);
        partial void OnSubjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EgeMinValue
        {
            get
            {
                return _EgeMinValue;
            }
            set
            {
                OnEgeMinValueChanging(value);
                ReportPropertyChanging("EgeMinValue");
                _EgeMinValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EgeMinValue");
                OnEgeMinValueChanged();
            }
        }
        private global::System.Int32 _EgeMinValue;
        partial void OnEgeMinValueChanging(global::System.Int32 value);
        partial void OnEgeMinValueChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_BenefitItemSubject_BenefitItemC1", "BenefitItemC")]
        public BenefitItemC BenefitItemC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitItemC>("BenefitsModel.FK_BenefitItemSubject_BenefitItemC1", "BenefitItemC").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitItemC>("BenefitsModel.FK_BenefitItemSubject_BenefitItemC1", "BenefitItemC").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BenefitItemC> BenefitItemCReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitItemC>("BenefitsModel.FK_BenefitItemSubject_BenefitItemC1", "BenefitItemC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BenefitItemC>("BenefitsModel.FK_BenefitItemSubject_BenefitItemC1", "BenefitItemC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_BenefitItemSubject_Subject1", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("BenefitsModel.FK_BenefitItemSubject_Subject1", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("BenefitsModel.FK_BenefitItemSubject_Subject1", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("BenefitsModel.FK_BenefitItemSubject_Subject1", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("BenefitsModel.FK_BenefitItemSubject_Subject1", "Subject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BenefitsModel", Name="GlobalMinEge")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GlobalMinEge : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GlobalMinEge object.
        /// </summary>
        /// <param name="egeYear">Initial value of the EgeYear property.</param>
        /// <param name="minEgeScore">Initial value of the MinEgeScore property.</param>
        public static GlobalMinEge CreateGlobalMinEge(global::System.Int32 egeYear, global::System.Int32 minEgeScore)
        {
            GlobalMinEge globalMinEge = new GlobalMinEge();
            globalMinEge.EgeYear = egeYear;
            globalMinEge.MinEgeScore = minEgeScore;
            return globalMinEge;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EgeYear
        {
            get
            {
                return _EgeYear;
            }
            set
            {
                if (_EgeYear != value)
                {
                    OnEgeYearChanging(value);
                    ReportPropertyChanging("EgeYear");
                    _EgeYear = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EgeYear");
                    OnEgeYearChanged();
                }
            }
        }
        private global::System.Int32 _EgeYear;
        partial void OnEgeYearChanging(global::System.Int32 value);
        partial void OnEgeYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinEgeScore
        {
            get
            {
                return _MinEgeScore;
            }
            set
            {
                OnMinEgeScoreChanging(value);
                ReportPropertyChanging("MinEgeScore");
                _MinEgeScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinEgeScore");
                OnMinEgeScoreChanged();
            }
        }
        private global::System.Int32 _MinEgeScore;
        partial void OnMinEgeScoreChanging(global::System.Int32 value);
        partial void OnMinEgeScoreChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BenefitsModel", Name="Institution")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Institution : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Institution object.
        /// </summary>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        /// <param name="institutionTypeID">Initial value of the InstitutionTypeID property.</param>
        /// <param name="hasMilitaryDepartment">Initial value of the HasMilitaryDepartment property.</param>
        /// <param name="hasHostel">Initial value of the HasHostel property.</param>
        /// <param name="hasHostelForEntrants">Initial value of the HasHostelForEntrants property.</param>
        /// <param name="oGRN">Initial value of the OGRN property.</param>
        public static Institution CreateInstitution(global::System.Int32 institutionID, global::System.Int16 institutionTypeID, global::System.Boolean hasMilitaryDepartment, global::System.Boolean hasHostel, global::System.Boolean hasHostelForEntrants, global::System.String oGRN)
        {
            Institution institution = new Institution();
            institution.InstitutionID = institutionID;
            institution.InstitutionTypeID = institutionTypeID;
            institution.HasMilitaryDepartment = hasMilitaryDepartment;
            institution.HasHostel = hasHostel;
            institution.HasHostelForEntrants = hasHostelForEntrants;
            institution.OGRN = oGRN;
            return institution;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                if (_InstitutionID != value)
                {
                    OnInstitutionIDChanging(value);
                    ReportPropertyChanging("InstitutionID");
                    _InstitutionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstitutionID");
                    OnInstitutionIDChanged();
                }
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 InstitutionTypeID
        {
            get
            {
                return _InstitutionTypeID;
            }
            set
            {
                OnInstitutionTypeIDChanging(value);
                ReportPropertyChanging("InstitutionTypeID");
                _InstitutionTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionTypeID");
                OnInstitutionTypeIDChanged();
            }
        }
        private global::System.Int16 _InstitutionTypeID;
        partial void OnInstitutionTypeIDChanging(global::System.Int16 value);
        partial void OnInstitutionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BriefName
        {
            get
            {
                return _BriefName;
            }
            set
            {
                OnBriefNameChanging(value);
                ReportPropertyChanging("BriefName");
                _BriefName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BriefName");
                OnBriefNameChanged();
            }
        }
        private global::System.String _BriefName;
        partial void OnBriefNameChanging(global::System.String value);
        partial void OnBriefNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FormOfLawID
        {
            get
            {
                return _FormOfLawID;
            }
            set
            {
                OnFormOfLawIDChanging(value);
                ReportPropertyChanging("FormOfLawID");
                _FormOfLawID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormOfLawID");
                OnFormOfLawIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FormOfLawID;
        partial void OnFormOfLawIDChanging(Nullable<global::System.Int32> value);
        partial void OnFormOfLawIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegionID
        {
            get
            {
                return _RegionID;
            }
            set
            {
                OnRegionIDChanging(value);
                ReportPropertyChanging("RegionID");
                _RegionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionID");
                OnRegionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RegionID;
        partial void OnRegionIDChanging(Nullable<global::System.Int32> value);
        partial void OnRegionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Site
        {
            get
            {
                return _Site;
            }
            set
            {
                OnSiteChanging(value);
                ReportPropertyChanging("Site");
                _Site = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Site");
                OnSiteChanged();
            }
        }
        private global::System.String _Site;
        partial void OnSiteChanging(global::System.String value);
        partial void OnSiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasMilitaryDepartment
        {
            get
            {
                return _HasMilitaryDepartment;
            }
            set
            {
                OnHasMilitaryDepartmentChanging(value);
                ReportPropertyChanging("HasMilitaryDepartment");
                _HasMilitaryDepartment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasMilitaryDepartment");
                OnHasMilitaryDepartmentChanged();
            }
        }
        private global::System.Boolean _HasMilitaryDepartment;
        partial void OnHasMilitaryDepartmentChanging(global::System.Boolean value);
        partial void OnHasMilitaryDepartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasHostel
        {
            get
            {
                return _HasHostel;
            }
            set
            {
                OnHasHostelChanging(value);
                ReportPropertyChanging("HasHostel");
                _HasHostel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasHostel");
                OnHasHostelChanged();
            }
        }
        private global::System.Boolean _HasHostel;
        partial void OnHasHostelChanging(global::System.Boolean value);
        partial void OnHasHostelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HostelCapacity
        {
            get
            {
                return _HostelCapacity;
            }
            set
            {
                OnHostelCapacityChanging(value);
                ReportPropertyChanging("HostelCapacity");
                _HostelCapacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HostelCapacity");
                OnHostelCapacityChanged();
            }
        }
        private Nullable<global::System.Int32> _HostelCapacity;
        partial void OnHostelCapacityChanging(Nullable<global::System.Int32> value);
        partial void OnHostelCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasHostelForEntrants
        {
            get
            {
                return _HasHostelForEntrants;
            }
            set
            {
                OnHasHostelForEntrantsChanging(value);
                ReportPropertyChanging("HasHostelForEntrants");
                _HasHostelForEntrants = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasHostelForEntrants");
                OnHasHostelForEntrantsChanged();
            }
        }
        private global::System.Boolean _HasHostelForEntrants;
        partial void OnHasHostelForEntrantsChanging(global::System.Boolean value);
        partial void OnHasHostelForEntrantsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HostelAttachmentID
        {
            get
            {
                return _HostelAttachmentID;
            }
            set
            {
                OnHostelAttachmentIDChanging(value);
                ReportPropertyChanging("HostelAttachmentID");
                _HostelAttachmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HostelAttachmentID");
                OnHostelAttachmentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _HostelAttachmentID;
        partial void OnHostelAttachmentIDChanging(Nullable<global::System.Int32> value);
        partial void OnHostelAttachmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String INN
        {
            get
            {
                return _INN;
            }
            set
            {
                OnINNChanging(value);
                ReportPropertyChanging("INN");
                _INN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("INN");
                OnINNChanged();
            }
        }
        private global::System.String _INN;
        partial void OnINNChanging(global::System.String value);
        partial void OnINNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OGRN
        {
            get
            {
                return _OGRN;
            }
            set
            {
                OnOGRNChanging(value);
                ReportPropertyChanging("OGRN");
                _OGRN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OGRN");
                OnOGRNChanged();
            }
        }
        private global::System.String _OGRN;
        partial void OnOGRNChanging(global::System.String value);
        partial void OnOGRNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AdmissionStructurePublishDate
        {
            get
            {
                return _AdmissionStructurePublishDate;
            }
            set
            {
                OnAdmissionStructurePublishDateChanging(value);
                ReportPropertyChanging("AdmissionStructurePublishDate");
                _AdmissionStructurePublishDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmissionStructurePublishDate");
                OnAdmissionStructurePublishDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AdmissionStructurePublishDate;
        partial void OnAdmissionStructurePublishDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAdmissionStructurePublishDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReceivingApplicationDate
        {
            get
            {
                return _ReceivingApplicationDate;
            }
            set
            {
                OnReceivingApplicationDateChanging(value);
                ReportPropertyChanging("ReceivingApplicationDate");
                _ReceivingApplicationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivingApplicationDate");
                OnReceivingApplicationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReceivingApplicationDate;
        partial void OnReceivingApplicationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReceivingApplicationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EsrpOrgID
        {
            get
            {
                return _EsrpOrgID;
            }
            set
            {
                OnEsrpOrgIDChanging(value);
                ReportPropertyChanging("EsrpOrgID");
                _EsrpOrgID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EsrpOrgID");
                OnEsrpOrgIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EsrpOrgID;
        partial void OnEsrpOrgIDChanging(Nullable<global::System.Int32> value);
        partial void OnEsrpOrgIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerDepartment
        {
            get
            {
                return _OwnerDepartment;
            }
            set
            {
                OnOwnerDepartmentChanging(value);
                ReportPropertyChanging("OwnerDepartment");
                _OwnerDepartment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OwnerDepartment");
                OnOwnerDepartmentChanged();
            }
        }
        private global::System.String _OwnerDepartment;
        partial void OnOwnerDepartmentChanging(global::System.String value);
        partial void OnOwnerDepartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MainEsrpOrgId
        {
            get
            {
                return _MainEsrpOrgId;
            }
            set
            {
                OnMainEsrpOrgIdChanging(value);
                ReportPropertyChanging("MainEsrpOrgId");
                _MainEsrpOrgId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MainEsrpOrgId");
                OnMainEsrpOrgIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MainEsrpOrgId;
        partial void OnMainEsrpOrgIdChanging(Nullable<global::System.Int32> value);
        partial void OnMainEsrpOrgIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FounderEsrpOrgId
        {
            get
            {
                return _FounderEsrpOrgId;
            }
            set
            {
                OnFounderEsrpOrgIdChanging(value);
                ReportPropertyChanging("FounderEsrpOrgId");
                _FounderEsrpOrgId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FounderEsrpOrgId");
                OnFounderEsrpOrgIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FounderEsrpOrgId;
        partial void OnFounderEsrpOrgIdChanging(Nullable<global::System.Int32> value);
        partial void OnFounderEsrpOrgIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_AdmissionRules_Institution", "AdmissionRules")]
        public EntityCollection<AdmissionRules> AdmissionRules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdmissionRules>("BenefitsModel.FK_AdmissionRules_Institution", "AdmissionRules");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdmissionRules>("BenefitsModel.FK_AdmissionRules_Institution", "AdmissionRules", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BenefitsModel", Name="OlympicDiplomType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OlympicDiplomType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OlympicDiplomType object.
        /// </summary>
        /// <param name="olympicDiplomTypeID">Initial value of the OlympicDiplomTypeID property.</param>
        public static OlympicDiplomType CreateOlympicDiplomType(global::System.Int16 olympicDiplomTypeID)
        {
            OlympicDiplomType olympicDiplomType = new OlympicDiplomType();
            olympicDiplomType.OlympicDiplomTypeID = olympicDiplomTypeID;
            return olympicDiplomType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 OlympicDiplomTypeID
        {
            get
            {
                return _OlympicDiplomTypeID;
            }
            set
            {
                if (_OlympicDiplomTypeID != value)
                {
                    OnOlympicDiplomTypeIDChanging(value);
                    ReportPropertyChanging("OlympicDiplomTypeID");
                    _OlympicDiplomTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OlympicDiplomTypeID");
                    OnOlympicDiplomTypeIDChanged();
                }
            }
        }
        private global::System.Int16 _OlympicDiplomTypeID;
        partial void OnOlympicDiplomTypeIDChanging(global::System.Int16 value);
        partial void OnOlympicDiplomTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_BenefitItemC_OlympicDiplomType", "BenefitItemC")]
        public EntityCollection<BenefitItemC> BenefitItemC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitItemC>("BenefitsModel.FK_BenefitItemC_OlympicDiplomType", "BenefitItemC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitItemC>("BenefitsModel.FK_BenefitItemC_OlympicDiplomType", "BenefitItemC", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BenefitsModel", Name="OlympicLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OlympicLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OlympicLevel object.
        /// </summary>
        /// <param name="olympicLevelID">Initial value of the OlympicLevelID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static OlympicLevel CreateOlympicLevel(global::System.Int16 olympicLevelID, global::System.String name)
        {
            OlympicLevel olympicLevel = new OlympicLevel();
            olympicLevel.OlympicLevelID = olympicLevelID;
            olympicLevel.Name = name;
            return olympicLevel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 OlympicLevelID
        {
            get
            {
                return _OlympicLevelID;
            }
            set
            {
                if (_OlympicLevelID != value)
                {
                    OnOlympicLevelIDChanging(value);
                    ReportPropertyChanging("OlympicLevelID");
                    _OlympicLevelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OlympicLevelID");
                    OnOlympicLevelIDChanged();
                }
            }
        }
        private global::System.Int16 _OlympicLevelID;
        partial void OnOlympicLevelIDChanging(global::System.Int16 value);
        partial void OnOlympicLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_OlympicLevel_OlympicTypeSubjectLink", "OlympicTypeSubjectLink")]
        public EntityCollection<OlympicTypeSubjectLink> OlympicTypeSubjectLink
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OlympicTypeSubjectLink>("BenefitsModel.FK_OlympicLevel_OlympicTypeSubjectLink", "OlympicTypeSubjectLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OlympicTypeSubjectLink>("BenefitsModel.FK_OlympicLevel_OlympicTypeSubjectLink", "OlympicTypeSubjectLink", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_OlympicType_OlympicLevel", "OlympicType")]
        public EntityCollection<OlympicType> OlympicType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OlympicType>("BenefitsModel.FK_OlympicType_OlympicLevel", "OlympicType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OlympicType>("BenefitsModel.FK_OlympicType_OlympicLevel", "OlympicType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BenefitsModel", Name="OlympicType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OlympicType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OlympicType object.
        /// </summary>
        /// <param name="olympicID">Initial value of the OlympicID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="organizerName">Initial value of the OrganizerName property.</param>
        /// <param name="olympicNumber">Initial value of the OlympicNumber property.</param>
        /// <param name="olympicYear">Initial value of the OlympicYear property.</param>
        public static OlympicType CreateOlympicType(global::System.Int32 olympicID, global::System.String name, global::System.String organizerName, global::System.Int32 olympicNumber, global::System.Int32 olympicYear)
        {
            OlympicType olympicType = new OlympicType();
            olympicType.OlympicID = olympicID;
            olympicType.Name = name;
            olympicType.OrganizerName = organizerName;
            olympicType.OlympicNumber = olympicNumber;
            olympicType.OlympicYear = olympicYear;
            return olympicType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OlympicID
        {
            get
            {
                return _OlympicID;
            }
            set
            {
                if (_OlympicID != value)
                {
                    OnOlympicIDChanging(value);
                    ReportPropertyChanging("OlympicID");
                    _OlympicID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OlympicID");
                    OnOlympicIDChanged();
                }
            }
        }
        private global::System.Int32 _OlympicID;
        partial void OnOlympicIDChanging(global::System.Int32 value);
        partial void OnOlympicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> OlympicLevelID
        {
            get
            {
                return _OlympicLevelID;
            }
            set
            {
                OnOlympicLevelIDChanging(value);
                ReportPropertyChanging("OlympicLevelID");
                _OlympicLevelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympicLevelID");
                OnOlympicLevelIDChanged();
            }
        }
        private Nullable<global::System.Int16> _OlympicLevelID;
        partial void OnOlympicLevelIDChanging(Nullable<global::System.Int16> value);
        partial void OnOlympicLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrganizerName
        {
            get
            {
                return _OrganizerName;
            }
            set
            {
                OnOrganizerNameChanging(value);
                ReportPropertyChanging("OrganizerName");
                _OrganizerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrganizerName");
                OnOrganizerNameChanged();
            }
        }
        private global::System.String _OrganizerName;
        partial void OnOrganizerNameChanging(global::System.String value);
        partial void OnOrganizerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OlympicNumber
        {
            get
            {
                return _OlympicNumber;
            }
            set
            {
                OnOlympicNumberChanging(value);
                ReportPropertyChanging("OlympicNumber");
                _OlympicNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympicNumber");
                OnOlympicNumberChanged();
            }
        }
        private global::System.Int32 _OlympicNumber;
        partial void OnOlympicNumberChanging(global::System.Int32 value);
        partial void OnOlympicNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OlympicYear
        {
            get
            {
                return _OlympicYear;
            }
            set
            {
                OnOlympicYearChanging(value);
                ReportPropertyChanging("OlympicYear");
                _OlympicYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympicYear");
                OnOlympicYearChanged();
            }
        }
        private global::System.Int32 _OlympicYear;
        partial void OnOlympicYearChanging(global::System.Int32 value);
        partial void OnOlympicYearChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_BenefitItemCOlympicType_OlympicType", "BenefitItemCOlympicType")]
        public EntityCollection<BenefitItemCOlympicType> BenefitItemCOlympicType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitItemCOlympicType>("BenefitsModel.FK_BenefitItemCOlympicType_OlympicType", "BenefitItemCOlympicType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitItemCOlympicType>("BenefitsModel.FK_BenefitItemCOlympicType_OlympicType", "BenefitItemCOlympicType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_OlympicType_OlympicLevel", "OlympicLevel")]
        public OlympicLevel OlympicLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicLevel>("BenefitsModel.FK_OlympicType_OlympicLevel", "OlympicLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicLevel>("BenefitsModel.FK_OlympicType_OlympicLevel", "OlympicLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OlympicLevel> OlympicLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicLevel>("BenefitsModel.FK_OlympicType_OlympicLevel", "OlympicLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OlympicLevel>("BenefitsModel.FK_OlympicType_OlympicLevel", "OlympicLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_OlympicTypeSubjectLink_OlympicType", "OlympicTypeSubjectLink")]
        public EntityCollection<OlympicTypeSubjectLink> OlympicTypeSubjectLink
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OlympicTypeSubjectLink>("BenefitsModel.FK_OlympicTypeSubjectLink_OlympicType", "OlympicTypeSubjectLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OlympicTypeSubjectLink>("BenefitsModel.FK_OlympicTypeSubjectLink_OlympicType", "OlympicTypeSubjectLink", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BenefitsModel", Name="OlympicTypeSubjectLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OlympicTypeSubjectLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OlympicTypeSubjectLink object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="olympicID">Initial value of the OlympicID property.</param>
        /// <param name="subjectID">Initial value of the SubjectID property.</param>
        public static OlympicTypeSubjectLink CreateOlympicTypeSubjectLink(global::System.Int32 id, global::System.Int32 olympicID, global::System.Int32 subjectID)
        {
            OlympicTypeSubjectLink olympicTypeSubjectLink = new OlympicTypeSubjectLink();
            olympicTypeSubjectLink.ID = id;
            olympicTypeSubjectLink.OlympicID = olympicID;
            olympicTypeSubjectLink.SubjectID = subjectID;
            return olympicTypeSubjectLink;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OlympicID
        {
            get
            {
                return _OlympicID;
            }
            set
            {
                OnOlympicIDChanging(value);
                ReportPropertyChanging("OlympicID");
                _OlympicID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympicID");
                OnOlympicIDChanged();
            }
        }
        private global::System.Int32 _OlympicID;
        partial void OnOlympicIDChanging(global::System.Int32 value);
        partial void OnOlympicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private global::System.Int32 _SubjectID;
        partial void OnSubjectIDChanging(global::System.Int32 value);
        partial void OnSubjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> SubjectLevelID
        {
            get
            {
                return _SubjectLevelID;
            }
            set
            {
                OnSubjectLevelIDChanging(value);
                ReportPropertyChanging("SubjectLevelID");
                _SubjectLevelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectLevelID");
                OnSubjectLevelIDChanged();
            }
        }
        private Nullable<global::System.Int16> _SubjectLevelID;
        partial void OnSubjectLevelIDChanging(Nullable<global::System.Int16> value);
        partial void OnSubjectLevelIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_OlympicTypeSubjectLink_Subject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("BenefitsModel.FK_OlympicTypeSubjectLink_Subject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("BenefitsModel.FK_OlympicTypeSubjectLink_Subject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("BenefitsModel.FK_OlympicTypeSubjectLink_Subject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("BenefitsModel.FK_OlympicTypeSubjectLink_Subject", "Subject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_OlympicLevel_OlympicTypeSubjectLink", "OlympicLevel")]
        public OlympicLevel OlympicLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicLevel>("BenefitsModel.FK_OlympicLevel_OlympicTypeSubjectLink", "OlympicLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicLevel>("BenefitsModel.FK_OlympicLevel_OlympicTypeSubjectLink", "OlympicLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OlympicLevel> OlympicLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicLevel>("BenefitsModel.FK_OlympicLevel_OlympicTypeSubjectLink", "OlympicLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OlympicLevel>("BenefitsModel.FK_OlympicLevel_OlympicTypeSubjectLink", "OlympicLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_OlympicTypeSubjectLink_OlympicType", "OlympicType")]
        public OlympicType OlympicType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicType>("BenefitsModel.FK_OlympicTypeSubjectLink_OlympicType", "OlympicType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicType>("BenefitsModel.FK_OlympicTypeSubjectLink_OlympicType", "OlympicType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OlympicType> OlympicTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicType>("BenefitsModel.FK_OlympicTypeSubjectLink_OlympicType", "OlympicType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OlympicType>("BenefitsModel.FK_OlympicTypeSubjectLink_OlympicType", "OlympicType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BenefitsModel", Name="Subject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subject object.
        /// </summary>
        /// <param name="subjectID">Initial value of the SubjectID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isEge">Initial value of the IsEge property.</param>
        public static Subject CreateSubject(global::System.Int32 subjectID, global::System.String name, global::System.Boolean isEge)
        {
            Subject subject = new Subject();
            subject.SubjectID = subjectID;
            subject.Name = name;
            subject.IsEge = isEge;
            return subject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                if (_SubjectID != value)
                {
                    OnSubjectIDChanging(value);
                    ReportPropertyChanging("SubjectID");
                    _SubjectID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubjectID");
                    OnSubjectIDChanged();
                }
            }
        }
        private global::System.Int32 _SubjectID;
        partial void OnSubjectIDChanging(global::System.Int32 value);
        partial void OnSubjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEge
        {
            get
            {
                return _IsEge;
            }
            set
            {
                OnIsEgeChanging(value);
                ReportPropertyChanging("IsEge");
                _IsEge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEge");
                OnIsEgeChanged();
            }
        }
        private global::System.Boolean _IsEge;
        partial void OnIsEgeChanging(global::System.Boolean value);
        partial void OnIsEgeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_OlympicTypeSubjectLink_Subject", "OlympicTypeSubjectLink")]
        public EntityCollection<OlympicTypeSubjectLink> OlympicTypeSubjectLink
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OlympicTypeSubjectLink>("BenefitsModel.FK_OlympicTypeSubjectLink_Subject", "OlympicTypeSubjectLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OlympicTypeSubjectLink>("BenefitsModel.FK_OlympicTypeSubjectLink_Subject", "OlympicTypeSubjectLink", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BenefitsModel", "FK_BenefitItemSubject_Subject1", "BenefitItemSubject")]
        public EntityCollection<BenefitItemSubject> BenefitItemSubject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitItemSubject>("BenefitsModel.FK_BenefitItemSubject_Subject1", "BenefitItemSubject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitItemSubject>("BenefitsModel.FK_BenefitItemSubject_Subject1", "BenefitItemSubject", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
