//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("NormativeDictionaries", "FK_NormativeDictionary_NormativeVersionState", "NormativeVersionState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.NormativeDictionaries.NormativeVersionState), "NormativeDictionary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.NormativeDictionaries.NormativeDictionary), true)]

#endregion

namespace GVUZ.Model.NormativeDictionaries
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class NormativeDictionaryEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new NormativeDictionaryEntities object using the connection string found in the 'NormativeDictionaryEntities' section of the application configuration file.
        /// </summary>
        public NormativeDictionaryEntities() : base("name=NormativeDictionaryEntities", "NormativeDictionaryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NormativeDictionaryEntities object.
        /// </summary>
        public NormativeDictionaryEntities(string connectionString) : base(connectionString, "NormativeDictionaryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NormativeDictionaryEntities object.
        /// </summary>
        public NormativeDictionaryEntities(EntityConnection connection) : base(connection, "NormativeDictionaryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NormativeDictionary> NormativeDictionary
        {
            get
            {
                if ((_NormativeDictionary == null))
                {
                    _NormativeDictionary = base.CreateObjectSet<NormativeDictionary>("NormativeDictionary");
                }
                return _NormativeDictionary;
            }
        }
        private ObjectSet<NormativeDictionary> _NormativeDictionary;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NormativeVersionState> NormativeVersionState
        {
            get
            {
                if ((_NormativeVersionState == null))
                {
                    _NormativeVersionState = base.CreateObjectSet<NormativeVersionState>("NormativeVersionState");
                }
                return _NormativeVersionState;
            }
        }
        private ObjectSet<NormativeVersionState> _NormativeVersionState;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NormativeDictionary EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNormativeDictionary(NormativeDictionary normativeDictionary)
        {
            base.AddObject("NormativeDictionary", normativeDictionary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NormativeVersionState EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNormativeVersionState(NormativeVersionState normativeVersionState)
        {
            base.AddObject("NormativeVersionState", normativeVersionState);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NormativeDictionaries", Name="NormativeDictionary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NormativeDictionary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NormativeDictionary object.
        /// </summary>
        /// <param name="dictionaryID">Initial value of the DictionaryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="versionID">Initial value of the VersionID property.</param>
        /// <param name="versionStateID">Initial value of the VersionStateID property.</param>
        public static NormativeDictionary CreateNormativeDictionary(global::System.Int32 dictionaryID, global::System.String name, global::System.Int32 versionID, global::System.Byte versionStateID)
        {
            NormativeDictionary normativeDictionary = new NormativeDictionary();
            normativeDictionary.DictionaryID = dictionaryID;
            normativeDictionary.Name = name;
            normativeDictionary.VersionID = versionID;
            normativeDictionary.VersionStateID = versionStateID;
            return normativeDictionary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DictionaryID
        {
            get
            {
                return _DictionaryID;
            }
            set
            {
                if (_DictionaryID != value)
                {
                    OnDictionaryIDChanging(value);
                    ReportPropertyChanging("DictionaryID");
                    _DictionaryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DictionaryID");
                    OnDictionaryIDChanged();
                }
            }
        }
        private global::System.Int32 _DictionaryID;
        partial void OnDictionaryIDChanging(global::System.Int32 value);
        partial void OnDictionaryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VersionID
        {
            get
            {
                return _VersionID;
            }
            set
            {
                OnVersionIDChanging(value);
                ReportPropertyChanging("VersionID");
                _VersionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VersionID");
                OnVersionIDChanged();
            }
        }
        private global::System.Int32 _VersionID;
        partial void OnVersionIDChanging(global::System.Int32 value);
        partial void OnVersionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActivationDate
        {
            get
            {
                return _ActivationDate;
            }
            set
            {
                OnActivationDateChanging(value);
                ReportPropertyChanging("ActivationDate");
                _ActivationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivationDate");
                OnActivationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActivationDate;
        partial void OnActivationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnActivationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte VersionStateID
        {
            get
            {
                return _VersionStateID;
            }
            set
            {
                OnVersionStateIDChanging(value);
                ReportPropertyChanging("VersionStateID");
                _VersionStateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VersionStateID");
                OnVersionStateIDChanged();
            }
        }
        private global::System.Byte _VersionStateID;
        partial void OnVersionStateIDChanging(global::System.Byte value);
        partial void OnVersionStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NormativeDictionaries", "FK_NormativeDictionary_NormativeVersionState", "NormativeVersionState")]
        public NormativeVersionState NormativeVersionState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NormativeVersionState>("NormativeDictionaries.FK_NormativeDictionary_NormativeVersionState", "NormativeVersionState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NormativeVersionState>("NormativeDictionaries.FK_NormativeDictionary_NormativeVersionState", "NormativeVersionState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NormativeVersionState> NormativeVersionStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NormativeVersionState>("NormativeDictionaries.FK_NormativeDictionary_NormativeVersionState", "NormativeVersionState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NormativeVersionState>("NormativeDictionaries.FK_NormativeDictionary_NormativeVersionState", "NormativeVersionState", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NormativeDictionaries", Name="NormativeVersionState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NormativeVersionState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NormativeVersionState object.
        /// </summary>
        /// <param name="versionStateID">Initial value of the VersionStateID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static NormativeVersionState CreateNormativeVersionState(global::System.Byte versionStateID, global::System.String name)
        {
            NormativeVersionState normativeVersionState = new NormativeVersionState();
            normativeVersionState.VersionStateID = versionStateID;
            normativeVersionState.Name = name;
            return normativeVersionState;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte VersionStateID
        {
            get
            {
                return _VersionStateID;
            }
            set
            {
                if (_VersionStateID != value)
                {
                    OnVersionStateIDChanging(value);
                    ReportPropertyChanging("VersionStateID");
                    _VersionStateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VersionStateID");
                    OnVersionStateIDChanged();
                }
            }
        }
        private global::System.Byte _VersionStateID;
        partial void OnVersionStateIDChanging(global::System.Byte value);
        partial void OnVersionStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NormativeDictionaries", "FK_NormativeDictionary_NormativeVersionState", "NormativeDictionary")]
        public EntityCollection<NormativeDictionary> NormativeDictionary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NormativeDictionary>("NormativeDictionaries.FK_NormativeDictionary_NormativeVersionState", "NormativeDictionary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NormativeDictionary>("NormativeDictionaries.FK_NormativeDictionary_NormativeVersionState", "NormativeDictionary", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
