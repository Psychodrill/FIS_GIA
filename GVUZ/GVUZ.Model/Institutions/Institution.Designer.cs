//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_Institution_FormOfLaw", "FormOfLaw", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.Model.Institutions.FormOfLaw), "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.Institution), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_InstitutionAccreditation_Institution", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Institutions.Institution), "InstitutionAccreditation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.InstitutionAccreditation), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_InstitutionLicense_Institution", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Institutions.Institution), "InstitutionLicense", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.InstitutionLicense), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_InstitutionItem_Direction", "Direction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.Model.Institutions.Direction), "InstitutionItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.InstitutionItem), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_InstitutionItem_Institution", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Institutions.Institution), "InstitutionItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.InstitutionItem), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_InstitutionStructure_InstitutionItem", "InstitutionItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Institutions.InstitutionItem), "InstitutionStructure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.InstitutionStructure), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_InstitutionStructure_InstitutionStructure", "Child", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.Model.Institutions.InstitutionStructure), "Parent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.InstitutionStructure), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_InstitutionItem_ParentInstitutionItem", "Child", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.Model.Institutions.InstitutionItem), "Parent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.InstitutionItem), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_Institution_Attachment", "Attachment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.Model.Institutions.Attachment), "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.Institution), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_InstitutionAccreditation_Attachment", "Attachment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.Model.Institutions.Attachment), "InstitutionAccreditation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.InstitutionAccreditation), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_InstitutionLicense_Attachment", "Attachment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.Model.Institutions.Attachment), "InstitutionLicense", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.InstitutionLicense), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_UserPolicy_Institution", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.Model.Institutions.Institution), "UserPolicy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.UserPolicy), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_AllowedDirections_AdmissionItemType", "AdmissionItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Institutions.AdmissionItemType), "AllowedDirections", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.AllowedDirections), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_AllowedDirections_Direction", "Direction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Institutions.Direction), "AllowedDirections", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.AllowedDirections), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_AllowedDirections_Institution", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Institutions.Institution), "AllowedDirections", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.AllowedDirections), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_AdmissionVolume_AdmissionItemType", "AdmissionItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Institutions.AdmissionItemType), "AdmissionVolume", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.AdmissionVolume), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_AdmissionVolume_Direction", "Direction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Institutions.Direction), "AdmissionVolume", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.AdmissionVolume), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_AdmissionVolume_Institution", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Institutions.Institution), "AdmissionVolume", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.AdmissionVolume), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_Direction_ParentDirection", "ParentDirection", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.Model.Institutions.ParentDirection), "Direction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.Direction), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_InstitutionHistory_AccreditationAttachment", "Attachment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.Model.Institutions.Attachment), "InstitutionHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.InstitutionHistory), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_InstitutionHistory_HostelAttachment", "Attachment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.Model.Institutions.Attachment), "InstitutionHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.InstitutionHistory), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_InstitutionHistory_LicenseAttachment", "Attachment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.Model.Institutions.Attachment), "InstitutionHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.InstitutionHistory), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_InstitutionHistory_FormOfLaw", "FormOfLaw", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.Model.Institutions.FormOfLaw), "InstitutionHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.InstitutionHistory), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_Institution_RegionType", "RegionType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.Model.Institutions.RegionType), "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.Institution), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_InstitutionHistory_RegionType", "RegionType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.Model.Institutions.RegionType), "InstitutionHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.InstitutionHistory), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_RequestDirection_Request", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Institutions.Institution), "RequestDirection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.RequestDirection), true)]
[assembly: EdmRelationshipAttribute("InsitutionsModel", "FK_RequestComments_RequestDirection", "RequestDirection", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.Model.Institutions.RequestDirection), "RequestComments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.Model.Institutions.RequestComments), true)]

#endregion

namespace GVUZ.Model.Institutions
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class InstitutionsEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new InstitutionsEntities object using the connection string found in the 'InstitutionsEntities' section of the application configuration file.
        /// </summary>
        public InstitutionsEntities() : base("name=InstitutionsEntities", "InstitutionsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new InstitutionsEntities object.
        /// </summary>
        public InstitutionsEntities(string connectionString) : base(connectionString, "InstitutionsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new InstitutionsEntities object.
        /// </summary>
        public InstitutionsEntities(EntityConnection connection) : base(connection, "InstitutionsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FormOfLaw> FormOfLaw
        {
            get
            {
                if ((_FormOfLaw == null))
                {
                    _FormOfLaw = base.CreateObjectSet<FormOfLaw>("FormOfLaw");
                }
                return _FormOfLaw;
            }
        }
        private ObjectSet<FormOfLaw> _FormOfLaw;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Institution> Institution
        {
            get
            {
                if ((_Institution == null))
                {
                    _Institution = base.CreateObjectSet<Institution>("Institution");
                }
                return _Institution;
            }
        }
        private ObjectSet<Institution> _Institution;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InstitutionAccreditation> InstitutionAccreditation
        {
            get
            {
                if ((_InstitutionAccreditation == null))
                {
                    _InstitutionAccreditation = base.CreateObjectSet<InstitutionAccreditation>("InstitutionAccreditation");
                }
                return _InstitutionAccreditation;
            }
        }
        private ObjectSet<InstitutionAccreditation> _InstitutionAccreditation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InstitutionLicense> InstitutionLicense
        {
            get
            {
                if ((_InstitutionLicense == null))
                {
                    _InstitutionLicense = base.CreateObjectSet<InstitutionLicense>("InstitutionLicense");
                }
                return _InstitutionLicense;
            }
        }
        private ObjectSet<InstitutionLicense> _InstitutionLicense;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Direction> Direction
        {
            get
            {
                if ((_Direction == null))
                {
                    _Direction = base.CreateObjectSet<Direction>("Direction");
                }
                return _Direction;
            }
        }
        private ObjectSet<Direction> _Direction;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InstitutionItem> InstitutionItem
        {
            get
            {
                if ((_InstitutionItem == null))
                {
                    _InstitutionItem = base.CreateObjectSet<InstitutionItem>("InstitutionItem");
                }
                return _InstitutionItem;
            }
        }
        private ObjectSet<InstitutionItem> _InstitutionItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InstitutionStructure> InstitutionStructure
        {
            get
            {
                if ((_InstitutionStructure == null))
                {
                    _InstitutionStructure = base.CreateObjectSet<InstitutionStructure>("InstitutionStructure");
                }
                return _InstitutionStructure;
            }
        }
        private ObjectSet<InstitutionStructure> _InstitutionStructure;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdmissionItemType> AdmissionItemType
        {
            get
            {
                if ((_AdmissionItemType == null))
                {
                    _AdmissionItemType = base.CreateObjectSet<AdmissionItemType>("AdmissionItemType");
                }
                return _AdmissionItemType;
            }
        }
        private ObjectSet<AdmissionItemType> _AdmissionItemType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attachment> Attachment
        {
            get
            {
                if ((_Attachment == null))
                {
                    _Attachment = base.CreateObjectSet<Attachment>("Attachment");
                }
                return _Attachment;
            }
        }
        private ObjectSet<Attachment> _Attachment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserPolicy> UserPolicy
        {
            get
            {
                if ((_UserPolicy == null))
                {
                    _UserPolicy = base.CreateObjectSet<UserPolicy>("UserPolicy");
                }
                return _UserPolicy;
            }
        }
        private ObjectSet<UserPolicy> _UserPolicy;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AllowedDirections> AllowedDirections
        {
            get
            {
                if ((_AllowedDirections == null))
                {
                    _AllowedDirections = base.CreateObjectSet<AllowedDirections>("AllowedDirections");
                }
                return _AllowedDirections;
            }
        }
        private ObjectSet<AllowedDirections> _AllowedDirections;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdmissionVolume> AdmissionVolume
        {
            get
            {
                if ((_AdmissionVolume == null))
                {
                    _AdmissionVolume = base.CreateObjectSet<AdmissionVolume>("AdmissionVolume");
                }
                return _AdmissionVolume;
            }
        }
        private ObjectSet<AdmissionVolume> _AdmissionVolume;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ParentDirection> ParentDirection
        {
            get
            {
                if ((_ParentDirection == null))
                {
                    _ParentDirection = base.CreateObjectSet<ParentDirection>("ParentDirection");
                }
                return _ParentDirection;
            }
        }
        private ObjectSet<ParentDirection> _ParentDirection;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InstitutionHistory> InstitutionHistory
        {
            get
            {
                if ((_InstitutionHistory == null))
                {
                    _InstitutionHistory = base.CreateObjectSet<InstitutionHistory>("InstitutionHistory");
                }
                return _InstitutionHistory;
            }
        }
        private ObjectSet<InstitutionHistory> _InstitutionHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RegionType> RegionType
        {
            get
            {
                if ((_RegionType == null))
                {
                    _RegionType = base.CreateObjectSet<RegionType>("RegionType");
                }
                return _RegionType;
            }
        }
        private ObjectSet<RegionType> _RegionType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequestComments> RequestComments
        {
            get
            {
                if ((_RequestComments == null))
                {
                    _RequestComments = base.CreateObjectSet<RequestComments>("RequestComments");
                }
                return _RequestComments;
            }
        }
        private ObjectSet<RequestComments> _RequestComments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequestDirection> RequestDirection
        {
            get
            {
                if ((_RequestDirection == null))
                {
                    _RequestDirection = base.CreateObjectSet<RequestDirection>("RequestDirection");
                }
                return _RequestDirection;
            }
        }
        private ObjectSet<RequestDirection> _RequestDirection;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FormOfLaw EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFormOfLaw(FormOfLaw formOfLaw)
        {
            base.AddObject("FormOfLaw", formOfLaw);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Institution EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstitution(Institution institution)
        {
            base.AddObject("Institution", institution);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InstitutionAccreditation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstitutionAccreditation(InstitutionAccreditation institutionAccreditation)
        {
            base.AddObject("InstitutionAccreditation", institutionAccreditation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InstitutionLicense EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstitutionLicense(InstitutionLicense institutionLicense)
        {
            base.AddObject("InstitutionLicense", institutionLicense);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Direction EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirection(Direction direction)
        {
            base.AddObject("Direction", direction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InstitutionItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstitutionItem(InstitutionItem institutionItem)
        {
            base.AddObject("InstitutionItem", institutionItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InstitutionStructure EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstitutionStructure(InstitutionStructure institutionStructure)
        {
            base.AddObject("InstitutionStructure", institutionStructure);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdmissionItemType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdmissionItemType(AdmissionItemType admissionItemType)
        {
            base.AddObject("AdmissionItemType", admissionItemType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attachment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttachment(Attachment attachment)
        {
            base.AddObject("Attachment", attachment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserPolicy EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserPolicy(UserPolicy userPolicy)
        {
            base.AddObject("UserPolicy", userPolicy);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AllowedDirections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAllowedDirections(AllowedDirections allowedDirections)
        {
            base.AddObject("AllowedDirections", allowedDirections);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdmissionVolume EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdmissionVolume(AdmissionVolume admissionVolume)
        {
            base.AddObject("AdmissionVolume", admissionVolume);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ParentDirection EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParentDirection(ParentDirection parentDirection)
        {
            base.AddObject("ParentDirection", parentDirection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InstitutionHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstitutionHistory(InstitutionHistory institutionHistory)
        {
            base.AddObject("InstitutionHistory", institutionHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegionType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegionType(RegionType regionType)
        {
            base.AddObject("RegionType", regionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequestComments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequestComments(RequestComments requestComments)
        {
            base.AddObject("RequestComments", requestComments);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequestDirection EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequestDirection(RequestDirection requestDirection)
        {
            base.AddObject("RequestDirection", requestDirection);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="isVUZ">No Metadata Documentation available.</param>
        /// <param name="isSSUZ">No Metadata Documentation available.</param>
        /// <param name="namePart">No Metadata Documentation available.</param>
        /// <param name="directionName">No Metadata Documentation available.</param>
        /// <param name="directionCode">No Metadata Documentation available.</param>
        /// <param name="regionName">No Metadata Documentation available.</param>
        /// <param name="formOfLawID">No Metadata Documentation available.</param>
        /// <param name="educationLevelID">No Metadata Documentation available.</param>
        /// <param name="studyID">No Metadata Documentation available.</param>
        /// <param name="admissionTypeID">No Metadata Documentation available.</param>
        /// <param name="hasMilitaryDepartment">No Metadata Documentation available.</param>
        /// <param name="hasPreparatoryCourses">No Metadata Documentation available.</param>
        /// <param name="hasOlympics">No Metadata Documentation available.</param>
        /// <param name="depthLimit">No Metadata Documentation available.</param>
        /// <param name="parentStructureID">No Metadata Documentation available.</param>
        /// <param name="pageSize">No Metadata Documentation available.</param>
        /// <param name="pageNumber">No Metadata Documentation available.</param>
        /// <param name="snils">No Metadata Documentation available.</param>
        /// <param name="totalPageCount">No Metadata Documentation available.</param>
        protected ObjectResult<InstitutionSearchResult> PerformSearch(Nullable<global::System.Boolean> isVUZ, Nullable<global::System.Boolean> isSSUZ, global::System.String namePart, global::System.String directionName, global::System.String directionCode, global::System.String regionName, Nullable<global::System.Int32> formOfLawID, Nullable<global::System.Int16> educationLevelID, Nullable<global::System.Int16> studyID, Nullable<global::System.Int16> admissionTypeID, Nullable<global::System.Boolean> hasMilitaryDepartment, Nullable<global::System.Boolean> hasPreparatoryCourses, Nullable<global::System.Boolean> hasOlympics, Nullable<global::System.Int16> depthLimit, Nullable<global::System.Int32> parentStructureID, Nullable<global::System.Int32> pageSize, Nullable<global::System.Int32> pageNumber, global::System.String snils, ObjectParameter totalPageCount)
        {
            ObjectParameter isVUZParameter;
            if (isVUZ.HasValue)
            {
                isVUZParameter = new ObjectParameter("IsVUZ", isVUZ);
            }
            else
            {
                isVUZParameter = new ObjectParameter("IsVUZ", typeof(global::System.Boolean));
            }
    
            ObjectParameter isSSUZParameter;
            if (isSSUZ.HasValue)
            {
                isSSUZParameter = new ObjectParameter("IsSSUZ", isSSUZ);
            }
            else
            {
                isSSUZParameter = new ObjectParameter("IsSSUZ", typeof(global::System.Boolean));
            }
    
            ObjectParameter namePartParameter;
            if (namePart != null)
            {
                namePartParameter = new ObjectParameter("NamePart", namePart);
            }
            else
            {
                namePartParameter = new ObjectParameter("NamePart", typeof(global::System.String));
            }
    
            ObjectParameter directionNameParameter;
            if (directionName != null)
            {
                directionNameParameter = new ObjectParameter("DirectionName", directionName);
            }
            else
            {
                directionNameParameter = new ObjectParameter("DirectionName", typeof(global::System.String));
            }
    
            ObjectParameter directionCodeParameter;
            if (directionCode != null)
            {
                directionCodeParameter = new ObjectParameter("DirectionCode", directionCode);
            }
            else
            {
                directionCodeParameter = new ObjectParameter("DirectionCode", typeof(global::System.String));
            }
    
            ObjectParameter regionNameParameter;
            if (regionName != null)
            {
                regionNameParameter = new ObjectParameter("RegionName", regionName);
            }
            else
            {
                regionNameParameter = new ObjectParameter("RegionName", typeof(global::System.String));
            }
    
            ObjectParameter formOfLawIDParameter;
            if (formOfLawID.HasValue)
            {
                formOfLawIDParameter = new ObjectParameter("FormOfLawID", formOfLawID);
            }
            else
            {
                formOfLawIDParameter = new ObjectParameter("FormOfLawID", typeof(global::System.Int32));
            }
    
            ObjectParameter educationLevelIDParameter;
            if (educationLevelID.HasValue)
            {
                educationLevelIDParameter = new ObjectParameter("EducationLevelID", educationLevelID);
            }
            else
            {
                educationLevelIDParameter = new ObjectParameter("EducationLevelID", typeof(global::System.Int16));
            }
    
            ObjectParameter studyIDParameter;
            if (studyID.HasValue)
            {
                studyIDParameter = new ObjectParameter("StudyID", studyID);
            }
            else
            {
                studyIDParameter = new ObjectParameter("StudyID", typeof(global::System.Int16));
            }
    
            ObjectParameter admissionTypeIDParameter;
            if (admissionTypeID.HasValue)
            {
                admissionTypeIDParameter = new ObjectParameter("AdmissionTypeID", admissionTypeID);
            }
            else
            {
                admissionTypeIDParameter = new ObjectParameter("AdmissionTypeID", typeof(global::System.Int16));
            }
    
            ObjectParameter hasMilitaryDepartmentParameter;
            if (hasMilitaryDepartment.HasValue)
            {
                hasMilitaryDepartmentParameter = new ObjectParameter("HasMilitaryDepartment", hasMilitaryDepartment);
            }
            else
            {
                hasMilitaryDepartmentParameter = new ObjectParameter("HasMilitaryDepartment", typeof(global::System.Boolean));
            }
    
            ObjectParameter hasPreparatoryCoursesParameter;
            if (hasPreparatoryCourses.HasValue)
            {
                hasPreparatoryCoursesParameter = new ObjectParameter("HasPreparatoryCourses", hasPreparatoryCourses);
            }
            else
            {
                hasPreparatoryCoursesParameter = new ObjectParameter("HasPreparatoryCourses", typeof(global::System.Boolean));
            }
    
            ObjectParameter hasOlympicsParameter;
            if (hasOlympics.HasValue)
            {
                hasOlympicsParameter = new ObjectParameter("HasOlympics", hasOlympics);
            }
            else
            {
                hasOlympicsParameter = new ObjectParameter("HasOlympics", typeof(global::System.Boolean));
            }
    
            ObjectParameter depthLimitParameter;
            if (depthLimit.HasValue)
            {
                depthLimitParameter = new ObjectParameter("DepthLimit", depthLimit);
            }
            else
            {
                depthLimitParameter = new ObjectParameter("DepthLimit", typeof(global::System.Int16));
            }
    
            ObjectParameter parentStructureIDParameter;
            if (parentStructureID.HasValue)
            {
                parentStructureIDParameter = new ObjectParameter("ParentStructureID", parentStructureID);
            }
            else
            {
                parentStructureIDParameter = new ObjectParameter("ParentStructureID", typeof(global::System.Int32));
            }
    
            ObjectParameter pageSizeParameter;
            if (pageSize.HasValue)
            {
                pageSizeParameter = new ObjectParameter("PageSize", pageSize);
            }
            else
            {
                pageSizeParameter = new ObjectParameter("PageSize", typeof(global::System.Int32));
            }
    
            ObjectParameter pageNumberParameter;
            if (pageNumber.HasValue)
            {
                pageNumberParameter = new ObjectParameter("PageNumber", pageNumber);
            }
            else
            {
                pageNumberParameter = new ObjectParameter("PageNumber", typeof(global::System.Int32));
            }
    
            ObjectParameter snilsParameter;
            if (snils != null)
            {
                snilsParameter = new ObjectParameter("Snils", snils);
            }
            else
            {
                snilsParameter = new ObjectParameter("Snils", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<InstitutionSearchResult>("PerformSearch", isVUZParameter, isSSUZParameter, namePartParameter, directionNameParameter, directionCodeParameter, regionNameParameter, formOfLawIDParameter, educationLevelIDParameter, studyIDParameter, admissionTypeIDParameter, hasMilitaryDepartmentParameter, hasPreparatoryCoursesParameter, hasOlympicsParameter, depthLimitParameter, parentStructureIDParameter, pageSizeParameter, pageNumberParameter, snilsParameter, totalPageCount);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="educationLevelID">No Metadata Documentation available.</param>
        public int CopyStructureToAdmission(Nullable<global::System.Int32> educationLevelID)
        {
            ObjectParameter educationLevelIDParameter;
            if (educationLevelID.HasValue)
            {
                educationLevelIDParameter = new ObjectParameter("EducationLevelID", educationLevelID);
            }
            else
            {
                educationLevelIDParameter = new ObjectParameter("EducationLevelID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("CopyStructureToAdmission", educationLevelIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="institutionID">No Metadata Documentation available.</param>
        public int PublishAdmissionStructure(Nullable<global::System.Int32> institutionID)
        {
            ObjectParameter institutionIDParameter;
            if (institutionID.HasValue)
            {
                institutionIDParameter = new ObjectParameter("institutionID", institutionID);
            }
            else
            {
                institutionIDParameter = new ObjectParameter("institutionID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("PublishAdmissionStructure", institutionIDParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InsitutionsModel", Name="AdmissionItemType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdmissionItemType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdmissionItemType object.
        /// </summary>
        /// <param name="itemTypeID">Initial value of the ItemTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="itemLevel">Initial value of the ItemLevel property.</param>
        /// <param name="canBeSkipped">Initial value of the CanBeSkipped property.</param>
        /// <param name="autoCopyName">Initial value of the AutoCopyName property.</param>
        /// <param name="displayOrder">Initial value of the DisplayOrder property.</param>
        public static AdmissionItemType CreateAdmissionItemType(global::System.Int16 itemTypeID, global::System.String name, global::System.Int16 itemLevel, global::System.Boolean canBeSkipped, global::System.Boolean autoCopyName, global::System.Int32 displayOrder)
        {
            AdmissionItemType admissionItemType = new AdmissionItemType();
            admissionItemType.ItemTypeID = itemTypeID;
            admissionItemType.Name = name;
            admissionItemType.ItemLevel = itemLevel;
            admissionItemType.CanBeSkipped = canBeSkipped;
            admissionItemType.AutoCopyName = autoCopyName;
            admissionItemType.DisplayOrder = displayOrder;
            return admissionItemType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ItemTypeID
        {
            get
            {
                return _ItemTypeID;
            }
            set
            {
                if (_ItemTypeID != value)
                {
                    OnItemTypeIDChanging(value);
                    ReportPropertyChanging("ItemTypeID");
                    _ItemTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemTypeID");
                    OnItemTypeIDChanged();
                }
            }
        }
        private global::System.Int16 _ItemTypeID;
        partial void OnItemTypeIDChanging(global::System.Int16 value);
        partial void OnItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ItemLevel
        {
            get
            {
                return _ItemLevel;
            }
            set
            {
                OnItemLevelChanging(value);
                ReportPropertyChanging("ItemLevel");
                _ItemLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemLevel");
                OnItemLevelChanged();
            }
        }
        private global::System.Int16 _ItemLevel;
        partial void OnItemLevelChanging(global::System.Int16 value);
        partial void OnItemLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanBeSkipped
        {
            get
            {
                return _CanBeSkipped;
            }
            set
            {
                OnCanBeSkippedChanging(value);
                ReportPropertyChanging("CanBeSkipped");
                _CanBeSkipped = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanBeSkipped");
                OnCanBeSkippedChanged();
            }
        }
        private global::System.Boolean _CanBeSkipped;
        partial void OnCanBeSkippedChanging(global::System.Boolean value);
        partial void OnCanBeSkippedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AutoCopyName
        {
            get
            {
                return _AutoCopyName;
            }
            set
            {
                OnAutoCopyNameChanging(value);
                ReportPropertyChanging("AutoCopyName");
                _AutoCopyName = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoCopyName");
                OnAutoCopyNameChanged();
            }
        }
        private global::System.Boolean _AutoCopyName;
        partial void OnAutoCopyNameChanging(global::System.Boolean value);
        partial void OnAutoCopyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private global::System.Int32 _DisplayOrder;
        partial void OnDisplayOrderChanging(global::System.Int32 value);
        partial void OnDisplayOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_AllowedDirections_AdmissionItemType", "AllowedDirections")]
        public EntityCollection<AllowedDirections> AllowedDirections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AllowedDirections>("InsitutionsModel.FK_AllowedDirections_AdmissionItemType", "AllowedDirections");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AllowedDirections>("InsitutionsModel.FK_AllowedDirections_AdmissionItemType", "AllowedDirections", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_AdmissionVolume_AdmissionItemType", "AdmissionVolume")]
        public EntityCollection<AdmissionVolume> AdmissionVolume
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdmissionVolume>("InsitutionsModel.FK_AdmissionVolume_AdmissionItemType", "AdmissionVolume");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdmissionVolume>("InsitutionsModel.FK_AdmissionVolume_AdmissionItemType", "AdmissionVolume", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InsitutionsModel", Name="AdmissionVolume")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdmissionVolume : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdmissionVolume object.
        /// </summary>
        /// <param name="admissionVolumeID">Initial value of the AdmissionVolumeID property.</param>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        /// <param name="admissionItemTypeID">Initial value of the AdmissionItemTypeID property.</param>
        /// <param name="directionID">Initial value of the DirectionID property.</param>
        /// <param name="numberBudgetO">Initial value of the NumberBudgetO property.</param>
        /// <param name="numberBudgetOZ">Initial value of the NumberBudgetOZ property.</param>
        /// <param name="numberBudgetZ">Initial value of the NumberBudgetZ property.</param>
        /// <param name="numberPaidO">Initial value of the NumberPaidO property.</param>
        /// <param name="numberPaidOZ">Initial value of the NumberPaidOZ property.</param>
        /// <param name="numberPaidZ">Initial value of the NumberPaidZ property.</param>
        /// <param name="numberTargetO">Initial value of the NumberTargetO property.</param>
        /// <param name="numberTargetOZ">Initial value of the NumberTargetOZ property.</param>
        /// <param name="numberTargetZ">Initial value of the NumberTargetZ property.</param>
        public static AdmissionVolume CreateAdmissionVolume(global::System.Int32 admissionVolumeID, global::System.Int32 institutionID, global::System.Int16 admissionItemTypeID, global::System.Int32 directionID, global::System.Int32 numberBudgetO, global::System.Int32 numberBudgetOZ, global::System.Int32 numberBudgetZ, global::System.Int32 numberPaidO, global::System.Int32 numberPaidOZ, global::System.Int32 numberPaidZ, global::System.Int32 numberTargetO, global::System.Int32 numberTargetOZ, global::System.Int32 numberTargetZ)
        {
            AdmissionVolume admissionVolume = new AdmissionVolume();
            admissionVolume.AdmissionVolumeID = admissionVolumeID;
            admissionVolume.InstitutionID = institutionID;
            admissionVolume.AdmissionItemTypeID = admissionItemTypeID;
            admissionVolume.DirectionID = directionID;
            admissionVolume.NumberBudgetO = numberBudgetO;
            admissionVolume.NumberBudgetOZ = numberBudgetOZ;
            admissionVolume.NumberBudgetZ = numberBudgetZ;
            admissionVolume.NumberPaidO = numberPaidO;
            admissionVolume.NumberPaidOZ = numberPaidOZ;
            admissionVolume.NumberPaidZ = numberPaidZ;
            admissionVolume.NumberTargetO = numberTargetO;
            admissionVolume.NumberTargetOZ = numberTargetOZ;
            admissionVolume.NumberTargetZ = numberTargetZ;
            return admissionVolume;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdmissionVolumeID
        {
            get
            {
                return _AdmissionVolumeID;
            }
            set
            {
                if (_AdmissionVolumeID != value)
                {
                    OnAdmissionVolumeIDChanging(value);
                    ReportPropertyChanging("AdmissionVolumeID");
                    _AdmissionVolumeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdmissionVolumeID");
                    OnAdmissionVolumeIDChanged();
                }
            }
        }
        private global::System.Int32 _AdmissionVolumeID;
        partial void OnAdmissionVolumeIDChanging(global::System.Int32 value);
        partial void OnAdmissionVolumeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                OnInstitutionIDChanging(value);
                ReportPropertyChanging("InstitutionID");
                _InstitutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionID");
                OnInstitutionIDChanged();
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 AdmissionItemTypeID
        {
            get
            {
                return _AdmissionItemTypeID;
            }
            set
            {
                OnAdmissionItemTypeIDChanging(value);
                ReportPropertyChanging("AdmissionItemTypeID");
                _AdmissionItemTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmissionItemTypeID");
                OnAdmissionItemTypeIDChanged();
            }
        }
        private global::System.Int16 _AdmissionItemTypeID;
        partial void OnAdmissionItemTypeIDChanging(global::System.Int16 value);
        partial void OnAdmissionItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DirectionID
        {
            get
            {
                return _DirectionID;
            }
            set
            {
                OnDirectionIDChanging(value);
                ReportPropertyChanging("DirectionID");
                _DirectionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DirectionID");
                OnDirectionIDChanged();
            }
        }
        private global::System.Int32 _DirectionID;
        partial void OnDirectionIDChanging(global::System.Int32 value);
        partial void OnDirectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberBudgetO
        {
            get
            {
                return _NumberBudgetO;
            }
            set
            {
                OnNumberBudgetOChanging(value);
                ReportPropertyChanging("NumberBudgetO");
                _NumberBudgetO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberBudgetO");
                OnNumberBudgetOChanged();
            }
        }
        private global::System.Int32 _NumberBudgetO;
        partial void OnNumberBudgetOChanging(global::System.Int32 value);
        partial void OnNumberBudgetOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberBudgetOZ
        {
            get
            {
                return _NumberBudgetOZ;
            }
            set
            {
                OnNumberBudgetOZChanging(value);
                ReportPropertyChanging("NumberBudgetOZ");
                _NumberBudgetOZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberBudgetOZ");
                OnNumberBudgetOZChanged();
            }
        }
        private global::System.Int32 _NumberBudgetOZ;
        partial void OnNumberBudgetOZChanging(global::System.Int32 value);
        partial void OnNumberBudgetOZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberBudgetZ
        {
            get
            {
                return _NumberBudgetZ;
            }
            set
            {
                OnNumberBudgetZChanging(value);
                ReportPropertyChanging("NumberBudgetZ");
                _NumberBudgetZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberBudgetZ");
                OnNumberBudgetZChanged();
            }
        }
        private global::System.Int32 _NumberBudgetZ;
        partial void OnNumberBudgetZChanging(global::System.Int32 value);
        partial void OnNumberBudgetZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberPaidO
        {
            get
            {
                return _NumberPaidO;
            }
            set
            {
                OnNumberPaidOChanging(value);
                ReportPropertyChanging("NumberPaidO");
                _NumberPaidO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberPaidO");
                OnNumberPaidOChanged();
            }
        }
        private global::System.Int32 _NumberPaidO;
        partial void OnNumberPaidOChanging(global::System.Int32 value);
        partial void OnNumberPaidOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberPaidOZ
        {
            get
            {
                return _NumberPaidOZ;
            }
            set
            {
                OnNumberPaidOZChanging(value);
                ReportPropertyChanging("NumberPaidOZ");
                _NumberPaidOZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberPaidOZ");
                OnNumberPaidOZChanged();
            }
        }
        private global::System.Int32 _NumberPaidOZ;
        partial void OnNumberPaidOZChanging(global::System.Int32 value);
        partial void OnNumberPaidOZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberPaidZ
        {
            get
            {
                return _NumberPaidZ;
            }
            set
            {
                OnNumberPaidZChanging(value);
                ReportPropertyChanging("NumberPaidZ");
                _NumberPaidZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberPaidZ");
                OnNumberPaidZChanged();
            }
        }
        private global::System.Int32 _NumberPaidZ;
        partial void OnNumberPaidZChanging(global::System.Int32 value);
        partial void OnNumberPaidZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.String _UID;
        partial void OnUIDChanging(global::System.String value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CampaignID
        {
            get
            {
                return _CampaignID;
            }
            set
            {
                OnCampaignIDChanging(value);
                ReportPropertyChanging("CampaignID");
                _CampaignID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CampaignID");
                OnCampaignIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CampaignID;
        partial void OnCampaignIDChanging(Nullable<global::System.Int32> value);
        partial void OnCampaignIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Course
        {
            get
            {
                return _Course;
            }
            set
            {
                OnCourseChanging(value);
                ReportPropertyChanging("Course");
                _Course = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Course");
                OnCourseChanged();
            }
        }
        private Nullable<global::System.Int32> _Course;
        partial void OnCourseChanging(Nullable<global::System.Int32> value);
        partial void OnCourseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberTargetO
        {
            get
            {
                return _NumberTargetO;
            }
            set
            {
                OnNumberTargetOChanging(value);
                ReportPropertyChanging("NumberTargetO");
                _NumberTargetO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberTargetO");
                OnNumberTargetOChanged();
            }
        }
        private global::System.Int32 _NumberTargetO;
        partial void OnNumberTargetOChanging(global::System.Int32 value);
        partial void OnNumberTargetOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberTargetOZ
        {
            get
            {
                return _NumberTargetOZ;
            }
            set
            {
                OnNumberTargetOZChanging(value);
                ReportPropertyChanging("NumberTargetOZ");
                _NumberTargetOZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberTargetOZ");
                OnNumberTargetOZChanged();
            }
        }
        private global::System.Int32 _NumberTargetOZ;
        partial void OnNumberTargetOZChanging(global::System.Int32 value);
        partial void OnNumberTargetOZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberTargetZ
        {
            get
            {
                return _NumberTargetZ;
            }
            set
            {
                OnNumberTargetZChanging(value);
                ReportPropertyChanging("NumberTargetZ");
                _NumberTargetZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberTargetZ");
                OnNumberTargetZChanged();
            }
        }
        private global::System.Int32 _NumberTargetZ;
        partial void OnNumberTargetZChanging(global::System.Int32 value);
        partial void OnNumberTargetZChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_AdmissionVolume_AdmissionItemType", "AdmissionItemType")]
        public AdmissionItemType AdmissionItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("InsitutionsModel.FK_AdmissionVolume_AdmissionItemType", "AdmissionItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("InsitutionsModel.FK_AdmissionVolume_AdmissionItemType", "AdmissionItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdmissionItemType> AdmissionItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("InsitutionsModel.FK_AdmissionVolume_AdmissionItemType", "AdmissionItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdmissionItemType>("InsitutionsModel.FK_AdmissionVolume_AdmissionItemType", "AdmissionItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_AdmissionVolume_Direction", "Direction")]
        public Direction Direction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("InsitutionsModel.FK_AdmissionVolume_Direction", "Direction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("InsitutionsModel.FK_AdmissionVolume_Direction", "Direction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Direction> DirectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("InsitutionsModel.FK_AdmissionVolume_Direction", "Direction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Direction>("InsitutionsModel.FK_AdmissionVolume_Direction", "Direction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_AdmissionVolume_Institution", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_AdmissionVolume_Institution", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_AdmissionVolume_Institution", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_AdmissionVolume_Institution", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("InsitutionsModel.FK_AdmissionVolume_Institution", "Institution", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InsitutionsModel", Name="AllowedDirections")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AllowedDirections : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AllowedDirections object.
        /// </summary>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        /// <param name="directionID">Initial value of the DirectionID property.</param>
        /// <param name="admissionItemTypeID">Initial value of the AdmissionItemTypeID property.</param>
        public static AllowedDirections CreateAllowedDirections(global::System.Int32 institutionID, global::System.Int32 directionID, global::System.Int16 admissionItemTypeID)
        {
            AllowedDirections allowedDirections = new AllowedDirections();
            allowedDirections.InstitutionID = institutionID;
            allowedDirections.DirectionID = directionID;
            allowedDirections.AdmissionItemTypeID = admissionItemTypeID;
            return allowedDirections;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                if (_InstitutionID != value)
                {
                    OnInstitutionIDChanging(value);
                    ReportPropertyChanging("InstitutionID");
                    _InstitutionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstitutionID");
                    OnInstitutionIDChanged();
                }
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DirectionID
        {
            get
            {
                return _DirectionID;
            }
            set
            {
                if (_DirectionID != value)
                {
                    OnDirectionIDChanging(value);
                    ReportPropertyChanging("DirectionID");
                    _DirectionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DirectionID");
                    OnDirectionIDChanged();
                }
            }
        }
        private global::System.Int32 _DirectionID;
        partial void OnDirectionIDChanging(global::System.Int32 value);
        partial void OnDirectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 AdmissionItemTypeID
        {
            get
            {
                return _AdmissionItemTypeID;
            }
            set
            {
                if (_AdmissionItemTypeID != value)
                {
                    OnAdmissionItemTypeIDChanging(value);
                    ReportPropertyChanging("AdmissionItemTypeID");
                    _AdmissionItemTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdmissionItemTypeID");
                    OnAdmissionItemTypeIDChanged();
                }
            }
        }
        private global::System.Int16 _AdmissionItemTypeID;
        partial void OnAdmissionItemTypeIDChanging(global::System.Int16 value);
        partial void OnAdmissionItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_AllowedDirections_AdmissionItemType", "AdmissionItemType")]
        public AdmissionItemType AdmissionItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("InsitutionsModel.FK_AllowedDirections_AdmissionItemType", "AdmissionItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("InsitutionsModel.FK_AllowedDirections_AdmissionItemType", "AdmissionItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdmissionItemType> AdmissionItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("InsitutionsModel.FK_AllowedDirections_AdmissionItemType", "AdmissionItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdmissionItemType>("InsitutionsModel.FK_AllowedDirections_AdmissionItemType", "AdmissionItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_AllowedDirections_Direction", "Direction")]
        public Direction Direction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("InsitutionsModel.FK_AllowedDirections_Direction", "Direction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("InsitutionsModel.FK_AllowedDirections_Direction", "Direction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Direction> DirectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("InsitutionsModel.FK_AllowedDirections_Direction", "Direction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Direction>("InsitutionsModel.FK_AllowedDirections_Direction", "Direction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_AllowedDirections_Institution", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_AllowedDirections_Institution", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_AllowedDirections_Institution", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_AllowedDirections_Institution", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("InsitutionsModel.FK_AllowedDirections_Institution", "Institution", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InsitutionsModel", Name="Attachment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attachment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attachment object.
        /// </summary>
        /// <param name="attachmentID">Initial value of the AttachmentID property.</param>
        /// <param name="mimeType">Initial value of the MimeType property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="fileID">Initial value of the FileID property.</param>
        /// <param name="body">Initial value of the Body property.</param>
        public static Attachment CreateAttachment(global::System.Int32 attachmentID, global::System.String mimeType, global::System.String name, global::System.Guid fileID, global::System.Byte[] body)
        {
            Attachment attachment = new Attachment();
            attachment.AttachmentID = attachmentID;
            attachment.MimeType = mimeType;
            attachment.Name = name;
            attachment.FileID = fileID;
            attachment.Body = body;
            return attachment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttachmentID
        {
            get
            {
                return _AttachmentID;
            }
            set
            {
                if (_AttachmentID != value)
                {
                    OnAttachmentIDChanging(value);
                    ReportPropertyChanging("AttachmentID");
                    _AttachmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttachmentID");
                    OnAttachmentIDChanged();
                }
            }
        }
        private global::System.Int32 _AttachmentID;
        partial void OnAttachmentIDChanging(global::System.Int32 value);
        partial void OnAttachmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MimeType
        {
            get
            {
                return _MimeType;
            }
            set
            {
                OnMimeTypeChanging(value);
                ReportPropertyChanging("MimeType");
                _MimeType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MimeType");
                OnMimeTypeChanged();
            }
        }
        private global::System.String _MimeType;
        partial void OnMimeTypeChanging(global::System.String value);
        partial void OnMimeTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FileID
        {
            get
            {
                return _FileID;
            }
            set
            {
                OnFileIDChanging(value);
                ReportPropertyChanging("FileID");
                _FileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileID");
                OnFileIDChanged();
            }
        }
        private global::System.Guid _FileID;
        partial void OnFileIDChanging(global::System.Guid value);
        partial void OnFileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Body
        {
            get
            {
                return StructuralObject.GetValidValue(_Body);
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.Byte[] _Body;
        partial void OnBodyChanging(global::System.Byte[] value);
        partial void OnBodyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_Institution_Attachment", "Institution")]
        public EntityCollection<Institution> Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Institution>("InsitutionsModel.FK_Institution_Attachment", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Institution>("InsitutionsModel.FK_Institution_Attachment", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionAccreditation_Attachment", "InstitutionAccreditation")]
        public EntityCollection<InstitutionAccreditation> InstitutionAccreditation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstitutionAccreditation>("InsitutionsModel.FK_InstitutionAccreditation_Attachment", "InstitutionAccreditation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstitutionAccreditation>("InsitutionsModel.FK_InstitutionAccreditation_Attachment", "InstitutionAccreditation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionLicense_Attachment", "InstitutionLicense")]
        public EntityCollection<InstitutionLicense> InstitutionLicense
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstitutionLicense>("InsitutionsModel.FK_InstitutionLicense_Attachment", "InstitutionLicense");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstitutionLicense>("InsitutionsModel.FK_InstitutionLicense_Attachment", "InstitutionLicense", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionHistory_AccreditationAttachment", "InstitutionHistory")]
        public EntityCollection<InstitutionHistory> InstitutionHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstitutionHistory>("InsitutionsModel.FK_InstitutionHistory_AccreditationAttachment", "InstitutionHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstitutionHistory>("InsitutionsModel.FK_InstitutionHistory_AccreditationAttachment", "InstitutionHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionHistory_HostelAttachment", "InstitutionHistory")]
        public EntityCollection<InstitutionHistory> InstitutionHistory1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstitutionHistory>("InsitutionsModel.FK_InstitutionHistory_HostelAttachment", "InstitutionHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstitutionHistory>("InsitutionsModel.FK_InstitutionHistory_HostelAttachment", "InstitutionHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionHistory_LicenseAttachment", "InstitutionHistory")]
        public EntityCollection<InstitutionHistory> InstitutionHistory2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstitutionHistory>("InsitutionsModel.FK_InstitutionHistory_LicenseAttachment", "InstitutionHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstitutionHistory>("InsitutionsModel.FK_InstitutionHistory_LicenseAttachment", "InstitutionHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InsitutionsModel", Name="Direction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Direction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Direction object.
        /// </summary>
        /// <param name="directionID">Initial value of the DirectionID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Direction CreateDirection(global::System.Int32 directionID, global::System.String name)
        {
            Direction direction = new Direction();
            direction.DirectionID = directionID;
            direction.Name = name;
            return direction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DirectionID
        {
            get
            {
                return _DirectionID;
            }
            set
            {
                if (_DirectionID != value)
                {
                    OnDirectionIDChanging(value);
                    ReportPropertyChanging("DirectionID");
                    _DirectionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DirectionID");
                    OnDirectionIDChanged();
                }
            }
        }
        private global::System.Int32 _DirectionID;
        partial void OnDirectionIDChanging(global::System.Int32 value);
        partial void OnDirectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QUALIFICATIONCODE
        {
            get
            {
                return _QUALIFICATIONCODE;
            }
            set
            {
                OnQUALIFICATIONCODEChanging(value);
                ReportPropertyChanging("QUALIFICATIONCODE");
                _QUALIFICATIONCODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QUALIFICATIONCODE");
                OnQUALIFICATIONCODEChanged();
            }
        }
        private global::System.String _QUALIFICATIONCODE;
        partial void OnQUALIFICATIONCODEChanging(global::System.String value);
        partial void OnQUALIFICATIONCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PERIOD
        {
            get
            {
                return _PERIOD;
            }
            set
            {
                OnPERIODChanging(value);
                ReportPropertyChanging("PERIOD");
                _PERIOD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PERIOD");
                OnPERIODChanged();
            }
        }
        private global::System.String _PERIOD;
        partial void OnPERIODChanging(global::System.String value);
        partial void OnPERIODChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SYS_GUID
        {
            get
            {
                return _SYS_GUID;
            }
            set
            {
                OnSYS_GUIDChanging(value);
                ReportPropertyChanging("SYS_GUID");
                _SYS_GUID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SYS_GUID");
                OnSYS_GUIDChanged();
            }
        }
        private global::System.String _SYS_GUID;
        partial void OnSYS_GUIDChanging(global::System.String value);
        partial void OnSYS_GUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EDULEVEL
        {
            get
            {
                return _EDULEVEL;
            }
            set
            {
                OnEDULEVELChanging(value);
                ReportPropertyChanging("EDULEVEL");
                _EDULEVEL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EDULEVEL");
                OnEDULEVELChanged();
            }
        }
        private global::System.String _EDULEVEL;
        partial void OnEDULEVELChanging(global::System.String value);
        partial void OnEDULEVELChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EDUPROGRAMTYPE
        {
            get
            {
                return _EDUPROGRAMTYPE;
            }
            set
            {
                OnEDUPROGRAMTYPEChanging(value);
                ReportPropertyChanging("EDUPROGRAMTYPE");
                _EDUPROGRAMTYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EDUPROGRAMTYPE");
                OnEDUPROGRAMTYPEChanged();
            }
        }
        private global::System.String _EDUPROGRAMTYPE;
        partial void OnEDUPROGRAMTYPEChanging(global::System.String value);
        partial void OnEDUPROGRAMTYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UGSCODE
        {
            get
            {
                return _UGSCODE;
            }
            set
            {
                OnUGSCODEChanging(value);
                ReportPropertyChanging("UGSCODE");
                _UGSCODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UGSCODE");
                OnUGSCODEChanged();
            }
        }
        private global::System.String _UGSCODE;
        partial void OnUGSCODEChanging(global::System.String value);
        partial void OnUGSCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UGSNAME
        {
            get
            {
                return _UGSNAME;
            }
            set
            {
                OnUGSNAMEChanging(value);
                ReportPropertyChanging("UGSNAME");
                _UGSNAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UGSNAME");
                OnUGSNAMEChanged();
            }
        }
        private global::System.String _UGSNAME;
        partial void OnUGSNAMEChanging(global::System.String value);
        partial void OnUGSNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QUALIFICATIONNAME
        {
            get
            {
                return _QUALIFICATIONNAME;
            }
            set
            {
                OnQUALIFICATIONNAMEChanging(value);
                ReportPropertyChanging("QUALIFICATIONNAME");
                _QUALIFICATIONNAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QUALIFICATIONNAME");
                OnQUALIFICATIONNAMEChanged();
            }
        }
        private global::System.String _QUALIFICATIONNAME;
        partial void OnQUALIFICATIONNAMEChanging(global::System.String value);
        partial void OnQUALIFICATIONNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EDU_DIRECTORY
        {
            get
            {
                return _EDU_DIRECTORY;
            }
            set
            {
                OnEDU_DIRECTORYChanging(value);
                ReportPropertyChanging("EDU_DIRECTORY");
                _EDU_DIRECTORY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EDU_DIRECTORY");
                OnEDU_DIRECTORYChanged();
            }
        }
        private global::System.String _EDU_DIRECTORY;
        partial void OnEDU_DIRECTORYChanging(global::System.String value);
        partial void OnEDU_DIRECTORYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EDUPR_ADDITIONAL
        {
            get
            {
                return _EDUPR_ADDITIONAL;
            }
            set
            {
                OnEDUPR_ADDITIONALChanging(value);
                ReportPropertyChanging("EDUPR_ADDITIONAL");
                _EDUPR_ADDITIONAL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EDUPR_ADDITIONAL");
                OnEDUPR_ADDITIONALChanged();
            }
        }
        private global::System.String _EDUPR_ADDITIONAL;
        partial void OnEDUPR_ADDITIONALChanging(global::System.String value);
        partial void OnEDUPR_ADDITIONALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NewCode
        {
            get
            {
                return _NewCode;
            }
            set
            {
                OnNewCodeChanging(value);
                ReportPropertyChanging("NewCode");
                _NewCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NewCode");
                OnNewCodeChanged();
            }
        }
        private global::System.String _NewCode;
        partial void OnNewCodeChanging(global::System.String value);
        partial void OnNewCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionItem_Direction", "InstitutionItem")]
        public EntityCollection<InstitutionItem> InstitutionItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstitutionItem>("InsitutionsModel.FK_InstitutionItem_Direction", "InstitutionItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstitutionItem>("InsitutionsModel.FK_InstitutionItem_Direction", "InstitutionItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_AllowedDirections_Direction", "AllowedDirections")]
        public EntityCollection<AllowedDirections> AllowedDirections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AllowedDirections>("InsitutionsModel.FK_AllowedDirections_Direction", "AllowedDirections");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AllowedDirections>("InsitutionsModel.FK_AllowedDirections_Direction", "AllowedDirections", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_AdmissionVolume_Direction", "AdmissionVolume")]
        public EntityCollection<AdmissionVolume> AdmissionVolume
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdmissionVolume>("InsitutionsModel.FK_AdmissionVolume_Direction", "AdmissionVolume");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdmissionVolume>("InsitutionsModel.FK_AdmissionVolume_Direction", "AdmissionVolume", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_Direction_ParentDirection", "ParentDirection")]
        public ParentDirection ParentDirection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParentDirection>("InsitutionsModel.FK_Direction_ParentDirection", "ParentDirection").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParentDirection>("InsitutionsModel.FK_Direction_ParentDirection", "ParentDirection").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParentDirection> ParentDirectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParentDirection>("InsitutionsModel.FK_Direction_ParentDirection", "ParentDirection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParentDirection>("InsitutionsModel.FK_Direction_ParentDirection", "ParentDirection", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InsitutionsModel", Name="FormOfLaw")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FormOfLaw : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FormOfLaw object.
        /// </summary>
        /// <param name="formOfLawID">Initial value of the FormOfLawID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="displayOrder">Initial value of the DisplayOrder property.</param>
        public static FormOfLaw CreateFormOfLaw(global::System.Int32 formOfLawID, global::System.String name, global::System.Int32 displayOrder)
        {
            FormOfLaw formOfLaw = new FormOfLaw();
            formOfLaw.FormOfLawID = formOfLawID;
            formOfLaw.Name = name;
            formOfLaw.DisplayOrder = displayOrder;
            return formOfLaw;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FormOfLawID
        {
            get
            {
                return _FormOfLawID;
            }
            set
            {
                if (_FormOfLawID != value)
                {
                    OnFormOfLawIDChanging(value);
                    ReportPropertyChanging("FormOfLawID");
                    _FormOfLawID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FormOfLawID");
                    OnFormOfLawIDChanged();
                }
            }
        }
        private global::System.Int32 _FormOfLawID;
        partial void OnFormOfLawIDChanging(global::System.Int32 value);
        partial void OnFormOfLawIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private global::System.Int32 _DisplayOrder;
        partial void OnDisplayOrderChanging(global::System.Int32 value);
        partial void OnDisplayOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _Code;
        partial void OnCodeChanging(Nullable<global::System.Int32> value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_Institution_FormOfLaw", "Institution")]
        public EntityCollection<Institution> Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Institution>("InsitutionsModel.FK_Institution_FormOfLaw", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Institution>("InsitutionsModel.FK_Institution_FormOfLaw", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionHistory_FormOfLaw", "InstitutionHistory")]
        public EntityCollection<InstitutionHistory> InstitutionHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstitutionHistory>("InsitutionsModel.FK_InstitutionHistory_FormOfLaw", "InstitutionHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstitutionHistory>("InsitutionsModel.FK_InstitutionHistory_FormOfLaw", "InstitutionHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InsitutionsModel", Name="Institution")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Institution : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Institution object.
        /// </summary>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        /// <param name="hasMilitaryDepartment">Initial value of the HasMilitaryDepartment property.</param>
        /// <param name="hasHostel">Initial value of the HasHostel property.</param>
        /// <param name="hasHostelForEntrants">Initial value of the HasHostelForEntrants property.</param>
        /// <param name="institutionTypeID">Initial value of the InstitutionTypeID property.</param>
        /// <param name="iNN">Initial value of the INN property.</param>
        /// <param name="oGRN">Initial value of the OGRN property.</param>
        public static Institution CreateInstitution(global::System.Int32 institutionID, global::System.Boolean hasMilitaryDepartment, global::System.Boolean hasHostel, global::System.Boolean hasHostelForEntrants, global::System.Int16 institutionTypeID, global::System.String iNN, global::System.String oGRN)
        {
            Institution institution = new Institution();
            institution.InstitutionID = institutionID;
            institution.HasMilitaryDepartment = hasMilitaryDepartment;
            institution.HasHostel = hasHostel;
            institution.HasHostelForEntrants = hasHostelForEntrants;
            institution.InstitutionTypeID = institutionTypeID;
            institution.INN = iNN;
            institution.OGRN = oGRN;
            return institution;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                if (_InstitutionID != value)
                {
                    OnInstitutionIDChanging(value);
                    ReportPropertyChanging("InstitutionID");
                    _InstitutionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstitutionID");
                    OnInstitutionIDChanged();
                }
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BriefName
        {
            get
            {
                return _BriefName;
            }
            set
            {
                OnBriefNameChanging(value);
                ReportPropertyChanging("BriefName");
                _BriefName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BriefName");
                OnBriefNameChanged();
            }
        }
        private global::System.String _BriefName;
        partial void OnBriefNameChanging(global::System.String value);
        partial void OnBriefNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FormOfLawID
        {
            get
            {
                return _FormOfLawID;
            }
            set
            {
                OnFormOfLawIDChanging(value);
                ReportPropertyChanging("FormOfLawID");
                _FormOfLawID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormOfLawID");
                OnFormOfLawIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FormOfLawID;
        partial void OnFormOfLawIDChanging(Nullable<global::System.Int32> value);
        partial void OnFormOfLawIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegionID
        {
            get
            {
                return _RegionID;
            }
            set
            {
                OnRegionIDChanging(value);
                ReportPropertyChanging("RegionID");
                _RegionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionID");
                OnRegionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RegionID;
        partial void OnRegionIDChanging(Nullable<global::System.Int32> value);
        partial void OnRegionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Site
        {
            get
            {
                return _Site;
            }
            set
            {
                OnSiteChanging(value);
                ReportPropertyChanging("Site");
                _Site = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Site");
                OnSiteChanged();
            }
        }
        private global::System.String _Site;
        partial void OnSiteChanging(global::System.String value);
        partial void OnSiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasMilitaryDepartment
        {
            get
            {
                return _HasMilitaryDepartment;
            }
            set
            {
                OnHasMilitaryDepartmentChanging(value);
                ReportPropertyChanging("HasMilitaryDepartment");
                _HasMilitaryDepartment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasMilitaryDepartment");
                OnHasMilitaryDepartmentChanged();
            }
        }
        private global::System.Boolean _HasMilitaryDepartment;
        partial void OnHasMilitaryDepartmentChanging(global::System.Boolean value);
        partial void OnHasMilitaryDepartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasHostel
        {
            get
            {
                return _HasHostel;
            }
            set
            {
                OnHasHostelChanging(value);
                ReportPropertyChanging("HasHostel");
                _HasHostel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasHostel");
                OnHasHostelChanged();
            }
        }
        private global::System.Boolean _HasHostel;
        partial void OnHasHostelChanging(global::System.Boolean value);
        partial void OnHasHostelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HostelCapacity
        {
            get
            {
                return _HostelCapacity;
            }
            set
            {
                OnHostelCapacityChanging(value);
                ReportPropertyChanging("HostelCapacity");
                _HostelCapacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HostelCapacity");
                OnHostelCapacityChanged();
            }
        }
        private Nullable<global::System.Int32> _HostelCapacity;
        partial void OnHostelCapacityChanging(Nullable<global::System.Int32> value);
        partial void OnHostelCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasHostelForEntrants
        {
            get
            {
                return _HasHostelForEntrants;
            }
            set
            {
                OnHasHostelForEntrantsChanging(value);
                ReportPropertyChanging("HasHostelForEntrants");
                _HasHostelForEntrants = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasHostelForEntrants");
                OnHasHostelForEntrantsChanged();
            }
        }
        private global::System.Boolean _HasHostelForEntrants;
        partial void OnHasHostelForEntrantsChanging(global::System.Boolean value);
        partial void OnHasHostelForEntrantsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 InstitutionTypeID
        {
            get
            {
                return _InstitutionTypeID;
            }
            set
            {
                OnInstitutionTypeIDChanging(value);
                ReportPropertyChanging("InstitutionTypeID");
                _InstitutionTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionTypeID");
                OnInstitutionTypeIDChanged();
            }
        }
        private global::System.Int16 _InstitutionTypeID;
        partial void OnInstitutionTypeIDChanging(global::System.Int16 value);
        partial void OnInstitutionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HostelAttachmentID
        {
            get
            {
                return _HostelAttachmentID;
            }
            set
            {
                OnHostelAttachmentIDChanging(value);
                ReportPropertyChanging("HostelAttachmentID");
                _HostelAttachmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HostelAttachmentID");
                OnHostelAttachmentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _HostelAttachmentID;
        partial void OnHostelAttachmentIDChanging(Nullable<global::System.Int32> value);
        partial void OnHostelAttachmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String INN
        {
            get
            {
                return _INN;
            }
            set
            {
                OnINNChanging(value);
                ReportPropertyChanging("INN");
                _INN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("INN");
                OnINNChanged();
            }
        }
        private global::System.String _INN;
        partial void OnINNChanging(global::System.String value);
        partial void OnINNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OGRN
        {
            get
            {
                return _OGRN;
            }
            set
            {
                OnOGRNChanging(value);
                ReportPropertyChanging("OGRN");
                _OGRN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OGRN");
                OnOGRNChanged();
            }
        }
        private global::System.String _OGRN;
        partial void OnOGRNChanging(global::System.String value);
        partial void OnOGRNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AdmissionStructurePublishDate
        {
            get
            {
                return _AdmissionStructurePublishDate;
            }
            set
            {
                OnAdmissionStructurePublishDateChanging(value);
                ReportPropertyChanging("AdmissionStructurePublishDate");
                _AdmissionStructurePublishDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmissionStructurePublishDate");
                OnAdmissionStructurePublishDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AdmissionStructurePublishDate;
        partial void OnAdmissionStructurePublishDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAdmissionStructurePublishDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReceivingApplicationDate
        {
            get
            {
                return _ReceivingApplicationDate;
            }
            set
            {
                OnReceivingApplicationDateChanging(value);
                ReportPropertyChanging("ReceivingApplicationDate");
                _ReceivingApplicationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivingApplicationDate");
                OnReceivingApplicationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReceivingApplicationDate;
        partial void OnReceivingApplicationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReceivingApplicationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EsrpOrgID
        {
            get
            {
                return _EsrpOrgID;
            }
            set
            {
                OnEsrpOrgIDChanging(value);
                ReportPropertyChanging("EsrpOrgID");
                _EsrpOrgID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EsrpOrgID");
                OnEsrpOrgIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EsrpOrgID;
        partial void OnEsrpOrgIDChanging(Nullable<global::System.Int32> value);
        partial void OnEsrpOrgIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerDepartment
        {
            get
            {
                return _OwnerDepartment;
            }
            set
            {
                OnOwnerDepartmentChanging(value);
                ReportPropertyChanging("OwnerDepartment");
                _OwnerDepartment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OwnerDepartment");
                OnOwnerDepartmentChanged();
            }
        }
        private global::System.String _OwnerDepartment;
        partial void OnOwnerDepartmentChanging(global::System.String value);
        partial void OnOwnerDepartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MainEsrpOrgId
        {
            get
            {
                return _MainEsrpOrgId;
            }
            set
            {
                OnMainEsrpOrgIdChanging(value);
                ReportPropertyChanging("MainEsrpOrgId");
                _MainEsrpOrgId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MainEsrpOrgId");
                OnMainEsrpOrgIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MainEsrpOrgId;
        partial void OnMainEsrpOrgIdChanging(Nullable<global::System.Int32> value);
        partial void OnMainEsrpOrgIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FounderEsrpOrgId
        {
            get
            {
                return _FounderEsrpOrgId;
            }
            set
            {
                OnFounderEsrpOrgIdChanging(value);
                ReportPropertyChanging("FounderEsrpOrgId");
                _FounderEsrpOrgId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FounderEsrpOrgId");
                OnFounderEsrpOrgIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FounderEsrpOrgId;
        partial void OnFounderEsrpOrgIdChanging(Nullable<global::System.Int32> value);
        partial void OnFounderEsrpOrgIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_Institution_FormOfLaw", "FormOfLaw")]
        public FormOfLaw FormOfLaw
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormOfLaw>("InsitutionsModel.FK_Institution_FormOfLaw", "FormOfLaw").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormOfLaw>("InsitutionsModel.FK_Institution_FormOfLaw", "FormOfLaw").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FormOfLaw> FormOfLawReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormOfLaw>("InsitutionsModel.FK_Institution_FormOfLaw", "FormOfLaw");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FormOfLaw>("InsitutionsModel.FK_Institution_FormOfLaw", "FormOfLaw", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionAccreditation_Institution", "InstitutionAccreditation")]
        public EntityCollection<InstitutionAccreditation> InstitutionAccreditation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstitutionAccreditation>("InsitutionsModel.FK_InstitutionAccreditation_Institution", "InstitutionAccreditation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstitutionAccreditation>("InsitutionsModel.FK_InstitutionAccreditation_Institution", "InstitutionAccreditation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionLicense_Institution", "InstitutionLicense")]
        public EntityCollection<InstitutionLicense> InstitutionLicense
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstitutionLicense>("InsitutionsModel.FK_InstitutionLicense_Institution", "InstitutionLicense");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstitutionLicense>("InsitutionsModel.FK_InstitutionLicense_Institution", "InstitutionLicense", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionItem_Institution", "InstitutionItem")]
        public EntityCollection<InstitutionItem> InstitutionItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstitutionItem>("InsitutionsModel.FK_InstitutionItem_Institution", "InstitutionItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstitutionItem>("InsitutionsModel.FK_InstitutionItem_Institution", "InstitutionItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_Institution_Attachment", "Attachment")]
        public Attachment HostelAttachment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("InsitutionsModel.FK_Institution_Attachment", "Attachment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("InsitutionsModel.FK_Institution_Attachment", "Attachment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Attachment> HostelAttachmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("InsitutionsModel.FK_Institution_Attachment", "Attachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Attachment>("InsitutionsModel.FK_Institution_Attachment", "Attachment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_UserPolicy_Institution", "UserPolicy")]
        public EntityCollection<UserPolicy> UserPolicy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserPolicy>("InsitutionsModel.FK_UserPolicy_Institution", "UserPolicy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserPolicy>("InsitutionsModel.FK_UserPolicy_Institution", "UserPolicy", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_AllowedDirections_Institution", "AllowedDirections")]
        public EntityCollection<AllowedDirections> AllowedDirections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AllowedDirections>("InsitutionsModel.FK_AllowedDirections_Institution", "AllowedDirections");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AllowedDirections>("InsitutionsModel.FK_AllowedDirections_Institution", "AllowedDirections", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_AdmissionVolume_Institution", "AdmissionVolume")]
        public EntityCollection<AdmissionVolume> AdmissionVolume
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdmissionVolume>("InsitutionsModel.FK_AdmissionVolume_Institution", "AdmissionVolume");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdmissionVolume>("InsitutionsModel.FK_AdmissionVolume_Institution", "AdmissionVolume", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_Institution_RegionType", "RegionType")]
        public RegionType RegionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionType>("InsitutionsModel.FK_Institution_RegionType", "RegionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionType>("InsitutionsModel.FK_Institution_RegionType", "RegionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RegionType> RegionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionType>("InsitutionsModel.FK_Institution_RegionType", "RegionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RegionType>("InsitutionsModel.FK_Institution_RegionType", "RegionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_RequestDirection_Request", "RequestDirection")]
        public EntityCollection<RequestDirection> RequestDirection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestDirection>("InsitutionsModel.FK_RequestDirection_Request", "RequestDirection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestDirection>("InsitutionsModel.FK_RequestDirection_Request", "RequestDirection", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InsitutionsModel", Name="InstitutionAccreditation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstitutionAccreditation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstitutionAccreditation object.
        /// </summary>
        /// <param name="accreditationID">Initial value of the AccreditationID property.</param>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        /// <param name="accreditation">Initial value of the Accreditation property.</param>
        public static InstitutionAccreditation CreateInstitutionAccreditation(global::System.Int32 accreditationID, global::System.Int32 institutionID, global::System.String accreditation)
        {
            InstitutionAccreditation institutionAccreditation = new InstitutionAccreditation();
            institutionAccreditation.AccreditationID = accreditationID;
            institutionAccreditation.InstitutionID = institutionID;
            institutionAccreditation.Accreditation = accreditation;
            return institutionAccreditation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccreditationID
        {
            get
            {
                return _AccreditationID;
            }
            set
            {
                if (_AccreditationID != value)
                {
                    OnAccreditationIDChanging(value);
                    ReportPropertyChanging("AccreditationID");
                    _AccreditationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccreditationID");
                    OnAccreditationIDChanged();
                }
            }
        }
        private global::System.Int32 _AccreditationID;
        partial void OnAccreditationIDChanging(global::System.Int32 value);
        partial void OnAccreditationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                OnInstitutionIDChanging(value);
                ReportPropertyChanging("InstitutionID");
                _InstitutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionID");
                OnInstitutionIDChanged();
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Accreditation
        {
            get
            {
                return _Accreditation;
            }
            set
            {
                OnAccreditationChanging(value);
                ReportPropertyChanging("Accreditation");
                _Accreditation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Accreditation");
                OnAccreditationChanged();
            }
        }
        private global::System.String _Accreditation;
        partial void OnAccreditationChanging(global::System.String value);
        partial void OnAccreditationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AttachmentID
        {
            get
            {
                return _AttachmentID;
            }
            set
            {
                OnAttachmentIDChanging(value);
                ReportPropertyChanging("AttachmentID");
                _AttachmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttachmentID");
                OnAttachmentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AttachmentID;
        partial void OnAttachmentIDChanging(Nullable<global::System.Int32> value);
        partial void OnAttachmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionAccreditation_Institution", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_InstitutionAccreditation_Institution", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_InstitutionAccreditation_Institution", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_InstitutionAccreditation_Institution", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("InsitutionsModel.FK_InstitutionAccreditation_Institution", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionAccreditation_Attachment", "Attachment")]
        public Attachment Attachment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("InsitutionsModel.FK_InstitutionAccreditation_Attachment", "Attachment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("InsitutionsModel.FK_InstitutionAccreditation_Attachment", "Attachment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Attachment> AttachmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("InsitutionsModel.FK_InstitutionAccreditation_Attachment", "Attachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Attachment>("InsitutionsModel.FK_InstitutionAccreditation_Attachment", "Attachment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InsitutionsModel", Name="InstitutionHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstitutionHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstitutionHistory object.
        /// </summary>
        /// <param name="institutionHistoryID">Initial value of the InstitutionHistoryID property.</param>
        /// <param name="institutionTypeID">Initial value of the InstitutionTypeID property.</param>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        /// <param name="hasMilitaryDepartment">Initial value of the HasMilitaryDepartment property.</param>
        /// <param name="hasHostel">Initial value of the HasHostel property.</param>
        /// <param name="hasHostelForEntrants">Initial value of the HasHostelForEntrants property.</param>
        /// <param name="iNN">Initial value of the INN property.</param>
        /// <param name="oGRN">Initial value of the OGRN property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static InstitutionHistory CreateInstitutionHistory(global::System.Int32 institutionHistoryID, global::System.Int16 institutionTypeID, global::System.Int32 institutionID, global::System.Boolean hasMilitaryDepartment, global::System.Boolean hasHostel, global::System.Boolean hasHostelForEntrants, global::System.String iNN, global::System.String oGRN, global::System.DateTime createdDate)
        {
            InstitutionHistory institutionHistory = new InstitutionHistory();
            institutionHistory.InstitutionHistoryID = institutionHistoryID;
            institutionHistory.InstitutionTypeID = institutionTypeID;
            institutionHistory.InstitutionID = institutionID;
            institutionHistory.HasMilitaryDepartment = hasMilitaryDepartment;
            institutionHistory.HasHostel = hasHostel;
            institutionHistory.HasHostelForEntrants = hasHostelForEntrants;
            institutionHistory.INN = iNN;
            institutionHistory.OGRN = oGRN;
            institutionHistory.CreatedDate = createdDate;
            return institutionHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionHistoryID
        {
            get
            {
                return _InstitutionHistoryID;
            }
            set
            {
                if (_InstitutionHistoryID != value)
                {
                    OnInstitutionHistoryIDChanging(value);
                    ReportPropertyChanging("InstitutionHistoryID");
                    _InstitutionHistoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstitutionHistoryID");
                    OnInstitutionHistoryIDChanged();
                }
            }
        }
        private global::System.Int32 _InstitutionHistoryID;
        partial void OnInstitutionHistoryIDChanging(global::System.Int32 value);
        partial void OnInstitutionHistoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 InstitutionTypeID
        {
            get
            {
                return _InstitutionTypeID;
            }
            set
            {
                OnInstitutionTypeIDChanging(value);
                ReportPropertyChanging("InstitutionTypeID");
                _InstitutionTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionTypeID");
                OnInstitutionTypeIDChanged();
            }
        }
        private global::System.Int16 _InstitutionTypeID;
        partial void OnInstitutionTypeIDChanging(global::System.Int16 value);
        partial void OnInstitutionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                OnInstitutionIDChanging(value);
                ReportPropertyChanging("InstitutionID");
                _InstitutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionID");
                OnInstitutionIDChanged();
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BriefName
        {
            get
            {
                return _BriefName;
            }
            set
            {
                OnBriefNameChanging(value);
                ReportPropertyChanging("BriefName");
                _BriefName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BriefName");
                OnBriefNameChanged();
            }
        }
        private global::System.String _BriefName;
        partial void OnBriefNameChanging(global::System.String value);
        partial void OnBriefNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FormOfLawID
        {
            get
            {
                return _FormOfLawID;
            }
            set
            {
                OnFormOfLawIDChanging(value);
                ReportPropertyChanging("FormOfLawID");
                _FormOfLawID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormOfLawID");
                OnFormOfLawIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FormOfLawID;
        partial void OnFormOfLawIDChanging(Nullable<global::System.Int32> value);
        partial void OnFormOfLawIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegionID
        {
            get
            {
                return _RegionID;
            }
            set
            {
                OnRegionIDChanging(value);
                ReportPropertyChanging("RegionID");
                _RegionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionID");
                OnRegionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RegionID;
        partial void OnRegionIDChanging(Nullable<global::System.Int32> value);
        partial void OnRegionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Site
        {
            get
            {
                return _Site;
            }
            set
            {
                OnSiteChanging(value);
                ReportPropertyChanging("Site");
                _Site = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Site");
                OnSiteChanged();
            }
        }
        private global::System.String _Site;
        partial void OnSiteChanging(global::System.String value);
        partial void OnSiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasMilitaryDepartment
        {
            get
            {
                return _HasMilitaryDepartment;
            }
            set
            {
                OnHasMilitaryDepartmentChanging(value);
                ReportPropertyChanging("HasMilitaryDepartment");
                _HasMilitaryDepartment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasMilitaryDepartment");
                OnHasMilitaryDepartmentChanged();
            }
        }
        private global::System.Boolean _HasMilitaryDepartment;
        partial void OnHasMilitaryDepartmentChanging(global::System.Boolean value);
        partial void OnHasMilitaryDepartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasHostel
        {
            get
            {
                return _HasHostel;
            }
            set
            {
                OnHasHostelChanging(value);
                ReportPropertyChanging("HasHostel");
                _HasHostel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasHostel");
                OnHasHostelChanged();
            }
        }
        private global::System.Boolean _HasHostel;
        partial void OnHasHostelChanging(global::System.Boolean value);
        partial void OnHasHostelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HostelCapacity
        {
            get
            {
                return _HostelCapacity;
            }
            set
            {
                OnHostelCapacityChanging(value);
                ReportPropertyChanging("HostelCapacity");
                _HostelCapacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HostelCapacity");
                OnHostelCapacityChanged();
            }
        }
        private Nullable<global::System.Int32> _HostelCapacity;
        partial void OnHostelCapacityChanging(Nullable<global::System.Int32> value);
        partial void OnHostelCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasHostelForEntrants
        {
            get
            {
                return _HasHostelForEntrants;
            }
            set
            {
                OnHasHostelForEntrantsChanging(value);
                ReportPropertyChanging("HasHostelForEntrants");
                _HasHostelForEntrants = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasHostelForEntrants");
                OnHasHostelForEntrantsChanged();
            }
        }
        private global::System.Boolean _HasHostelForEntrants;
        partial void OnHasHostelForEntrantsChanging(global::System.Boolean value);
        partial void OnHasHostelForEntrantsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HostelAttachmentID
        {
            get
            {
                return _HostelAttachmentID;
            }
            set
            {
                OnHostelAttachmentIDChanging(value);
                ReportPropertyChanging("HostelAttachmentID");
                _HostelAttachmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HostelAttachmentID");
                OnHostelAttachmentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _HostelAttachmentID;
        partial void OnHostelAttachmentIDChanging(Nullable<global::System.Int32> value);
        partial void OnHostelAttachmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String INN
        {
            get
            {
                return _INN;
            }
            set
            {
                OnINNChanging(value);
                ReportPropertyChanging("INN");
                _INN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("INN");
                OnINNChanged();
            }
        }
        private global::System.String _INN;
        partial void OnINNChanging(global::System.String value);
        partial void OnINNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OGRN
        {
            get
            {
                return _OGRN;
            }
            set
            {
                OnOGRNChanging(value);
                ReportPropertyChanging("OGRN");
                _OGRN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OGRN");
                OnOGRNChanged();
            }
        }
        private global::System.String _OGRN;
        partial void OnOGRNChanging(global::System.String value);
        partial void OnOGRNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AdmissionStructurePublishDate
        {
            get
            {
                return _AdmissionStructurePublishDate;
            }
            set
            {
                OnAdmissionStructurePublishDateChanging(value);
                ReportPropertyChanging("AdmissionStructurePublishDate");
                _AdmissionStructurePublishDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmissionStructurePublishDate");
                OnAdmissionStructurePublishDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AdmissionStructurePublishDate;
        partial void OnAdmissionStructurePublishDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAdmissionStructurePublishDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReceivingApplicationDate
        {
            get
            {
                return _ReceivingApplicationDate;
            }
            set
            {
                OnReceivingApplicationDateChanging(value);
                ReportPropertyChanging("ReceivingApplicationDate");
                _ReceivingApplicationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivingApplicationDate");
                OnReceivingApplicationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReceivingApplicationDate;
        partial void OnReceivingApplicationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReceivingApplicationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EsrpOrgID
        {
            get
            {
                return _EsrpOrgID;
            }
            set
            {
                OnEsrpOrgIDChanging(value);
                ReportPropertyChanging("EsrpOrgID");
                _EsrpOrgID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EsrpOrgID");
                OnEsrpOrgIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EsrpOrgID;
        partial void OnEsrpOrgIDChanging(Nullable<global::System.Int32> value);
        partial void OnEsrpOrgIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerDepartment
        {
            get
            {
                return _OwnerDepartment;
            }
            set
            {
                OnOwnerDepartmentChanging(value);
                ReportPropertyChanging("OwnerDepartment");
                _OwnerDepartment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OwnerDepartment");
                OnOwnerDepartmentChanged();
            }
        }
        private global::System.String _OwnerDepartment;
        partial void OnOwnerDepartmentChanging(global::System.String value);
        partial void OnOwnerDepartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Accreditation
        {
            get
            {
                return _Accreditation;
            }
            set
            {
                OnAccreditationChanging(value);
                ReportPropertyChanging("Accreditation");
                _Accreditation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Accreditation");
                OnAccreditationChanged();
            }
        }
        private global::System.String _Accreditation;
        partial void OnAccreditationChanging(global::System.String value);
        partial void OnAccreditationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccreditationAttachmentID
        {
            get
            {
                return _AccreditationAttachmentID;
            }
            set
            {
                OnAccreditationAttachmentIDChanging(value);
                ReportPropertyChanging("AccreditationAttachmentID");
                _AccreditationAttachmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccreditationAttachmentID");
                OnAccreditationAttachmentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AccreditationAttachmentID;
        partial void OnAccreditationAttachmentIDChanging(Nullable<global::System.Int32> value);
        partial void OnAccreditationAttachmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LicenseNumber
        {
            get
            {
                return _LicenseNumber;
            }
            set
            {
                OnLicenseNumberChanging(value);
                ReportPropertyChanging("LicenseNumber");
                _LicenseNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LicenseNumber");
                OnLicenseNumberChanged();
            }
        }
        private global::System.String _LicenseNumber;
        partial void OnLicenseNumberChanging(global::System.String value);
        partial void OnLicenseNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LicenseDate
        {
            get
            {
                return _LicenseDate;
            }
            set
            {
                OnLicenseDateChanging(value);
                ReportPropertyChanging("LicenseDate");
                _LicenseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseDate");
                OnLicenseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LicenseDate;
        partial void OnLicenseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLicenseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LicenseAttachmentID
        {
            get
            {
                return _LicenseAttachmentID;
            }
            set
            {
                OnLicenseAttachmentIDChanging(value);
                ReportPropertyChanging("LicenseAttachmentID");
                _LicenseAttachmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseAttachmentID");
                OnLicenseAttachmentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LicenseAttachmentID;
        partial void OnLicenseAttachmentIDChanging(Nullable<global::System.Int32> value);
        partial void OnLicenseAttachmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionHistory_AccreditationAttachment", "Attachment")]
        public Attachment AccreditationAttachment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("InsitutionsModel.FK_InstitutionHistory_AccreditationAttachment", "Attachment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("InsitutionsModel.FK_InstitutionHistory_AccreditationAttachment", "Attachment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Attachment> AccreditationAttachmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("InsitutionsModel.FK_InstitutionHistory_AccreditationAttachment", "Attachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Attachment>("InsitutionsModel.FK_InstitutionHistory_AccreditationAttachment", "Attachment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionHistory_HostelAttachment", "Attachment")]
        public Attachment HostelAttachment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("InsitutionsModel.FK_InstitutionHistory_HostelAttachment", "Attachment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("InsitutionsModel.FK_InstitutionHistory_HostelAttachment", "Attachment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Attachment> HostelAttachmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("InsitutionsModel.FK_InstitutionHistory_HostelAttachment", "Attachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Attachment>("InsitutionsModel.FK_InstitutionHistory_HostelAttachment", "Attachment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionHistory_LicenseAttachment", "Attachment")]
        public Attachment LicenseAttachment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("InsitutionsModel.FK_InstitutionHistory_LicenseAttachment", "Attachment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("InsitutionsModel.FK_InstitutionHistory_LicenseAttachment", "Attachment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Attachment> LicenseAttachmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("InsitutionsModel.FK_InstitutionHistory_LicenseAttachment", "Attachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Attachment>("InsitutionsModel.FK_InstitutionHistory_LicenseAttachment", "Attachment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionHistory_FormOfLaw", "FormOfLaw")]
        public FormOfLaw FormOfLaw
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormOfLaw>("InsitutionsModel.FK_InstitutionHistory_FormOfLaw", "FormOfLaw").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormOfLaw>("InsitutionsModel.FK_InstitutionHistory_FormOfLaw", "FormOfLaw").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FormOfLaw> FormOfLawReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FormOfLaw>("InsitutionsModel.FK_InstitutionHistory_FormOfLaw", "FormOfLaw");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FormOfLaw>("InsitutionsModel.FK_InstitutionHistory_FormOfLaw", "FormOfLaw", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionHistory_RegionType", "RegionType")]
        public RegionType RegionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionType>("InsitutionsModel.FK_InstitutionHistory_RegionType", "RegionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionType>("InsitutionsModel.FK_InstitutionHistory_RegionType", "RegionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RegionType> RegionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionType>("InsitutionsModel.FK_InstitutionHistory_RegionType", "RegionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RegionType>("InsitutionsModel.FK_InstitutionHistory_RegionType", "RegionType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InsitutionsModel", Name="InstitutionItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstitutionItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstitutionItem object.
        /// </summary>
        /// <param name="institutionItemID">Initial value of the InstitutionItemID property.</param>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        /// <param name="itemTypeID">Initial value of the ItemTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static InstitutionItem CreateInstitutionItem(global::System.Int32 institutionItemID, global::System.Int32 institutionID, global::System.Int16 itemTypeID, global::System.String name)
        {
            InstitutionItem institutionItem = new InstitutionItem();
            institutionItem.InstitutionItemID = institutionItemID;
            institutionItem.InstitutionID = institutionID;
            institutionItem.ItemTypeID = itemTypeID;
            institutionItem.Name = name;
            return institutionItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionItemID
        {
            get
            {
                return _InstitutionItemID;
            }
            set
            {
                if (_InstitutionItemID != value)
                {
                    OnInstitutionItemIDChanging(value);
                    ReportPropertyChanging("InstitutionItemID");
                    _InstitutionItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstitutionItemID");
                    OnInstitutionItemIDChanged();
                }
            }
        }
        private global::System.Int32 _InstitutionItemID;
        partial void OnInstitutionItemIDChanging(global::System.Int32 value);
        partial void OnInstitutionItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                OnInstitutionIDChanging(value);
                ReportPropertyChanging("InstitutionID");
                _InstitutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionID");
                OnInstitutionIDChanged();
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ItemTypeID
        {
            get
            {
                return _ItemTypeID;
            }
            set
            {
                OnItemTypeIDChanging(value);
                ReportPropertyChanging("ItemTypeID");
                _ItemTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemTypeID");
                OnItemTypeIDChanged();
            }
        }
        private global::System.Int16 _ItemTypeID;
        partial void OnItemTypeIDChanging(global::System.Int16 value);
        partial void OnItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BriefName
        {
            get
            {
                return _BriefName;
            }
            set
            {
                OnBriefNameChanging(value);
                ReportPropertyChanging("BriefName");
                _BriefName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BriefName");
                OnBriefNameChanged();
            }
        }
        private global::System.String _BriefName;
        partial void OnBriefNameChanging(global::System.String value);
        partial void OnBriefNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DirectionID
        {
            get
            {
                return _DirectionID;
            }
            set
            {
                OnDirectionIDChanging(value);
                ReportPropertyChanging("DirectionID");
                _DirectionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DirectionID");
                OnDirectionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DirectionID;
        partial void OnDirectionIDChanging(Nullable<global::System.Int32> value);
        partial void OnDirectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Site
        {
            get
            {
                return _Site;
            }
            set
            {
                OnSiteChanging(value);
                ReportPropertyChanging("Site");
                _Site = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Site");
                OnSiteChanged();
            }
        }
        private global::System.String _Site;
        partial void OnSiteChanging(global::System.String value);
        partial void OnSiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.String _UID;
        partial void OnUIDChanging(global::System.String value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionItem_Direction", "Direction")]
        public Direction Direction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("InsitutionsModel.FK_InstitutionItem_Direction", "Direction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("InsitutionsModel.FK_InstitutionItem_Direction", "Direction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Direction> DirectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("InsitutionsModel.FK_InstitutionItem_Direction", "Direction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Direction>("InsitutionsModel.FK_InstitutionItem_Direction", "Direction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionItem_Institution", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_InstitutionItem_Institution", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_InstitutionItem_Institution", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_InstitutionItem_Institution", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("InsitutionsModel.FK_InstitutionItem_Institution", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionStructure_InstitutionItem", "InstitutionStructure")]
        public EntityCollection<InstitutionStructure> InstitutionStructure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstitutionStructure>("InsitutionsModel.FK_InstitutionStructure_InstitutionItem", "InstitutionStructure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstitutionStructure>("InsitutionsModel.FK_InstitutionStructure_InstitutionItem", "InstitutionStructure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionItem_ParentInstitutionItem", "Parent")]
        public EntityCollection<InstitutionItem> Children
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstitutionItem>("InsitutionsModel.FK_InstitutionItem_ParentInstitutionItem", "Parent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstitutionItem>("InsitutionsModel.FK_InstitutionItem_ParentInstitutionItem", "Parent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionItem_ParentInstitutionItem", "Child")]
        public InstitutionItem Parent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstitutionItem>("InsitutionsModel.FK_InstitutionItem_ParentInstitutionItem", "Child").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstitutionItem>("InsitutionsModel.FK_InstitutionItem_ParentInstitutionItem", "Child").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstitutionItem> ParentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstitutionItem>("InsitutionsModel.FK_InstitutionItem_ParentInstitutionItem", "Child");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstitutionItem>("InsitutionsModel.FK_InstitutionItem_ParentInstitutionItem", "Child", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InsitutionsModel", Name="InstitutionLicense")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstitutionLicense : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstitutionLicense object.
        /// </summary>
        /// <param name="licenseID">Initial value of the LicenseID property.</param>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        /// <param name="licenseNumber">Initial value of the LicenseNumber property.</param>
        /// <param name="licenseDate">Initial value of the LicenseDate property.</param>
        public static InstitutionLicense CreateInstitutionLicense(global::System.Int32 licenseID, global::System.Int32 institutionID, global::System.String licenseNumber, global::System.DateTime licenseDate)
        {
            InstitutionLicense institutionLicense = new InstitutionLicense();
            institutionLicense.LicenseID = licenseID;
            institutionLicense.InstitutionID = institutionID;
            institutionLicense.LicenseNumber = licenseNumber;
            institutionLicense.LicenseDate = licenseDate;
            return institutionLicense;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LicenseID
        {
            get
            {
                return _LicenseID;
            }
            set
            {
                if (_LicenseID != value)
                {
                    OnLicenseIDChanging(value);
                    ReportPropertyChanging("LicenseID");
                    _LicenseID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LicenseID");
                    OnLicenseIDChanged();
                }
            }
        }
        private global::System.Int32 _LicenseID;
        partial void OnLicenseIDChanging(global::System.Int32 value);
        partial void OnLicenseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                OnInstitutionIDChanging(value);
                ReportPropertyChanging("InstitutionID");
                _InstitutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionID");
                OnInstitutionIDChanged();
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LicenseNumber
        {
            get
            {
                return _LicenseNumber;
            }
            set
            {
                OnLicenseNumberChanging(value);
                ReportPropertyChanging("LicenseNumber");
                _LicenseNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LicenseNumber");
                OnLicenseNumberChanged();
            }
        }
        private global::System.String _LicenseNumber;
        partial void OnLicenseNumberChanging(global::System.String value);
        partial void OnLicenseNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LicenseDate
        {
            get
            {
                return _LicenseDate;
            }
            set
            {
                OnLicenseDateChanging(value);
                ReportPropertyChanging("LicenseDate");
                _LicenseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LicenseDate");
                OnLicenseDateChanged();
            }
        }
        private global::System.DateTime _LicenseDate;
        partial void OnLicenseDateChanging(global::System.DateTime value);
        partial void OnLicenseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AttachmentID
        {
            get
            {
                return _AttachmentID;
            }
            set
            {
                OnAttachmentIDChanging(value);
                ReportPropertyChanging("AttachmentID");
                _AttachmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttachmentID");
                OnAttachmentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AttachmentID;
        partial void OnAttachmentIDChanging(Nullable<global::System.Int32> value);
        partial void OnAttachmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionLicense_Institution", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_InstitutionLicense_Institution", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_InstitutionLicense_Institution", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_InstitutionLicense_Institution", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("InsitutionsModel.FK_InstitutionLicense_Institution", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionLicense_Attachment", "Attachment")]
        public Attachment Attachment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("InsitutionsModel.FK_InstitutionLicense_Attachment", "Attachment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("InsitutionsModel.FK_InstitutionLicense_Attachment", "Attachment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Attachment> AttachmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Attachment>("InsitutionsModel.FK_InstitutionLicense_Attachment", "Attachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Attachment>("InsitutionsModel.FK_InstitutionLicense_Attachment", "Attachment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InsitutionsModel", Name="InstitutionStructure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstitutionStructure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstitutionStructure object.
        /// </summary>
        /// <param name="institutionStructureID">Initial value of the InstitutionStructureID property.</param>
        /// <param name="institutionItemID">Initial value of the InstitutionItemID property.</param>
        /// <param name="depth">Initial value of the Depth property.</param>
        /// <param name="lineage">Initial value of the Lineage property.</param>
        public static InstitutionStructure CreateInstitutionStructure(global::System.Int32 institutionStructureID, global::System.Int32 institutionItemID, global::System.Int16 depth, global::System.String lineage)
        {
            InstitutionStructure institutionStructure = new InstitutionStructure();
            institutionStructure.InstitutionStructureID = institutionStructureID;
            institutionStructure.InstitutionItemID = institutionItemID;
            institutionStructure.Depth = depth;
            institutionStructure.Lineage = lineage;
            return institutionStructure;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionStructureID
        {
            get
            {
                return _InstitutionStructureID;
            }
            set
            {
                if (_InstitutionStructureID != value)
                {
                    OnInstitutionStructureIDChanging(value);
                    ReportPropertyChanging("InstitutionStructureID");
                    _InstitutionStructureID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstitutionStructureID");
                    OnInstitutionStructureIDChanged();
                }
            }
        }
        private global::System.Int32 _InstitutionStructureID;
        partial void OnInstitutionStructureIDChanging(global::System.Int32 value);
        partial void OnInstitutionStructureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionItemID
        {
            get
            {
                return _InstitutionItemID;
            }
            set
            {
                OnInstitutionItemIDChanging(value);
                ReportPropertyChanging("InstitutionItemID");
                _InstitutionItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionItemID");
                OnInstitutionItemIDChanged();
            }
        }
        private global::System.Int32 _InstitutionItemID;
        partial void OnInstitutionItemIDChanging(global::System.Int32 value);
        partial void OnInstitutionItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Depth
        {
            get
            {
                return _Depth;
            }
            set
            {
                OnDepthChanging(value);
                ReportPropertyChanging("Depth");
                _Depth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Depth");
                OnDepthChanged();
            }
        }
        private global::System.Int16 _Depth;
        partial void OnDepthChanging(global::System.Int16 value);
        partial void OnDepthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Lineage
        {
            get
            {
                return _Lineage;
            }
            set
            {
                OnLineageChanging(value);
                ReportPropertyChanging("Lineage");
                _Lineage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Lineage");
                OnLineageChanged();
            }
        }
        private global::System.String _Lineage;
        partial void OnLineageChanging(global::System.String value);
        partial void OnLineageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.String _UID;
        partial void OnUIDChanging(global::System.String value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionStructure_InstitutionItem", "InstitutionItem")]
        public InstitutionItem InstitutionItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstitutionItem>("InsitutionsModel.FK_InstitutionStructure_InstitutionItem", "InstitutionItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstitutionItem>("InsitutionsModel.FK_InstitutionStructure_InstitutionItem", "InstitutionItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstitutionItem> InstitutionItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstitutionItem>("InsitutionsModel.FK_InstitutionStructure_InstitutionItem", "InstitutionItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstitutionItem>("InsitutionsModel.FK_InstitutionStructure_InstitutionItem", "InstitutionItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionStructure_InstitutionStructure", "Parent")]
        public EntityCollection<InstitutionStructure> Children
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstitutionStructure>("InsitutionsModel.FK_InstitutionStructure_InstitutionStructure", "Parent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstitutionStructure>("InsitutionsModel.FK_InstitutionStructure_InstitutionStructure", "Parent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionStructure_InstitutionStructure", "Child")]
        public InstitutionStructure Parent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstitutionStructure>("InsitutionsModel.FK_InstitutionStructure_InstitutionStructure", "Child").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstitutionStructure>("InsitutionsModel.FK_InstitutionStructure_InstitutionStructure", "Child").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstitutionStructure> ParentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstitutionStructure>("InsitutionsModel.FK_InstitutionStructure_InstitutionStructure", "Child");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstitutionStructure>("InsitutionsModel.FK_InstitutionStructure_InstitutionStructure", "Child", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InsitutionsModel", Name="ParentDirection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ParentDirection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ParentDirection object.
        /// </summary>
        /// <param name="parentDirectionID">Initial value of the ParentDirectionID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ParentDirection CreateParentDirection(global::System.Int32 parentDirectionID, global::System.String code, global::System.String name)
        {
            ParentDirection parentDirection = new ParentDirection();
            parentDirection.ParentDirectionID = parentDirectionID;
            parentDirection.Code = code;
            parentDirection.Name = name;
            return parentDirection;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentDirectionID
        {
            get
            {
                return _ParentDirectionID;
            }
            set
            {
                if (_ParentDirectionID != value)
                {
                    OnParentDirectionIDChanging(value);
                    ReportPropertyChanging("ParentDirectionID");
                    _ParentDirectionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParentDirectionID");
                    OnParentDirectionIDChanged();
                }
            }
        }
        private global::System.Int32 _ParentDirectionID;
        partial void OnParentDirectionIDChanging(global::System.Int32 value);
        partial void OnParentDirectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_Direction_ParentDirection", "Direction")]
        public EntityCollection<Direction> Direction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Direction>("InsitutionsModel.FK_Direction_ParentDirection", "Direction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Direction>("InsitutionsModel.FK_Direction_ParentDirection", "Direction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InsitutionsModel", Name="RegionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RegionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegionType object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="displayOrder">Initial value of the DisplayOrder property.</param>
        /// <param name="regionId">Initial value of the RegionId property.</param>
        public static RegionType CreateRegionType(global::System.Int32 countryID, global::System.String name, global::System.Int32 displayOrder, global::System.Int32 regionId)
        {
            RegionType regionType = new RegionType();
            regionType.CountryID = countryID;
            regionType.Name = name;
            regionType.DisplayOrder = displayOrder;
            regionType.RegionId = regionId;
            return regionType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OkatoCode
        {
            get
            {
                return _OkatoCode;
            }
            set
            {
                OnOkatoCodeChanging(value);
                ReportPropertyChanging("OkatoCode");
                _OkatoCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OkatoCode");
                OnOkatoCodeChanged();
            }
        }
        private global::System.String _OkatoCode;
        partial void OnOkatoCodeChanging(global::System.String value);
        partial void OnOkatoCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OkatoModified
        {
            get
            {
                return _OkatoModified;
            }
            set
            {
                OnOkatoModifiedChanging(value);
                ReportPropertyChanging("OkatoModified");
                _OkatoModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OkatoModified");
                OnOkatoModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _OkatoModified;
        partial void OnOkatoModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnOkatoModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private global::System.Int32 _DisplayOrder;
        partial void OnDisplayOrderChanging(global::System.Int32 value);
        partial void OnDisplayOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EsrpCode
        {
            get
            {
                return _EsrpCode;
            }
            set
            {
                OnEsrpCodeChanging(value);
                ReportPropertyChanging("EsrpCode");
                _EsrpCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EsrpCode");
                OnEsrpCodeChanged();
            }
        }
        private global::System.String _EsrpCode;
        partial void OnEsrpCodeChanging(global::System.String value);
        partial void OnEsrpCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                if (_RegionId != value)
                {
                    OnRegionIdChanging(value);
                    ReportPropertyChanging("RegionId");
                    _RegionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegionId");
                    OnRegionIdChanged();
                }
            }
        }
        private global::System.Int32 _RegionId;
        partial void OnRegionIdChanging(global::System.Int32 value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_Institution_RegionType", "Institution")]
        public EntityCollection<Institution> Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Institution>("InsitutionsModel.FK_Institution_RegionType", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Institution>("InsitutionsModel.FK_Institution_RegionType", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_InstitutionHistory_RegionType", "InstitutionHistory")]
        public EntityCollection<InstitutionHistory> InstitutionHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InstitutionHistory>("InsitutionsModel.FK_InstitutionHistory_RegionType", "InstitutionHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InstitutionHistory>("InsitutionsModel.FK_InstitutionHistory_RegionType", "InstitutionHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InsitutionsModel", Name="RequestComments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequestComments : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequestComments object.
        /// </summary>
        /// <param name="comment_ID">Initial value of the Comment_ID property.</param>
        /// <param name="commentor">Initial value of the Commentor property.</param>
        /// <param name="directionID">Initial value of the DirectionID property.</param>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        public static RequestComments CreateRequestComments(global::System.Int32 comment_ID, global::System.String commentor, global::System.Int32 directionID, global::System.Int32 institutionID)
        {
            RequestComments requestComments = new RequestComments();
            requestComments.Comment_ID = comment_ID;
            requestComments.Commentor = commentor;
            requestComments.DirectionID = directionID;
            requestComments.InstitutionID = institutionID;
            return requestComments;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Comment_ID
        {
            get
            {
                return _Comment_ID;
            }
            set
            {
                if (_Comment_ID != value)
                {
                    OnComment_IDChanging(value);
                    ReportPropertyChanging("Comment_ID");
                    _Comment_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Comment_ID");
                    OnComment_IDChanged();
                }
            }
        }
        private global::System.Int32 _Comment_ID;
        partial void OnComment_IDChanging(global::System.Int32 value);
        partial void OnComment_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Commentor
        {
            get
            {
                return _Commentor;
            }
            set
            {
                OnCommentorChanging(value);
                ReportPropertyChanging("Commentor");
                _Commentor = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Commentor");
                OnCommentorChanged();
            }
        }
        private global::System.String _Commentor;
        partial void OnCommentorChanging(global::System.String value);
        partial void OnCommentorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DirectionID
        {
            get
            {
                return _DirectionID;
            }
            set
            {
                OnDirectionIDChanging(value);
                ReportPropertyChanging("DirectionID");
                _DirectionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DirectionID");
                OnDirectionIDChanged();
            }
        }
        private global::System.Int32 _DirectionID;
        partial void OnDirectionIDChanging(global::System.Int32 value);
        partial void OnDirectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                OnInstitutionIDChanging(value);
                ReportPropertyChanging("InstitutionID");
                _InstitutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionID");
                OnInstitutionIDChanged();
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_RequestComments_RequestDirection", "RequestDirection")]
        public RequestDirection RequestDirection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestDirection>("InsitutionsModel.FK_RequestComments_RequestDirection", "RequestDirection").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestDirection>("InsitutionsModel.FK_RequestComments_RequestDirection", "RequestDirection").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RequestDirection> RequestDirectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RequestDirection>("InsitutionsModel.FK_RequestComments_RequestDirection", "RequestDirection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RequestDirection>("InsitutionsModel.FK_RequestComments_RequestDirection", "RequestDirection", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InsitutionsModel", Name="RequestDirection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequestDirection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequestDirection object.
        /// </summary>
        /// <param name="direction_ID">Initial value of the Direction_ID property.</param>
        /// <param name="request_ID">Initial value of the Request_ID property.</param>
        /// <param name="activity">Initial value of the Activity property.</param>
        /// <param name="action">Initial value of the Action property.</param>
        /// <param name="admissionItemType">Initial value of the AdmissionItemType property.</param>
        public static RequestDirection CreateRequestDirection(global::System.Int32 direction_ID, global::System.Int32 request_ID, global::System.String activity, global::System.String action, global::System.Int32 admissionItemType)
        {
            RequestDirection requestDirection = new RequestDirection();
            requestDirection.Direction_ID = direction_ID;
            requestDirection.Request_ID = request_ID;
            requestDirection.Activity = activity;
            requestDirection.Action = action;
            requestDirection.AdmissionItemType = admissionItemType;
            return requestDirection;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Direction_ID
        {
            get
            {
                return _Direction_ID;
            }
            set
            {
                if (_Direction_ID != value)
                {
                    OnDirection_IDChanging(value);
                    ReportPropertyChanging("Direction_ID");
                    _Direction_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Direction_ID");
                    OnDirection_IDChanged();
                }
            }
        }
        private global::System.Int32 _Direction_ID;
        partial void OnDirection_IDChanging(global::System.Int32 value);
        partial void OnDirection_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Request_ID
        {
            get
            {
                return _Request_ID;
            }
            set
            {
                if (_Request_ID != value)
                {
                    OnRequest_IDChanging(value);
                    ReportPropertyChanging("Request_ID");
                    _Request_ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Request_ID");
                    OnRequest_IDChanged();
                }
            }
        }
        private global::System.Int32 _Request_ID;
        partial void OnRequest_IDChanging(global::System.Int32 value);
        partial void OnRequest_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Activity
        {
            get
            {
                return _Activity;
            }
            set
            {
                OnActivityChanging(value);
                ReportPropertyChanging("Activity");
                _Activity = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Activity");
                OnActivityChanged();
            }
        }
        private global::System.String _Activity;
        partial void OnActivityChanging(global::System.String value);
        partial void OnActivityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdmissionItemType
        {
            get
            {
                return _AdmissionItemType;
            }
            set
            {
                OnAdmissionItemTypeChanging(value);
                ReportPropertyChanging("AdmissionItemType");
                _AdmissionItemType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmissionItemType");
                OnAdmissionItemTypeChanged();
            }
        }
        private global::System.Int32 _AdmissionItemType;
        partial void OnAdmissionItemTypeChanging(global::System.Int32 value);
        partial void OnAdmissionItemTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreationDate;
        partial void OnCreationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChangeDate
        {
            get
            {
                return _ChangeDate;
            }
            set
            {
                OnChangeDateChanging(value);
                ReportPropertyChanging("ChangeDate");
                _ChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangeDate");
                OnChangeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChangeDate;
        partial void OnChangeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnChangeDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_RequestDirection_Request", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_RequestDirection_Request", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_RequestDirection_Request", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_RequestDirection_Request", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("InsitutionsModel.FK_RequestDirection_Request", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_RequestComments_RequestDirection", "RequestComments")]
        public EntityCollection<RequestComments> RequestComments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RequestComments>("InsitutionsModel.FK_RequestComments_RequestDirection", "RequestComments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RequestComments>("InsitutionsModel.FK_RequestComments_RequestDirection", "RequestComments", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="InsitutionsModel", Name="UserPolicy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserPolicy : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserPolicy object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="isMainAdmin">Initial value of the IsMainAdmin property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="availableEgeCheckCount">Initial value of the AvailableEgeCheckCount property.</param>
        /// <param name="isReadOnly">Initial value of the IsReadOnly property.</param>
        /// <param name="subrole">Initial value of the Subrole property.</param>
        public static UserPolicy CreateUserPolicy(global::System.Guid userID, global::System.Boolean isMainAdmin, global::System.String fullName, global::System.String userName, global::System.Int32 availableEgeCheckCount, global::System.Boolean isReadOnly, global::System.Int32 subrole)
        {
            UserPolicy userPolicy = new UserPolicy();
            userPolicy.UserID = userID;
            userPolicy.IsMainAdmin = isMainAdmin;
            userPolicy.FullName = fullName;
            userPolicy.UserName = userName;
            userPolicy.AvailableEgeCheckCount = availableEgeCheckCount;
            userPolicy.IsReadOnly = isReadOnly;
            userPolicy.Subrole = subrole;
            return userPolicy;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                OnInstitutionIDChanging(value);
                ReportPropertyChanging("InstitutionID");
                _InstitutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionID");
                OnInstitutionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InstitutionID;
        partial void OnInstitutionIDChanging(Nullable<global::System.Int32> value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMainAdmin
        {
            get
            {
                return _IsMainAdmin;
            }
            set
            {
                OnIsMainAdminChanging(value);
                ReportPropertyChanging("IsMainAdmin");
                _IsMainAdmin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMainAdmin");
                OnIsMainAdminChanged();
            }
        }
        private global::System.Boolean _IsMainAdmin;
        partial void OnIsMainAdminChanging(global::System.Boolean value);
        partial void OnIsMainAdminChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AvailableEgeCheckCount
        {
            get
            {
                return _AvailableEgeCheckCount;
            }
            set
            {
                OnAvailableEgeCheckCountChanging(value);
                ReportPropertyChanging("AvailableEgeCheckCount");
                _AvailableEgeCheckCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AvailableEgeCheckCount");
                OnAvailableEgeCheckCountChanged();
            }
        }
        private global::System.Int32 _AvailableEgeCheckCount;
        partial void OnAvailableEgeCheckCountChanging(global::System.Int32 value);
        partial void OnAvailableEgeCheckCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PinCode
        {
            get
            {
                return _PinCode;
            }
            set
            {
                OnPinCodeChanging(value);
                ReportPropertyChanging("PinCode");
                _PinCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PinCode");
                OnPinCodeChanged();
            }
        }
        private global::System.String _PinCode;
        partial void OnPinCodeChanging(global::System.String value);
        partial void OnPinCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsReadOnly
        {
            get
            {
                return _IsReadOnly;
            }
            set
            {
                OnIsReadOnlyChanging(value);
                ReportPropertyChanging("IsReadOnly");
                _IsReadOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReadOnly");
                OnIsReadOnlyChanged();
            }
        }
        private global::System.Boolean _IsReadOnly;
        partial void OnIsReadOnlyChanging(global::System.Boolean value);
        partial void OnIsReadOnlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Subrole
        {
            get
            {
                return _Subrole;
            }
            set
            {
                OnSubroleChanging(value);
                ReportPropertyChanging("Subrole");
                _Subrole = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Subrole");
                OnSubroleChanged();
            }
        }
        private global::System.Int32 _Subrole;
        partial void OnSubroleChanging(global::System.Int32 value);
        partial void OnSubroleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FilialID
        {
            get
            {
                return _FilialID;
            }
            set
            {
                OnFilialIDChanging(value);
                ReportPropertyChanging("FilialID");
                _FilialID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FilialID");
                OnFilialIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FilialID;
        partial void OnFilialIDChanging(Nullable<global::System.Int32> value);
        partial void OnFilialIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDeactivated
        {
            get
            {
                return _IsDeactivated;
            }
            set
            {
                OnIsDeactivatedChanging(value);
                ReportPropertyChanging("IsDeactivated");
                _IsDeactivated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeactivated");
                OnIsDeactivatedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDeactivated;
        partial void OnIsDeactivatedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDeactivatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("InsitutionsModel", "FK_UserPolicy_Institution", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_UserPolicy_Institution", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_UserPolicy_Institution", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("InsitutionsModel.FK_UserPolicy_Institution", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("InsitutionsModel.FK_UserPolicy_Institution", "Institution", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="InsitutionsModel", Name="InstitutionSearchResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class InstitutionSearchResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstitutionSearchResult object.
        /// </summary>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        /// <param name="admissionStructureID">Initial value of the AdmissionStructureID property.</param>
        /// <param name="admissionItemID">Initial value of the AdmissionItemID property.</param>
        /// <param name="itemLevel">Initial value of the ItemLevel property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static InstitutionSearchResult CreateInstitutionSearchResult(global::System.Int32 institutionID, global::System.Int32 admissionStructureID, global::System.Int32 admissionItemID, global::System.Int16 itemLevel, global::System.String name)
        {
            InstitutionSearchResult institutionSearchResult = new InstitutionSearchResult();
            institutionSearchResult.InstitutionID = institutionID;
            institutionSearchResult.AdmissionStructureID = admissionStructureID;
            institutionSearchResult.AdmissionItemID = admissionItemID;
            institutionSearchResult.ItemLevel = itemLevel;
            institutionSearchResult.Name = name;
            return institutionSearchResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                OnInstitutionIDChanging(value);
                ReportPropertyChanging("InstitutionID");
                _InstitutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionID");
                OnInstitutionIDChanged();
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdmissionStructureID
        {
            get
            {
                return _AdmissionStructureID;
            }
            set
            {
                OnAdmissionStructureIDChanging(value);
                ReportPropertyChanging("AdmissionStructureID");
                _AdmissionStructureID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmissionStructureID");
                OnAdmissionStructureIDChanged();
            }
        }
        private global::System.Int32 _AdmissionStructureID;
        partial void OnAdmissionStructureIDChanging(global::System.Int32 value);
        partial void OnAdmissionStructureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdmissionItemID
        {
            get
            {
                return _AdmissionItemID;
            }
            set
            {
                OnAdmissionItemIDChanging(value);
                ReportPropertyChanging("AdmissionItemID");
                _AdmissionItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmissionItemID");
                OnAdmissionItemIDChanged();
            }
        }
        private global::System.Int32 _AdmissionItemID;
        partial void OnAdmissionItemIDChanging(global::System.Int32 value);
        partial void OnAdmissionItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ItemLevel
        {
            get
            {
                return _ItemLevel;
            }
            set
            {
                OnItemLevelChanging(value);
                ReportPropertyChanging("ItemLevel");
                _ItemLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemLevel");
                OnItemLevelChanged();
            }
        }
        private global::System.Int16 _ItemLevel;
        partial void OnItemLevelChanging(global::System.Int16 value);
        partial void OnItemLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlaceCount
        {
            get
            {
                return _PlaceCount;
            }
            set
            {
                OnPlaceCountChanging(value);
                ReportPropertyChanging("PlaceCount");
                _PlaceCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlaceCount");
                OnPlaceCountChanged();
            }
        }
        private Nullable<global::System.Int32> _PlaceCount;
        partial void OnPlaceCountChanging(Nullable<global::System.Int32> value);
        partial void OnPlaceCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApplicationCount
        {
            get
            {
                return _ApplicationCount;
            }
            set
            {
                OnApplicationCountChanging(value);
                ReportPropertyChanging("ApplicationCount");
                _ApplicationCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationCount");
                OnApplicationCountChanged();
            }
        }
        private Nullable<global::System.Int32> _ApplicationCount;
        partial void OnApplicationCountChanging(Nullable<global::System.Int32> value);
        partial void OnApplicationCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasOlympics
        {
            get
            {
                return _HasOlympics;
            }
            set
            {
                OnHasOlympicsChanging(value);
                ReportPropertyChanging("HasOlympics");
                _HasOlympics = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasOlympics");
                OnHasOlympicsChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasOlympics;
        partial void OnHasOlympicsChanging(Nullable<global::System.Boolean> value);
        partial void OnHasOlympicsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasPreparatoryCourses
        {
            get
            {
                return _HasPreparatoryCourses;
            }
            set
            {
                OnHasPreparatoryCoursesChanging(value);
                ReportPropertyChanging("HasPreparatoryCourses");
                _HasPreparatoryCourses = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasPreparatoryCourses");
                OnHasPreparatoryCoursesChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasPreparatoryCourses;
        partial void OnHasPreparatoryCoursesChanging(Nullable<global::System.Boolean> value);
        partial void OnHasPreparatoryCoursesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasMilitaryDepartment
        {
            get
            {
                return _HasMilitaryDepartment;
            }
            set
            {
                OnHasMilitaryDepartmentChanging(value);
                ReportPropertyChanging("HasMilitaryDepartment");
                _HasMilitaryDepartment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasMilitaryDepartment");
                OnHasMilitaryDepartmentChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasMilitaryDepartment;
        partial void OnHasMilitaryDepartmentChanging(Nullable<global::System.Boolean> value);
        partial void OnHasMilitaryDepartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Applicable
        {
            get
            {
                return _Applicable;
            }
            set
            {
                OnApplicableChanging(value);
                ReportPropertyChanging("Applicable");
                _Applicable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Applicable");
                OnApplicableChanged();
            }
        }
        private Nullable<global::System.Boolean> _Applicable;
        partial void OnApplicableChanging(Nullable<global::System.Boolean> value);
        partial void OnApplicableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> CanBeChecked
        {
            get
            {
                return _CanBeChecked;
            }
            set
            {
                OnCanBeCheckedChanging(value);
                ReportPropertyChanging("CanBeChecked");
                _CanBeChecked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanBeChecked");
                OnCanBeCheckedChanged();
            }
        }
        private Nullable<global::System.Boolean> _CanBeChecked;
        partial void OnCanBeCheckedChanging(Nullable<global::System.Boolean> value);
        partial void OnCanBeCheckedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApplicationStatusID
        {
            get
            {
                return _ApplicationStatusID;
            }
            set
            {
                OnApplicationStatusIDChanging(value);
                ReportPropertyChanging("ApplicationStatusID");
                _ApplicationStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationStatusID");
                OnApplicationStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApplicationStatusID;
        partial void OnApplicationStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnApplicationStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationStatus
        {
            get
            {
                return _ApplicationStatus;
            }
            set
            {
                OnApplicationStatusChanging(value);
                ReportPropertyChanging("ApplicationStatus");
                _ApplicationStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplicationStatus");
                OnApplicationStatusChanged();
            }
        }
        private global::System.String _ApplicationStatus;
        partial void OnApplicationStatusChanging(global::System.String value);
        partial void OnApplicationStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ApplicationID
        {
            get
            {
                return _ApplicationID;
            }
            set
            {
                OnApplicationIDChanging(value);
                ReportPropertyChanging("ApplicationID");
                _ApplicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationID");
                OnApplicationIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ApplicationID;
        partial void OnApplicationIDChanging(Nullable<global::System.Int32> value);
        partial void OnApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EntrantApplicationCount
        {
            get
            {
                return _EntrantApplicationCount;
            }
            set
            {
                OnEntrantApplicationCountChanging(value);
                ReportPropertyChanging("EntrantApplicationCount");
                _EntrantApplicationCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntrantApplicationCount");
                OnEntrantApplicationCountChanged();
            }
        }
        private Nullable<global::System.Int32> _EntrantApplicationCount;
        partial void OnEntrantApplicationCountChanging(Nullable<global::System.Int32> value);
        partial void OnEntrantApplicationCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLeaf
        {
            get
            {
                return _IsLeaf;
            }
            set
            {
                OnIsLeafChanging(value);
                ReportPropertyChanging("IsLeaf");
                _IsLeaf = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLeaf");
                OnIsLeafChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLeaf;
        partial void OnIsLeafChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLeafChanged();

        #endregion

    }

    #endregion

    
}
