//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Import", "FK_AdmissionVolume_Institution", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Institution), "AdmissionVolume", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.AdmissionVolume), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationEntranceTestDocument_Benefit", "Benefit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.Benefit), "ApplicationEntranceTestDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationEntranceTestDocument), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationEntranceTestDocument_EntranceTestItemC", "EntranceTestItemC", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.EntranceTestItemC), "ApplicationEntranceTestDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationEntranceTestDocument), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationEntranceTestDocument_EntranceTestType", "EntranceTestType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.EntranceTestType), "ApplicationEntranceTestDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationEntranceTestDocument), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationEntranceTestDocument_EntrantDocument", "EntrantDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.EntrantDocument), "ApplicationEntranceTestDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationEntranceTestDocument), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationEntrantDocument_EntrantDocument", "EntrantDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.EntrantDocument), "ApplicationEntrantDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationEntrantDocument), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_BenefitItemC_Benefit", "Benefit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Benefit), "BenefitItemC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.BenefitItemC), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_BenefitItem_EntranceTestItemC", "EntranceTestItemC", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.EntranceTestItemC), "BenefitItemC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.BenefitItemC), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_BenefitItemC_CompetitiveGroup", "CompetitiveGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.CompetitiveGroup), "BenefitItemC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.BenefitItemC), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_BenefitItemCOlympicType_BenefitItemC", "BenefitItemC", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.BenefitItemC), "BenefitItemCOlympicType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.BenefitItemCOlympicType), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_CompetitiveGroup_Institution", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Institution), "CompetitiveGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.CompetitiveGroup), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_CompetitiveGroupItem_CompetitiveGroup", "CompetitiveGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.CompetitiveGroup), "CompetitiveGroupItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.CompetitiveGroupItem), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_EntranceTestItemC_CompetitiveGroupID", "CompetitiveGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.CompetitiveGroup), "EntranceTestItemC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.EntranceTestItemC), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_CompetitiveGroupTargetItem_CompetitiveGroupItem", "CompetitiveGroupItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.CompetitiveGroupItem), "CompetitiveGroupTargetItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.CompetitiveGroupTargetItem), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_CompetitiveGroupTargetItem_CompetitiveGroupTarget", "CompetitiveGroupTarget", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.CompetitiveGroupTarget), "CompetitiveGroupTargetItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.CompetitiveGroupTargetItem), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_EntranceTestItemC_EntranceTestType", "EntranceTestType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.EntranceTestType), "EntranceTestItemC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.EntranceTestItemC), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ImportPackage_Institution", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Institution), "ImportPackage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ImportPackage), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_EntrantLanguage_ForeignLanguageType", "ForeignLanguageType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.ForeignLanguageType), "EntrantLanguage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.EntrantLanguage), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_AdmissionVolume_Direction", "Direction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.Direction), "AdmissionVolume", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.AdmissionVolume), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_CompetitiveGroupItem_Direction", "Direction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Direction), "CompetitiveGroupItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.CompetitiveGroupItem), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationEntranceTestDocument_Subject", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.Subject), "ApplicationEntranceTestDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationEntranceTestDocument), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_EntranceTestItemC_Subject", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.Subject), "EntranceTestItemC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.EntranceTestItemC), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_AllowedDirections_Direction", "Direction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Direction), "AllowedDirections", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.AllowedDirections), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_AllowedDirections_Institution", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Institution), "AllowedDirections", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.AllowedDirections), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_DirectionSubjectLinkDirection_Direction", "Direction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Direction), "DirectionSubjectLinkDirection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.DirectionSubjectLinkDirection), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_DirectionSubjectLinkDirection_Subject", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Subject), "DirectionSubjectLinkSubject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.DirectionSubjectLinkSubject), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_DirectionSubjectLinkSubject_Subject", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Subject), "DirectionSubjectLinkSubject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.DirectionSubjectLinkSubject), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_EntranceTestCreativeDirections_Direction", "Direction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Direction), "EntranceTestCreativeDirection", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.EntranceTestCreativeDirection), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_EntranceTestProfileDirections_Direction", "Direction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Direction), "EntranceTestProfileDirection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.EntranceTestProfileDirection), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_EntranceTestProfileDirections_Institution", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Institution), "EntranceTestProfileDirection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.EntranceTestProfileDirection), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_AdmissionVolume_AdmissionItemType", "AdmissionItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.AdmissionItemType), "AdmissionVolume", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.AdmissionVolume), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_AllowedDirections_AdmissionItemType", "AdmissionItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.AdmissionItemType), "AllowedDirections", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.AllowedDirections), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_Address_CountryType", "CountryType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.CountryType), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.Address), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationEntranceTestDocument_EntranceTestResultSource", "EntranceTestResultSource", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.EntranceTestResultSource), "ApplicationEntranceTestDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationEntranceTestDocument), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_BenefitItemC_OlympicDiplomType", "OlympicDiplomType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.OlympicDiplomType), "BenefitItemC", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.BenefitItemC), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_EntrantDocument_DocumentType", "DocumentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.DocumentType), "EntrantDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.EntrantDocument), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_Direction_ParentDirection", "ParentDirection", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.ParentDirection), "Direction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.Direction), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationEntranceTestDocument_InstitutionDocumentType", "InstitutionDocumentType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.InstitutionDocumentType), "ApplicationEntranceTestDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationEntranceTestDocument), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_CampaignEducationLevel_AdmissionItemType", "AdmissionItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.AdmissionItemType), "CampaignEducationLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.CampaignEducationLevel), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_SubjectEgeMinValue_Subject", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Subject), "SubjectEgeMinValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.SubjectEgeMinValue), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_CampaignDate_AdmissionItemTypeForm", "AdmissionItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.AdmissionItemType), "CampaignDate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.CampaignDate), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_CampaignDate_AdmissionItemTypeLevel", "AdmissionItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.AdmissionItemType), "CampaignDate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.CampaignDate), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_CampaignDate_AdmissionItemTypeSource", "AdmissionItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.AdmissionItemType), "CampaignDate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.CampaignDate), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ImportPackage_ImportPackageType", "ImportPackageType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.ImportPackageType), "ImportPackage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ImportPackage), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ImportPackage_ImportPackageCheckStatus", "ImportPackageStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.ImportPackageStatus), "ImportPackage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ImportPackage), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ImportPackage_ImportPackageStatus", "ImportPackageStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.ImportPackageStatus), "ImportPackage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ImportPackage), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_CompetitiveGroupItem_EducationLevelID", "AdmissionItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.AdmissionItemType), "CompetitiveGroupItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.CompetitiveGroupItem), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationSelectedCompetitiveGroup_Benefit", "Benefit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.Benefit), "ApplicationSelectedCompetitiveGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationSelectedCompetitiveGroup), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationSelectedCompetitiveGroup_CompetitiveGroup", "CompetitiveGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.CompetitiveGroup), "ApplicationSelectedCompetitiveGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationSelectedCompetitiveGroup), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationSelectedCompetitiveGroupItem_CompetitiveGroupItem", "CompetitiveGroupItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.CompetitiveGroupItem), "ApplicationSelectedCompetitiveGroupItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationSelectedCompetitiveGroupItem), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationSelectedCompetitiveGroupTarget_CompetitiveGroupTarget", "CompetitiveGroupTarget", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.CompetitiveGroupTarget), "ApplicationSelectedCompetitiveGroupTarget", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationSelectedCompetitiveGroupTarget), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationEntranceTestDocument_BenefitCompetitiveGroup", "CompetitiveGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.CompetitiveGroup), "ApplicationEntranceTestDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationEntranceTestDocument), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_CompetitiveGroupTarget_Institution", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Institution), "CompetitiveGroupTarget", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.CompetitiveGroupTarget), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_RegionType_CountryType", "CountryType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.CountryType), "RegionType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.RegionType), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_Institution_RegionType", "RegionType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.RegionType), "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.Institution), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_Address_RegionType", "RegionType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.RegionType), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.Address), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_DirectionSubjectLink_Subject", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.Subject), "DirectionSubjectLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.DirectionSubjectLink), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_DirectionSubjectLinkDirection_DirectionSubjectLink", "DirectionSubjectLink", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.DirectionSubjectLink), "DirectionSubjectLinkDirection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.DirectionSubjectLinkDirection), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_DirectionSubjectLinkSubject_DirectionSubjectLink", "DirectionSubjectLink", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.DirectionSubjectLink), "DirectionSubjectLinkSubject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.DirectionSubjectLinkSubject), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_Entrant_Address_Fact", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.Address), "Entrant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.Entrant), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_Entrant_Address_Registration", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.Address), "Entrant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.Entrant), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_OrderOfAdmission_AdmissionItemTypeForm", "AdmissionItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.AdmissionItemType), "OrderOfAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.OrderOfAdmission), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_OrderOfAdmission_AdmissionItemTypeLevel", "AdmissionItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.AdmissionItemType), "OrderOfAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.OrderOfAdmission), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_OrderOfAdmission_AdmissionItemTypeSource", "AdmissionItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.AdmissionItemType), "OrderOfAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.OrderOfAdmission), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_AdmissionVolume_Campaign", "Campaign", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.Campaign), "AdmissionVolume", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.AdmissionVolume), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_Campaign_Institution", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Institution), "Campaign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.Campaign), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_CampaignDate_Campaign", "Campaign", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Campaign), "CampaignDate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.CampaignDate), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_CampaignEducationLevel_Campaign", "Campaign", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Campaign), "CampaignEducationLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.CampaignEducationLevel), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_CompetitiveGroup_Campaign", "Campaign", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.Campaign), "CompetitiveGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.CompetitiveGroup), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_OrderOfAdmission_Campaign", "Campaign", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Campaign), "OrderOfAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.OrderOfAdmission), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_Entrant_EntrantDocument", "EntrantDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.EntrantDocument), "Entrant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.Entrant), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_Entrant_Institution", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.Institution), "Entrant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.Entrant), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_EntrantDocument_Entrant", "Entrant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Entrant), "EntrantDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.EntrantDocument), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_EntrantLanguage_Entrant", "Entrant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Entrant), "EntrantLanguage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.EntrantLanguage), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_OrderOfAdmission_Institution", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Institution), "OrderOfAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.OrderOfAdmission), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_OrderOfAdmissionHistory_OrderOfAdmission", "OrderOfAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.OrderOfAdmission), "OrderOfAdmissionHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.OrderOfAdmissionHistory), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_Application_AdmissionItemTypeForm", "AdmissionItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.AdmissionItemType), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.Application), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_Application_AdmissionItemTypeSource", "AdmissionItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.AdmissionItemType), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.Application), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_Application_ApplicationStatusType", "ApplicationStatusType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.ApplicationStatusType), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.Application), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_Application_Benefit", "Benefit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.Benefit), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.Application), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_Application_CompetitiveGroup", "CompetitiveGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.CompetitiveGroup), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.Application), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_Application_CompetitiveGroupItem", "CompetitiveGroupItem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.CompetitiveGroupItem), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.Application), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_Application_CompetitiveGroupTarget", "CompetitiveGroupTarget", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.CompetitiveGroupTarget), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.Application), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_Application_Entrant", "Entrant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Entrant), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.Application), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_Application_Institution", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Institution), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.Application), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_Application_OrderOfAdmission", "OrderOfAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.OrderOfAdmission), "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.Application), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationEntranceTestDocument_Application", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Application), "ApplicationEntranceTestDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationEntranceTestDocument), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationEntrantDocument_Application", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Application), "ApplicationEntrantDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationEntrantDocument), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationSelectedCompetitiveGroup_Application", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Application), "ApplicationSelectedCompetitiveGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationSelectedCompetitiveGroup), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationSelectedCompetitiveGroupItem_Application", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Application), "ApplicationSelectedCompetitiveGroupItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationSelectedCompetitiveGroupItem), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationSelectedCompetitiveGroupTarget_Application", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Application), "ApplicationSelectedCompetitiveGroupTarget", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationSelectedCompetitiveGroupTarget), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_OrderOfAdmissionHistory_Application", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Application), "OrderOfAdmissionHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.OrderOfAdmissionHistory), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_OlympicTypeSubjectLink_Subject", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Subject), "OlympicTypeSubjectLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.OlympicTypeSubjectLink), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_OlympicLevel_OlympicTypeSubjectLink", "OlympicLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.OlympicLevel), "OlympicTypeSubjectLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.OlympicTypeSubjectLink), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_BenefitItemCOlympicType_OlympicType", "OlympicType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.OlympicType), "BenefitItemCOlympicType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.BenefitItemCOlympicType), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_OlympicType_OlympicLevel", "OlympicLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.OlympicLevel), "OlympicType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.OlympicType), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_OlympicTypeSubjectLink_OlympicType", "OlympicType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.OlympicType), "OlympicTypeSubjectLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.OlympicTypeSubjectLink), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_BenefitItemSubject_BenefitItemC1", "BenefitItemC", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.BenefitItemC), "BenefitItemSubject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.BenefitItemSubject), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_BenefitItemSubject_Subject1", "Subject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Subject), "BenefitItemSubject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.BenefitItemSubject), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_RecomendedLists_Application1", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Application), "RecomendedLists", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.RecomendedLists), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_RecomendedLists_Campaign1", "Campaign", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Campaign), "RecomendedLists", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.RecomendedLists), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_RecomendedLists_CompetitiveGroup1", "CompetitiveGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.CompetitiveGroup), "RecomendedLists", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.RecomendedLists), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_RecomendedLists_Direction1", "Direction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Direction), "RecomendedLists", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.RecomendedLists), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_RecomendedLists_Institution1", "Institution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Institution), "RecomendedLists", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.RecomendedLists), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_RecomendedListsHistory_RecomendedLists1", "RecomendedLists", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.RecomendedLists), "RecomendedListsHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.RecomendedListsHistory), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationCompetitiveGroupItem_Application", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.Application), "ApplicationCompetitiveGroupItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationCompetitiveGroupItem), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationCompetitiveGroupItem_CompetitiveGroup", "CompetitiveGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.CompetitiveGroup), "ApplicationCompetitiveGroupItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationCompetitiveGroupItem), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_ApplicationCompetitiveGroupItem_CompetitiveGroupItem", "CompetitiveGroupItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GVUZ.ServiceModel.Import.CompetitiveGroupItem), "ApplicationCompetitiveGroupItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.ApplicationCompetitiveGroupItem), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_CompetitiveGroup_ParentDirection", "CompetitiveGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.CompetitiveGroup), "ParentDirection", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.ParentDirection), true)]
[assembly: EdmRelationshipAttribute("Import", "FK_AdmissionVolume_ParentDirection", "AdmissionVolume", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GVUZ.ServiceModel.Import.AdmissionVolume), "ParentDirection", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(GVUZ.ServiceModel.Import.ParentDirection), true)]

#endregion

namespace GVUZ.ServiceModel.Import
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ImportEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ImportEntities object using the connection string found in the 'ImportEntities' section of the application configuration file.
        /// </summary>
        public ImportEntities() : base("name=ImportEntities", "ImportEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ImportEntities object.
        /// </summary>
        public ImportEntities(string connectionString) : base(connectionString, "ImportEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ImportEntities object.
        /// </summary>
        public ImportEntities(EntityConnection connection) : base(connection, "ImportEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImportPackage> ImportPackage
        {
            get
            {
                if ((_ImportPackage == null))
                {
                    _ImportPackage = base.CreateObjectSet<ImportPackage>("ImportPackage");
                }
                return _ImportPackage;
            }
        }
        private ObjectSet<ImportPackage> _ImportPackage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdmissionVolume> AdmissionVolume
        {
            get
            {
                if ((_AdmissionVolume == null))
                {
                    _AdmissionVolume = base.CreateObjectSet<AdmissionVolume>("AdmissionVolume");
                }
                return _AdmissionVolume;
            }
        }
        private ObjectSet<AdmissionVolume> _AdmissionVolume;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationEntranceTestDocument> ApplicationEntranceTestDocument
        {
            get
            {
                if ((_ApplicationEntranceTestDocument == null))
                {
                    _ApplicationEntranceTestDocument = base.CreateObjectSet<ApplicationEntranceTestDocument>("ApplicationEntranceTestDocument");
                }
                return _ApplicationEntranceTestDocument;
            }
        }
        private ObjectSet<ApplicationEntranceTestDocument> _ApplicationEntranceTestDocument;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationEntrantDocument> ApplicationEntrantDocument
        {
            get
            {
                if ((_ApplicationEntrantDocument == null))
                {
                    _ApplicationEntrantDocument = base.CreateObjectSet<ApplicationEntrantDocument>("ApplicationEntrantDocument");
                }
                return _ApplicationEntrantDocument;
            }
        }
        private ObjectSet<ApplicationEntrantDocument> _ApplicationEntrantDocument;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Benefit> Benefit
        {
            get
            {
                if ((_Benefit == null))
                {
                    _Benefit = base.CreateObjectSet<Benefit>("Benefit");
                }
                return _Benefit;
            }
        }
        private ObjectSet<Benefit> _Benefit;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BenefitItemC> BenefitItemC
        {
            get
            {
                if ((_BenefitItemC == null))
                {
                    _BenefitItemC = base.CreateObjectSet<BenefitItemC>("BenefitItemC");
                }
                return _BenefitItemC;
            }
        }
        private ObjectSet<BenefitItemC> _BenefitItemC;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BenefitItemCOlympicType> BenefitItemCOlympicType
        {
            get
            {
                if ((_BenefitItemCOlympicType == null))
                {
                    _BenefitItemCOlympicType = base.CreateObjectSet<BenefitItemCOlympicType>("BenefitItemCOlympicType");
                }
                return _BenefitItemCOlympicType;
            }
        }
        private ObjectSet<BenefitItemCOlympicType> _BenefitItemCOlympicType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompetitiveGroup> CompetitiveGroup
        {
            get
            {
                if ((_CompetitiveGroup == null))
                {
                    _CompetitiveGroup = base.CreateObjectSet<CompetitiveGroup>("CompetitiveGroup");
                }
                return _CompetitiveGroup;
            }
        }
        private ObjectSet<CompetitiveGroup> _CompetitiveGroup;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompetitiveGroupItem> CompetitiveGroupItem
        {
            get
            {
                if ((_CompetitiveGroupItem == null))
                {
                    _CompetitiveGroupItem = base.CreateObjectSet<CompetitiveGroupItem>("CompetitiveGroupItem");
                }
                return _CompetitiveGroupItem;
            }
        }
        private ObjectSet<CompetitiveGroupItem> _CompetitiveGroupItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompetitiveGroupTarget> CompetitiveGroupTarget
        {
            get
            {
                if ((_CompetitiveGroupTarget == null))
                {
                    _CompetitiveGroupTarget = base.CreateObjectSet<CompetitiveGroupTarget>("CompetitiveGroupTarget");
                }
                return _CompetitiveGroupTarget;
            }
        }
        private ObjectSet<CompetitiveGroupTarget> _CompetitiveGroupTarget;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompetitiveGroupTargetItem> CompetitiveGroupTargetItem
        {
            get
            {
                if ((_CompetitiveGroupTargetItem == null))
                {
                    _CompetitiveGroupTargetItem = base.CreateObjectSet<CompetitiveGroupTargetItem>("CompetitiveGroupTargetItem");
                }
                return _CompetitiveGroupTargetItem;
            }
        }
        private ObjectSet<CompetitiveGroupTargetItem> _CompetitiveGroupTargetItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntranceTestItemC> EntranceTestItemC
        {
            get
            {
                if ((_EntranceTestItemC == null))
                {
                    _EntranceTestItemC = base.CreateObjectSet<EntranceTestItemC>("EntranceTestItemC");
                }
                return _EntranceTestItemC;
            }
        }
        private ObjectSet<EntranceTestItemC> _EntranceTestItemC;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntranceTestType> EntranceTestType
        {
            get
            {
                if ((_EntranceTestType == null))
                {
                    _EntranceTestType = base.CreateObjectSet<EntranceTestType>("EntranceTestType");
                }
                return _EntranceTestType;
            }
        }
        private ObjectSet<EntranceTestType> _EntranceTestType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntrantDocument> EntrantDocument
        {
            get
            {
                if ((_EntrantDocument == null))
                {
                    _EntrantDocument = base.CreateObjectSet<EntrantDocument>("EntrantDocument");
                }
                return _EntrantDocument;
            }
        }
        private ObjectSet<EntrantDocument> _EntrantDocument;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntrantLanguage> EntrantLanguage
        {
            get
            {
                if ((_EntrantLanguage == null))
                {
                    _EntrantLanguage = base.CreateObjectSet<EntrantLanguage>("EntrantLanguage");
                }
                return _EntrantLanguage;
            }
        }
        private ObjectSet<EntrantLanguage> _EntrantLanguage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Institution> Institution
        {
            get
            {
                if ((_Institution == null))
                {
                    _Institution = base.CreateObjectSet<Institution>("Institution");
                }
                return _Institution;
            }
        }
        private ObjectSet<Institution> _Institution;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ForeignLanguageType> ForeignLanguageType
        {
            get
            {
                if ((_ForeignLanguageType == null))
                {
                    _ForeignLanguageType = base.CreateObjectSet<ForeignLanguageType>("ForeignLanguageType");
                }
                return _ForeignLanguageType;
            }
        }
        private ObjectSet<ForeignLanguageType> _ForeignLanguageType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Address
        {
            get
            {
                if ((_Address == null))
                {
                    _Address = base.CreateObjectSet<Address>("Address");
                }
                return _Address;
            }
        }
        private ObjectSet<Address> _Address;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Direction> Direction
        {
            get
            {
                if ((_Direction == null))
                {
                    _Direction = base.CreateObjectSet<Direction>("Direction");
                }
                return _Direction;
            }
        }
        private ObjectSet<Direction> _Direction;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subject> Subject
        {
            get
            {
                if ((_Subject == null))
                {
                    _Subject = base.CreateObjectSet<Subject>("Subject");
                }
                return _Subject;
            }
        }
        private ObjectSet<Subject> _Subject;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderOfAdmissionHistory> OrderOfAdmissionHistory
        {
            get
            {
                if ((_OrderOfAdmissionHistory == null))
                {
                    _OrderOfAdmissionHistory = base.CreateObjectSet<OrderOfAdmissionHistory>("OrderOfAdmissionHistory");
                }
                return _OrderOfAdmissionHistory;
            }
        }
        private ObjectSet<OrderOfAdmissionHistory> _OrderOfAdmissionHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AllowedDirections> AllowedDirections
        {
            get
            {
                if ((_AllowedDirections == null))
                {
                    _AllowedDirections = base.CreateObjectSet<AllowedDirections>("AllowedDirections");
                }
                return _AllowedDirections;
            }
        }
        private ObjectSet<AllowedDirections> _AllowedDirections;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DirectionSubjectLinkDirection> DirectionSubjectLinkDirection
        {
            get
            {
                if ((_DirectionSubjectLinkDirection == null))
                {
                    _DirectionSubjectLinkDirection = base.CreateObjectSet<DirectionSubjectLinkDirection>("DirectionSubjectLinkDirection");
                }
                return _DirectionSubjectLinkDirection;
            }
        }
        private ObjectSet<DirectionSubjectLinkDirection> _DirectionSubjectLinkDirection;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DirectionSubjectLinkSubject> DirectionSubjectLinkSubject
        {
            get
            {
                if ((_DirectionSubjectLinkSubject == null))
                {
                    _DirectionSubjectLinkSubject = base.CreateObjectSet<DirectionSubjectLinkSubject>("DirectionSubjectLinkSubject");
                }
                return _DirectionSubjectLinkSubject;
            }
        }
        private ObjectSet<DirectionSubjectLinkSubject> _DirectionSubjectLinkSubject;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntranceTestCreativeDirection> EntranceTestCreativeDirection
        {
            get
            {
                if ((_EntranceTestCreativeDirection == null))
                {
                    _EntranceTestCreativeDirection = base.CreateObjectSet<EntranceTestCreativeDirection>("EntranceTestCreativeDirection");
                }
                return _EntranceTestCreativeDirection;
            }
        }
        private ObjectSet<EntranceTestCreativeDirection> _EntranceTestCreativeDirection;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntranceTestProfileDirection> EntranceTestProfileDirection
        {
            get
            {
                if ((_EntranceTestProfileDirection == null))
                {
                    _EntranceTestProfileDirection = base.CreateObjectSet<EntranceTestProfileDirection>("EntranceTestProfileDirection");
                }
                return _EntranceTestProfileDirection;
            }
        }
        private ObjectSet<EntranceTestProfileDirection> _EntranceTestProfileDirection;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdmissionItemType> AdmissionItemType
        {
            get
            {
                if ((_AdmissionItemType == null))
                {
                    _AdmissionItemType = base.CreateObjectSet<AdmissionItemType>("AdmissionItemType");
                }
                return _AdmissionItemType;
            }
        }
        private ObjectSet<AdmissionItemType> _AdmissionItemType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CountryType> CountryType
        {
            get
            {
                if ((_CountryType == null))
                {
                    _CountryType = base.CreateObjectSet<CountryType>("CountryType");
                }
                return _CountryType;
            }
        }
        private ObjectSet<CountryType> _CountryType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntranceTestResultSource> EntranceTestResultSource
        {
            get
            {
                if ((_EntranceTestResultSource == null))
                {
                    _EntranceTestResultSource = base.CreateObjectSet<EntranceTestResultSource>("EntranceTestResultSource");
                }
                return _EntranceTestResultSource;
            }
        }
        private ObjectSet<EntranceTestResultSource> _EntranceTestResultSource;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisabilityType> DisabilityType
        {
            get
            {
                if ((_DisabilityType == null))
                {
                    _DisabilityType = base.CreateObjectSet<DisabilityType>("DisabilityType");
                }
                return _DisabilityType;
            }
        }
        private ObjectSet<DisabilityType> _DisabilityType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentType> DocumentType
        {
            get
            {
                if ((_DocumentType == null))
                {
                    _DocumentType = base.CreateObjectSet<DocumentType>("DocumentType");
                }
                return _DocumentType;
            }
        }
        private ObjectSet<DocumentType> _DocumentType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OlympicDiplomType> OlympicDiplomType
        {
            get
            {
                if ((_OlympicDiplomType == null))
                {
                    _OlympicDiplomType = base.CreateObjectSet<OlympicDiplomType>("OlympicDiplomType");
                }
                return _OlympicDiplomType;
            }
        }
        private ObjectSet<OlympicDiplomType> _OlympicDiplomType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OlympicLevel> OlympicLevel
        {
            get
            {
                if ((_OlympicLevel == null))
                {
                    _OlympicLevel = base.CreateObjectSet<OlympicLevel>("OlympicLevel");
                }
                return _OlympicLevel;
            }
        }
        private ObjectSet<OlympicLevel> _OlympicLevel;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NationalityType> NationalityType
        {
            get
            {
                if ((_NationalityType == null))
                {
                    _NationalityType = base.CreateObjectSet<NationalityType>("NationalityType");
                }
                return _NationalityType;
            }
        }
        private ObjectSet<NationalityType> _NationalityType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationStatusType> ApplicationStatusType
        {
            get
            {
                if ((_ApplicationStatusType == null))
                {
                    _ApplicationStatusType = base.CreateObjectSet<ApplicationStatusType>("ApplicationStatusType");
                }
                return _ApplicationStatusType;
            }
        }
        private ObjectSet<ApplicationStatusType> _ApplicationStatusType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IdentityDocumentType> IdentityDocumentType
        {
            get
            {
                if ((_IdentityDocumentType == null))
                {
                    _IdentityDocumentType = base.CreateObjectSet<IdentityDocumentType>("IdentityDocumentType");
                }
                return _IdentityDocumentType;
            }
        }
        private ObjectSet<IdentityDocumentType> _IdentityDocumentType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ParentDirection> ParentDirection
        {
            get
            {
                if ((_ParentDirection == null))
                {
                    _ParentDirection = base.CreateObjectSet<ParentDirection>("ParentDirection");
                }
                return _ParentDirection;
            }
        }
        private ObjectSet<ParentDirection> _ParentDirection;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InstitutionDocumentType> InstitutionDocumentType
        {
            get
            {
                if ((_InstitutionDocumentType == null))
                {
                    _InstitutionDocumentType = base.CreateObjectSet<InstitutionDocumentType>("InstitutionDocumentType");
                }
                return _InstitutionDocumentType;
            }
        }
        private ObjectSet<InstitutionDocumentType> _InstitutionDocumentType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CampaignEducationLevel> CampaignEducationLevel
        {
            get
            {
                if ((_CampaignEducationLevel == null))
                {
                    _CampaignEducationLevel = base.CreateObjectSet<CampaignEducationLevel>("CampaignEducationLevel");
                }
                return _CampaignEducationLevel;
            }
        }
        private ObjectSet<CampaignEducationLevel> _CampaignEducationLevel;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubjectEgeMinValue> SubjectEgeMinValue
        {
            get
            {
                if ((_SubjectEgeMinValue == null))
                {
                    _SubjectEgeMinValue = base.CreateObjectSet<SubjectEgeMinValue>("SubjectEgeMinValue");
                }
                return _SubjectEgeMinValue;
            }
        }
        private ObjectSet<SubjectEgeMinValue> _SubjectEgeMinValue;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CampaignDate> CampaignDate
        {
            get
            {
                if ((_CampaignDate == null))
                {
                    _CampaignDate = base.CreateObjectSet<CampaignDate>("CampaignDate");
                }
                return _CampaignDate;
            }
        }
        private ObjectSet<CampaignDate> _CampaignDate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImportPackageType> ImportPackageType
        {
            get
            {
                if ((_ImportPackageType == null))
                {
                    _ImportPackageType = base.CreateObjectSet<ImportPackageType>("ImportPackageType");
                }
                return _ImportPackageType;
            }
        }
        private ObjectSet<ImportPackageType> _ImportPackageType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImportPackageStatus> ImportPackageStatus
        {
            get
            {
                if ((_ImportPackageStatus == null))
                {
                    _ImportPackageStatus = base.CreateObjectSet<ImportPackageStatus>("ImportPackageStatus");
                }
                return _ImportPackageStatus;
            }
        }
        private ObjectSet<ImportPackageStatus> _ImportPackageStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationSelectedCompetitiveGroup> ApplicationSelectedCompetitiveGroup
        {
            get
            {
                if ((_ApplicationSelectedCompetitiveGroup == null))
                {
                    _ApplicationSelectedCompetitiveGroup = base.CreateObjectSet<ApplicationSelectedCompetitiveGroup>("ApplicationSelectedCompetitiveGroup");
                }
                return _ApplicationSelectedCompetitiveGroup;
            }
        }
        private ObjectSet<ApplicationSelectedCompetitiveGroup> _ApplicationSelectedCompetitiveGroup;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationSelectedCompetitiveGroupItem> ApplicationSelectedCompetitiveGroupItem
        {
            get
            {
                if ((_ApplicationSelectedCompetitiveGroupItem == null))
                {
                    _ApplicationSelectedCompetitiveGroupItem = base.CreateObjectSet<ApplicationSelectedCompetitiveGroupItem>("ApplicationSelectedCompetitiveGroupItem");
                }
                return _ApplicationSelectedCompetitiveGroupItem;
            }
        }
        private ObjectSet<ApplicationSelectedCompetitiveGroupItem> _ApplicationSelectedCompetitiveGroupItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationSelectedCompetitiveGroupTarget> ApplicationSelectedCompetitiveGroupTarget
        {
            get
            {
                if ((_ApplicationSelectedCompetitiveGroupTarget == null))
                {
                    _ApplicationSelectedCompetitiveGroupTarget = base.CreateObjectSet<ApplicationSelectedCompetitiveGroupTarget>("ApplicationSelectedCompetitiveGroupTarget");
                }
                return _ApplicationSelectedCompetitiveGroupTarget;
            }
        }
        private ObjectSet<ApplicationSelectedCompetitiveGroupTarget> _ApplicationSelectedCompetitiveGroupTarget;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonalDataAccessLog> PersonalDataAccessLog
        {
            get
            {
                if ((_PersonalDataAccessLog == null))
                {
                    _PersonalDataAccessLog = base.CreateObjectSet<PersonalDataAccessLog>("PersonalDataAccessLog");
                }
                return _PersonalDataAccessLog;
            }
        }
        private ObjectSet<PersonalDataAccessLog> _PersonalDataAccessLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RegionType> RegionType
        {
            get
            {
                if ((_RegionType == null))
                {
                    _RegionType = base.CreateObjectSet<RegionType>("RegionType");
                }
                return _RegionType;
            }
        }
        private ObjectSet<RegionType> _RegionType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DirectionSubjectLink> DirectionSubjectLink
        {
            get
            {
                if ((_DirectionSubjectLink == null))
                {
                    _DirectionSubjectLink = base.CreateObjectSet<DirectionSubjectLink>("DirectionSubjectLink");
                }
                return _DirectionSubjectLink;
            }
        }
        private ObjectSet<DirectionSubjectLink> _DirectionSubjectLink;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Campaign> Campaign
        {
            get
            {
                if ((_Campaign == null))
                {
                    _Campaign = base.CreateObjectSet<Campaign>("Campaign");
                }
                return _Campaign;
            }
        }
        private ObjectSet<Campaign> _Campaign;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Entrant> Entrant
        {
            get
            {
                if ((_Entrant == null))
                {
                    _Entrant = base.CreateObjectSet<Entrant>("Entrant");
                }
                return _Entrant;
            }
        }
        private ObjectSet<Entrant> _Entrant;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderOfAdmission> OrderOfAdmission
        {
            get
            {
                if ((_OrderOfAdmission == null))
                {
                    _OrderOfAdmission = base.CreateObjectSet<OrderOfAdmission>("OrderOfAdmission");
                }
                return _OrderOfAdmission;
            }
        }
        private ObjectSet<OrderOfAdmission> _OrderOfAdmission;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Application> Application
        {
            get
            {
                if ((_Application == null))
                {
                    _Application = base.CreateObjectSet<Application>("Application");
                }
                return _Application;
            }
        }
        private ObjectSet<Application> _Application;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OlympicTypeSubjectLink> OlympicTypeSubjectLink
        {
            get
            {
                if ((_OlympicTypeSubjectLink == null))
                {
                    _OlympicTypeSubjectLink = base.CreateObjectSet<OlympicTypeSubjectLink>("OlympicTypeSubjectLink");
                }
                return _OlympicTypeSubjectLink;
            }
        }
        private ObjectSet<OlympicTypeSubjectLink> _OlympicTypeSubjectLink;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OlympicType> OlympicType
        {
            get
            {
                if ((_OlympicType == null))
                {
                    _OlympicType = base.CreateObjectSet<OlympicType>("OlympicType");
                }
                return _OlympicType;
            }
        }
        private ObjectSet<OlympicType> _OlympicType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BenefitItemSubject> BenefitItemSubject
        {
            get
            {
                if ((_BenefitItemSubject == null))
                {
                    _BenefitItemSubject = base.CreateObjectSet<BenefitItemSubject>("BenefitItemSubject");
                }
                return _BenefitItemSubject;
            }
        }
        private ObjectSet<BenefitItemSubject> _BenefitItemSubject;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GlobalMinEge> GlobalMinEge
        {
            get
            {
                if ((_GlobalMinEge == null))
                {
                    _GlobalMinEge = base.CreateObjectSet<GlobalMinEge>("GlobalMinEge");
                }
                return _GlobalMinEge;
            }
        }
        private ObjectSet<GlobalMinEge> _GlobalMinEge;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RecomendedLists> RecomendedLists
        {
            get
            {
                if ((_RecomendedLists == null))
                {
                    _RecomendedLists = base.CreateObjectSet<RecomendedLists>("RecomendedLists");
                }
                return _RecomendedLists;
            }
        }
        private ObjectSet<RecomendedLists> _RecomendedLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RecomendedListsHistory> RecomendedListsHistory
        {
            get
            {
                if ((_RecomendedListsHistory == null))
                {
                    _RecomendedListsHistory = base.CreateObjectSet<RecomendedListsHistory>("RecomendedListsHistory");
                }
                return _RecomendedListsHistory;
            }
        }
        private ObjectSet<RecomendedListsHistory> _RecomendedListsHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ApplicationCompetitiveGroupItem> ApplicationCompetitiveGroupItem
        {
            get
            {
                if ((_ApplicationCompetitiveGroupItem == null))
                {
                    _ApplicationCompetitiveGroupItem = base.CreateObjectSet<ApplicationCompetitiveGroupItem>("ApplicationCompetitiveGroupItem");
                }
                return _ApplicationCompetitiveGroupItem;
            }
        }
        private ObjectSet<ApplicationCompetitiveGroupItem> _ApplicationCompetitiveGroupItem;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImportPackage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImportPackage(ImportPackage importPackage)
        {
            base.AddObject("ImportPackage", importPackage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdmissionVolume EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdmissionVolume(AdmissionVolume admissionVolume)
        {
            base.AddObject("AdmissionVolume", admissionVolume);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationEntranceTestDocument EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationEntranceTestDocument(ApplicationEntranceTestDocument applicationEntranceTestDocument)
        {
            base.AddObject("ApplicationEntranceTestDocument", applicationEntranceTestDocument);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationEntrantDocument EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationEntrantDocument(ApplicationEntrantDocument applicationEntrantDocument)
        {
            base.AddObject("ApplicationEntrantDocument", applicationEntrantDocument);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Benefit EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBenefit(Benefit benefit)
        {
            base.AddObject("Benefit", benefit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BenefitItemC EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBenefitItemC(BenefitItemC benefitItemC)
        {
            base.AddObject("BenefitItemC", benefitItemC);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BenefitItemCOlympicType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBenefitItemCOlympicType(BenefitItemCOlympicType benefitItemCOlympicType)
        {
            base.AddObject("BenefitItemCOlympicType", benefitItemCOlympicType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompetitiveGroup EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetitiveGroup(CompetitiveGroup competitiveGroup)
        {
            base.AddObject("CompetitiveGroup", competitiveGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompetitiveGroupItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetitiveGroupItem(CompetitiveGroupItem competitiveGroupItem)
        {
            base.AddObject("CompetitiveGroupItem", competitiveGroupItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompetitiveGroupTarget EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetitiveGroupTarget(CompetitiveGroupTarget competitiveGroupTarget)
        {
            base.AddObject("CompetitiveGroupTarget", competitiveGroupTarget);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompetitiveGroupTargetItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetitiveGroupTargetItem(CompetitiveGroupTargetItem competitiveGroupTargetItem)
        {
            base.AddObject("CompetitiveGroupTargetItem", competitiveGroupTargetItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EntranceTestItemC EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntranceTestItemC(EntranceTestItemC entranceTestItemC)
        {
            base.AddObject("EntranceTestItemC", entranceTestItemC);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EntranceTestType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntranceTestType(EntranceTestType entranceTestType)
        {
            base.AddObject("EntranceTestType", entranceTestType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EntrantDocument EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntrantDocument(EntrantDocument entrantDocument)
        {
            base.AddObject("EntrantDocument", entrantDocument);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EntrantLanguage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntrantLanguage(EntrantLanguage entrantLanguage)
        {
            base.AddObject("EntrantLanguage", entrantLanguage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Institution EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstitution(Institution institution)
        {
            base.AddObject("Institution", institution);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ForeignLanguageType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToForeignLanguageType(ForeignLanguageType foreignLanguageType)
        {
            base.AddObject("ForeignLanguageType", foreignLanguageType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Address EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddress(Address address)
        {
            base.AddObject("Address", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Direction EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirection(Direction direction)
        {
            base.AddObject("Direction", direction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subject EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubject(Subject subject)
        {
            base.AddObject("Subject", subject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderOfAdmissionHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderOfAdmissionHistory(OrderOfAdmissionHistory orderOfAdmissionHistory)
        {
            base.AddObject("OrderOfAdmissionHistory", orderOfAdmissionHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AllowedDirections EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAllowedDirections(AllowedDirections allowedDirections)
        {
            base.AddObject("AllowedDirections", allowedDirections);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DirectionSubjectLinkDirection EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirectionSubjectLinkDirection(DirectionSubjectLinkDirection directionSubjectLinkDirection)
        {
            base.AddObject("DirectionSubjectLinkDirection", directionSubjectLinkDirection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DirectionSubjectLinkSubject EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirectionSubjectLinkSubject(DirectionSubjectLinkSubject directionSubjectLinkSubject)
        {
            base.AddObject("DirectionSubjectLinkSubject", directionSubjectLinkSubject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EntranceTestCreativeDirection EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntranceTestCreativeDirection(EntranceTestCreativeDirection entranceTestCreativeDirection)
        {
            base.AddObject("EntranceTestCreativeDirection", entranceTestCreativeDirection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EntranceTestProfileDirection EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntranceTestProfileDirection(EntranceTestProfileDirection entranceTestProfileDirection)
        {
            base.AddObject("EntranceTestProfileDirection", entranceTestProfileDirection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdmissionItemType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdmissionItemType(AdmissionItemType admissionItemType)
        {
            base.AddObject("AdmissionItemType", admissionItemType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CountryType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCountryType(CountryType countryType)
        {
            base.AddObject("CountryType", countryType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EntranceTestResultSource EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntranceTestResultSource(EntranceTestResultSource entranceTestResultSource)
        {
            base.AddObject("EntranceTestResultSource", entranceTestResultSource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisabilityType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisabilityType(DisabilityType disabilityType)
        {
            base.AddObject("DisabilityType", disabilityType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentType(DocumentType documentType)
        {
            base.AddObject("DocumentType", documentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OlympicDiplomType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOlympicDiplomType(OlympicDiplomType olympicDiplomType)
        {
            base.AddObject("OlympicDiplomType", olympicDiplomType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OlympicLevel EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOlympicLevel(OlympicLevel olympicLevel)
        {
            base.AddObject("OlympicLevel", olympicLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NationalityType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNationalityType(NationalityType nationalityType)
        {
            base.AddObject("NationalityType", nationalityType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationStatusType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationStatusType(ApplicationStatusType applicationStatusType)
        {
            base.AddObject("ApplicationStatusType", applicationStatusType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IdentityDocumentType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIdentityDocumentType(IdentityDocumentType identityDocumentType)
        {
            base.AddObject("IdentityDocumentType", identityDocumentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ParentDirection EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParentDirection(ParentDirection parentDirection)
        {
            base.AddObject("ParentDirection", parentDirection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InstitutionDocumentType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstitutionDocumentType(InstitutionDocumentType institutionDocumentType)
        {
            base.AddObject("InstitutionDocumentType", institutionDocumentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CampaignEducationLevel EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCampaignEducationLevel(CampaignEducationLevel campaignEducationLevel)
        {
            base.AddObject("CampaignEducationLevel", campaignEducationLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubjectEgeMinValue EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubjectEgeMinValue(SubjectEgeMinValue subjectEgeMinValue)
        {
            base.AddObject("SubjectEgeMinValue", subjectEgeMinValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CampaignDate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCampaignDate(CampaignDate campaignDate)
        {
            base.AddObject("CampaignDate", campaignDate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImportPackageType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImportPackageType(ImportPackageType importPackageType)
        {
            base.AddObject("ImportPackageType", importPackageType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImportPackageStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImportPackageStatus(ImportPackageStatus importPackageStatus)
        {
            base.AddObject("ImportPackageStatus", importPackageStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationSelectedCompetitiveGroup EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationSelectedCompetitiveGroup(ApplicationSelectedCompetitiveGroup applicationSelectedCompetitiveGroup)
        {
            base.AddObject("ApplicationSelectedCompetitiveGroup", applicationSelectedCompetitiveGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationSelectedCompetitiveGroupItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationSelectedCompetitiveGroupItem(ApplicationSelectedCompetitiveGroupItem applicationSelectedCompetitiveGroupItem)
        {
            base.AddObject("ApplicationSelectedCompetitiveGroupItem", applicationSelectedCompetitiveGroupItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationSelectedCompetitiveGroupTarget EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationSelectedCompetitiveGroupTarget(ApplicationSelectedCompetitiveGroupTarget applicationSelectedCompetitiveGroupTarget)
        {
            base.AddObject("ApplicationSelectedCompetitiveGroupTarget", applicationSelectedCompetitiveGroupTarget);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonalDataAccessLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonalDataAccessLog(PersonalDataAccessLog personalDataAccessLog)
        {
            base.AddObject("PersonalDataAccessLog", personalDataAccessLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegionType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegionType(RegionType regionType)
        {
            base.AddObject("RegionType", regionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DirectionSubjectLink EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDirectionSubjectLink(DirectionSubjectLink directionSubjectLink)
        {
            base.AddObject("DirectionSubjectLink", directionSubjectLink);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Campaign EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCampaign(Campaign campaign)
        {
            base.AddObject("Campaign", campaign);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Entrant EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntrant(Entrant entrant)
        {
            base.AddObject("Entrant", entrant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderOfAdmission EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderOfAdmission(OrderOfAdmission orderOfAdmission)
        {
            base.AddObject("OrderOfAdmission", orderOfAdmission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Application EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplication(Application application)
        {
            base.AddObject("Application", application);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OlympicTypeSubjectLink EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOlympicTypeSubjectLink(OlympicTypeSubjectLink olympicTypeSubjectLink)
        {
            base.AddObject("OlympicTypeSubjectLink", olympicTypeSubjectLink);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OlympicType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOlympicType(OlympicType olympicType)
        {
            base.AddObject("OlympicType", olympicType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BenefitItemSubject EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBenefitItemSubject(BenefitItemSubject benefitItemSubject)
        {
            base.AddObject("BenefitItemSubject", benefitItemSubject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GlobalMinEge EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGlobalMinEge(GlobalMinEge globalMinEge)
        {
            base.AddObject("GlobalMinEge", globalMinEge);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RecomendedLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRecomendedLists(RecomendedLists recomendedLists)
        {
            base.AddObject("RecomendedLists", recomendedLists);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RecomendedListsHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRecomendedListsHistory(RecomendedListsHistory recomendedListsHistory)
        {
            base.AddObject("RecomendedListsHistory", recomendedListsHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ApplicationCompetitiveGroupItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplicationCompetitiveGroupItem(ApplicationCompetitiveGroupItem applicationCompetitiveGroupItem)
        {
            base.AddObject("ApplicationCompetitiveGroupItem", applicationCompetitiveGroupItem);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="applicationID">No Metadata Documentation available.</param>
        public int SendApplication(Nullable<global::System.Int32> applicationID)
        {
            ObjectParameter applicationIDParameter;
            if (applicationID.HasValue)
            {
                applicationIDParameter = new ObjectParameter("applicationID", applicationID);
            }
            else
            {
                applicationIDParameter = new ObjectParameter("applicationID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("SendApplication", applicationIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="appId">No Metadata Documentation available.</param>
        /// <param name="cgId">No Metadata Documentation available.</param>
        /// <param name="rating">No Metadata Documentation available.</param>
        public int CalculateAppRagting(Nullable<global::System.Int32> appId, Nullable<global::System.Int32> cgId, ObjectParameter rating)
        {
            ObjectParameter appIdParameter;
            if (appId.HasValue)
            {
                appIdParameter = new ObjectParameter("appId", appId);
            }
            else
            {
                appIdParameter = new ObjectParameter("appId", typeof(global::System.Int32));
            }
    
            ObjectParameter cgIdParameter;
            if (cgId.HasValue)
            {
                cgIdParameter = new ObjectParameter("cgId", cgId);
            }
            else
            {
                cgIdParameter = new ObjectParameter("cgId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("CalculateAppRagting", appIdParameter, cgIdParameter, rating);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="addressID">Initial value of the AddressID property.</param>
        public static Address CreateAddress(global::System.Int32 addressID)
        {
            Address address = new Address();
            address.AddressID = addressID;
            return address;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                if (_AddressID != value)
                {
                    OnAddressIDChanging(value);
                    ReportPropertyChanging("AddressID");
                    _AddressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressID");
                    OnAddressIDChanged();
                }
            }
        }
        private global::System.Int32 _AddressID;
        partial void OnAddressIDChanging(global::System.Int32 value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegionID
        {
            get
            {
                return _RegionID;
            }
            set
            {
                OnRegionIDChanging(value);
                ReportPropertyChanging("RegionID");
                _RegionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionID");
                OnRegionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RegionID;
        partial void OnRegionIDChanging(Nullable<global::System.Int32> value);
        partial void OnRegionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Building
        {
            get
            {
                return _Building;
            }
            set
            {
                OnBuildingChanging(value);
                ReportPropertyChanging("Building");
                _Building = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Building");
                OnBuildingChanged();
            }
        }
        private global::System.String _Building;
        partial void OnBuildingChanging(global::System.String value);
        partial void OnBuildingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BuildingPart
        {
            get
            {
                return _BuildingPart;
            }
            set
            {
                OnBuildingPartChanging(value);
                ReportPropertyChanging("BuildingPart");
                _BuildingPart = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BuildingPart");
                OnBuildingPartChanged();
            }
        }
        private global::System.String _BuildingPart;
        partial void OnBuildingPartChanging(global::System.String value);
        partial void OnBuildingPartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Room
        {
            get
            {
                return _Room;
            }
            set
            {
                OnRoomChanging(value);
                ReportPropertyChanging("Room");
                _Room = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Room");
                OnRoomChanged();
            }
        }
        private global::System.String _Room;
        partial void OnRoomChanging(global::System.String value);
        partial void OnRoomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegionName
        {
            get
            {
                return _RegionName;
            }
            set
            {
                OnRegionNameChanging(value);
                ReportPropertyChanging("RegionName");
                _RegionName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegionName");
                OnRegionNameChanged();
            }
        }
        private global::System.String _RegionName;
        partial void OnRegionNameChanging(global::System.String value);
        partial void OnRegionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Address_CountryType", "CountryType")]
        public CountryType CountryType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryType>("Import.FK_Address_CountryType", "CountryType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryType>("Import.FK_Address_CountryType", "CountryType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CountryType> CountryTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryType>("Import.FK_Address_CountryType", "CountryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CountryType>("Import.FK_Address_CountryType", "CountryType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Address_RegionType", "RegionType")]
        public RegionType RegionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionType>("Import.FK_Address_RegionType", "RegionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionType>("Import.FK_Address_RegionType", "RegionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RegionType> RegionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionType>("Import.FK_Address_RegionType", "RegionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RegionType>("Import.FK_Address_RegionType", "RegionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Entrant_Address_Fact", "Entrant")]
        public EntityCollection<Entrant> Entrant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Entrant>("Import.FK_Entrant_Address_Fact", "Entrant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Entrant>("Import.FK_Entrant_Address_Fact", "Entrant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Entrant_Address_Registration", "Entrant")]
        public EntityCollection<Entrant> Entrant1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Entrant>("Import.FK_Entrant_Address_Registration", "Entrant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Entrant>("Import.FK_Entrant_Address_Registration", "Entrant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="AdmissionItemType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdmissionItemType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdmissionItemType object.
        /// </summary>
        /// <param name="itemTypeID">Initial value of the ItemTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="itemLevel">Initial value of the ItemLevel property.</param>
        /// <param name="canBeSkipped">Initial value of the CanBeSkipped property.</param>
        /// <param name="autoCopyName">Initial value of the AutoCopyName property.</param>
        /// <param name="displayOrder">Initial value of the DisplayOrder property.</param>
        public static AdmissionItemType CreateAdmissionItemType(global::System.Int16 itemTypeID, global::System.String name, global::System.Int16 itemLevel, global::System.Boolean canBeSkipped, global::System.Boolean autoCopyName, global::System.Int32 displayOrder)
        {
            AdmissionItemType admissionItemType = new AdmissionItemType();
            admissionItemType.ItemTypeID = itemTypeID;
            admissionItemType.Name = name;
            admissionItemType.ItemLevel = itemLevel;
            admissionItemType.CanBeSkipped = canBeSkipped;
            admissionItemType.AutoCopyName = autoCopyName;
            admissionItemType.DisplayOrder = displayOrder;
            return admissionItemType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ItemTypeID
        {
            get
            {
                return _ItemTypeID;
            }
            set
            {
                if (_ItemTypeID != value)
                {
                    OnItemTypeIDChanging(value);
                    ReportPropertyChanging("ItemTypeID");
                    _ItemTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemTypeID");
                    OnItemTypeIDChanged();
                }
            }
        }
        private global::System.Int16 _ItemTypeID;
        partial void OnItemTypeIDChanging(global::System.Int16 value);
        partial void OnItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 ItemLevel
        {
            get
            {
                return _ItemLevel;
            }
            set
            {
                OnItemLevelChanging(value);
                ReportPropertyChanging("ItemLevel");
                _ItemLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemLevel");
                OnItemLevelChanged();
            }
        }
        private global::System.Int16 _ItemLevel;
        partial void OnItemLevelChanging(global::System.Int16 value);
        partial void OnItemLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanBeSkipped
        {
            get
            {
                return _CanBeSkipped;
            }
            set
            {
                OnCanBeSkippedChanging(value);
                ReportPropertyChanging("CanBeSkipped");
                _CanBeSkipped = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanBeSkipped");
                OnCanBeSkippedChanged();
            }
        }
        private global::System.Boolean _CanBeSkipped;
        partial void OnCanBeSkippedChanging(global::System.Boolean value);
        partial void OnCanBeSkippedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AutoCopyName
        {
            get
            {
                return _AutoCopyName;
            }
            set
            {
                OnAutoCopyNameChanging(value);
                ReportPropertyChanging("AutoCopyName");
                _AutoCopyName = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoCopyName");
                OnAutoCopyNameChanged();
            }
        }
        private global::System.Boolean _AutoCopyName;
        partial void OnAutoCopyNameChanging(global::System.Boolean value);
        partial void OnAutoCopyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private global::System.Int32 _DisplayOrder;
        partial void OnDisplayOrderChanging(global::System.Int32 value);
        partial void OnDisplayOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_AdmissionVolume_AdmissionItemType", "AdmissionVolume")]
        public EntityCollection<AdmissionVolume> AdmissionVolume
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdmissionVolume>("Import.FK_AdmissionVolume_AdmissionItemType", "AdmissionVolume");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdmissionVolume>("Import.FK_AdmissionVolume_AdmissionItemType", "AdmissionVolume", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_AllowedDirections_AdmissionItemType", "AllowedDirections")]
        public EntityCollection<AllowedDirections> AllowedDirections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AllowedDirections>("Import.FK_AllowedDirections_AdmissionItemType", "AllowedDirections");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AllowedDirections>("Import.FK_AllowedDirections_AdmissionItemType", "AllowedDirections", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CampaignEducationLevel_AdmissionItemType", "CampaignEducationLevel")]
        public EntityCollection<CampaignEducationLevel> CampaignEducationLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CampaignEducationLevel>("Import.FK_CampaignEducationLevel_AdmissionItemType", "CampaignEducationLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CampaignEducationLevel>("Import.FK_CampaignEducationLevel_AdmissionItemType", "CampaignEducationLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CampaignDate_AdmissionItemTypeForm", "CampaignDate")]
        public EntityCollection<CampaignDate> CampaignDate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CampaignDate>("Import.FK_CampaignDate_AdmissionItemTypeForm", "CampaignDate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CampaignDate>("Import.FK_CampaignDate_AdmissionItemTypeForm", "CampaignDate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CampaignDate_AdmissionItemTypeLevel", "CampaignDate")]
        public EntityCollection<CampaignDate> CampaignDate1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CampaignDate>("Import.FK_CampaignDate_AdmissionItemTypeLevel", "CampaignDate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CampaignDate>("Import.FK_CampaignDate_AdmissionItemTypeLevel", "CampaignDate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CampaignDate_AdmissionItemTypeSource", "CampaignDate")]
        public EntityCollection<CampaignDate> CampaignDate2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CampaignDate>("Import.FK_CampaignDate_AdmissionItemTypeSource", "CampaignDate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CampaignDate>("Import.FK_CampaignDate_AdmissionItemTypeSource", "CampaignDate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CompetitiveGroupItem_EducationLevelID", "CompetitiveGroupItem")]
        public EntityCollection<CompetitiveGroupItem> CompetitiveGroupItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitiveGroupItem>("Import.FK_CompetitiveGroupItem_EducationLevelID", "CompetitiveGroupItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitiveGroupItem>("Import.FK_CompetitiveGroupItem_EducationLevelID", "CompetitiveGroupItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OrderOfAdmission_AdmissionItemTypeForm", "OrderOfAdmission")]
        public EntityCollection<OrderOfAdmission> OrderOfAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderOfAdmission>("Import.FK_OrderOfAdmission_AdmissionItemTypeForm", "OrderOfAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderOfAdmission>("Import.FK_OrderOfAdmission_AdmissionItemTypeForm", "OrderOfAdmission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OrderOfAdmission_AdmissionItemTypeLevel", "OrderOfAdmission")]
        public EntityCollection<OrderOfAdmission> OrderOfAdmission1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderOfAdmission>("Import.FK_OrderOfAdmission_AdmissionItemTypeLevel", "OrderOfAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderOfAdmission>("Import.FK_OrderOfAdmission_AdmissionItemTypeLevel", "OrderOfAdmission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OrderOfAdmission_AdmissionItemTypeSource", "OrderOfAdmission")]
        public EntityCollection<OrderOfAdmission> OrderOfAdmission2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderOfAdmission>("Import.FK_OrderOfAdmission_AdmissionItemTypeSource", "OrderOfAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderOfAdmission>("Import.FK_OrderOfAdmission_AdmissionItemTypeSource", "OrderOfAdmission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Application_AdmissionItemTypeForm", "Application")]
        public EntityCollection<Application> Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("Import.FK_Application_AdmissionItemTypeForm", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("Import.FK_Application_AdmissionItemTypeForm", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Application_AdmissionItemTypeSource", "Application")]
        public EntityCollection<Application> Application1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("Import.FK_Application_AdmissionItemTypeSource", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("Import.FK_Application_AdmissionItemTypeSource", "Application", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="AdmissionVolume")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdmissionVolume : EntityObject
    {
        #region Factory Method

        /// <summary>
        /// Create a new AdmissionVolume object.
        /// </summary>
        /// <param name="admissionVolumeID">Initial value of the AdmissionVolumeID property.</param>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        /// <param name="admissionItemTypeID">Initial value of the AdmissionItemTypeID property.</param>
        /// <param name="numberBudgetO">Initial value of the NumberBudgetO property.</param>
        /// <param name="numberBudgetOZ">Initial value of the NumberBudgetOZ property.</param>
        /// <param name="numberBudgetZ">Initial value of the NumberBudgetZ property.</param>
        /// <param name="numberPaidO">Initial value of the NumberPaidO property.</param>
        /// <param name="numberPaidOZ">Initial value of the NumberPaidOZ property.</param>
        /// <param name="numberPaidZ">Initial value of the NumberPaidZ property.</param>
        /// <param name="numberTargetO">Initial value of the NumberTargetO property.</param>
        /// <param name="numberTargetOZ">Initial value of the NumberTargetOZ property.</param>
        /// <param name="numberTargetZ">Initial value of the NumberTargetZ property.</param>
        public static AdmissionVolume CreateAdmissionVolume(global::System.Int32 admissionVolumeID, global::System.Int32 institutionID, global::System.Int16 admissionItemTypeID, global::System.Int32 numberBudgetO, global::System.Int32 numberBudgetOZ, global::System.Int32 numberBudgetZ, global::System.Int32 numberPaidO, global::System.Int32 numberPaidOZ, global::System.Int32 numberPaidZ, global::System.Int32 numberTargetO, global::System.Int32 numberTargetOZ, global::System.Int32 numberTargetZ, global::System.Int32 parentDirectionID)
        {
            AdmissionVolume admissionVolume = new AdmissionVolume();
            admissionVolume.AdmissionVolumeID = admissionVolumeID;
            admissionVolume.InstitutionID = institutionID;
            admissionVolume.AdmissionItemTypeID = admissionItemTypeID;
            admissionVolume.NumberBudgetO = numberBudgetO;
            admissionVolume.NumberBudgetOZ = numberBudgetOZ;
            admissionVolume.NumberBudgetZ = numberBudgetZ;
            admissionVolume.NumberPaidO = numberPaidO;
            admissionVolume.NumberPaidOZ = numberPaidOZ;
            admissionVolume.NumberPaidZ = numberPaidZ;
            admissionVolume.NumberTargetO = numberTargetO;
            admissionVolume.NumberTargetOZ = numberTargetOZ;
            admissionVolume.NumberTargetZ = numberTargetZ;
            admissionVolume.ParentDirectionID = parentDirectionID;
            return admissionVolume;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdmissionVolumeID
        {
            get
            {
                return _AdmissionVolumeID;
            }
            set
            {
                if (_AdmissionVolumeID != value)
                {
                    OnAdmissionVolumeIDChanging(value);
                    ReportPropertyChanging("AdmissionVolumeID");
                    _AdmissionVolumeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdmissionVolumeID");
                    OnAdmissionVolumeIDChanged();
                }
            }
        }
        private global::System.Int32 _AdmissionVolumeID;
        partial void OnAdmissionVolumeIDChanging(global::System.Int32 value);
        partial void OnAdmissionVolumeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                OnInstitutionIDChanging(value);
                ReportPropertyChanging("InstitutionID");
                _InstitutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionID");
                OnInstitutionIDChanged();
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 AdmissionItemTypeID
        {
            get
            {
                return _AdmissionItemTypeID;
            }
            set
            {
                OnAdmissionItemTypeIDChanging(value);
                ReportPropertyChanging("AdmissionItemTypeID");
                _AdmissionItemTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmissionItemTypeID");
                OnAdmissionItemTypeIDChanged();
            }
        }
        private global::System.Int16 _AdmissionItemTypeID;
        partial void OnAdmissionItemTypeIDChanging(global::System.Int16 value);
        partial void OnAdmissionItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DirectionID
        {
            get
            {
                return _DirectionID;
            }
            set
            {
                OnDirectionIDChanging(value);
                ReportPropertyChanging("DirectionID");
                _DirectionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DirectionID");
                OnDirectionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DirectionID;
        partial void OnDirectionIDChanging(Nullable<global::System.Int32> value);
        partial void OnDirectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberBudgetO
        {
            get
            {
                return _NumberBudgetO;
            }
            set
            {
                OnNumberBudgetOChanging(value);
                ReportPropertyChanging("NumberBudgetO");
                _NumberBudgetO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberBudgetO");
                OnNumberBudgetOChanged();
            }
        }
        private global::System.Int32 _NumberBudgetO;
        partial void OnNumberBudgetOChanging(global::System.Int32 value);
        partial void OnNumberBudgetOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberBudgetOZ
        {
            get
            {
                return _NumberBudgetOZ;
            }
            set
            {
                OnNumberBudgetOZChanging(value);
                ReportPropertyChanging("NumberBudgetOZ");
                _NumberBudgetOZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberBudgetOZ");
                OnNumberBudgetOZChanged();
            }
        }
        private global::System.Int32 _NumberBudgetOZ;
        partial void OnNumberBudgetOZChanging(global::System.Int32 value);
        partial void OnNumberBudgetOZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberBudgetZ
        {
            get
            {
                return _NumberBudgetZ;
            }
            set
            {
                OnNumberBudgetZChanging(value);
                ReportPropertyChanging("NumberBudgetZ");
                _NumberBudgetZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberBudgetZ");
                OnNumberBudgetZChanged();
            }
        }
        private global::System.Int32 _NumberBudgetZ;
        partial void OnNumberBudgetZChanging(global::System.Int32 value);
        partial void OnNumberBudgetZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberPaidO
        {
            get
            {
                return _NumberPaidO;
            }
            set
            {
                OnNumberPaidOChanging(value);
                ReportPropertyChanging("NumberPaidO");
                _NumberPaidO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberPaidO");
                OnNumberPaidOChanged();
            }
        }
        private global::System.Int32 _NumberPaidO;
        partial void OnNumberPaidOChanging(global::System.Int32 value);
        partial void OnNumberPaidOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberPaidOZ
        {
            get
            {
                return _NumberPaidOZ;
            }
            set
            {
                OnNumberPaidOZChanging(value);
                ReportPropertyChanging("NumberPaidOZ");
                _NumberPaidOZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberPaidOZ");
                OnNumberPaidOZChanged();
            }
        }
        private global::System.Int32 _NumberPaidOZ;
        partial void OnNumberPaidOZChanging(global::System.Int32 value);
        partial void OnNumberPaidOZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberPaidZ
        {
            get
            {
                return _NumberPaidZ;
            }
            set
            {
                OnNumberPaidZChanging(value);
                ReportPropertyChanging("NumberPaidZ");
                _NumberPaidZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberPaidZ");
                OnNumberPaidZChanged();
            }
        }
        private global::System.Int32 _NumberPaidZ;
        partial void OnNumberPaidZChanging(global::System.Int32 value);
        partial void OnNumberPaidZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.String _UID;
        partial void OnUIDChanging(global::System.String value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CampaignID
        {
            get
            {
                return _CampaignID;
            }
            set
            {
                OnCampaignIDChanging(value);
                ReportPropertyChanging("CampaignID");
                _CampaignID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CampaignID");
                OnCampaignIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CampaignID;
        partial void OnCampaignIDChanging(Nullable<global::System.Int32> value);
        partial void OnCampaignIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Course
        {
            get
            {
                return _Course;
            }
            set
            {
                OnCourseChanging(value);
                ReportPropertyChanging("Course");
                _Course = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Course");
                OnCourseChanged();
            }
        }
        private Nullable<global::System.Int32> _Course;
        partial void OnCourseChanging(Nullable<global::System.Int32> value);
        partial void OnCourseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberTargetO
        {
            get
            {
                return _NumberTargetO;
            }
            set
            {
                OnNumberTargetOChanging(value);
                ReportPropertyChanging("NumberTargetO");
                _NumberTargetO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberTargetO");
                OnNumberTargetOChanged();
            }
        }
        private global::System.Int32 _NumberTargetO;
        partial void OnNumberTargetOChanging(global::System.Int32 value);
        partial void OnNumberTargetOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberTargetOZ
        {
            get
            {
                return _NumberTargetOZ;
            }
            set
            {
                OnNumberTargetOZChanging(value);
                ReportPropertyChanging("NumberTargetOZ");
                _NumberTargetOZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberTargetOZ");
                OnNumberTargetOZChanged();
            }
        }
        private global::System.Int32 _NumberTargetOZ;
        partial void OnNumberTargetOZChanging(global::System.Int32 value);
        partial void OnNumberTargetOZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberTargetZ
        {
            get
            {
                return _NumberTargetZ;
            }
            set
            {
                OnNumberTargetZChanging(value);
                ReportPropertyChanging("NumberTargetZ");
                _NumberTargetZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberTargetZ");
                OnNumberTargetZChanged();
            }
        }
        private global::System.Int32 _NumberTargetZ;
        partial void OnNumberTargetZChanging(global::System.Int32 value);
        partial void OnNumberTargetZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberQuotaO
        {
            get
            {
                return _NumberQuotaO;
            }
            set
            {
                OnNumberQuotaOChanging(value);
                ReportPropertyChanging("NumberQuotaO");
                _NumberQuotaO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberQuotaO");
                OnNumberQuotaOChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberQuotaO;
        partial void OnNumberQuotaOChanging(Nullable<global::System.Int32> value);
        partial void OnNumberQuotaOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberQuotaOZ
        {
            get
            {
                return _NumberQuotaOZ;
            }
            set
            {
                OnNumberQuotaOZChanging(value);
                ReportPropertyChanging("NumberQuotaOZ");
                _NumberQuotaOZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberQuotaOZ");
                OnNumberQuotaOZChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberQuotaOZ;
        partial void OnNumberQuotaOZChanging(Nullable<global::System.Int32> value);
        partial void OnNumberQuotaOZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberQuotaZ
        {
            get
            {
                return _NumberQuotaZ;
            }
            set
            {
                OnNumberQuotaZChanging(value);
                ReportPropertyChanging("NumberQuotaZ");
                _NumberQuotaZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberQuotaZ");
                OnNumberQuotaZChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberQuotaZ;
        partial void OnNumberQuotaZChanging(Nullable<global::System.Int32> value);
        partial void OnNumberQuotaZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentDirectionID
        {
            get
            {
                return _ParentDirectionID;
            }
            set
            {
                OnParentDirectionIDChanging(value);
                ReportPropertyChanging("ParentDirectionID");
                _ParentDirectionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentDirectionID");
                OnParentDirectionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentDirectionID;
        partial void OnParentDirectionIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentDirectionIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_AdmissionVolume_Institution", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_AdmissionVolume_Institution", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_AdmissionVolume_Institution", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_AdmissionVolume_Institution", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("Import.FK_AdmissionVolume_Institution", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_AdmissionVolume_Direction", "Direction")]
        public Direction Direction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_AdmissionVolume_Direction", "Direction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_AdmissionVolume_Direction", "Direction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Direction> DirectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_AdmissionVolume_Direction", "Direction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Direction>("Import.FK_AdmissionVolume_Direction", "Direction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_AdmissionVolume_AdmissionItemType", "AdmissionItemType")]
        public AdmissionItemType AdmissionItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_AdmissionVolume_AdmissionItemType", "AdmissionItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_AdmissionVolume_AdmissionItemType", "AdmissionItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdmissionItemType> AdmissionItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_AdmissionVolume_AdmissionItemType", "AdmissionItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdmissionItemType>("Import.FK_AdmissionVolume_AdmissionItemType", "AdmissionItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_AdmissionVolume_Campaign", "Campaign")]
        public Campaign Campaign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("Import.FK_AdmissionVolume_Campaign", "Campaign").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("Import.FK_AdmissionVolume_Campaign", "Campaign").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Campaign> CampaignReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("Import.FK_AdmissionVolume_Campaign", "Campaign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Campaign>("Import.FK_AdmissionVolume_Campaign", "Campaign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_AdmissionVolume_ParentDirection", "ParentDirection")]
        public ParentDirection ParentDirection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParentDirection>("Import.FK_AdmissionVolume_ParentDirection", "ParentDirection").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParentDirection>("Import.FK_AdmissionVolume_ParentDirection", "ParentDirection").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParentDirection> ParentDirectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParentDirection>("Import.FK_AdmissionVolume_ParentDirection", "ParentDirection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParentDirection>("Import.FK_AdmissionVolume_ParentDirection", "ParentDirection", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="AllowedDirections")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AllowedDirections : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AllowedDirections object.
        /// </summary>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        /// <param name="directionID">Initial value of the DirectionID property.</param>
        /// <param name="admissionItemTypeID">Initial value of the AdmissionItemTypeID property.</param>
        public static AllowedDirections CreateAllowedDirections(global::System.Int32 institutionID, global::System.Int32 directionID, global::System.Int16 admissionItemTypeID)
        {
            AllowedDirections allowedDirections = new AllowedDirections();
            allowedDirections.InstitutionID = institutionID;
            allowedDirections.DirectionID = directionID;
            allowedDirections.AdmissionItemTypeID = admissionItemTypeID;
            return allowedDirections;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                if (_InstitutionID != value)
                {
                    OnInstitutionIDChanging(value);
                    ReportPropertyChanging("InstitutionID");
                    _InstitutionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstitutionID");
                    OnInstitutionIDChanged();
                }
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DirectionID
        {
            get
            {
                return _DirectionID;
            }
            set
            {
                if (_DirectionID != value)
                {
                    OnDirectionIDChanging(value);
                    ReportPropertyChanging("DirectionID");
                    _DirectionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DirectionID");
                    OnDirectionIDChanged();
                }
            }
        }
        private global::System.Int32 _DirectionID;
        partial void OnDirectionIDChanging(global::System.Int32 value);
        partial void OnDirectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 AdmissionItemTypeID
        {
            get
            {
                return _AdmissionItemTypeID;
            }
            set
            {
                if (_AdmissionItemTypeID != value)
                {
                    OnAdmissionItemTypeIDChanging(value);
                    ReportPropertyChanging("AdmissionItemTypeID");
                    _AdmissionItemTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdmissionItemTypeID");
                    OnAdmissionItemTypeIDChanged();
                }
            }
        }
        private global::System.Int16 _AdmissionItemTypeID;
        partial void OnAdmissionItemTypeIDChanging(global::System.Int16 value);
        partial void OnAdmissionItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_AllowedDirections_Direction", "Direction")]
        public Direction Direction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_AllowedDirections_Direction", "Direction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_AllowedDirections_Direction", "Direction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Direction> DirectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_AllowedDirections_Direction", "Direction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Direction>("Import.FK_AllowedDirections_Direction", "Direction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_AllowedDirections_Institution", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_AllowedDirections_Institution", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_AllowedDirections_Institution", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_AllowedDirections_Institution", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("Import.FK_AllowedDirections_Institution", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_AllowedDirections_AdmissionItemType", "AdmissionItemType")]
        public AdmissionItemType AdmissionItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_AllowedDirections_AdmissionItemType", "AdmissionItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_AllowedDirections_AdmissionItemType", "AdmissionItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdmissionItemType> AdmissionItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_AllowedDirections_AdmissionItemType", "AdmissionItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdmissionItemType>("Import.FK_AllowedDirections_AdmissionItemType", "AdmissionItemType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="Application")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Application : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Application object.
        /// </summary>
        /// <param name="applicationID">Initial value of the ApplicationID property.</param>
        /// <param name="entrantID">Initial value of the EntrantID property.</param>
        /// <param name="registrationDate">Initial value of the RegistrationDate property.</param>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        /// <param name="statusID">Initial value of the StatusID property.</param>
        /// <param name="wizardStepID">Initial value of the WizardStepID property.</param>
        /// <param name="violationID">Initial value of the ViolationID property.</param>
        /// <param name="sourceID">Initial value of the SourceID property.</param>
        /// <param name="originalDocumentsReceived">Initial value of the OriginalDocumentsReceived property.</param>
        /// <param name="isRequiresBudgetO">Initial value of the IsRequiresBudgetO property.</param>
        /// <param name="isRequiresBudgetOZ">Initial value of the IsRequiresBudgetOZ property.</param>
        /// <param name="isRequiresBudgetZ">Initial value of the IsRequiresBudgetZ property.</param>
        /// <param name="isRequiresPaidO">Initial value of the IsRequiresPaidO property.</param>
        /// <param name="isRequiresPaidOZ">Initial value of the IsRequiresPaidOZ property.</param>
        /// <param name="isRequiresPaidZ">Initial value of the IsRequiresPaidZ property.</param>
        /// <param name="isRequiresTargetO">Initial value of the IsRequiresTargetO property.</param>
        /// <param name="isRequiresTargetOZ">Initial value of the IsRequiresTargetOZ property.</param>
        /// <param name="isRequiresTargetZ">Initial value of the IsRequiresTargetZ property.</param>
        public static Application CreateApplication(global::System.Int32 applicationID, global::System.Int32 entrantID, global::System.DateTime registrationDate, global::System.Int32 institutionID, global::System.Int32 statusID, global::System.Int32 wizardStepID, global::System.Int32 violationID, global::System.Byte sourceID, global::System.Boolean originalDocumentsReceived, global::System.Boolean isRequiresBudgetO, global::System.Boolean isRequiresBudgetOZ, global::System.Boolean isRequiresBudgetZ, global::System.Boolean isRequiresPaidO, global::System.Boolean isRequiresPaidOZ, global::System.Boolean isRequiresPaidZ, global::System.Boolean isRequiresTargetO, global::System.Boolean isRequiresTargetOZ, global::System.Boolean isRequiresTargetZ)
        {
            Application application = new Application();
            application.ApplicationID = applicationID;
            application.EntrantID = entrantID;
            application.RegistrationDate = registrationDate;
            application.InstitutionID = institutionID;
            application.StatusID = statusID;
            application.WizardStepID = wizardStepID;
            application.ViolationID = violationID;
            application.SourceID = sourceID;
            application.OriginalDocumentsReceived = originalDocumentsReceived;
            application.IsRequiresBudgetO = isRequiresBudgetO;
            application.IsRequiresBudgetOZ = isRequiresBudgetOZ;
            application.IsRequiresBudgetZ = isRequiresBudgetZ;
            application.IsRequiresPaidO = isRequiresPaidO;
            application.IsRequiresPaidOZ = isRequiresPaidOZ;
            application.IsRequiresPaidZ = isRequiresPaidZ;
            application.IsRequiresTargetO = isRequiresTargetO;
            application.IsRequiresTargetOZ = isRequiresTargetOZ;
            application.IsRequiresTargetZ = isRequiresTargetZ;
            return application;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationID
        {
            get
            {
                return _ApplicationID;
            }
            set
            {
                if (_ApplicationID != value)
                {
                    OnApplicationIDChanging(value);
                    ReportPropertyChanging("ApplicationID");
                    _ApplicationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationID");
                    OnApplicationIDChanged();
                }
            }
        }
        private global::System.Int32 _ApplicationID;
        partial void OnApplicationIDChanging(global::System.Int32 value);
        partial void OnApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntrantID
        {
            get
            {
                return _EntrantID;
            }
            set
            {
                OnEntrantIDChanging(value);
                ReportPropertyChanging("EntrantID");
                _EntrantID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntrantID");
                OnEntrantIDChanged();
            }
        }
        private global::System.Int32 _EntrantID;
        partial void OnEntrantIDChanging(global::System.Int32 value);
        partial void OnEntrantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RegistrationDate
        {
            get
            {
                return _RegistrationDate;
            }
            set
            {
                OnRegistrationDateChanging(value);
                ReportPropertyChanging("RegistrationDate");
                _RegistrationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationDate");
                OnRegistrationDateChanged();
            }
        }
        private global::System.DateTime _RegistrationDate;
        partial void OnRegistrationDateChanging(global::System.DateTime value);
        partial void OnRegistrationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                OnInstitutionIDChanging(value);
                ReportPropertyChanging("InstitutionID");
                _InstitutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionID");
                OnInstitutionIDChanged();
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ApproveInstitutionCount
        {
            get
            {
                return _ApproveInstitutionCount;
            }
            set
            {
                OnApproveInstitutionCountChanging(value);
                ReportPropertyChanging("ApproveInstitutionCount");
                _ApproveInstitutionCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApproveInstitutionCount");
                OnApproveInstitutionCountChanged();
            }
        }
        private Nullable<global::System.Boolean> _ApproveInstitutionCount;
        partial void OnApproveInstitutionCountChanging(Nullable<global::System.Boolean> value);
        partial void OnApproveInstitutionCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> NeedHostel
        {
            get
            {
                return _NeedHostel;
            }
            set
            {
                OnNeedHostelChanging(value);
                ReportPropertyChanging("NeedHostel");
                _NeedHostel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NeedHostel");
                OnNeedHostelChanged();
            }
        }
        private Nullable<global::System.Boolean> _NeedHostel;
        partial void OnNeedHostelChanging(Nullable<global::System.Boolean> value);
        partial void OnNeedHostelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> FirstHigherEducation
        {
            get
            {
                return _FirstHigherEducation;
            }
            set
            {
                OnFirstHigherEducationChanging(value);
                ReportPropertyChanging("FirstHigherEducation");
                _FirstHigherEducation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirstHigherEducation");
                OnFirstHigherEducationChanged();
            }
        }
        private Nullable<global::System.Boolean> _FirstHigherEducation;
        partial void OnFirstHigherEducationChanging(Nullable<global::System.Boolean> value);
        partial void OnFirstHigherEducationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ApprovePersonalData
        {
            get
            {
                return _ApprovePersonalData;
            }
            set
            {
                OnApprovePersonalDataChanging(value);
                ReportPropertyChanging("ApprovePersonalData");
                _ApprovePersonalData = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovePersonalData");
                OnApprovePersonalDataChanged();
            }
        }
        private Nullable<global::System.Boolean> _ApprovePersonalData;
        partial void OnApprovePersonalDataChanging(Nullable<global::System.Boolean> value);
        partial void OnApprovePersonalDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> FamiliarWithLicenseAndRules
        {
            get
            {
                return _FamiliarWithLicenseAndRules;
            }
            set
            {
                OnFamiliarWithLicenseAndRulesChanging(value);
                ReportPropertyChanging("FamiliarWithLicenseAndRules");
                _FamiliarWithLicenseAndRules = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FamiliarWithLicenseAndRules");
                OnFamiliarWithLicenseAndRulesChanged();
            }
        }
        private Nullable<global::System.Boolean> _FamiliarWithLicenseAndRules;
        partial void OnFamiliarWithLicenseAndRulesChanging(Nullable<global::System.Boolean> value);
        partial void OnFamiliarWithLicenseAndRulesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> FamiliarWithAdmissionType
        {
            get
            {
                return _FamiliarWithAdmissionType;
            }
            set
            {
                OnFamiliarWithAdmissionTypeChanging(value);
                ReportPropertyChanging("FamiliarWithAdmissionType");
                _FamiliarWithAdmissionType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FamiliarWithAdmissionType");
                OnFamiliarWithAdmissionTypeChanged();
            }
        }
        private Nullable<global::System.Boolean> _FamiliarWithAdmissionType;
        partial void OnFamiliarWithAdmissionTypeChanging(Nullable<global::System.Boolean> value);
        partial void OnFamiliarWithAdmissionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> FamiliarWithOriginalDocumentDeliveryDate
        {
            get
            {
                return _FamiliarWithOriginalDocumentDeliveryDate;
            }
            set
            {
                OnFamiliarWithOriginalDocumentDeliveryDateChanging(value);
                ReportPropertyChanging("FamiliarWithOriginalDocumentDeliveryDate");
                _FamiliarWithOriginalDocumentDeliveryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FamiliarWithOriginalDocumentDeliveryDate");
                OnFamiliarWithOriginalDocumentDeliveryDateChanged();
            }
        }
        private Nullable<global::System.Boolean> _FamiliarWithOriginalDocumentDeliveryDate;
        partial void OnFamiliarWithOriginalDocumentDeliveryDateChanging(Nullable<global::System.Boolean> value);
        partial void OnFamiliarWithOriginalDocumentDeliveryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private global::System.Int32 _StatusID;
        partial void OnStatusIDChanging(global::System.Int32 value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WizardStepID
        {
            get
            {
                return _WizardStepID;
            }
            set
            {
                OnWizardStepIDChanging(value);
                ReportPropertyChanging("WizardStepID");
                _WizardStepID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WizardStepID");
                OnWizardStepIDChanged();
            }
        }
        private global::System.Int32 _WizardStepID;
        partial void OnWizardStepIDChanging(global::System.Int32 value);
        partial void OnWizardStepIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ViolationID
        {
            get
            {
                return _ViolationID;
            }
            set
            {
                OnViolationIDChanging(value);
                ReportPropertyChanging("ViolationID");
                _ViolationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViolationID");
                OnViolationIDChanged();
            }
        }
        private global::System.Int32 _ViolationID;
        partial void OnViolationIDChanging(global::System.Int32 value);
        partial void OnViolationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatusDecision
        {
            get
            {
                return _StatusDecision;
            }
            set
            {
                OnStatusDecisionChanging(value);
                ReportPropertyChanging("StatusDecision");
                _StatusDecision = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StatusDecision");
                OnStatusDecisionChanged();
            }
        }
        private global::System.String _StatusDecision;
        partial void OnStatusDecisionChanging(global::System.String value);
        partial void OnStatusDecisionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastCheckDate
        {
            get
            {
                return _LastCheckDate;
            }
            set
            {
                OnLastCheckDateChanging(value);
                ReportPropertyChanging("LastCheckDate");
                _LastCheckDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastCheckDate");
                OnLastCheckDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastCheckDate;
        partial void OnLastCheckDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastCheckDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ViolationErrors
        {
            get
            {
                return _ViolationErrors;
            }
            set
            {
                OnViolationErrorsChanging(value);
                ReportPropertyChanging("ViolationErrors");
                _ViolationErrors = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ViolationErrors");
                OnViolationErrorsChanged();
            }
        }
        private global::System.String _ViolationErrors;
        partial void OnViolationErrorsChanging(global::System.String value);
        partial void OnViolationErrorsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PublishDate
        {
            get
            {
                return _PublishDate;
            }
            set
            {
                OnPublishDateChanging(value);
                ReportPropertyChanging("PublishDate");
                _PublishDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublishDate");
                OnPublishDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PublishDate;
        partial void OnPublishDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPublishDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte SourceID
        {
            get
            {
                return _SourceID;
            }
            set
            {
                OnSourceIDChanging(value);
                ReportPropertyChanging("SourceID");
                _SourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceID");
                OnSourceIDChanged();
            }
        }
        private global::System.Byte _SourceID;
        partial void OnSourceIDChanging(global::System.Byte value);
        partial void OnSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApplicationNumber
        {
            get
            {
                return _ApplicationNumber;
            }
            set
            {
                OnApplicationNumberChanging(value);
                ReportPropertyChanging("ApplicationNumber");
                _ApplicationNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApplicationNumber");
                OnApplicationNumberChanged();
            }
        }
        private global::System.String _ApplicationNumber;
        partial void OnApplicationNumberChanging(global::System.String value);
        partial void OnApplicationNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean OriginalDocumentsReceived
        {
            get
            {
                return _OriginalDocumentsReceived;
            }
            set
            {
                OnOriginalDocumentsReceivedChanging(value);
                ReportPropertyChanging("OriginalDocumentsReceived");
                _OriginalDocumentsReceived = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalDocumentsReceived");
                OnOriginalDocumentsReceivedChanged();
            }
        }
        private global::System.Boolean _OriginalDocumentsReceived;
        partial void OnOriginalDocumentsReceivedChanging(global::System.Boolean value);
        partial void OnOriginalDocumentsReceivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderCompetitiveGroupID
        {
            get
            {
                return _OrderCompetitiveGroupID;
            }
            set
            {
                OnOrderCompetitiveGroupIDChanging(value);
                ReportPropertyChanging("OrderCompetitiveGroupID");
                _OrderCompetitiveGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderCompetitiveGroupID");
                OnOrderCompetitiveGroupIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderCompetitiveGroupID;
        partial void OnOrderCompetitiveGroupIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrderCompetitiveGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderOfAdmissionID
        {
            get
            {
                return _OrderOfAdmissionID;
            }
            set
            {
                OnOrderOfAdmissionIDChanging(value);
                ReportPropertyChanging("OrderOfAdmissionID");
                _OrderOfAdmissionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderOfAdmissionID");
                OnOrderOfAdmissionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderOfAdmissionID;
        partial void OnOrderOfAdmissionIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrderOfAdmissionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderCompetitiveGroupItemID
        {
            get
            {
                return _OrderCompetitiveGroupItemID;
            }
            set
            {
                OnOrderCompetitiveGroupItemIDChanging(value);
                ReportPropertyChanging("OrderCompetitiveGroupItemID");
                _OrderCompetitiveGroupItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderCompetitiveGroupItemID");
                OnOrderCompetitiveGroupItemIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderCompetitiveGroupItemID;
        partial void OnOrderCompetitiveGroupItemIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrderCompetitiveGroupItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OrderCalculatedRating
        {
            get
            {
                return _OrderCalculatedRating;
            }
            set
            {
                OnOrderCalculatedRatingChanging(value);
                ReportPropertyChanging("OrderCalculatedRating");
                _OrderCalculatedRating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderCalculatedRating");
                OnOrderCalculatedRatingChanged();
            }
        }
        private Nullable<global::System.Decimal> _OrderCalculatedRating;
        partial void OnOrderCalculatedRatingChanging(Nullable<global::System.Decimal> value);
        partial void OnOrderCalculatedRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> OrderCalculatedBenefitID
        {
            get
            {
                return _OrderCalculatedBenefitID;
            }
            set
            {
                OnOrderCalculatedBenefitIDChanging(value);
                ReportPropertyChanging("OrderCalculatedBenefitID");
                _OrderCalculatedBenefitID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderCalculatedBenefitID");
                OnOrderCalculatedBenefitIDChanged();
            }
        }
        private Nullable<global::System.Int16> _OrderCalculatedBenefitID;
        partial void OnOrderCalculatedBenefitIDChanging(Nullable<global::System.Int16> value);
        partial void OnOrderCalculatedBenefitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> OrderEducationFormID
        {
            get
            {
                return _OrderEducationFormID;
            }
            set
            {
                OnOrderEducationFormIDChanging(value);
                ReportPropertyChanging("OrderEducationFormID");
                _OrderEducationFormID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderEducationFormID");
                OnOrderEducationFormIDChanged();
            }
        }
        private Nullable<global::System.Int16> _OrderEducationFormID;
        partial void OnOrderEducationFormIDChanging(Nullable<global::System.Int16> value);
        partial void OnOrderEducationFormIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> OrderEducationSourceID
        {
            get
            {
                return _OrderEducationSourceID;
            }
            set
            {
                OnOrderEducationSourceIDChanging(value);
                ReportPropertyChanging("OrderEducationSourceID");
                _OrderEducationSourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderEducationSourceID");
                OnOrderEducationSourceIDChanged();
            }
        }
        private Nullable<global::System.Int16> _OrderEducationSourceID;
        partial void OnOrderEducationSourceIDChanging(Nullable<global::System.Int16> value);
        partial void OnOrderEducationSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastDenyDate
        {
            get
            {
                return _LastDenyDate;
            }
            set
            {
                OnLastDenyDateChanging(value);
                ReportPropertyChanging("LastDenyDate");
                _LastDenyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastDenyDate");
                OnLastDenyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastDenyDate;
        partial void OnLastDenyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastDenyDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.String _UID;
        partial void OnUIDChanging(global::System.String value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRequiresBudgetO
        {
            get
            {
                return _IsRequiresBudgetO;
            }
            set
            {
                OnIsRequiresBudgetOChanging(value);
                ReportPropertyChanging("IsRequiresBudgetO");
                _IsRequiresBudgetO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRequiresBudgetO");
                OnIsRequiresBudgetOChanged();
            }
        }
        private global::System.Boolean _IsRequiresBudgetO;
        partial void OnIsRequiresBudgetOChanging(global::System.Boolean value);
        partial void OnIsRequiresBudgetOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRequiresBudgetOZ
        {
            get
            {
                return _IsRequiresBudgetOZ;
            }
            set
            {
                OnIsRequiresBudgetOZChanging(value);
                ReportPropertyChanging("IsRequiresBudgetOZ");
                _IsRequiresBudgetOZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRequiresBudgetOZ");
                OnIsRequiresBudgetOZChanged();
            }
        }
        private global::System.Boolean _IsRequiresBudgetOZ;
        partial void OnIsRequiresBudgetOZChanging(global::System.Boolean value);
        partial void OnIsRequiresBudgetOZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRequiresBudgetZ
        {
            get
            {
                return _IsRequiresBudgetZ;
            }
            set
            {
                OnIsRequiresBudgetZChanging(value);
                ReportPropertyChanging("IsRequiresBudgetZ");
                _IsRequiresBudgetZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRequiresBudgetZ");
                OnIsRequiresBudgetZChanged();
            }
        }
        private global::System.Boolean _IsRequiresBudgetZ;
        partial void OnIsRequiresBudgetZChanging(global::System.Boolean value);
        partial void OnIsRequiresBudgetZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRequiresPaidO
        {
            get
            {
                return _IsRequiresPaidO;
            }
            set
            {
                OnIsRequiresPaidOChanging(value);
                ReportPropertyChanging("IsRequiresPaidO");
                _IsRequiresPaidO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRequiresPaidO");
                OnIsRequiresPaidOChanged();
            }
        }
        private global::System.Boolean _IsRequiresPaidO;
        partial void OnIsRequiresPaidOChanging(global::System.Boolean value);
        partial void OnIsRequiresPaidOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRequiresPaidOZ
        {
            get
            {
                return _IsRequiresPaidOZ;
            }
            set
            {
                OnIsRequiresPaidOZChanging(value);
                ReportPropertyChanging("IsRequiresPaidOZ");
                _IsRequiresPaidOZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRequiresPaidOZ");
                OnIsRequiresPaidOZChanged();
            }
        }
        private global::System.Boolean _IsRequiresPaidOZ;
        partial void OnIsRequiresPaidOZChanging(global::System.Boolean value);
        partial void OnIsRequiresPaidOZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRequiresPaidZ
        {
            get
            {
                return _IsRequiresPaidZ;
            }
            set
            {
                OnIsRequiresPaidZChanging(value);
                ReportPropertyChanging("IsRequiresPaidZ");
                _IsRequiresPaidZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRequiresPaidZ");
                OnIsRequiresPaidZChanged();
            }
        }
        private global::System.Boolean _IsRequiresPaidZ;
        partial void OnIsRequiresPaidZChanging(global::System.Boolean value);
        partial void OnIsRequiresPaidZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OriginalDocumentsReceivedDate
        {
            get
            {
                return _OriginalDocumentsReceivedDate;
            }
            set
            {
                OnOriginalDocumentsReceivedDateChanging(value);
                ReportPropertyChanging("OriginalDocumentsReceivedDate");
                _OriginalDocumentsReceivedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalDocumentsReceivedDate");
                OnOriginalDocumentsReceivedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OriginalDocumentsReceivedDate;
        partial void OnOriginalDocumentsReceivedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOriginalDocumentsReceivedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastEgeDocumentsCheckDate
        {
            get
            {
                return _LastEgeDocumentsCheckDate;
            }
            set
            {
                OnLastEgeDocumentsCheckDateChanging(value);
                ReportPropertyChanging("LastEgeDocumentsCheckDate");
                _LastEgeDocumentsCheckDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastEgeDocumentsCheckDate");
                OnLastEgeDocumentsCheckDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastEgeDocumentsCheckDate;
        partial void OnLastEgeDocumentsCheckDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastEgeDocumentsCheckDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderCompetitiveGroupTargetID
        {
            get
            {
                return _OrderCompetitiveGroupTargetID;
            }
            set
            {
                OnOrderCompetitiveGroupTargetIDChanging(value);
                ReportPropertyChanging("OrderCompetitiveGroupTargetID");
                _OrderCompetitiveGroupTargetID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderCompetitiveGroupTargetID");
                OnOrderCompetitiveGroupTargetIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderCompetitiveGroupTargetID;
        partial void OnOrderCompetitiveGroupTargetIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrderCompetitiveGroupTargetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRequiresTargetO
        {
            get
            {
                return _IsRequiresTargetO;
            }
            set
            {
                OnIsRequiresTargetOChanging(value);
                ReportPropertyChanging("IsRequiresTargetO");
                _IsRequiresTargetO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRequiresTargetO");
                OnIsRequiresTargetOChanged();
            }
        }
        private global::System.Boolean _IsRequiresTargetO;
        partial void OnIsRequiresTargetOChanging(global::System.Boolean value);
        partial void OnIsRequiresTargetOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRequiresTargetOZ
        {
            get
            {
                return _IsRequiresTargetOZ;
            }
            set
            {
                OnIsRequiresTargetOZChanging(value);
                ReportPropertyChanging("IsRequiresTargetOZ");
                _IsRequiresTargetOZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRequiresTargetOZ");
                OnIsRequiresTargetOZChanged();
            }
        }
        private global::System.Boolean _IsRequiresTargetOZ;
        partial void OnIsRequiresTargetOZChanging(global::System.Boolean value);
        partial void OnIsRequiresTargetOZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRequiresTargetZ
        {
            get
            {
                return _IsRequiresTargetZ;
            }
            set
            {
                OnIsRequiresTargetZChanging(value);
                ReportPropertyChanging("IsRequiresTargetZ");
                _IsRequiresTargetZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRequiresTargetZ");
                OnIsRequiresTargetZChanged();
            }
        }
        private global::System.Boolean _IsRequiresTargetZ;
        partial void OnIsRequiresTargetZChanging(global::System.Boolean value);
        partial void OnIsRequiresTargetZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ApplicationGUID
        {
            get
            {
                return _ApplicationGUID;
            }
            set
            {
                OnApplicationGUIDChanging(value);
                ReportPropertyChanging("ApplicationGUID");
                _ApplicationGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationGUID");
                OnApplicationGUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ApplicationGUID;
        partial void OnApplicationGUIDChanging(Nullable<global::System.Guid> value);
        partial void OnApplicationGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private Nullable<global::System.Int32> _Priority;
        partial void OnPriorityChanging(Nullable<global::System.Int32> value);
        partial void OnPriorityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Application_AdmissionItemTypeForm", "AdmissionItemType")]
        public AdmissionItemType AdmissionItemTypeFrom
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_Application_AdmissionItemTypeForm", "AdmissionItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_Application_AdmissionItemTypeForm", "AdmissionItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdmissionItemType> AdmissionItemTypeFromReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_Application_AdmissionItemTypeForm", "AdmissionItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdmissionItemType>("Import.FK_Application_AdmissionItemTypeForm", "AdmissionItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Application_AdmissionItemTypeSource", "AdmissionItemType")]
        public AdmissionItemType AdmissionItemTypeSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_Application_AdmissionItemTypeSource", "AdmissionItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_Application_AdmissionItemTypeSource", "AdmissionItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdmissionItemType> AdmissionItemTypeSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_Application_AdmissionItemTypeSource", "AdmissionItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdmissionItemType>("Import.FK_Application_AdmissionItemTypeSource", "AdmissionItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Application_ApplicationStatusType", "ApplicationStatusType")]
        public ApplicationStatusType ApplicationStatusType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationStatusType>("Import.FK_Application_ApplicationStatusType", "ApplicationStatusType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationStatusType>("Import.FK_Application_ApplicationStatusType", "ApplicationStatusType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ApplicationStatusType> ApplicationStatusTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ApplicationStatusType>("Import.FK_Application_ApplicationStatusType", "ApplicationStatusType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ApplicationStatusType>("Import.FK_Application_ApplicationStatusType", "ApplicationStatusType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Application_Benefit", "Benefit")]
        public Benefit Benefit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Benefit>("Import.FK_Application_Benefit", "Benefit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Benefit>("Import.FK_Application_Benefit", "Benefit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Benefit> BenefitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Benefit>("Import.FK_Application_Benefit", "Benefit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Benefit>("Import.FK_Application_Benefit", "Benefit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Application_CompetitiveGroup", "CompetitiveGroup")]
        public CompetitiveGroup CompetitiveGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_Application_CompetitiveGroup", "CompetitiveGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_Application_CompetitiveGroup", "CompetitiveGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitiveGroup> CompetitiveGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_Application_CompetitiveGroup", "CompetitiveGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitiveGroup>("Import.FK_Application_CompetitiveGroup", "CompetitiveGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Application_CompetitiveGroupItem", "CompetitiveGroupItem")]
        public CompetitiveGroupItem CompetitiveGroupItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupItem>("Import.FK_Application_CompetitiveGroupItem", "CompetitiveGroupItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupItem>("Import.FK_Application_CompetitiveGroupItem", "CompetitiveGroupItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitiveGroupItem> CompetitiveGroupItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupItem>("Import.FK_Application_CompetitiveGroupItem", "CompetitiveGroupItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitiveGroupItem>("Import.FK_Application_CompetitiveGroupItem", "CompetitiveGroupItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Application_CompetitiveGroupTarget", "CompetitiveGroupTarget")]
        public CompetitiveGroupTarget CompetitiveGroupTarget
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupTarget>("Import.FK_Application_CompetitiveGroupTarget", "CompetitiveGroupTarget").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupTarget>("Import.FK_Application_CompetitiveGroupTarget", "CompetitiveGroupTarget").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitiveGroupTarget> CompetitiveGroupTargetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupTarget>("Import.FK_Application_CompetitiveGroupTarget", "CompetitiveGroupTarget");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitiveGroupTarget>("Import.FK_Application_CompetitiveGroupTarget", "CompetitiveGroupTarget", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Application_Entrant", "Entrant")]
        public Entrant Entrant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entrant>("Import.FK_Application_Entrant", "Entrant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entrant>("Import.FK_Application_Entrant", "Entrant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Entrant> EntrantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entrant>("Import.FK_Application_Entrant", "Entrant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Entrant>("Import.FK_Application_Entrant", "Entrant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Application_Institution", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_Application_Institution", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_Application_Institution", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_Application_Institution", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("Import.FK_Application_Institution", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Application_OrderOfAdmission", "OrderOfAdmission")]
        public OrderOfAdmission OrderOfAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderOfAdmission>("Import.FK_Application_OrderOfAdmission", "OrderOfAdmission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderOfAdmission>("Import.FK_Application_OrderOfAdmission", "OrderOfAdmission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderOfAdmission> OrderOfAdmissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderOfAdmission>("Import.FK_Application_OrderOfAdmission", "OrderOfAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderOfAdmission>("Import.FK_Application_OrderOfAdmission", "OrderOfAdmission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntranceTestDocument_Application", "ApplicationEntranceTestDocument")]
        public EntityCollection<ApplicationEntranceTestDocument> ApplicationEntranceTestDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationEntranceTestDocument>("Import.FK_ApplicationEntranceTestDocument_Application", "ApplicationEntranceTestDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationEntranceTestDocument>("Import.FK_ApplicationEntranceTestDocument_Application", "ApplicationEntranceTestDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntrantDocument_Application", "ApplicationEntrantDocument")]
        public EntityCollection<ApplicationEntrantDocument> ApplicationEntrantDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationEntrantDocument>("Import.FK_ApplicationEntrantDocument_Application", "ApplicationEntrantDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationEntrantDocument>("Import.FK_ApplicationEntrantDocument_Application", "ApplicationEntrantDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationSelectedCompetitiveGroup_Application", "ApplicationSelectedCompetitiveGroup")]
        public EntityCollection<ApplicationSelectedCompetitiveGroup> ApplicationSelectedCompetitiveGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationSelectedCompetitiveGroup>("Import.FK_ApplicationSelectedCompetitiveGroup_Application", "ApplicationSelectedCompetitiveGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationSelectedCompetitiveGroup>("Import.FK_ApplicationSelectedCompetitiveGroup_Application", "ApplicationSelectedCompetitiveGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationSelectedCompetitiveGroupItem_Application", "ApplicationSelectedCompetitiveGroupItem")]
        public EntityCollection<ApplicationSelectedCompetitiveGroupItem> ApplicationSelectedCompetitiveGroupItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationSelectedCompetitiveGroupItem>("Import.FK_ApplicationSelectedCompetitiveGroupItem_Application", "ApplicationSelectedCompetitiveGroupItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationSelectedCompetitiveGroupItem>("Import.FK_ApplicationSelectedCompetitiveGroupItem_Application", "ApplicationSelectedCompetitiveGroupItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationSelectedCompetitiveGroupTarget_Application", "ApplicationSelectedCompetitiveGroupTarget")]
        public EntityCollection<ApplicationSelectedCompetitiveGroupTarget> ApplicationSelectedCompetitiveGroupTarget
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationSelectedCompetitiveGroupTarget>("Import.FK_ApplicationSelectedCompetitiveGroupTarget_Application", "ApplicationSelectedCompetitiveGroupTarget");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationSelectedCompetitiveGroupTarget>("Import.FK_ApplicationSelectedCompetitiveGroupTarget_Application", "ApplicationSelectedCompetitiveGroupTarget", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OrderOfAdmissionHistory_Application", "OrderOfAdmissionHistory")]
        public EntityCollection<OrderOfAdmissionHistory> OrderOfAdmissionHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderOfAdmissionHistory>("Import.FK_OrderOfAdmissionHistory_Application", "OrderOfAdmissionHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderOfAdmissionHistory>("Import.FK_OrderOfAdmissionHistory_Application", "OrderOfAdmissionHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_RecomendedLists_Application1", "RecomendedLists")]
        public EntityCollection<RecomendedLists> RecomendedLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RecomendedLists>("Import.FK_RecomendedLists_Application1", "RecomendedLists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RecomendedLists>("Import.FK_RecomendedLists_Application1", "RecomendedLists", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationCompetitiveGroupItem_Application", "ApplicationCompetitiveGroupItem")]
        public EntityCollection<ApplicationCompetitiveGroupItem> ApplicationCompetitiveGroupItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationCompetitiveGroupItem>("Import.FK_ApplicationCompetitiveGroupItem_Application", "ApplicationCompetitiveGroupItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationCompetitiveGroupItem>("Import.FK_ApplicationCompetitiveGroupItem_Application", "ApplicationCompetitiveGroupItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="ApplicationCompetitiveGroupItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationCompetitiveGroupItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationCompetitiveGroupItem object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="competitiveGroupId">Initial value of the CompetitiveGroupId property.</param>
        /// <param name="competitiveGroupItemId">Initial value of the CompetitiveGroupItemId property.</param>
        /// <param name="educationFormId">Initial value of the EducationFormId property.</param>
        /// <param name="educationSourceId">Initial value of the EducationSourceId property.</param>
        public static ApplicationCompetitiveGroupItem CreateApplicationCompetitiveGroupItem(global::System.Int32 id, global::System.Int32 applicationId, global::System.Int32 competitiveGroupId, global::System.Int32 competitiveGroupItemId, global::System.Int32 educationFormId, global::System.Int32 educationSourceId)
        {
            ApplicationCompetitiveGroupItem applicationCompetitiveGroupItem = new ApplicationCompetitiveGroupItem();
            applicationCompetitiveGroupItem.id = id;
            applicationCompetitiveGroupItem.ApplicationId = applicationId;
            applicationCompetitiveGroupItem.CompetitiveGroupId = competitiveGroupId;
            applicationCompetitiveGroupItem.CompetitiveGroupItemId = competitiveGroupItemId;
            applicationCompetitiveGroupItem.EducationFormId = educationFormId;
            applicationCompetitiveGroupItem.EducationSourceId = educationSourceId;
            return applicationCompetitiveGroupItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Int32 _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Int32 value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitiveGroupId
        {
            get
            {
                return _CompetitiveGroupId;
            }
            set
            {
                OnCompetitiveGroupIdChanging(value);
                ReportPropertyChanging("CompetitiveGroupId");
                _CompetitiveGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitiveGroupId");
                OnCompetitiveGroupIdChanged();
            }
        }
        private global::System.Int32 _CompetitiveGroupId;
        partial void OnCompetitiveGroupIdChanging(global::System.Int32 value);
        partial void OnCompetitiveGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitiveGroupItemId
        {
            get
            {
                return _CompetitiveGroupItemId;
            }
            set
            {
                OnCompetitiveGroupItemIdChanging(value);
                ReportPropertyChanging("CompetitiveGroupItemId");
                _CompetitiveGroupItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitiveGroupItemId");
                OnCompetitiveGroupItemIdChanged();
            }
        }
        private global::System.Int32 _CompetitiveGroupItemId;
        partial void OnCompetitiveGroupItemIdChanging(global::System.Int32 value);
        partial void OnCompetitiveGroupItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EducationFormId
        {
            get
            {
                return _EducationFormId;
            }
            set
            {
                OnEducationFormIdChanging(value);
                ReportPropertyChanging("EducationFormId");
                _EducationFormId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducationFormId");
                OnEducationFormIdChanged();
            }
        }
        private global::System.Int32 _EducationFormId;
        partial void OnEducationFormIdChanging(global::System.Int32 value);
        partial void OnEducationFormIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EducationSourceId
        {
            get
            {
                return _EducationSourceId;
            }
            set
            {
                OnEducationSourceIdChanging(value);
                ReportPropertyChanging("EducationSourceId");
                _EducationSourceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducationSourceId");
                OnEducationSourceIdChanged();
            }
        }
        private global::System.Int32 _EducationSourceId;
        partial void OnEducationSourceIdChanging(global::System.Int32 value);
        partial void OnEducationSourceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private Nullable<global::System.Int32> _Priority;
        partial void OnPriorityChanging(Nullable<global::System.Int32> value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompetitiveGroupTargetId
        {
            get
            {
                return _CompetitiveGroupTargetId;
            }
            set
            {
                OnCompetitiveGroupTargetIdChanging(value);
                ReportPropertyChanging("CompetitiveGroupTargetId");
                _CompetitiveGroupTargetId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitiveGroupTargetId");
                OnCompetitiveGroupTargetIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CompetitiveGroupTargetId;
        partial void OnCompetitiveGroupTargetIdChanging(Nullable<global::System.Int32> value);
        partial void OnCompetitiveGroupTargetIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationCompetitiveGroupItem_Application", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_ApplicationCompetitiveGroupItem_Application", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_ApplicationCompetitiveGroupItem_Application", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_ApplicationCompetitiveGroupItem_Application", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("Import.FK_ApplicationCompetitiveGroupItem_Application", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationCompetitiveGroupItem_CompetitiveGroup", "CompetitiveGroup")]
        public CompetitiveGroup CompetitiveGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_ApplicationCompetitiveGroupItem_CompetitiveGroup", "CompetitiveGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_ApplicationCompetitiveGroupItem_CompetitiveGroup", "CompetitiveGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitiveGroup> CompetitiveGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_ApplicationCompetitiveGroupItem_CompetitiveGroup", "CompetitiveGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitiveGroup>("Import.FK_ApplicationCompetitiveGroupItem_CompetitiveGroup", "CompetitiveGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationCompetitiveGroupItem_CompetitiveGroupItem", "CompetitiveGroupItem")]
        public CompetitiveGroupItem CompetitiveGroupItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupItem>("Import.FK_ApplicationCompetitiveGroupItem_CompetitiveGroupItem", "CompetitiveGroupItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupItem>("Import.FK_ApplicationCompetitiveGroupItem_CompetitiveGroupItem", "CompetitiveGroupItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitiveGroupItem> CompetitiveGroupItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupItem>("Import.FK_ApplicationCompetitiveGroupItem_CompetitiveGroupItem", "CompetitiveGroupItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitiveGroupItem>("Import.FK_ApplicationCompetitiveGroupItem_CompetitiveGroupItem", "CompetitiveGroupItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="ApplicationEntranceTestDocument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationEntranceTestDocument : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationEntranceTestDocument object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="applicationID">Initial value of the ApplicationID property.</param>
        /// <param name="hasEge">Initial value of the HasEge property.</param>
        public static ApplicationEntranceTestDocument CreateApplicationEntranceTestDocument(global::System.Int32 id, global::System.Int32 applicationID, global::System.Boolean hasEge)
        {
            ApplicationEntranceTestDocument applicationEntranceTestDocument = new ApplicationEntranceTestDocument();
            applicationEntranceTestDocument.ID = id;
            applicationEntranceTestDocument.ApplicationID = applicationID;
            applicationEntranceTestDocument.HasEge = hasEge;
            return applicationEntranceTestDocument;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationID
        {
            get
            {
                return _ApplicationID;
            }
            set
            {
                OnApplicationIDChanging(value);
                ReportPropertyChanging("ApplicationID");
                _ApplicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationID");
                OnApplicationIDChanged();
            }
        }
        private global::System.Int32 _ApplicationID;
        partial void OnApplicationIDChanging(global::System.Int32 value);
        partial void OnApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubjectID;
        partial void OnSubjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EntrantDocumentID
        {
            get
            {
                return _EntrantDocumentID;
            }
            set
            {
                OnEntrantDocumentIDChanging(value);
                ReportPropertyChanging("EntrantDocumentID");
                _EntrantDocumentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntrantDocumentID");
                OnEntrantDocumentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EntrantDocumentID;
        partial void OnEntrantDocumentIDChanging(Nullable<global::System.Int32> value);
        partial void OnEntrantDocumentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> EntranceTestTypeID
        {
            get
            {
                return _EntranceTestTypeID;
            }
            set
            {
                OnEntranceTestTypeIDChanging(value);
                ReportPropertyChanging("EntranceTestTypeID");
                _EntranceTestTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntranceTestTypeID");
                OnEntranceTestTypeIDChanged();
            }
        }
        private Nullable<global::System.Int16> _EntranceTestTypeID;
        partial void OnEntranceTestTypeIDChanging(Nullable<global::System.Int16> value);
        partial void OnEntranceTestTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SourceID
        {
            get
            {
                return _SourceID;
            }
            set
            {
                OnSourceIDChanging(value);
                ReportPropertyChanging("SourceID");
                _SourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SourceID");
                OnSourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SourceID;
        partial void OnSourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ResultValue
        {
            get
            {
                return _ResultValue;
            }
            set
            {
                OnResultValueChanging(value);
                ReportPropertyChanging("ResultValue");
                _ResultValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultValue");
                OnResultValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _ResultValue;
        partial void OnResultValueChanging(Nullable<global::System.Decimal> value);
        partial void OnResultValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> BenefitID
        {
            get
            {
                return _BenefitID;
            }
            set
            {
                OnBenefitIDChanging(value);
                ReportPropertyChanging("BenefitID");
                _BenefitID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenefitID");
                OnBenefitIDChanged();
            }
        }
        private Nullable<global::System.Int16> _BenefitID;
        partial void OnBenefitIDChanging(Nullable<global::System.Int16> value);
        partial void OnBenefitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EntranceTestItemID
        {
            get
            {
                return _EntranceTestItemID;
            }
            set
            {
                OnEntranceTestItemIDChanging(value);
                ReportPropertyChanging("EntranceTestItemID");
                _EntranceTestItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntranceTestItemID");
                OnEntranceTestItemIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EntranceTestItemID;
        partial void OnEntranceTestItemIDChanging(Nullable<global::System.Int32> value);
        partial void OnEntranceTestItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.String _UID;
        partial void OnUIDChanging(global::System.String value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InstitutionDocumentNumber
        {
            get
            {
                return _InstitutionDocumentNumber;
            }
            set
            {
                OnInstitutionDocumentNumberChanging(value);
                ReportPropertyChanging("InstitutionDocumentNumber");
                _InstitutionDocumentNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InstitutionDocumentNumber");
                OnInstitutionDocumentNumberChanged();
            }
        }
        private global::System.String _InstitutionDocumentNumber;
        partial void OnInstitutionDocumentNumberChanging(global::System.String value);
        partial void OnInstitutionDocumentNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InstitutionDocumentDate
        {
            get
            {
                return _InstitutionDocumentDate;
            }
            set
            {
                OnInstitutionDocumentDateChanging(value);
                ReportPropertyChanging("InstitutionDocumentDate");
                _InstitutionDocumentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionDocumentDate");
                OnInstitutionDocumentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InstitutionDocumentDate;
        partial void OnInstitutionDocumentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInstitutionDocumentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InstitutionDocumentTypeID
        {
            get
            {
                return _InstitutionDocumentTypeID;
            }
            set
            {
                OnInstitutionDocumentTypeIDChanging(value);
                ReportPropertyChanging("InstitutionDocumentTypeID");
                _InstitutionDocumentTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionDocumentTypeID");
                OnInstitutionDocumentTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InstitutionDocumentTypeID;
        partial void OnInstitutionDocumentTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnInstitutionDocumentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompetitiveGroupID
        {
            get
            {
                return _CompetitiveGroupID;
            }
            set
            {
                OnCompetitiveGroupIDChanging(value);
                ReportPropertyChanging("CompetitiveGroupID");
                _CompetitiveGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitiveGroupID");
                OnCompetitiveGroupIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompetitiveGroupID;
        partial void OnCompetitiveGroupIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompetitiveGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasEge
        {
            get
            {
                return _HasEge;
            }
            set
            {
                OnHasEgeChanging(value);
                ReportPropertyChanging("HasEge");
                _HasEge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasEge");
                OnHasEgeChanged();
            }
        }
        private global::System.Boolean _HasEge;
        partial void OnHasEgeChanging(global::System.Boolean value);
        partial void OnHasEgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EgeResultValue
        {
            get
            {
                return _EgeResultValue;
            }
            set
            {
                OnEgeResultValueChanging(value);
                ReportPropertyChanging("EgeResultValue");
                _EgeResultValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EgeResultValue");
                OnEgeResultValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _EgeResultValue;
        partial void OnEgeResultValueChanging(Nullable<global::System.Decimal> value);
        partial void OnEgeResultValueChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntranceTestDocument_Benefit", "Benefit")]
        public Benefit Benefit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Benefit>("Import.FK_ApplicationEntranceTestDocument_Benefit", "Benefit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Benefit>("Import.FK_ApplicationEntranceTestDocument_Benefit", "Benefit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Benefit> BenefitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Benefit>("Import.FK_ApplicationEntranceTestDocument_Benefit", "Benefit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Benefit>("Import.FK_ApplicationEntranceTestDocument_Benefit", "Benefit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntranceTestDocument_EntranceTestItemC", "EntranceTestItemC")]
        public EntranceTestItemC EntranceTestItemC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntranceTestItemC>("Import.FK_ApplicationEntranceTestDocument_EntranceTestItemC", "EntranceTestItemC").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntranceTestItemC>("Import.FK_ApplicationEntranceTestDocument_EntranceTestItemC", "EntranceTestItemC").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntranceTestItemC> EntranceTestItemCReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntranceTestItemC>("Import.FK_ApplicationEntranceTestDocument_EntranceTestItemC", "EntranceTestItemC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EntranceTestItemC>("Import.FK_ApplicationEntranceTestDocument_EntranceTestItemC", "EntranceTestItemC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntranceTestDocument_EntranceTestType", "EntranceTestType")]
        public EntranceTestType EntranceTestType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntranceTestType>("Import.FK_ApplicationEntranceTestDocument_EntranceTestType", "EntranceTestType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntranceTestType>("Import.FK_ApplicationEntranceTestDocument_EntranceTestType", "EntranceTestType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntranceTestType> EntranceTestTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntranceTestType>("Import.FK_ApplicationEntranceTestDocument_EntranceTestType", "EntranceTestType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EntranceTestType>("Import.FK_ApplicationEntranceTestDocument_EntranceTestType", "EntranceTestType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntranceTestDocument_EntrantDocument", "EntrantDocument")]
        public EntrantDocument EntrantDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntrantDocument>("Import.FK_ApplicationEntranceTestDocument_EntrantDocument", "EntrantDocument").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntrantDocument>("Import.FK_ApplicationEntranceTestDocument_EntrantDocument", "EntrantDocument").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntrantDocument> EntrantDocumentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntrantDocument>("Import.FK_ApplicationEntranceTestDocument_EntrantDocument", "EntrantDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EntrantDocument>("Import.FK_ApplicationEntranceTestDocument_EntrantDocument", "EntrantDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntranceTestDocument_Subject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_ApplicationEntranceTestDocument_Subject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_ApplicationEntranceTestDocument_Subject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_ApplicationEntranceTestDocument_Subject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("Import.FK_ApplicationEntranceTestDocument_Subject", "Subject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntranceTestDocument_EntranceTestResultSource", "EntranceTestResultSource")]
        public EntranceTestResultSource EntranceTestResultSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntranceTestResultSource>("Import.FK_ApplicationEntranceTestDocument_EntranceTestResultSource", "EntranceTestResultSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntranceTestResultSource>("Import.FK_ApplicationEntranceTestDocument_EntranceTestResultSource", "EntranceTestResultSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntranceTestResultSource> EntranceTestResultSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntranceTestResultSource>("Import.FK_ApplicationEntranceTestDocument_EntranceTestResultSource", "EntranceTestResultSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EntranceTestResultSource>("Import.FK_ApplicationEntranceTestDocument_EntranceTestResultSource", "EntranceTestResultSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntranceTestDocument_InstitutionDocumentType", "InstitutionDocumentType")]
        public InstitutionDocumentType InstitutionDocumentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstitutionDocumentType>("Import.FK_ApplicationEntranceTestDocument_InstitutionDocumentType", "InstitutionDocumentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstitutionDocumentType>("Import.FK_ApplicationEntranceTestDocument_InstitutionDocumentType", "InstitutionDocumentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstitutionDocumentType> InstitutionDocumentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstitutionDocumentType>("Import.FK_ApplicationEntranceTestDocument_InstitutionDocumentType", "InstitutionDocumentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstitutionDocumentType>("Import.FK_ApplicationEntranceTestDocument_InstitutionDocumentType", "InstitutionDocumentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntranceTestDocument_BenefitCompetitiveGroup", "CompetitiveGroup")]
        public CompetitiveGroup CompetitiveGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_ApplicationEntranceTestDocument_BenefitCompetitiveGroup", "CompetitiveGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_ApplicationEntranceTestDocument_BenefitCompetitiveGroup", "CompetitiveGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitiveGroup> CompetitiveGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_ApplicationEntranceTestDocument_BenefitCompetitiveGroup", "CompetitiveGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitiveGroup>("Import.FK_ApplicationEntranceTestDocument_BenefitCompetitiveGroup", "CompetitiveGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntranceTestDocument_Application", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_ApplicationEntranceTestDocument_Application", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_ApplicationEntranceTestDocument_Application", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_ApplicationEntranceTestDocument_Application", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("Import.FK_ApplicationEntranceTestDocument_Application", "Application", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="ApplicationEntrantDocument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationEntrantDocument : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationEntrantDocument object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="applicationID">Initial value of the ApplicationID property.</param>
        /// <param name="entrantDocumentID">Initial value of the EntrantDocumentID property.</param>
        public static ApplicationEntrantDocument CreateApplicationEntrantDocument(global::System.Int32 id, global::System.Int32 applicationID, global::System.Int32 entrantDocumentID)
        {
            ApplicationEntrantDocument applicationEntrantDocument = new ApplicationEntrantDocument();
            applicationEntrantDocument.ID = id;
            applicationEntrantDocument.ApplicationID = applicationID;
            applicationEntrantDocument.EntrantDocumentID = entrantDocumentID;
            return applicationEntrantDocument;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationID
        {
            get
            {
                return _ApplicationID;
            }
            set
            {
                OnApplicationIDChanging(value);
                ReportPropertyChanging("ApplicationID");
                _ApplicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationID");
                OnApplicationIDChanged();
            }
        }
        private global::System.Int32 _ApplicationID;
        partial void OnApplicationIDChanging(global::System.Int32 value);
        partial void OnApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntrantDocumentID
        {
            get
            {
                return _EntrantDocumentID;
            }
            set
            {
                OnEntrantDocumentIDChanging(value);
                ReportPropertyChanging("EntrantDocumentID");
                _EntrantDocumentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntrantDocumentID");
                OnEntrantDocumentIDChanged();
            }
        }
        private global::System.Int32 _EntrantDocumentID;
        partial void OnEntrantDocumentIDChanging(global::System.Int32 value);
        partial void OnEntrantDocumentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AttachedDocumentType
        {
            get
            {
                return _AttachedDocumentType;
            }
            set
            {
                OnAttachedDocumentTypeChanging(value);
                ReportPropertyChanging("AttachedDocumentType");
                _AttachedDocumentType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttachedDocumentType");
                OnAttachedDocumentTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _AttachedDocumentType;
        partial void OnAttachedDocumentTypeChanging(Nullable<global::System.Int32> value);
        partial void OnAttachedDocumentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.String _UID;
        partial void OnUIDChanging(global::System.String value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OriginalReceivedDate
        {
            get
            {
                return _OriginalReceivedDate;
            }
            set
            {
                OnOriginalReceivedDateChanging(value);
                ReportPropertyChanging("OriginalReceivedDate");
                _OriginalReceivedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OriginalReceivedDate");
                OnOriginalReceivedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _OriginalReceivedDate;
        partial void OnOriginalReceivedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnOriginalReceivedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntrantDocument_EntrantDocument", "EntrantDocument")]
        public EntrantDocument EntrantDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntrantDocument>("Import.FK_ApplicationEntrantDocument_EntrantDocument", "EntrantDocument").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntrantDocument>("Import.FK_ApplicationEntrantDocument_EntrantDocument", "EntrantDocument").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntrantDocument> EntrantDocumentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntrantDocument>("Import.FK_ApplicationEntrantDocument_EntrantDocument", "EntrantDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EntrantDocument>("Import.FK_ApplicationEntrantDocument_EntrantDocument", "EntrantDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntrantDocument_Application", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_ApplicationEntrantDocument_Application", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_ApplicationEntrantDocument_Application", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_ApplicationEntrantDocument_Application", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("Import.FK_ApplicationEntrantDocument_Application", "Application", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="ApplicationSelectedCompetitiveGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationSelectedCompetitiveGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationSelectedCompetitiveGroup object.
        /// </summary>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        /// <param name="applicationID">Initial value of the ApplicationID property.</param>
        /// <param name="competitiveGroupID">Initial value of the CompetitiveGroupID property.</param>
        public static ApplicationSelectedCompetitiveGroup CreateApplicationSelectedCompetitiveGroup(global::System.Int32 itemID, global::System.Int32 applicationID, global::System.Int32 competitiveGroupID)
        {
            ApplicationSelectedCompetitiveGroup applicationSelectedCompetitiveGroup = new ApplicationSelectedCompetitiveGroup();
            applicationSelectedCompetitiveGroup.ItemID = itemID;
            applicationSelectedCompetitiveGroup.ApplicationID = applicationID;
            applicationSelectedCompetitiveGroup.CompetitiveGroupID = competitiveGroupID;
            return applicationSelectedCompetitiveGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Int32 _ItemID;
        partial void OnItemIDChanging(global::System.Int32 value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationID
        {
            get
            {
                return _ApplicationID;
            }
            set
            {
                OnApplicationIDChanging(value);
                ReportPropertyChanging("ApplicationID");
                _ApplicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationID");
                OnApplicationIDChanged();
            }
        }
        private global::System.Int32 _ApplicationID;
        partial void OnApplicationIDChanging(global::System.Int32 value);
        partial void OnApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitiveGroupID
        {
            get
            {
                return _CompetitiveGroupID;
            }
            set
            {
                OnCompetitiveGroupIDChanging(value);
                ReportPropertyChanging("CompetitiveGroupID");
                _CompetitiveGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitiveGroupID");
                OnCompetitiveGroupIDChanged();
            }
        }
        private global::System.Int32 _CompetitiveGroupID;
        partial void OnCompetitiveGroupIDChanging(global::System.Int32 value);
        partial void OnCompetitiveGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> CalculatedBenefitID
        {
            get
            {
                return _CalculatedBenefitID;
            }
            set
            {
                OnCalculatedBenefitIDChanging(value);
                ReportPropertyChanging("CalculatedBenefitID");
                _CalculatedBenefitID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CalculatedBenefitID");
                OnCalculatedBenefitIDChanged();
            }
        }
        private Nullable<global::System.Int16> _CalculatedBenefitID;
        partial void OnCalculatedBenefitIDChanging(Nullable<global::System.Int16> value);
        partial void OnCalculatedBenefitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CalculatedRating
        {
            get
            {
                return _CalculatedRating;
            }
            set
            {
                OnCalculatedRatingChanging(value);
                ReportPropertyChanging("CalculatedRating");
                _CalculatedRating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CalculatedRating");
                OnCalculatedRatingChanged();
            }
        }
        private Nullable<global::System.Decimal> _CalculatedRating;
        partial void OnCalculatedRatingChanging(Nullable<global::System.Decimal> value);
        partial void OnCalculatedRatingChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationSelectedCompetitiveGroup_Benefit", "Benefit")]
        public Benefit Benefit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Benefit>("Import.FK_ApplicationSelectedCompetitiveGroup_Benefit", "Benefit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Benefit>("Import.FK_ApplicationSelectedCompetitiveGroup_Benefit", "Benefit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Benefit> BenefitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Benefit>("Import.FK_ApplicationSelectedCompetitiveGroup_Benefit", "Benefit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Benefit>("Import.FK_ApplicationSelectedCompetitiveGroup_Benefit", "Benefit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationSelectedCompetitiveGroup_CompetitiveGroup", "CompetitiveGroup")]
        public CompetitiveGroup CompetitiveGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_ApplicationSelectedCompetitiveGroup_CompetitiveGroup", "CompetitiveGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_ApplicationSelectedCompetitiveGroup_CompetitiveGroup", "CompetitiveGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitiveGroup> CompetitiveGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_ApplicationSelectedCompetitiveGroup_CompetitiveGroup", "CompetitiveGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitiveGroup>("Import.FK_ApplicationSelectedCompetitiveGroup_CompetitiveGroup", "CompetitiveGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationSelectedCompetitiveGroup_Application", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_ApplicationSelectedCompetitiveGroup_Application", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_ApplicationSelectedCompetitiveGroup_Application", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_ApplicationSelectedCompetitiveGroup_Application", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("Import.FK_ApplicationSelectedCompetitiveGroup_Application", "Application", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="ApplicationSelectedCompetitiveGroupItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationSelectedCompetitiveGroupItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationSelectedCompetitiveGroupItem object.
        /// </summary>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        /// <param name="applicationID">Initial value of the ApplicationID property.</param>
        /// <param name="competitiveGroupItemID">Initial value of the CompetitiveGroupItemID property.</param>
        public static ApplicationSelectedCompetitiveGroupItem CreateApplicationSelectedCompetitiveGroupItem(global::System.Int32 itemID, global::System.Int32 applicationID, global::System.Int32 competitiveGroupItemID)
        {
            ApplicationSelectedCompetitiveGroupItem applicationSelectedCompetitiveGroupItem = new ApplicationSelectedCompetitiveGroupItem();
            applicationSelectedCompetitiveGroupItem.ItemID = itemID;
            applicationSelectedCompetitiveGroupItem.ApplicationID = applicationID;
            applicationSelectedCompetitiveGroupItem.CompetitiveGroupItemID = competitiveGroupItemID;
            return applicationSelectedCompetitiveGroupItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Int32 _ItemID;
        partial void OnItemIDChanging(global::System.Int32 value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationID
        {
            get
            {
                return _ApplicationID;
            }
            set
            {
                OnApplicationIDChanging(value);
                ReportPropertyChanging("ApplicationID");
                _ApplicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationID");
                OnApplicationIDChanged();
            }
        }
        private global::System.Int32 _ApplicationID;
        partial void OnApplicationIDChanging(global::System.Int32 value);
        partial void OnApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitiveGroupItemID
        {
            get
            {
                return _CompetitiveGroupItemID;
            }
            set
            {
                OnCompetitiveGroupItemIDChanging(value);
                ReportPropertyChanging("CompetitiveGroupItemID");
                _CompetitiveGroupItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitiveGroupItemID");
                OnCompetitiveGroupItemIDChanged();
            }
        }
        private global::System.Int32 _CompetitiveGroupItemID;
        partial void OnCompetitiveGroupItemIDChanging(global::System.Int32 value);
        partial void OnCompetitiveGroupItemIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationSelectedCompetitiveGroupItem_CompetitiveGroupItem", "CompetitiveGroupItem")]
        public CompetitiveGroupItem CompetitiveGroupItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupItem>("Import.FK_ApplicationSelectedCompetitiveGroupItem_CompetitiveGroupItem", "CompetitiveGroupItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupItem>("Import.FK_ApplicationSelectedCompetitiveGroupItem_CompetitiveGroupItem", "CompetitiveGroupItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitiveGroupItem> CompetitiveGroupItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupItem>("Import.FK_ApplicationSelectedCompetitiveGroupItem_CompetitiveGroupItem", "CompetitiveGroupItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitiveGroupItem>("Import.FK_ApplicationSelectedCompetitiveGroupItem_CompetitiveGroupItem", "CompetitiveGroupItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationSelectedCompetitiveGroupItem_Application", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_ApplicationSelectedCompetitiveGroupItem_Application", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_ApplicationSelectedCompetitiveGroupItem_Application", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_ApplicationSelectedCompetitiveGroupItem_Application", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("Import.FK_ApplicationSelectedCompetitiveGroupItem_Application", "Application", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="ApplicationSelectedCompetitiveGroupTarget")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationSelectedCompetitiveGroupTarget : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationSelectedCompetitiveGroupTarget object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="applicationID">Initial value of the ApplicationID property.</param>
        /// <param name="competitiveGroupTargetID">Initial value of the CompetitiveGroupTargetID property.</param>
        /// <param name="isForO">Initial value of the IsForO property.</param>
        /// <param name="isForOZ">Initial value of the IsForOZ property.</param>
        /// <param name="isForZ">Initial value of the IsForZ property.</param>
        public static ApplicationSelectedCompetitiveGroupTarget CreateApplicationSelectedCompetitiveGroupTarget(global::System.Int32 id, global::System.Int32 applicationID, global::System.Int32 competitiveGroupTargetID, global::System.Boolean isForO, global::System.Boolean isForOZ, global::System.Boolean isForZ)
        {
            ApplicationSelectedCompetitiveGroupTarget applicationSelectedCompetitiveGroupTarget = new ApplicationSelectedCompetitiveGroupTarget();
            applicationSelectedCompetitiveGroupTarget.ID = id;
            applicationSelectedCompetitiveGroupTarget.ApplicationID = applicationID;
            applicationSelectedCompetitiveGroupTarget.CompetitiveGroupTargetID = competitiveGroupTargetID;
            applicationSelectedCompetitiveGroupTarget.IsForO = isForO;
            applicationSelectedCompetitiveGroupTarget.IsForOZ = isForOZ;
            applicationSelectedCompetitiveGroupTarget.IsForZ = isForZ;
            return applicationSelectedCompetitiveGroupTarget;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationID
        {
            get
            {
                return _ApplicationID;
            }
            set
            {
                OnApplicationIDChanging(value);
                ReportPropertyChanging("ApplicationID");
                _ApplicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationID");
                OnApplicationIDChanged();
            }
        }
        private global::System.Int32 _ApplicationID;
        partial void OnApplicationIDChanging(global::System.Int32 value);
        partial void OnApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitiveGroupTargetID
        {
            get
            {
                return _CompetitiveGroupTargetID;
            }
            set
            {
                OnCompetitiveGroupTargetIDChanging(value);
                ReportPropertyChanging("CompetitiveGroupTargetID");
                _CompetitiveGroupTargetID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitiveGroupTargetID");
                OnCompetitiveGroupTargetIDChanged();
            }
        }
        private global::System.Int32 _CompetitiveGroupTargetID;
        partial void OnCompetitiveGroupTargetIDChanging(global::System.Int32 value);
        partial void OnCompetitiveGroupTargetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsForO
        {
            get
            {
                return _IsForO;
            }
            set
            {
                OnIsForOChanging(value);
                ReportPropertyChanging("IsForO");
                _IsForO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsForO");
                OnIsForOChanged();
            }
        }
        private global::System.Boolean _IsForO;
        partial void OnIsForOChanging(global::System.Boolean value);
        partial void OnIsForOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsForOZ
        {
            get
            {
                return _IsForOZ;
            }
            set
            {
                OnIsForOZChanging(value);
                ReportPropertyChanging("IsForOZ");
                _IsForOZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsForOZ");
                OnIsForOZChanged();
            }
        }
        private global::System.Boolean _IsForOZ;
        partial void OnIsForOZChanging(global::System.Boolean value);
        partial void OnIsForOZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsForZ
        {
            get
            {
                return _IsForZ;
            }
            set
            {
                OnIsForZChanging(value);
                ReportPropertyChanging("IsForZ");
                _IsForZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsForZ");
                OnIsForZChanged();
            }
        }
        private global::System.Boolean _IsForZ;
        partial void OnIsForZChanging(global::System.Boolean value);
        partial void OnIsForZChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationSelectedCompetitiveGroupTarget_CompetitiveGroupTarget", "CompetitiveGroupTarget")]
        public CompetitiveGroupTarget CompetitiveGroupTarget
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupTarget>("Import.FK_ApplicationSelectedCompetitiveGroupTarget_CompetitiveGroupTarget", "CompetitiveGroupTarget").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupTarget>("Import.FK_ApplicationSelectedCompetitiveGroupTarget_CompetitiveGroupTarget", "CompetitiveGroupTarget").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitiveGroupTarget> CompetitiveGroupTargetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupTarget>("Import.FK_ApplicationSelectedCompetitiveGroupTarget_CompetitiveGroupTarget", "CompetitiveGroupTarget");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitiveGroupTarget>("Import.FK_ApplicationSelectedCompetitiveGroupTarget_CompetitiveGroupTarget", "CompetitiveGroupTarget", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationSelectedCompetitiveGroupTarget_Application", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_ApplicationSelectedCompetitiveGroupTarget_Application", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_ApplicationSelectedCompetitiveGroupTarget_Application", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_ApplicationSelectedCompetitiveGroupTarget_Application", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("Import.FK_ApplicationSelectedCompetitiveGroupTarget_Application", "Application", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="ApplicationStatusType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ApplicationStatusType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ApplicationStatusType object.
        /// </summary>
        /// <param name="statusID">Initial value of the StatusID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActiveApp">Initial value of the IsActiveApp property.</param>
        /// <param name="useForAppLimitValidation">Initial value of the UseForAppLimitValidation property.</param>
        public static ApplicationStatusType CreateApplicationStatusType(global::System.Int32 statusID, global::System.String name, global::System.Boolean isActiveApp, global::System.Boolean useForAppLimitValidation)
        {
            ApplicationStatusType applicationStatusType = new ApplicationStatusType();
            applicationStatusType.StatusID = statusID;
            applicationStatusType.Name = name;
            applicationStatusType.IsActiveApp = isActiveApp;
            applicationStatusType.UseForAppLimitValidation = useForAppLimitValidation;
            return applicationStatusType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                if (_StatusID != value)
                {
                    OnStatusIDChanging(value);
                    ReportPropertyChanging("StatusID");
                    _StatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StatusID");
                    OnStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _StatusID;
        partial void OnStatusIDChanging(global::System.Int32 value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActiveApp
        {
            get
            {
                return _IsActiveApp;
            }
            set
            {
                OnIsActiveAppChanging(value);
                ReportPropertyChanging("IsActiveApp");
                _IsActiveApp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActiveApp");
                OnIsActiveAppChanged();
            }
        }
        private global::System.Boolean _IsActiveApp;
        partial void OnIsActiveAppChanging(global::System.Boolean value);
        partial void OnIsActiveAppChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UseForAppLimitValidation
        {
            get
            {
                return _UseForAppLimitValidation;
            }
            set
            {
                OnUseForAppLimitValidationChanging(value);
                ReportPropertyChanging("UseForAppLimitValidation");
                _UseForAppLimitValidation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UseForAppLimitValidation");
                OnUseForAppLimitValidationChanged();
            }
        }
        private global::System.Boolean _UseForAppLimitValidation;
        partial void OnUseForAppLimitValidationChanging(global::System.Boolean value);
        partial void OnUseForAppLimitValidationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Application_ApplicationStatusType", "Application")]
        public EntityCollection<Application> Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("Import.FK_Application_ApplicationStatusType", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("Import.FK_Application_ApplicationStatusType", "Application", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="Benefit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Benefit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Benefit object.
        /// </summary>
        /// <param name="benefitID">Initial value of the BenefitID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="shortName">Initial value of the ShortName property.</param>
        public static Benefit CreateBenefit(global::System.Int16 benefitID, global::System.String name, global::System.String shortName)
        {
            Benefit benefit = new Benefit();
            benefit.BenefitID = benefitID;
            benefit.Name = name;
            benefit.ShortName = shortName;
            return benefit;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 BenefitID
        {
            get
            {
                return _BenefitID;
            }
            set
            {
                if (_BenefitID != value)
                {
                    OnBenefitIDChanging(value);
                    ReportPropertyChanging("BenefitID");
                    _BenefitID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BenefitID");
                    OnBenefitIDChanged();
                }
            }
        }
        private global::System.Int16 _BenefitID;
        partial void OnBenefitIDChanging(global::System.Int16 value);
        partial void OnBenefitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortName
        {
            get
            {
                return _ShortName;
            }
            set
            {
                OnShortNameChanging(value);
                ReportPropertyChanging("ShortName");
                _ShortName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortName");
                OnShortNameChanged();
            }
        }
        private global::System.String _ShortName;
        partial void OnShortNameChanging(global::System.String value);
        partial void OnShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntranceTestDocument_Benefit", "ApplicationEntranceTestDocument")]
        public EntityCollection<ApplicationEntranceTestDocument> ApplicationEntranceTestDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationEntranceTestDocument>("Import.FK_ApplicationEntranceTestDocument_Benefit", "ApplicationEntranceTestDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationEntranceTestDocument>("Import.FK_ApplicationEntranceTestDocument_Benefit", "ApplicationEntranceTestDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_BenefitItemC_Benefit", "BenefitItemC")]
        public EntityCollection<BenefitItemC> BenefitItemC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitItemC>("Import.FK_BenefitItemC_Benefit", "BenefitItemC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitItemC>("Import.FK_BenefitItemC_Benefit", "BenefitItemC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationSelectedCompetitiveGroup_Benefit", "ApplicationSelectedCompetitiveGroup")]
        public EntityCollection<ApplicationSelectedCompetitiveGroup> ApplicationSelectedCompetitiveGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationSelectedCompetitiveGroup>("Import.FK_ApplicationSelectedCompetitiveGroup_Benefit", "ApplicationSelectedCompetitiveGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationSelectedCompetitiveGroup>("Import.FK_ApplicationSelectedCompetitiveGroup_Benefit", "ApplicationSelectedCompetitiveGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Application_Benefit", "Application")]
        public EntityCollection<Application> Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("Import.FK_Application_Benefit", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("Import.FK_Application_Benefit", "Application", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="BenefitItemC")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BenefitItemC : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BenefitItemC object.
        /// </summary>
        /// <param name="benefitItemID">Initial value of the BenefitItemID property.</param>
        /// <param name="olympicDiplomTypeID">Initial value of the OlympicDiplomTypeID property.</param>
        /// <param name="olympicLevelFlags">Initial value of the OlympicLevelFlags property.</param>
        /// <param name="benefitID">Initial value of the BenefitID property.</param>
        /// <param name="isForAllOlympic">Initial value of the IsForAllOlympic property.</param>
        /// <param name="isProfileSubject">Initial value of the IsProfileSubject property.</param>
        /// <param name="competitiveGroupID">Initial value of the CompetitiveGroupID property.</param>
        /// <param name="olympicYear">Initial value of the OlympicYear property.</param>
        public static BenefitItemC CreateBenefitItemC(global::System.Int32 benefitItemID, global::System.Int16 olympicDiplomTypeID, global::System.Int16 olympicLevelFlags, global::System.Int16 benefitID, global::System.Boolean isForAllOlympic, global::System.Boolean isProfileSubject, global::System.Int32 competitiveGroupID, global::System.Int32 olympicYear)
        {
            BenefitItemC benefitItemC = new BenefitItemC();
            benefitItemC.BenefitItemID = benefitItemID;
            benefitItemC.OlympicDiplomTypeID = olympicDiplomTypeID;
            benefitItemC.OlympicLevelFlags = olympicLevelFlags;
            benefitItemC.BenefitID = benefitID;
            benefitItemC.IsForAllOlympic = isForAllOlympic;
            benefitItemC.IsProfileSubject = isProfileSubject;
            benefitItemC.CompetitiveGroupID = competitiveGroupID;
            benefitItemC.OlympicYear = olympicYear;
            return benefitItemC;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenefitItemID
        {
            get
            {
                return _BenefitItemID;
            }
            set
            {
                if (_BenefitItemID != value)
                {
                    OnBenefitItemIDChanging(value);
                    ReportPropertyChanging("BenefitItemID");
                    _BenefitItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BenefitItemID");
                    OnBenefitItemIDChanged();
                }
            }
        }
        private global::System.Int32 _BenefitItemID;
        partial void OnBenefitItemIDChanging(global::System.Int32 value);
        partial void OnBenefitItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EntranceTestItemID
        {
            get
            {
                return _EntranceTestItemID;
            }
            set
            {
                OnEntranceTestItemIDChanging(value);
                ReportPropertyChanging("EntranceTestItemID");
                _EntranceTestItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntranceTestItemID");
                OnEntranceTestItemIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EntranceTestItemID;
        partial void OnEntranceTestItemIDChanging(Nullable<global::System.Int32> value);
        partial void OnEntranceTestItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 OlympicDiplomTypeID
        {
            get
            {
                return _OlympicDiplomTypeID;
            }
            set
            {
                OnOlympicDiplomTypeIDChanging(value);
                ReportPropertyChanging("OlympicDiplomTypeID");
                _OlympicDiplomTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympicDiplomTypeID");
                OnOlympicDiplomTypeIDChanged();
            }
        }
        private global::System.Int16 _OlympicDiplomTypeID;
        partial void OnOlympicDiplomTypeIDChanging(global::System.Int16 value);
        partial void OnOlympicDiplomTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 OlympicLevelFlags
        {
            get
            {
                return _OlympicLevelFlags;
            }
            set
            {
                OnOlympicLevelFlagsChanging(value);
                ReportPropertyChanging("OlympicLevelFlags");
                _OlympicLevelFlags = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympicLevelFlags");
                OnOlympicLevelFlagsChanged();
            }
        }
        private global::System.Int16 _OlympicLevelFlags;
        partial void OnOlympicLevelFlagsChanging(global::System.Int16 value);
        partial void OnOlympicLevelFlagsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 BenefitID
        {
            get
            {
                return _BenefitID;
            }
            set
            {
                OnBenefitIDChanging(value);
                ReportPropertyChanging("BenefitID");
                _BenefitID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenefitID");
                OnBenefitIDChanged();
            }
        }
        private global::System.Int16 _BenefitID;
        partial void OnBenefitIDChanging(global::System.Int16 value);
        partial void OnBenefitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsForAllOlympic
        {
            get
            {
                return _IsForAllOlympic;
            }
            set
            {
                OnIsForAllOlympicChanging(value);
                ReportPropertyChanging("IsForAllOlympic");
                _IsForAllOlympic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsForAllOlympic");
                OnIsForAllOlympicChanged();
            }
        }
        private global::System.Boolean _IsForAllOlympic;
        partial void OnIsForAllOlympicChanging(global::System.Boolean value);
        partial void OnIsForAllOlympicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsProfileSubject
        {
            get
            {
                return _IsProfileSubject;
            }
            set
            {
                OnIsProfileSubjectChanging(value);
                ReportPropertyChanging("IsProfileSubject");
                _IsProfileSubject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsProfileSubject");
                OnIsProfileSubjectChanged();
            }
        }
        private global::System.Boolean _IsProfileSubject;
        partial void OnIsProfileSubjectChanging(global::System.Boolean value);
        partial void OnIsProfileSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitiveGroupID
        {
            get
            {
                return _CompetitiveGroupID;
            }
            set
            {
                OnCompetitiveGroupIDChanging(value);
                ReportPropertyChanging("CompetitiveGroupID");
                _CompetitiveGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitiveGroupID");
                OnCompetitiveGroupIDChanged();
            }
        }
        private global::System.Int32 _CompetitiveGroupID;
        partial void OnCompetitiveGroupIDChanging(global::System.Int32 value);
        partial void OnCompetitiveGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.String _UID;
        partial void OnUIDChanging(global::System.String value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OlympicYear
        {
            get
            {
                return _OlympicYear;
            }
            set
            {
                OnOlympicYearChanging(value);
                ReportPropertyChanging("OlympicYear");
                _OlympicYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympicYear");
                OnOlympicYearChanged();
            }
        }
        private global::System.Int32 _OlympicYear;
        partial void OnOlympicYearChanging(global::System.Int32 value);
        partial void OnOlympicYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EgeMinValue
        {
            get
            {
                return _EgeMinValue;
            }
            set
            {
                OnEgeMinValueChanging(value);
                ReportPropertyChanging("EgeMinValue");
                _EgeMinValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EgeMinValue");
                OnEgeMinValueChanged();
            }
        }
        private Nullable<global::System.Int32> _EgeMinValue;
        partial void OnEgeMinValueChanging(Nullable<global::System.Int32> value);
        partial void OnEgeMinValueChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_BenefitItemC_Benefit", "Benefit")]
        public Benefit Benefit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Benefit>("Import.FK_BenefitItemC_Benefit", "Benefit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Benefit>("Import.FK_BenefitItemC_Benefit", "Benefit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Benefit> BenefitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Benefit>("Import.FK_BenefitItemC_Benefit", "Benefit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Benefit>("Import.FK_BenefitItemC_Benefit", "Benefit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_BenefitItem_EntranceTestItemC", "EntranceTestItemC")]
        public EntranceTestItemC EntranceTestItemC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntranceTestItemC>("Import.FK_BenefitItem_EntranceTestItemC", "EntranceTestItemC").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntranceTestItemC>("Import.FK_BenefitItem_EntranceTestItemC", "EntranceTestItemC").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntranceTestItemC> EntranceTestItemCReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntranceTestItemC>("Import.FK_BenefitItem_EntranceTestItemC", "EntranceTestItemC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EntranceTestItemC>("Import.FK_BenefitItem_EntranceTestItemC", "EntranceTestItemC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_BenefitItemC_CompetitiveGroup", "CompetitiveGroup")]
        public CompetitiveGroup CompetitiveGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_BenefitItemC_CompetitiveGroup", "CompetitiveGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_BenefitItemC_CompetitiveGroup", "CompetitiveGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitiveGroup> CompetitiveGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_BenefitItemC_CompetitiveGroup", "CompetitiveGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitiveGroup>("Import.FK_BenefitItemC_CompetitiveGroup", "CompetitiveGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_BenefitItemCOlympicType_BenefitItemC", "BenefitItemCOlympicType")]
        public EntityCollection<BenefitItemCOlympicType> BenefitItemCOlympicType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitItemCOlympicType>("Import.FK_BenefitItemCOlympicType_BenefitItemC", "BenefitItemCOlympicType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitItemCOlympicType>("Import.FK_BenefitItemCOlympicType_BenefitItemC", "BenefitItemCOlympicType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_BenefitItemC_OlympicDiplomType", "OlympicDiplomType")]
        public OlympicDiplomType OlympicDiplomType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicDiplomType>("Import.FK_BenefitItemC_OlympicDiplomType", "OlympicDiplomType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicDiplomType>("Import.FK_BenefitItemC_OlympicDiplomType", "OlympicDiplomType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OlympicDiplomType> OlympicDiplomTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicDiplomType>("Import.FK_BenefitItemC_OlympicDiplomType", "OlympicDiplomType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OlympicDiplomType>("Import.FK_BenefitItemC_OlympicDiplomType", "OlympicDiplomType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_BenefitItemSubject_BenefitItemC1", "BenefitItemSubject")]
        public EntityCollection<BenefitItemSubject> BenefitItemSubject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitItemSubject>("Import.FK_BenefitItemSubject_BenefitItemC1", "BenefitItemSubject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitItemSubject>("Import.FK_BenefitItemSubject_BenefitItemC1", "BenefitItemSubject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="BenefitItemCOlympicType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BenefitItemCOlympicType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BenefitItemCOlympicType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="benefitItemID">Initial value of the BenefitItemID property.</param>
        /// <param name="olympicTypeID">Initial value of the OlympicTypeID property.</param>
        public static BenefitItemCOlympicType CreateBenefitItemCOlympicType(global::System.Int32 id, global::System.Int32 benefitItemID, global::System.Int32 olympicTypeID)
        {
            BenefitItemCOlympicType benefitItemCOlympicType = new BenefitItemCOlympicType();
            benefitItemCOlympicType.ID = id;
            benefitItemCOlympicType.BenefitItemID = benefitItemID;
            benefitItemCOlympicType.OlympicTypeID = olympicTypeID;
            return benefitItemCOlympicType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenefitItemID
        {
            get
            {
                return _BenefitItemID;
            }
            set
            {
                OnBenefitItemIDChanging(value);
                ReportPropertyChanging("BenefitItemID");
                _BenefitItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenefitItemID");
                OnBenefitItemIDChanged();
            }
        }
        private global::System.Int32 _BenefitItemID;
        partial void OnBenefitItemIDChanging(global::System.Int32 value);
        partial void OnBenefitItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OlympicTypeID
        {
            get
            {
                return _OlympicTypeID;
            }
            set
            {
                OnOlympicTypeIDChanging(value);
                ReportPropertyChanging("OlympicTypeID");
                _OlympicTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympicTypeID");
                OnOlympicTypeIDChanged();
            }
        }
        private global::System.Int32 _OlympicTypeID;
        partial void OnOlympicTypeIDChanging(global::System.Int32 value);
        partial void OnOlympicTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_BenefitItemCOlympicType_BenefitItemC", "BenefitItemC")]
        public BenefitItemC BenefitItemC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitItemC>("Import.FK_BenefitItemCOlympicType_BenefitItemC", "BenefitItemC").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitItemC>("Import.FK_BenefitItemCOlympicType_BenefitItemC", "BenefitItemC").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BenefitItemC> BenefitItemCReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitItemC>("Import.FK_BenefitItemCOlympicType_BenefitItemC", "BenefitItemC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BenefitItemC>("Import.FK_BenefitItemCOlympicType_BenefitItemC", "BenefitItemC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_BenefitItemCOlympicType_OlympicType", "OlympicType")]
        public OlympicType OlympicType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicType>("Import.FK_BenefitItemCOlympicType_OlympicType", "OlympicType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicType>("Import.FK_BenefitItemCOlympicType_OlympicType", "OlympicType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OlympicType> OlympicTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicType>("Import.FK_BenefitItemCOlympicType_OlympicType", "OlympicType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OlympicType>("Import.FK_BenefitItemCOlympicType_OlympicType", "OlympicType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="BenefitItemSubject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BenefitItemSubject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BenefitItemSubject object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="benefitItemId">Initial value of the BenefitItemId property.</param>
        /// <param name="subjectId">Initial value of the SubjectId property.</param>
        /// <param name="egeMinValue">Initial value of the EgeMinValue property.</param>
        public static BenefitItemSubject CreateBenefitItemSubject(global::System.Int32 id, global::System.Int32 benefitItemId, global::System.Int32 subjectId, global::System.Int32 egeMinValue)
        {
            BenefitItemSubject benefitItemSubject = new BenefitItemSubject();
            benefitItemSubject.Id = id;
            benefitItemSubject.BenefitItemId = benefitItemId;
            benefitItemSubject.SubjectId = subjectId;
            benefitItemSubject.EgeMinValue = egeMinValue;
            return benefitItemSubject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BenefitItemId
        {
            get
            {
                return _BenefitItemId;
            }
            set
            {
                OnBenefitItemIdChanging(value);
                ReportPropertyChanging("BenefitItemId");
                _BenefitItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BenefitItemId");
                OnBenefitItemIdChanged();
            }
        }
        private global::System.Int32 _BenefitItemId;
        partial void OnBenefitItemIdChanging(global::System.Int32 value);
        partial void OnBenefitItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectId
        {
            get
            {
                return _SubjectId;
            }
            set
            {
                OnSubjectIdChanging(value);
                ReportPropertyChanging("SubjectId");
                _SubjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectId");
                OnSubjectIdChanged();
            }
        }
        private global::System.Int32 _SubjectId;
        partial void OnSubjectIdChanging(global::System.Int32 value);
        partial void OnSubjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EgeMinValue
        {
            get
            {
                return _EgeMinValue;
            }
            set
            {
                OnEgeMinValueChanging(value);
                ReportPropertyChanging("EgeMinValue");
                _EgeMinValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EgeMinValue");
                OnEgeMinValueChanged();
            }
        }
        private global::System.Int32 _EgeMinValue;
        partial void OnEgeMinValueChanging(global::System.Int32 value);
        partial void OnEgeMinValueChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_BenefitItemSubject_BenefitItemC1", "BenefitItemC")]
        public BenefitItemC BenefitItemC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitItemC>("Import.FK_BenefitItemSubject_BenefitItemC1", "BenefitItemC").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitItemC>("Import.FK_BenefitItemSubject_BenefitItemC1", "BenefitItemC").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BenefitItemC> BenefitItemCReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BenefitItemC>("Import.FK_BenefitItemSubject_BenefitItemC1", "BenefitItemC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BenefitItemC>("Import.FK_BenefitItemSubject_BenefitItemC1", "BenefitItemC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_BenefitItemSubject_Subject1", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_BenefitItemSubject_Subject1", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_BenefitItemSubject_Subject1", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_BenefitItemSubject_Subject1", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("Import.FK_BenefitItemSubject_Subject1", "Subject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="Campaign")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Campaign : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Campaign object.
        /// </summary>
        /// <param name="campaignID">Initial value of the CampaignID property.</param>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="yearStart">Initial value of the YearStart property.</param>
        /// <param name="yearEnd">Initial value of the YearEnd property.</param>
        /// <param name="educationFormFlag">Initial value of the EducationFormFlag property.</param>
        /// <param name="statusID">Initial value of the StatusID property.</param>
        /// <param name="additional">Initial value of the Additional property.</param>
        /// <param name="isFromKrym">Initial value of the IsFromKrym property.</param>
        public static Campaign CreateCampaign(global::System.Int32 campaignID, global::System.Int32 institutionID, global::System.String name, global::System.Int32 yearStart, global::System.Int32 yearEnd, global::System.Int32 educationFormFlag, global::System.Int32 statusID, global::System.Boolean additional, global::System.Boolean isFromKrym)
        {
            Campaign campaign = new Campaign();
            campaign.CampaignID = campaignID;
            campaign.InstitutionID = institutionID;
            campaign.Name = name;
            campaign.YearStart = yearStart;
            campaign.YearEnd = yearEnd;
            campaign.EducationFormFlag = educationFormFlag;
            campaign.StatusID = statusID;
            campaign.Additional = additional;
            campaign.IsFromKrym = isFromKrym;
            return campaign;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CampaignID
        {
            get
            {
                return _CampaignID;
            }
            set
            {
                if (_CampaignID != value)
                {
                    OnCampaignIDChanging(value);
                    ReportPropertyChanging("CampaignID");
                    _CampaignID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CampaignID");
                    OnCampaignIDChanged();
                }
            }
        }
        private global::System.Int32 _CampaignID;
        partial void OnCampaignIDChanging(global::System.Int32 value);
        partial void OnCampaignIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                OnInstitutionIDChanging(value);
                ReportPropertyChanging("InstitutionID");
                _InstitutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionID");
                OnInstitutionIDChanged();
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 YearStart
        {
            get
            {
                return _YearStart;
            }
            set
            {
                OnYearStartChanging(value);
                ReportPropertyChanging("YearStart");
                _YearStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearStart");
                OnYearStartChanged();
            }
        }
        private global::System.Int32 _YearStart;
        partial void OnYearStartChanging(global::System.Int32 value);
        partial void OnYearStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 YearEnd
        {
            get
            {
                return _YearEnd;
            }
            set
            {
                OnYearEndChanging(value);
                ReportPropertyChanging("YearEnd");
                _YearEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearEnd");
                OnYearEndChanged();
            }
        }
        private global::System.Int32 _YearEnd;
        partial void OnYearEndChanging(global::System.Int32 value);
        partial void OnYearEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EducationFormFlag
        {
            get
            {
                return _EducationFormFlag;
            }
            set
            {
                OnEducationFormFlagChanging(value);
                ReportPropertyChanging("EducationFormFlag");
                _EducationFormFlag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducationFormFlag");
                OnEducationFormFlagChanged();
            }
        }
        private global::System.Int32 _EducationFormFlag;
        partial void OnEducationFormFlagChanging(global::System.Int32 value);
        partial void OnEducationFormFlagChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private global::System.Int32 _StatusID;
        partial void OnStatusIDChanging(global::System.Int32 value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.String _UID;
        partial void OnUIDChanging(global::System.String value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Additional
        {
            get
            {
                return _Additional;
            }
            set
            {
                OnAdditionalChanging(value);
                ReportPropertyChanging("Additional");
                _Additional = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Additional");
                OnAdditionalChanged();
            }
        }
        private global::System.Boolean _Additional;
        partial void OnAdditionalChanging(global::System.Boolean value);
        partial void OnAdditionalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFromKrym
        {
            get
            {
                return _IsFromKrym;
            }
            set
            {
                OnIsFromKrymChanging(value);
                ReportPropertyChanging("IsFromKrym");
                _IsFromKrym = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFromKrym");
                OnIsFromKrymChanged();
            }
        }
        private global::System.Boolean _IsFromKrym;
        partial void OnIsFromKrymChanging(global::System.Boolean value);
        partial void OnIsFromKrymChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_AdmissionVolume_Campaign", "AdmissionVolume")]
        public EntityCollection<AdmissionVolume> AdmissionVolume
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdmissionVolume>("Import.FK_AdmissionVolume_Campaign", "AdmissionVolume");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdmissionVolume>("Import.FK_AdmissionVolume_Campaign", "AdmissionVolume", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Campaign_Institution", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_Campaign_Institution", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_Campaign_Institution", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_Campaign_Institution", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("Import.FK_Campaign_Institution", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CampaignDate_Campaign", "CampaignDate")]
        public EntityCollection<CampaignDate> CampaignDate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CampaignDate>("Import.FK_CampaignDate_Campaign", "CampaignDate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CampaignDate>("Import.FK_CampaignDate_Campaign", "CampaignDate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CampaignEducationLevel_Campaign", "CampaignEducationLevel")]
        public EntityCollection<CampaignEducationLevel> CampaignEducationLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CampaignEducationLevel>("Import.FK_CampaignEducationLevel_Campaign", "CampaignEducationLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CampaignEducationLevel>("Import.FK_CampaignEducationLevel_Campaign", "CampaignEducationLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CompetitiveGroup_Campaign", "CompetitiveGroup")]
        public EntityCollection<CompetitiveGroup> CompetitiveGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitiveGroup>("Import.FK_CompetitiveGroup_Campaign", "CompetitiveGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitiveGroup>("Import.FK_CompetitiveGroup_Campaign", "CompetitiveGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OrderOfAdmission_Campaign", "OrderOfAdmission")]
        public EntityCollection<OrderOfAdmission> OrderOfAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderOfAdmission>("Import.FK_OrderOfAdmission_Campaign", "OrderOfAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderOfAdmission>("Import.FK_OrderOfAdmission_Campaign", "OrderOfAdmission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_RecomendedLists_Campaign1", "RecomendedLists")]
        public EntityCollection<RecomendedLists> RecomendedLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RecomendedLists>("Import.FK_RecomendedLists_Campaign1", "RecomendedLists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RecomendedLists>("Import.FK_RecomendedLists_Campaign1", "RecomendedLists", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="CampaignDate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CampaignDate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CampaignDate object.
        /// </summary>
        /// <param name="campaignDateID">Initial value of the CampaignDateID property.</param>
        /// <param name="campaignID">Initial value of the CampaignID property.</param>
        /// <param name="course">Initial value of the Course property.</param>
        /// <param name="educationLevelID">Initial value of the EducationLevelID property.</param>
        /// <param name="educationFormID">Initial value of the EducationFormID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="stage">Initial value of the Stage property.</param>
        /// <param name="educationSourceID">Initial value of the EducationSourceID property.</param>
        public static CampaignDate CreateCampaignDate(global::System.Int32 campaignDateID, global::System.Int32 campaignID, global::System.Int32 course, global::System.Int16 educationLevelID, global::System.Int16 educationFormID, global::System.Boolean isActive, global::System.Int32 stage, global::System.Int16 educationSourceID)
        {
            CampaignDate campaignDate = new CampaignDate();
            campaignDate.CampaignDateID = campaignDateID;
            campaignDate.CampaignID = campaignID;
            campaignDate.Course = course;
            campaignDate.EducationLevelID = educationLevelID;
            campaignDate.EducationFormID = educationFormID;
            campaignDate.IsActive = isActive;
            campaignDate.Stage = stage;
            campaignDate.EducationSourceID = educationSourceID;
            return campaignDate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CampaignDateID
        {
            get
            {
                return _CampaignDateID;
            }
            set
            {
                if (_CampaignDateID != value)
                {
                    OnCampaignDateIDChanging(value);
                    ReportPropertyChanging("CampaignDateID");
                    _CampaignDateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CampaignDateID");
                    OnCampaignDateIDChanged();
                }
            }
        }
        private global::System.Int32 _CampaignDateID;
        partial void OnCampaignDateIDChanging(global::System.Int32 value);
        partial void OnCampaignDateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CampaignID
        {
            get
            {
                return _CampaignID;
            }
            set
            {
                OnCampaignIDChanging(value);
                ReportPropertyChanging("CampaignID");
                _CampaignID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CampaignID");
                OnCampaignIDChanged();
            }
        }
        private global::System.Int32 _CampaignID;
        partial void OnCampaignIDChanging(global::System.Int32 value);
        partial void OnCampaignIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Course
        {
            get
            {
                return _Course;
            }
            set
            {
                OnCourseChanging(value);
                ReportPropertyChanging("Course");
                _Course = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Course");
                OnCourseChanged();
            }
        }
        private global::System.Int32 _Course;
        partial void OnCourseChanging(global::System.Int32 value);
        partial void OnCourseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 EducationLevelID
        {
            get
            {
                return _EducationLevelID;
            }
            set
            {
                OnEducationLevelIDChanging(value);
                ReportPropertyChanging("EducationLevelID");
                _EducationLevelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducationLevelID");
                OnEducationLevelIDChanged();
            }
        }
        private global::System.Int16 _EducationLevelID;
        partial void OnEducationLevelIDChanging(global::System.Int16 value);
        partial void OnEducationLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 EducationFormID
        {
            get
            {
                return _EducationFormID;
            }
            set
            {
                OnEducationFormIDChanging(value);
                ReportPropertyChanging("EducationFormID");
                _EducationFormID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducationFormID");
                OnEducationFormIDChanged();
            }
        }
        private global::System.Int16 _EducationFormID;
        partial void OnEducationFormIDChanging(global::System.Int16 value);
        partial void OnEducationFormIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateStart
        {
            get
            {
                return _DateStart;
            }
            set
            {
                OnDateStartChanging(value);
                ReportPropertyChanging("DateStart");
                _DateStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateStart");
                OnDateStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateStart;
        partial void OnDateStartChanging(Nullable<global::System.DateTime> value);
        partial void OnDateStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEnd
        {
            get
            {
                return _DateEnd;
            }
            set
            {
                OnDateEndChanging(value);
                ReportPropertyChanging("DateEnd");
                _DateEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEnd");
                OnDateEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEnd;
        partial void OnDateEndChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOrder
        {
            get
            {
                return _DateOrder;
            }
            set
            {
                OnDateOrderChanging(value);
                ReportPropertyChanging("DateOrder");
                _DateOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOrder");
                OnDateOrderChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOrder;
        partial void OnDateOrderChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.String _UID;
        partial void OnUIDChanging(global::System.String value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Stage
        {
            get
            {
                return _Stage;
            }
            set
            {
                OnStageChanging(value);
                ReportPropertyChanging("Stage");
                _Stage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stage");
                OnStageChanged();
            }
        }
        private global::System.Int32 _Stage;
        partial void OnStageChanging(global::System.Int32 value);
        partial void OnStageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 EducationSourceID
        {
            get
            {
                return _EducationSourceID;
            }
            set
            {
                OnEducationSourceIDChanging(value);
                ReportPropertyChanging("EducationSourceID");
                _EducationSourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducationSourceID");
                OnEducationSourceIDChanged();
            }
        }
        private global::System.Int16 _EducationSourceID;
        partial void OnEducationSourceIDChanging(global::System.Int16 value);
        partial void OnEducationSourceIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CampaignDate_AdmissionItemTypeForm", "AdmissionItemType")]
        public AdmissionItemType AdmissionItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_CampaignDate_AdmissionItemTypeForm", "AdmissionItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_CampaignDate_AdmissionItemTypeForm", "AdmissionItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdmissionItemType> AdmissionItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_CampaignDate_AdmissionItemTypeForm", "AdmissionItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdmissionItemType>("Import.FK_CampaignDate_AdmissionItemTypeForm", "AdmissionItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CampaignDate_AdmissionItemTypeLevel", "AdmissionItemType")]
        public AdmissionItemType AdmissionItemType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_CampaignDate_AdmissionItemTypeLevel", "AdmissionItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_CampaignDate_AdmissionItemTypeLevel", "AdmissionItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdmissionItemType> AdmissionItemType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_CampaignDate_AdmissionItemTypeLevel", "AdmissionItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdmissionItemType>("Import.FK_CampaignDate_AdmissionItemTypeLevel", "AdmissionItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CampaignDate_AdmissionItemTypeSource", "AdmissionItemType")]
        public AdmissionItemType AdmissionItemType2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_CampaignDate_AdmissionItemTypeSource", "AdmissionItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_CampaignDate_AdmissionItemTypeSource", "AdmissionItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdmissionItemType> AdmissionItemType2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_CampaignDate_AdmissionItemTypeSource", "AdmissionItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdmissionItemType>("Import.FK_CampaignDate_AdmissionItemTypeSource", "AdmissionItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CampaignDate_Campaign", "Campaign")]
        public Campaign Campaign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("Import.FK_CampaignDate_Campaign", "Campaign").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("Import.FK_CampaignDate_Campaign", "Campaign").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Campaign> CampaignReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("Import.FK_CampaignDate_Campaign", "Campaign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Campaign>("Import.FK_CampaignDate_Campaign", "Campaign", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="CampaignEducationLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CampaignEducationLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CampaignEducationLevel object.
        /// </summary>
        /// <param name="campaignEducationLevelID">Initial value of the CampaignEducationLevelID property.</param>
        /// <param name="campaignID">Initial value of the CampaignID property.</param>
        /// <param name="course">Initial value of the Course property.</param>
        /// <param name="educationLevelID">Initial value of the EducationLevelID property.</param>
        public static CampaignEducationLevel CreateCampaignEducationLevel(global::System.Int32 campaignEducationLevelID, global::System.Int32 campaignID, global::System.Int32 course, global::System.Int16 educationLevelID)
        {
            CampaignEducationLevel campaignEducationLevel = new CampaignEducationLevel();
            campaignEducationLevel.CampaignEducationLevelID = campaignEducationLevelID;
            campaignEducationLevel.CampaignID = campaignID;
            campaignEducationLevel.Course = course;
            campaignEducationLevel.EducationLevelID = educationLevelID;
            return campaignEducationLevel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CampaignEducationLevelID
        {
            get
            {
                return _CampaignEducationLevelID;
            }
            set
            {
                if (_CampaignEducationLevelID != value)
                {
                    OnCampaignEducationLevelIDChanging(value);
                    ReportPropertyChanging("CampaignEducationLevelID");
                    _CampaignEducationLevelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CampaignEducationLevelID");
                    OnCampaignEducationLevelIDChanged();
                }
            }
        }
        private global::System.Int32 _CampaignEducationLevelID;
        partial void OnCampaignEducationLevelIDChanging(global::System.Int32 value);
        partial void OnCampaignEducationLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CampaignID
        {
            get
            {
                return _CampaignID;
            }
            set
            {
                OnCampaignIDChanging(value);
                ReportPropertyChanging("CampaignID");
                _CampaignID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CampaignID");
                OnCampaignIDChanged();
            }
        }
        private global::System.Int32 _CampaignID;
        partial void OnCampaignIDChanging(global::System.Int32 value);
        partial void OnCampaignIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Course
        {
            get
            {
                return _Course;
            }
            set
            {
                OnCourseChanging(value);
                ReportPropertyChanging("Course");
                _Course = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Course");
                OnCourseChanged();
            }
        }
        private global::System.Int32 _Course;
        partial void OnCourseChanging(global::System.Int32 value);
        partial void OnCourseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 EducationLevelID
        {
            get
            {
                return _EducationLevelID;
            }
            set
            {
                OnEducationLevelIDChanging(value);
                ReportPropertyChanging("EducationLevelID");
                _EducationLevelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducationLevelID");
                OnEducationLevelIDChanged();
            }
        }
        private global::System.Int16 _EducationLevelID;
        partial void OnEducationLevelIDChanging(global::System.Int16 value);
        partial void OnEducationLevelIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CampaignEducationLevel_AdmissionItemType", "AdmissionItemType")]
        public AdmissionItemType AdmissionItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_CampaignEducationLevel_AdmissionItemType", "AdmissionItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_CampaignEducationLevel_AdmissionItemType", "AdmissionItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdmissionItemType> AdmissionItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_CampaignEducationLevel_AdmissionItemType", "AdmissionItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdmissionItemType>("Import.FK_CampaignEducationLevel_AdmissionItemType", "AdmissionItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CampaignEducationLevel_Campaign", "Campaign")]
        public Campaign Campaign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("Import.FK_CampaignEducationLevel_Campaign", "Campaign").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("Import.FK_CampaignEducationLevel_Campaign", "Campaign").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Campaign> CampaignReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("Import.FK_CampaignEducationLevel_Campaign", "Campaign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Campaign>("Import.FK_CampaignEducationLevel_Campaign", "Campaign", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="CompetitiveGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompetitiveGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompetitiveGroup object.
        /// </summary>
        /// <param name="competitiveGroupID">Initial value of the CompetitiveGroupID property.</param>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="course">Initial value of the Course property.</param>
        /// <param name="directionFilterType">Initial value of the DirectionFilterType property.</param>
        public static CompetitiveGroup CreateCompetitiveGroup(global::System.Int32 competitiveGroupID, global::System.Int32 institutionID, global::System.String name, global::System.Int16 course, global::System.Int32 directionFilterType)
        {
            CompetitiveGroup competitiveGroup = new CompetitiveGroup();
            competitiveGroup.CompetitiveGroupID = competitiveGroupID;
            competitiveGroup.InstitutionID = institutionID;
            competitiveGroup.Name = name;
            competitiveGroup.Course = course;
            competitiveGroup.DirectionFilterType = directionFilterType;
            return competitiveGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitiveGroupID
        {
            get
            {
                return _CompetitiveGroupID;
            }
            set
            {
                if (_CompetitiveGroupID != value)
                {
                    OnCompetitiveGroupIDChanging(value);
                    ReportPropertyChanging("CompetitiveGroupID");
                    _CompetitiveGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompetitiveGroupID");
                    OnCompetitiveGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _CompetitiveGroupID;
        partial void OnCompetitiveGroupIDChanging(global::System.Int32 value);
        partial void OnCompetitiveGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                OnInstitutionIDChanging(value);
                ReportPropertyChanging("InstitutionID");
                _InstitutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionID");
                OnInstitutionIDChanged();
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Course
        {
            get
            {
                return _Course;
            }
            set
            {
                OnCourseChanging(value);
                ReportPropertyChanging("Course");
                _Course = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Course");
                OnCourseChanged();
            }
        }
        private global::System.Int16 _Course;
        partial void OnCourseChanging(global::System.Int16 value);
        partial void OnCourseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.String _UID;
        partial void OnUIDChanging(global::System.String value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CampaignID
        {
            get
            {
                return _CampaignID;
            }
            set
            {
                OnCampaignIDChanging(value);
                ReportPropertyChanging("CampaignID");
                _CampaignID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CampaignID");
                OnCampaignIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CampaignID;
        partial void OnCampaignIDChanging(Nullable<global::System.Int32> value);
        partial void OnCampaignIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DirectionFilterType
        {
            get
            {
                return _DirectionFilterType;
            }
            set
            {
                OnDirectionFilterTypeChanging(value);
                ReportPropertyChanging("DirectionFilterType");
                _DirectionFilterType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DirectionFilterType");
                OnDirectionFilterTypeChanged();
            }
        }
        private global::System.Int32 _DirectionFilterType;
        partial void OnDirectionFilterTypeChanging(global::System.Int32 value);
        partial void OnDirectionFilterTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentDirectionID
        {
            get
            {
                return _ParentDirectionID;
            }
            set
            {
                OnParentDirectionIDChanging(value);
                ReportPropertyChanging("ParentDirectionID");
                _ParentDirectionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentDirectionID");
                OnParentDirectionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentDirectionID;
        partial void OnParentDirectionIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentDirectionIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_BenefitItemC_CompetitiveGroup", "BenefitItemC")]
        public EntityCollection<BenefitItemC> BenefitItemC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitItemC>("Import.FK_BenefitItemC_CompetitiveGroup", "BenefitItemC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitItemC>("Import.FK_BenefitItemC_CompetitiveGroup", "BenefitItemC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CompetitiveGroup_Institution", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_CompetitiveGroup_Institution", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_CompetitiveGroup_Institution", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_CompetitiveGroup_Institution", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("Import.FK_CompetitiveGroup_Institution", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CompetitiveGroupItem_CompetitiveGroup", "CompetitiveGroupItem")]
        public EntityCollection<CompetitiveGroupItem> CompetitiveGroupItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitiveGroupItem>("Import.FK_CompetitiveGroupItem_CompetitiveGroup", "CompetitiveGroupItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitiveGroupItem>("Import.FK_CompetitiveGroupItem_CompetitiveGroup", "CompetitiveGroupItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_EntranceTestItemC_CompetitiveGroupID", "EntranceTestItemC")]
        public EntityCollection<EntranceTestItemC> EntranceTestItemC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntranceTestItemC>("Import.FK_EntranceTestItemC_CompetitiveGroupID", "EntranceTestItemC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntranceTestItemC>("Import.FK_EntranceTestItemC_CompetitiveGroupID", "EntranceTestItemC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationSelectedCompetitiveGroup_CompetitiveGroup", "ApplicationSelectedCompetitiveGroup")]
        public EntityCollection<ApplicationSelectedCompetitiveGroup> ApplicationSelectedCompetitiveGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationSelectedCompetitiveGroup>("Import.FK_ApplicationSelectedCompetitiveGroup_CompetitiveGroup", "ApplicationSelectedCompetitiveGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationSelectedCompetitiveGroup>("Import.FK_ApplicationSelectedCompetitiveGroup_CompetitiveGroup", "ApplicationSelectedCompetitiveGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntranceTestDocument_BenefitCompetitiveGroup", "ApplicationEntranceTestDocument")]
        public EntityCollection<ApplicationEntranceTestDocument> ApplicationEntranceTestDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationEntranceTestDocument>("Import.FK_ApplicationEntranceTestDocument_BenefitCompetitiveGroup", "ApplicationEntranceTestDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationEntranceTestDocument>("Import.FK_ApplicationEntranceTestDocument_BenefitCompetitiveGroup", "ApplicationEntranceTestDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CompetitiveGroup_Campaign", "Campaign")]
        public Campaign Campaign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("Import.FK_CompetitiveGroup_Campaign", "Campaign").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("Import.FK_CompetitiveGroup_Campaign", "Campaign").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Campaign> CampaignReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("Import.FK_CompetitiveGroup_Campaign", "Campaign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Campaign>("Import.FK_CompetitiveGroup_Campaign", "Campaign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Application_CompetitiveGroup", "Application")]
        public EntityCollection<Application> Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("Import.FK_Application_CompetitiveGroup", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("Import.FK_Application_CompetitiveGroup", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_RecomendedLists_CompetitiveGroup1", "RecomendedLists")]
        public EntityCollection<RecomendedLists> RecomendedLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RecomendedLists>("Import.FK_RecomendedLists_CompetitiveGroup1", "RecomendedLists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RecomendedLists>("Import.FK_RecomendedLists_CompetitiveGroup1", "RecomendedLists", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationCompetitiveGroupItem_CompetitiveGroup", "ApplicationCompetitiveGroupItem")]
        public EntityCollection<ApplicationCompetitiveGroupItem> ApplicationCompetitiveGroupItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationCompetitiveGroupItem>("Import.FK_ApplicationCompetitiveGroupItem_CompetitiveGroup", "ApplicationCompetitiveGroupItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationCompetitiveGroupItem>("Import.FK_ApplicationCompetitiveGroupItem_CompetitiveGroup", "ApplicationCompetitiveGroupItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CompetitiveGroup_ParentDirection", "ParentDirection")]
        public ParentDirection ParentDirection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParentDirection>("Import.FK_CompetitiveGroup_ParentDirection", "ParentDirection").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParentDirection>("Import.FK_CompetitiveGroup_ParentDirection", "ParentDirection").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParentDirection> ParentDirectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParentDirection>("Import.FK_CompetitiveGroup_ParentDirection", "ParentDirection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParentDirection>("Import.FK_CompetitiveGroup_ParentDirection", "ParentDirection", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="CompetitiveGroupItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompetitiveGroupItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompetitiveGroupItem object.
        /// </summary>
        /// <param name="competitiveGroupItemID">Initial value of the CompetitiveGroupItemID property.</param>
        /// <param name="competitiveGroupID">Initial value of the CompetitiveGroupID property.</param>
        /// <param name="directionID">Initial value of the DirectionID property.</param>
        /// <param name="numberBudgetO">Initial value of the NumberBudgetO property.</param>
        /// <param name="numberBudgetOZ">Initial value of the NumberBudgetOZ property.</param>
        /// <param name="numberBudgetZ">Initial value of the NumberBudgetZ property.</param>
        /// <param name="numberPaidO">Initial value of the NumberPaidO property.</param>
        /// <param name="numberPaidOZ">Initial value of the NumberPaidOZ property.</param>
        /// <param name="numberPaidZ">Initial value of the NumberPaidZ property.</param>
        /// <param name="educationLevelID">Initial value of the EducationLevelID property.</param>
        public static CompetitiveGroupItem CreateCompetitiveGroupItem(global::System.Int32 competitiveGroupItemID, global::System.Int32 competitiveGroupID, global::System.Int32 directionID, global::System.Int32 numberBudgetO, global::System.Int32 numberBudgetOZ, global::System.Int32 numberBudgetZ, global::System.Int32 numberPaidO, global::System.Int32 numberPaidOZ, global::System.Int32 numberPaidZ, global::System.Int16 educationLevelID)
        {
            CompetitiveGroupItem competitiveGroupItem = new CompetitiveGroupItem();
            competitiveGroupItem.CompetitiveGroupItemID = competitiveGroupItemID;
            competitiveGroupItem.CompetitiveGroupID = competitiveGroupID;
            competitiveGroupItem.DirectionID = directionID;
            competitiveGroupItem.NumberBudgetO = numberBudgetO;
            competitiveGroupItem.NumberBudgetOZ = numberBudgetOZ;
            competitiveGroupItem.NumberBudgetZ = numberBudgetZ;
            competitiveGroupItem.NumberPaidO = numberPaidO;
            competitiveGroupItem.NumberPaidOZ = numberPaidOZ;
            competitiveGroupItem.NumberPaidZ = numberPaidZ;
            competitiveGroupItem.EducationLevelID = educationLevelID;
            return competitiveGroupItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitiveGroupItemID
        {
            get
            {
                return _CompetitiveGroupItemID;
            }
            set
            {
                if (_CompetitiveGroupItemID != value)
                {
                    OnCompetitiveGroupItemIDChanging(value);
                    ReportPropertyChanging("CompetitiveGroupItemID");
                    _CompetitiveGroupItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompetitiveGroupItemID");
                    OnCompetitiveGroupItemIDChanged();
                }
            }
        }
        private global::System.Int32 _CompetitiveGroupItemID;
        partial void OnCompetitiveGroupItemIDChanging(global::System.Int32 value);
        partial void OnCompetitiveGroupItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitiveGroupID
        {
            get
            {
                return _CompetitiveGroupID;
            }
            set
            {
                OnCompetitiveGroupIDChanging(value);
                ReportPropertyChanging("CompetitiveGroupID");
                _CompetitiveGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitiveGroupID");
                OnCompetitiveGroupIDChanged();
            }
        }
        private global::System.Int32 _CompetitiveGroupID;
        partial void OnCompetitiveGroupIDChanging(global::System.Int32 value);
        partial void OnCompetitiveGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DirectionID
        {
            get
            {
                return _DirectionID;
            }
            set
            {
                OnDirectionIDChanging(value);
                ReportPropertyChanging("DirectionID");
                _DirectionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DirectionID");
                OnDirectionIDChanged();
            }
        }
        private global::System.Int32 _DirectionID;
        partial void OnDirectionIDChanging(global::System.Int32 value);
        partial void OnDirectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberBudgetO
        {
            get
            {
                return _NumberBudgetO;
            }
            set
            {
                OnNumberBudgetOChanging(value);
                ReportPropertyChanging("NumberBudgetO");
                _NumberBudgetO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberBudgetO");
                OnNumberBudgetOChanged();
            }
        }
        private global::System.Int32 _NumberBudgetO;
        partial void OnNumberBudgetOChanging(global::System.Int32 value);
        partial void OnNumberBudgetOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberBudgetOZ
        {
            get
            {
                return _NumberBudgetOZ;
            }
            set
            {
                OnNumberBudgetOZChanging(value);
                ReportPropertyChanging("NumberBudgetOZ");
                _NumberBudgetOZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberBudgetOZ");
                OnNumberBudgetOZChanged();
            }
        }
        private global::System.Int32 _NumberBudgetOZ;
        partial void OnNumberBudgetOZChanging(global::System.Int32 value);
        partial void OnNumberBudgetOZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberBudgetZ
        {
            get
            {
                return _NumberBudgetZ;
            }
            set
            {
                OnNumberBudgetZChanging(value);
                ReportPropertyChanging("NumberBudgetZ");
                _NumberBudgetZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberBudgetZ");
                OnNumberBudgetZChanged();
            }
        }
        private global::System.Int32 _NumberBudgetZ;
        partial void OnNumberBudgetZChanging(global::System.Int32 value);
        partial void OnNumberBudgetZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberPaidO
        {
            get
            {
                return _NumberPaidO;
            }
            set
            {
                OnNumberPaidOChanging(value);
                ReportPropertyChanging("NumberPaidO");
                _NumberPaidO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberPaidO");
                OnNumberPaidOChanged();
            }
        }
        private global::System.Int32 _NumberPaidO;
        partial void OnNumberPaidOChanging(global::System.Int32 value);
        partial void OnNumberPaidOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberPaidOZ
        {
            get
            {
                return _NumberPaidOZ;
            }
            set
            {
                OnNumberPaidOZChanging(value);
                ReportPropertyChanging("NumberPaidOZ");
                _NumberPaidOZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberPaidOZ");
                OnNumberPaidOZChanged();
            }
        }
        private global::System.Int32 _NumberPaidOZ;
        partial void OnNumberPaidOZChanging(global::System.Int32 value);
        partial void OnNumberPaidOZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberPaidZ
        {
            get
            {
                return _NumberPaidZ;
            }
            set
            {
                OnNumberPaidZChanging(value);
                ReportPropertyChanging("NumberPaidZ");
                _NumberPaidZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberPaidZ");
                OnNumberPaidZChanged();
            }
        }
        private global::System.Int32 _NumberPaidZ;
        partial void OnNumberPaidZChanging(global::System.Int32 value);
        partial void OnNumberPaidZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.String _UID;
        partial void OnUIDChanging(global::System.String value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 EducationLevelID
        {
            get
            {
                return _EducationLevelID;
            }
            set
            {
                OnEducationLevelIDChanging(value);
                ReportPropertyChanging("EducationLevelID");
                _EducationLevelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducationLevelID");
                OnEducationLevelIDChanged();
            }
        }
        private global::System.Int16 _EducationLevelID;
        partial void OnEducationLevelIDChanging(global::System.Int16 value);
        partial void OnEducationLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberQuotaO
        {
            get
            {
                return _NumberQuotaO;
            }
            set
            {
                OnNumberQuotaOChanging(value);
                ReportPropertyChanging("NumberQuotaO");
                _NumberQuotaO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberQuotaO");
                OnNumberQuotaOChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberQuotaO;
        partial void OnNumberQuotaOChanging(Nullable<global::System.Int32> value);
        partial void OnNumberQuotaOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberQuotaOZ
        {
            get
            {
                return _NumberQuotaOZ;
            }
            set
            {
                OnNumberQuotaOZChanging(value);
                ReportPropertyChanging("NumberQuotaOZ");
                _NumberQuotaOZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberQuotaOZ");
                OnNumberQuotaOZChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberQuotaOZ;
        partial void OnNumberQuotaOZChanging(Nullable<global::System.Int32> value);
        partial void OnNumberQuotaOZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberQuotaZ
        {
            get
            {
                return _NumberQuotaZ;
            }
            set
            {
                OnNumberQuotaZChanging(value);
                ReportPropertyChanging("NumberQuotaZ");
                _NumberQuotaZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberQuotaZ");
                OnNumberQuotaZChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberQuotaZ;
        partial void OnNumberQuotaZChanging(Nullable<global::System.Int32> value);
        partial void OnNumberQuotaZChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CompetitiveGroupItem_CompetitiveGroup", "CompetitiveGroup")]
        public CompetitiveGroup CompetitiveGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_CompetitiveGroupItem_CompetitiveGroup", "CompetitiveGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_CompetitiveGroupItem_CompetitiveGroup", "CompetitiveGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitiveGroup> CompetitiveGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_CompetitiveGroupItem_CompetitiveGroup", "CompetitiveGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitiveGroup>("Import.FK_CompetitiveGroupItem_CompetitiveGroup", "CompetitiveGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CompetitiveGroupTargetItem_CompetitiveGroupItem", "CompetitiveGroupTargetItem")]
        public EntityCollection<CompetitiveGroupTargetItem> CompetitiveGroupTargetItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitiveGroupTargetItem>("Import.FK_CompetitiveGroupTargetItem_CompetitiveGroupItem", "CompetitiveGroupTargetItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitiveGroupTargetItem>("Import.FK_CompetitiveGroupTargetItem_CompetitiveGroupItem", "CompetitiveGroupTargetItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CompetitiveGroupItem_Direction", "Direction")]
        public Direction Direction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_CompetitiveGroupItem_Direction", "Direction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_CompetitiveGroupItem_Direction", "Direction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Direction> DirectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_CompetitiveGroupItem_Direction", "Direction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Direction>("Import.FK_CompetitiveGroupItem_Direction", "Direction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CompetitiveGroupItem_EducationLevelID", "AdmissionItemType")]
        public AdmissionItemType AdmissionItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_CompetitiveGroupItem_EducationLevelID", "AdmissionItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_CompetitiveGroupItem_EducationLevelID", "AdmissionItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdmissionItemType> AdmissionItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_CompetitiveGroupItem_EducationLevelID", "AdmissionItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdmissionItemType>("Import.FK_CompetitiveGroupItem_EducationLevelID", "AdmissionItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationSelectedCompetitiveGroupItem_CompetitiveGroupItem", "ApplicationSelectedCompetitiveGroupItem")]
        public EntityCollection<ApplicationSelectedCompetitiveGroupItem> ApplicationSelectedCompetitiveGroupItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationSelectedCompetitiveGroupItem>("Import.FK_ApplicationSelectedCompetitiveGroupItem_CompetitiveGroupItem", "ApplicationSelectedCompetitiveGroupItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationSelectedCompetitiveGroupItem>("Import.FK_ApplicationSelectedCompetitiveGroupItem_CompetitiveGroupItem", "ApplicationSelectedCompetitiveGroupItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Application_CompetitiveGroupItem", "Application")]
        public EntityCollection<Application> Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("Import.FK_Application_CompetitiveGroupItem", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("Import.FK_Application_CompetitiveGroupItem", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationCompetitiveGroupItem_CompetitiveGroupItem", "ApplicationCompetitiveGroupItem")]
        public EntityCollection<ApplicationCompetitiveGroupItem> ApplicationCompetitiveGroupItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationCompetitiveGroupItem>("Import.FK_ApplicationCompetitiveGroupItem_CompetitiveGroupItem", "ApplicationCompetitiveGroupItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationCompetitiveGroupItem>("Import.FK_ApplicationCompetitiveGroupItem_CompetitiveGroupItem", "ApplicationCompetitiveGroupItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="CompetitiveGroupTarget")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompetitiveGroupTarget : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompetitiveGroupTarget object.
        /// </summary>
        /// <param name="competitiveGroupTargetID">Initial value of the CompetitiveGroupTargetID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        public static CompetitiveGroupTarget CreateCompetitiveGroupTarget(global::System.Int32 competitiveGroupTargetID, global::System.String name, global::System.Int32 institutionID)
        {
            CompetitiveGroupTarget competitiveGroupTarget = new CompetitiveGroupTarget();
            competitiveGroupTarget.CompetitiveGroupTargetID = competitiveGroupTargetID;
            competitiveGroupTarget.Name = name;
            competitiveGroupTarget.InstitutionID = institutionID;
            return competitiveGroupTarget;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitiveGroupTargetID
        {
            get
            {
                return _CompetitiveGroupTargetID;
            }
            set
            {
                if (_CompetitiveGroupTargetID != value)
                {
                    OnCompetitiveGroupTargetIDChanging(value);
                    ReportPropertyChanging("CompetitiveGroupTargetID");
                    _CompetitiveGroupTargetID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompetitiveGroupTargetID");
                    OnCompetitiveGroupTargetIDChanged();
                }
            }
        }
        private global::System.Int32 _CompetitiveGroupTargetID;
        partial void OnCompetitiveGroupTargetIDChanging(global::System.Int32 value);
        partial void OnCompetitiveGroupTargetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.String _UID;
        partial void OnUIDChanging(global::System.String value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                OnInstitutionIDChanging(value);
                ReportPropertyChanging("InstitutionID");
                _InstitutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionID");
                OnInstitutionIDChanged();
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String INN
        {
            get
            {
                return _INN;
            }
            set
            {
                OnINNChanging(value);
                ReportPropertyChanging("INN");
                _INN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("INN");
                OnINNChanged();
            }
        }
        private global::System.String _INN;
        partial void OnINNChanging(global::System.String value);
        partial void OnINNChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CompetitiveGroupTargetItem_CompetitiveGroupTarget", "CompetitiveGroupTargetItem")]
        public EntityCollection<CompetitiveGroupTargetItem> CompetitiveGroupTargetItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitiveGroupTargetItem>("Import.FK_CompetitiveGroupTargetItem_CompetitiveGroupTarget", "CompetitiveGroupTargetItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitiveGroupTargetItem>("Import.FK_CompetitiveGroupTargetItem_CompetitiveGroupTarget", "CompetitiveGroupTargetItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationSelectedCompetitiveGroupTarget_CompetitiveGroupTarget", "ApplicationSelectedCompetitiveGroupTarget")]
        public EntityCollection<ApplicationSelectedCompetitiveGroupTarget> ApplicationSelectedCompetitiveGroupTarget
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationSelectedCompetitiveGroupTarget>("Import.FK_ApplicationSelectedCompetitiveGroupTarget_CompetitiveGroupTarget", "ApplicationSelectedCompetitiveGroupTarget");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationSelectedCompetitiveGroupTarget>("Import.FK_ApplicationSelectedCompetitiveGroupTarget_CompetitiveGroupTarget", "ApplicationSelectedCompetitiveGroupTarget", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CompetitiveGroupTarget_Institution", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_CompetitiveGroupTarget_Institution", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_CompetitiveGroupTarget_Institution", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_CompetitiveGroupTarget_Institution", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("Import.FK_CompetitiveGroupTarget_Institution", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Application_CompetitiveGroupTarget", "Application")]
        public EntityCollection<Application> Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("Import.FK_Application_CompetitiveGroupTarget", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("Import.FK_Application_CompetitiveGroupTarget", "Application", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="CompetitiveGroupTargetItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompetitiveGroupTargetItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompetitiveGroupTargetItem object.
        /// </summary>
        /// <param name="competitiveGroupTargetItemID">Initial value of the CompetitiveGroupTargetItemID property.</param>
        /// <param name="competitiveGroupTargetID">Initial value of the CompetitiveGroupTargetID property.</param>
        /// <param name="competitiveGroupItemID">Initial value of the CompetitiveGroupItemID property.</param>
        /// <param name="numberTargetO">Initial value of the NumberTargetO property.</param>
        /// <param name="numberTargetOZ">Initial value of the NumberTargetOZ property.</param>
        /// <param name="numberTargetZ">Initial value of the NumberTargetZ property.</param>
        public static CompetitiveGroupTargetItem CreateCompetitiveGroupTargetItem(global::System.Int32 competitiveGroupTargetItemID, global::System.Int32 competitiveGroupTargetID, global::System.Int32 competitiveGroupItemID, global::System.Int32 numberTargetO, global::System.Int32 numberTargetOZ, global::System.Int32 numberTargetZ)
        {
            CompetitiveGroupTargetItem competitiveGroupTargetItem = new CompetitiveGroupTargetItem();
            competitiveGroupTargetItem.CompetitiveGroupTargetItemID = competitiveGroupTargetItemID;
            competitiveGroupTargetItem.CompetitiveGroupTargetID = competitiveGroupTargetID;
            competitiveGroupTargetItem.CompetitiveGroupItemID = competitiveGroupItemID;
            competitiveGroupTargetItem.NumberTargetO = numberTargetO;
            competitiveGroupTargetItem.NumberTargetOZ = numberTargetOZ;
            competitiveGroupTargetItem.NumberTargetZ = numberTargetZ;
            return competitiveGroupTargetItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitiveGroupTargetItemID
        {
            get
            {
                return _CompetitiveGroupTargetItemID;
            }
            set
            {
                if (_CompetitiveGroupTargetItemID != value)
                {
                    OnCompetitiveGroupTargetItemIDChanging(value);
                    ReportPropertyChanging("CompetitiveGroupTargetItemID");
                    _CompetitiveGroupTargetItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompetitiveGroupTargetItemID");
                    OnCompetitiveGroupTargetItemIDChanged();
                }
            }
        }
        private global::System.Int32 _CompetitiveGroupTargetItemID;
        partial void OnCompetitiveGroupTargetItemIDChanging(global::System.Int32 value);
        partial void OnCompetitiveGroupTargetItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitiveGroupTargetID
        {
            get
            {
                return _CompetitiveGroupTargetID;
            }
            set
            {
                OnCompetitiveGroupTargetIDChanging(value);
                ReportPropertyChanging("CompetitiveGroupTargetID");
                _CompetitiveGroupTargetID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitiveGroupTargetID");
                OnCompetitiveGroupTargetIDChanged();
            }
        }
        private global::System.Int32 _CompetitiveGroupTargetID;
        partial void OnCompetitiveGroupTargetIDChanging(global::System.Int32 value);
        partial void OnCompetitiveGroupTargetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitiveGroupItemID
        {
            get
            {
                return _CompetitiveGroupItemID;
            }
            set
            {
                OnCompetitiveGroupItemIDChanging(value);
                ReportPropertyChanging("CompetitiveGroupItemID");
                _CompetitiveGroupItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitiveGroupItemID");
                OnCompetitiveGroupItemIDChanged();
            }
        }
        private global::System.Int32 _CompetitiveGroupItemID;
        partial void OnCompetitiveGroupItemIDChanging(global::System.Int32 value);
        partial void OnCompetitiveGroupItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.String _UID;
        partial void OnUIDChanging(global::System.String value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberTargetO
        {
            get
            {
                return _NumberTargetO;
            }
            set
            {
                OnNumberTargetOChanging(value);
                ReportPropertyChanging("NumberTargetO");
                _NumberTargetO = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberTargetO");
                OnNumberTargetOChanged();
            }
        }
        private global::System.Int32 _NumberTargetO;
        partial void OnNumberTargetOChanging(global::System.Int32 value);
        partial void OnNumberTargetOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberTargetOZ
        {
            get
            {
                return _NumberTargetOZ;
            }
            set
            {
                OnNumberTargetOZChanging(value);
                ReportPropertyChanging("NumberTargetOZ");
                _NumberTargetOZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberTargetOZ");
                OnNumberTargetOZChanged();
            }
        }
        private global::System.Int32 _NumberTargetOZ;
        partial void OnNumberTargetOZChanging(global::System.Int32 value);
        partial void OnNumberTargetOZChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberTargetZ
        {
            get
            {
                return _NumberTargetZ;
            }
            set
            {
                OnNumberTargetZChanging(value);
                ReportPropertyChanging("NumberTargetZ");
                _NumberTargetZ = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberTargetZ");
                OnNumberTargetZChanged();
            }
        }
        private global::System.Int32 _NumberTargetZ;
        partial void OnNumberTargetZChanging(global::System.Int32 value);
        partial void OnNumberTargetZChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CompetitiveGroupTargetItem_CompetitiveGroupItem", "CompetitiveGroupItem")]
        public CompetitiveGroupItem CompetitiveGroupItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupItem>("Import.FK_CompetitiveGroupTargetItem_CompetitiveGroupItem", "CompetitiveGroupItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupItem>("Import.FK_CompetitiveGroupTargetItem_CompetitiveGroupItem", "CompetitiveGroupItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitiveGroupItem> CompetitiveGroupItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupItem>("Import.FK_CompetitiveGroupTargetItem_CompetitiveGroupItem", "CompetitiveGroupItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitiveGroupItem>("Import.FK_CompetitiveGroupTargetItem_CompetitiveGroupItem", "CompetitiveGroupItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CompetitiveGroupTargetItem_CompetitiveGroupTarget", "CompetitiveGroupTarget")]
        public CompetitiveGroupTarget CompetitiveGroupTarget
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupTarget>("Import.FK_CompetitiveGroupTargetItem_CompetitiveGroupTarget", "CompetitiveGroupTarget").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupTarget>("Import.FK_CompetitiveGroupTargetItem_CompetitiveGroupTarget", "CompetitiveGroupTarget").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitiveGroupTarget> CompetitiveGroupTargetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroupTarget>("Import.FK_CompetitiveGroupTargetItem_CompetitiveGroupTarget", "CompetitiveGroupTarget");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitiveGroupTarget>("Import.FK_CompetitiveGroupTargetItem_CompetitiveGroupTarget", "CompetitiveGroupTarget", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="CountryType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CountryType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CountryType object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="displayOrder">Initial value of the DisplayOrder property.</param>
        /// <param name="hasRegions">Initial value of the HasRegions property.</param>
        public static CountryType CreateCountryType(global::System.Int32 countryID, global::System.String name, global::System.Int32 displayOrder, global::System.Boolean hasRegions)
        {
            CountryType countryType = new CountryType();
            countryType.CountryID = countryID;
            countryType.Name = name;
            countryType.DisplayOrder = displayOrder;
            countryType.HasRegions = hasRegions;
            return countryType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private global::System.Int32 _DisplayOrder;
        partial void OnDisplayOrderChanging(global::System.Int32 value);
        partial void OnDisplayOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasRegions
        {
            get
            {
                return _HasRegions;
            }
            set
            {
                OnHasRegionsChanging(value);
                ReportPropertyChanging("HasRegions");
                _HasRegions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasRegions");
                OnHasRegionsChanged();
            }
        }
        private global::System.Boolean _HasRegions;
        partial void OnHasRegionsChanging(global::System.Boolean value);
        partial void OnHasRegionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DigitCode
        {
            get
            {
                return _DigitCode;
            }
            set
            {
                OnDigitCodeChanging(value);
                ReportPropertyChanging("DigitCode");
                _DigitCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DigitCode");
                OnDigitCodeChanged();
            }
        }
        private global::System.String _DigitCode;
        partial void OnDigitCodeChanging(global::System.String value);
        partial void OnDigitCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Alfa2Code
        {
            get
            {
                return _Alfa2Code;
            }
            set
            {
                OnAlfa2CodeChanging(value);
                ReportPropertyChanging("Alfa2Code");
                _Alfa2Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Alfa2Code");
                OnAlfa2CodeChanged();
            }
        }
        private global::System.String _Alfa2Code;
        partial void OnAlfa2CodeChanging(global::System.String value);
        partial void OnAlfa2CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Alfa3Code
        {
            get
            {
                return _Alfa3Code;
            }
            set
            {
                OnAlfa3CodeChanging(value);
                ReportPropertyChanging("Alfa3Code");
                _Alfa3Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Alfa3Code");
                OnAlfa3CodeChanged();
            }
        }
        private global::System.String _Alfa3Code;
        partial void OnAlfa3CodeChanging(global::System.String value);
        partial void OnAlfa3CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Address_CountryType", "Address")]
        public EntityCollection<Address> Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("Import.FK_Address_CountryType", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("Import.FK_Address_CountryType", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_RegionType_CountryType", "RegionType")]
        public EntityCollection<RegionType> RegionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegionType>("Import.FK_RegionType_CountryType", "RegionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegionType>("Import.FK_RegionType_CountryType", "RegionType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="Direction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Direction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Direction object.
        /// </summary>
        /// <param name="directionID">Initial value of the DirectionID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Direction CreateDirection(global::System.Int32 directionID, global::System.String name)
        {
            Direction direction = new Direction();
            direction.DirectionID = directionID;
            direction.Name = name;
            return direction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DirectionID
        {
            get
            {
                return _DirectionID;
            }
            set
            {
                if (_DirectionID != value)
                {
                    OnDirectionIDChanging(value);
                    ReportPropertyChanging("DirectionID");
                    _DirectionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DirectionID");
                    OnDirectionIDChanged();
                }
            }
        }
        private global::System.Int32 _DirectionID;
        partial void OnDirectionIDChanging(global::System.Int32 value);
        partial void OnDirectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentID
        {
            get
            {
                return _ParentID;
            }
            set
            {
                OnParentIDChanging(value);
                ReportPropertyChanging("ParentID");
                _ParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentID");
                OnParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentID;
        partial void OnParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnParentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QUALIFICATIONCODE
        {
            get
            {
                return _QUALIFICATIONCODE;
            }
            set
            {
                OnQUALIFICATIONCODEChanging(value);
                ReportPropertyChanging("QUALIFICATIONCODE");
                _QUALIFICATIONCODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QUALIFICATIONCODE");
                OnQUALIFICATIONCODEChanged();
            }
        }
        private global::System.String _QUALIFICATIONCODE;
        partial void OnQUALIFICATIONCODEChanging(global::System.String value);
        partial void OnQUALIFICATIONCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PERIOD
        {
            get
            {
                return _PERIOD;
            }
            set
            {
                OnPERIODChanging(value);
                ReportPropertyChanging("PERIOD");
                _PERIOD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PERIOD");
                OnPERIODChanged();
            }
        }
        private global::System.String _PERIOD;
        partial void OnPERIODChanging(global::System.String value);
        partial void OnPERIODChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SYS_GUID
        {
            get
            {
                return _SYS_GUID;
            }
            set
            {
                OnSYS_GUIDChanging(value);
                ReportPropertyChanging("SYS_GUID");
                _SYS_GUID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SYS_GUID");
                OnSYS_GUIDChanged();
            }
        }
        private global::System.String _SYS_GUID;
        partial void OnSYS_GUIDChanging(global::System.String value);
        partial void OnSYS_GUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EDULEVEL
        {
            get
            {
                return _EDULEVEL;
            }
            set
            {
                OnEDULEVELChanging(value);
                ReportPropertyChanging("EDULEVEL");
                _EDULEVEL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EDULEVEL");
                OnEDULEVELChanged();
            }
        }
        private global::System.String _EDULEVEL;
        partial void OnEDULEVELChanging(global::System.String value);
        partial void OnEDULEVELChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EDUPROGRAMTYPE
        {
            get
            {
                return _EDUPROGRAMTYPE;
            }
            set
            {
                OnEDUPROGRAMTYPEChanging(value);
                ReportPropertyChanging("EDUPROGRAMTYPE");
                _EDUPROGRAMTYPE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EDUPROGRAMTYPE");
                OnEDUPROGRAMTYPEChanged();
            }
        }
        private global::System.String _EDUPROGRAMTYPE;
        partial void OnEDUPROGRAMTYPEChanging(global::System.String value);
        partial void OnEDUPROGRAMTYPEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UGSCODE
        {
            get
            {
                return _UGSCODE;
            }
            set
            {
                OnUGSCODEChanging(value);
                ReportPropertyChanging("UGSCODE");
                _UGSCODE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UGSCODE");
                OnUGSCODEChanged();
            }
        }
        private global::System.String _UGSCODE;
        partial void OnUGSCODEChanging(global::System.String value);
        partial void OnUGSCODEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UGSNAME
        {
            get
            {
                return _UGSNAME;
            }
            set
            {
                OnUGSNAMEChanging(value);
                ReportPropertyChanging("UGSNAME");
                _UGSNAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UGSNAME");
                OnUGSNAMEChanged();
            }
        }
        private global::System.String _UGSNAME;
        partial void OnUGSNAMEChanging(global::System.String value);
        partial void OnUGSNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QUALIFICATIONNAME
        {
            get
            {
                return _QUALIFICATIONNAME;
            }
            set
            {
                OnQUALIFICATIONNAMEChanging(value);
                ReportPropertyChanging("QUALIFICATIONNAME");
                _QUALIFICATIONNAME = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QUALIFICATIONNAME");
                OnQUALIFICATIONNAMEChanged();
            }
        }
        private global::System.String _QUALIFICATIONNAME;
        partial void OnQUALIFICATIONNAMEChanging(global::System.String value);
        partial void OnQUALIFICATIONNAMEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EDU_DIRECTORY
        {
            get
            {
                return _EDU_DIRECTORY;
            }
            set
            {
                OnEDU_DIRECTORYChanging(value);
                ReportPropertyChanging("EDU_DIRECTORY");
                _EDU_DIRECTORY = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EDU_DIRECTORY");
                OnEDU_DIRECTORYChanged();
            }
        }
        private global::System.String _EDU_DIRECTORY;
        partial void OnEDU_DIRECTORYChanging(global::System.String value);
        partial void OnEDU_DIRECTORYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EDUPR_ADDITIONAL
        {
            get
            {
                return _EDUPR_ADDITIONAL;
            }
            set
            {
                OnEDUPR_ADDITIONALChanging(value);
                ReportPropertyChanging("EDUPR_ADDITIONAL");
                _EDUPR_ADDITIONAL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EDUPR_ADDITIONAL");
                OnEDUPR_ADDITIONALChanged();
            }
        }
        private global::System.String _EDUPR_ADDITIONAL;
        partial void OnEDUPR_ADDITIONALChanging(global::System.String value);
        partial void OnEDUPR_ADDITIONALChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NewCode
        {
            get
            {
                return _NewCode;
            }
            set
            {
                OnNewCodeChanging(value);
                ReportPropertyChanging("NewCode");
                _NewCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NewCode");
                OnNewCodeChanged();
            }
        }
        private global::System.String _NewCode;
        partial void OnNewCodeChanging(global::System.String value);
        partial void OnNewCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_AdmissionVolume_Direction", "AdmissionVolume")]
        public EntityCollection<AdmissionVolume> AdmissionVolume
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdmissionVolume>("Import.FK_AdmissionVolume_Direction", "AdmissionVolume");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdmissionVolume>("Import.FK_AdmissionVolume_Direction", "AdmissionVolume", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CompetitiveGroupItem_Direction", "CompetitiveGroupItem")]
        public EntityCollection<CompetitiveGroupItem> CompetitiveGroupItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitiveGroupItem>("Import.FK_CompetitiveGroupItem_Direction", "CompetitiveGroupItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitiveGroupItem>("Import.FK_CompetitiveGroupItem_Direction", "CompetitiveGroupItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_AllowedDirections_Direction", "AllowedDirections")]
        public EntityCollection<AllowedDirections> AllowedDirections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AllowedDirections>("Import.FK_AllowedDirections_Direction", "AllowedDirections");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AllowedDirections>("Import.FK_AllowedDirections_Direction", "AllowedDirections", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_DirectionSubjectLinkDirection_Direction", "DirectionSubjectLinkDirection")]
        public EntityCollection<DirectionSubjectLinkDirection> DirectionSubjectLinkDirection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DirectionSubjectLinkDirection>("Import.FK_DirectionSubjectLinkDirection_Direction", "DirectionSubjectLinkDirection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DirectionSubjectLinkDirection>("Import.FK_DirectionSubjectLinkDirection_Direction", "DirectionSubjectLinkDirection", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_EntranceTestCreativeDirections_Direction", "EntranceTestCreativeDirection")]
        public EntranceTestCreativeDirection EntranceTestCreativeDirection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntranceTestCreativeDirection>("Import.FK_EntranceTestCreativeDirections_Direction", "EntranceTestCreativeDirection").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntranceTestCreativeDirection>("Import.FK_EntranceTestCreativeDirections_Direction", "EntranceTestCreativeDirection").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntranceTestCreativeDirection> EntranceTestCreativeDirectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntranceTestCreativeDirection>("Import.FK_EntranceTestCreativeDirections_Direction", "EntranceTestCreativeDirection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EntranceTestCreativeDirection>("Import.FK_EntranceTestCreativeDirections_Direction", "EntranceTestCreativeDirection", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_EntranceTestProfileDirections_Direction", "EntranceTestProfileDirection")]
        public EntityCollection<EntranceTestProfileDirection> EntranceTestProfileDirection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntranceTestProfileDirection>("Import.FK_EntranceTestProfileDirections_Direction", "EntranceTestProfileDirection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntranceTestProfileDirection>("Import.FK_EntranceTestProfileDirections_Direction", "EntranceTestProfileDirection", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Direction_ParentDirection", "ParentDirection")]
        public ParentDirection ParentDirection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParentDirection>("Import.FK_Direction_ParentDirection", "ParentDirection").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParentDirection>("Import.FK_Direction_ParentDirection", "ParentDirection").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParentDirection> ParentDirectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParentDirection>("Import.FK_Direction_ParentDirection", "ParentDirection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParentDirection>("Import.FK_Direction_ParentDirection", "ParentDirection", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_RecomendedLists_Direction1", "RecomendedLists")]
        public EntityCollection<RecomendedLists> RecomendedLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RecomendedLists>("Import.FK_RecomendedLists_Direction1", "RecomendedLists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RecomendedLists>("Import.FK_RecomendedLists_Direction1", "RecomendedLists", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="DirectionSubjectLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DirectionSubjectLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DirectionSubjectLink object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static DirectionSubjectLink CreateDirectionSubjectLink(global::System.Int32 id)
        {
            DirectionSubjectLink directionSubjectLink = new DirectionSubjectLink();
            directionSubjectLink.ID = id;
            return directionSubjectLink;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProfileSubjectID
        {
            get
            {
                return _ProfileSubjectID;
            }
            set
            {
                OnProfileSubjectIDChanging(value);
                ReportPropertyChanging("ProfileSubjectID");
                _ProfileSubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileSubjectID");
                OnProfileSubjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProfileSubjectID;
        partial void OnProfileSubjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProfileSubjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_DirectionSubjectLink_Subject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_DirectionSubjectLink_Subject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_DirectionSubjectLink_Subject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_DirectionSubjectLink_Subject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("Import.FK_DirectionSubjectLink_Subject", "Subject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_DirectionSubjectLinkDirection_DirectionSubjectLink", "DirectionSubjectLinkDirection")]
        public EntityCollection<DirectionSubjectLinkDirection> DirectionSubjectLinkDirection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DirectionSubjectLinkDirection>("Import.FK_DirectionSubjectLinkDirection_DirectionSubjectLink", "DirectionSubjectLinkDirection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DirectionSubjectLinkDirection>("Import.FK_DirectionSubjectLinkDirection_DirectionSubjectLink", "DirectionSubjectLinkDirection", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_DirectionSubjectLinkSubject_DirectionSubjectLink", "DirectionSubjectLinkSubject")]
        public EntityCollection<DirectionSubjectLinkSubject> DirectionSubjectLinkSubject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DirectionSubjectLinkSubject>("Import.FK_DirectionSubjectLinkSubject_DirectionSubjectLink", "DirectionSubjectLinkSubject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DirectionSubjectLinkSubject>("Import.FK_DirectionSubjectLinkSubject_DirectionSubjectLink", "DirectionSubjectLinkSubject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="DirectionSubjectLinkDirection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DirectionSubjectLinkDirection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DirectionSubjectLinkDirection object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="directionID">Initial value of the DirectionID property.</param>
        /// <param name="linkID">Initial value of the LinkID property.</param>
        public static DirectionSubjectLinkDirection CreateDirectionSubjectLinkDirection(global::System.Int32 id, global::System.Int32 directionID, global::System.Int32 linkID)
        {
            DirectionSubjectLinkDirection directionSubjectLinkDirection = new DirectionSubjectLinkDirection();
            directionSubjectLinkDirection.ID = id;
            directionSubjectLinkDirection.DirectionID = directionID;
            directionSubjectLinkDirection.LinkID = linkID;
            return directionSubjectLinkDirection;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DirectionID
        {
            get
            {
                return _DirectionID;
            }
            set
            {
                OnDirectionIDChanging(value);
                ReportPropertyChanging("DirectionID");
                _DirectionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DirectionID");
                OnDirectionIDChanged();
            }
        }
        private global::System.Int32 _DirectionID;
        partial void OnDirectionIDChanging(global::System.Int32 value);
        partial void OnDirectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LinkID
        {
            get
            {
                return _LinkID;
            }
            set
            {
                OnLinkIDChanging(value);
                ReportPropertyChanging("LinkID");
                _LinkID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LinkID");
                OnLinkIDChanged();
            }
        }
        private global::System.Int32 _LinkID;
        partial void OnLinkIDChanging(global::System.Int32 value);
        partial void OnLinkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_DirectionSubjectLinkDirection_Direction", "Direction")]
        public Direction Direction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_DirectionSubjectLinkDirection_Direction", "Direction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_DirectionSubjectLinkDirection_Direction", "Direction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Direction> DirectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_DirectionSubjectLinkDirection_Direction", "Direction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Direction>("Import.FK_DirectionSubjectLinkDirection_Direction", "Direction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_DirectionSubjectLinkDirection_DirectionSubjectLink", "DirectionSubjectLink")]
        public DirectionSubjectLink DirectionSubjectLink
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectionSubjectLink>("Import.FK_DirectionSubjectLinkDirection_DirectionSubjectLink", "DirectionSubjectLink").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectionSubjectLink>("Import.FK_DirectionSubjectLinkDirection_DirectionSubjectLink", "DirectionSubjectLink").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DirectionSubjectLink> DirectionSubjectLinkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectionSubjectLink>("Import.FK_DirectionSubjectLinkDirection_DirectionSubjectLink", "DirectionSubjectLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DirectionSubjectLink>("Import.FK_DirectionSubjectLinkDirection_DirectionSubjectLink", "DirectionSubjectLink", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="DirectionSubjectLinkSubject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DirectionSubjectLinkSubject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DirectionSubjectLinkSubject object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="subjectID">Initial value of the SubjectID property.</param>
        /// <param name="linkID">Initial value of the LinkID property.</param>
        public static DirectionSubjectLinkSubject CreateDirectionSubjectLinkSubject(global::System.Int32 id, global::System.Int32 subjectID, global::System.Int32 linkID)
        {
            DirectionSubjectLinkSubject directionSubjectLinkSubject = new DirectionSubjectLinkSubject();
            directionSubjectLinkSubject.ID = id;
            directionSubjectLinkSubject.SubjectID = subjectID;
            directionSubjectLinkSubject.LinkID = linkID;
            return directionSubjectLinkSubject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private global::System.Int32 _SubjectID;
        partial void OnSubjectIDChanging(global::System.Int32 value);
        partial void OnSubjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LinkID
        {
            get
            {
                return _LinkID;
            }
            set
            {
                OnLinkIDChanging(value);
                ReportPropertyChanging("LinkID");
                _LinkID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LinkID");
                OnLinkIDChanged();
            }
        }
        private global::System.Int32 _LinkID;
        partial void OnLinkIDChanging(global::System.Int32 value);
        partial void OnLinkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_DirectionSubjectLinkDirection_Subject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_DirectionSubjectLinkDirection_Subject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_DirectionSubjectLinkDirection_Subject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_DirectionSubjectLinkDirection_Subject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("Import.FK_DirectionSubjectLinkDirection_Subject", "Subject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_DirectionSubjectLinkSubject_Subject", "Subject")]
        public Subject Subject1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_DirectionSubjectLinkSubject_Subject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_DirectionSubjectLinkSubject_Subject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> Subject1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_DirectionSubjectLinkSubject_Subject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("Import.FK_DirectionSubjectLinkSubject_Subject", "Subject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_DirectionSubjectLinkSubject_DirectionSubjectLink", "DirectionSubjectLink")]
        public DirectionSubjectLink DirectionSubjectLink
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectionSubjectLink>("Import.FK_DirectionSubjectLinkSubject_DirectionSubjectLink", "DirectionSubjectLink").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectionSubjectLink>("Import.FK_DirectionSubjectLinkSubject_DirectionSubjectLink", "DirectionSubjectLink").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DirectionSubjectLink> DirectionSubjectLinkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DirectionSubjectLink>("Import.FK_DirectionSubjectLinkSubject_DirectionSubjectLink", "DirectionSubjectLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DirectionSubjectLink>("Import.FK_DirectionSubjectLinkSubject_DirectionSubjectLink", "DirectionSubjectLink", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="DisabilityType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisabilityType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisabilityType object.
        /// </summary>
        /// <param name="disabilityID">Initial value of the DisabilityID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static DisabilityType CreateDisabilityType(global::System.Int32 disabilityID, global::System.String name)
        {
            DisabilityType disabilityType = new DisabilityType();
            disabilityType.DisabilityID = disabilityID;
            disabilityType.Name = name;
            return disabilityType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisabilityID
        {
            get
            {
                return _DisabilityID;
            }
            set
            {
                if (_DisabilityID != value)
                {
                    OnDisabilityIDChanging(value);
                    ReportPropertyChanging("DisabilityID");
                    _DisabilityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DisabilityID");
                    OnDisabilityIDChanged();
                }
            }
        }
        private global::System.Int32 _DisabilityID;
        partial void OnDisabilityIDChanging(global::System.Int32 value);
        partial void OnDisabilityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="DocumentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentType object.
        /// </summary>
        /// <param name="documentID">Initial value of the DocumentID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static DocumentType CreateDocumentType(global::System.Int32 documentID, global::System.String name)
        {
            DocumentType documentType = new DocumentType();
            documentType.DocumentID = documentID;
            documentType.Name = name;
            return documentType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentID
        {
            get
            {
                return _DocumentID;
            }
            set
            {
                if (_DocumentID != value)
                {
                    OnDocumentIDChanging(value);
                    ReportPropertyChanging("DocumentID");
                    _DocumentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DocumentID");
                    OnDocumentIDChanged();
                }
            }
        }
        private global::System.Int32 _DocumentID;
        partial void OnDocumentIDChanging(global::System.Int32 value);
        partial void OnDocumentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_EntrantDocument_DocumentType", "EntrantDocument")]
        public EntityCollection<EntrantDocument> EntrantDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntrantDocument>("Import.FK_EntrantDocument_DocumentType", "EntrantDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntrantDocument>("Import.FK_EntrantDocument_DocumentType", "EntrantDocument", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="EntranceTestCreativeDirection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntranceTestCreativeDirection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EntranceTestCreativeDirection object.
        /// </summary>
        /// <param name="directionID">Initial value of the DirectionID property.</param>
        public static EntranceTestCreativeDirection CreateEntranceTestCreativeDirection(global::System.Int32 directionID)
        {
            EntranceTestCreativeDirection entranceTestCreativeDirection = new EntranceTestCreativeDirection();
            entranceTestCreativeDirection.DirectionID = directionID;
            return entranceTestCreativeDirection;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DirectionID
        {
            get
            {
                return _DirectionID;
            }
            set
            {
                if (_DirectionID != value)
                {
                    OnDirectionIDChanging(value);
                    ReportPropertyChanging("DirectionID");
                    _DirectionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DirectionID");
                    OnDirectionIDChanged();
                }
            }
        }
        private global::System.Int32 _DirectionID;
        partial void OnDirectionIDChanging(global::System.Int32 value);
        partial void OnDirectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_EntranceTestCreativeDirections_Direction", "Direction")]
        public Direction Direction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_EntranceTestCreativeDirections_Direction", "Direction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_EntranceTestCreativeDirections_Direction", "Direction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Direction> DirectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_EntranceTestCreativeDirections_Direction", "Direction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Direction>("Import.FK_EntranceTestCreativeDirections_Direction", "Direction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="EntranceTestItemC")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntranceTestItemC : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EntranceTestItemC object.
        /// </summary>
        /// <param name="entranceTestItemID">Initial value of the EntranceTestItemID property.</param>
        /// <param name="competitiveGroupID">Initial value of the CompetitiveGroupID property.</param>
        /// <param name="entranceTestTypeID">Initial value of the EntranceTestTypeID property.</param>
        /// <param name="form">Initial value of the Form property.</param>
        public static EntranceTestItemC CreateEntranceTestItemC(global::System.Int32 entranceTestItemID, global::System.Int32 competitiveGroupID, global::System.Int16 entranceTestTypeID, global::System.String form)
        {
            EntranceTestItemC entranceTestItemC = new EntranceTestItemC();
            entranceTestItemC.EntranceTestItemID = entranceTestItemID;
            entranceTestItemC.CompetitiveGroupID = competitiveGroupID;
            entranceTestItemC.EntranceTestTypeID = entranceTestTypeID;
            entranceTestItemC.Form = form;
            return entranceTestItemC;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntranceTestItemID
        {
            get
            {
                return _EntranceTestItemID;
            }
            set
            {
                if (_EntranceTestItemID != value)
                {
                    OnEntranceTestItemIDChanging(value);
                    ReportPropertyChanging("EntranceTestItemID");
                    _EntranceTestItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EntranceTestItemID");
                    OnEntranceTestItemIDChanged();
                }
            }
        }
        private global::System.Int32 _EntranceTestItemID;
        partial void OnEntranceTestItemIDChanging(global::System.Int32 value);
        partial void OnEntranceTestItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitiveGroupID
        {
            get
            {
                return _CompetitiveGroupID;
            }
            set
            {
                OnCompetitiveGroupIDChanging(value);
                ReportPropertyChanging("CompetitiveGroupID");
                _CompetitiveGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitiveGroupID");
                OnCompetitiveGroupIDChanged();
            }
        }
        private global::System.Int32 _CompetitiveGroupID;
        partial void OnCompetitiveGroupIDChanging(global::System.Int32 value);
        partial void OnCompetitiveGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 EntranceTestTypeID
        {
            get
            {
                return _EntranceTestTypeID;
            }
            set
            {
                OnEntranceTestTypeIDChanging(value);
                ReportPropertyChanging("EntranceTestTypeID");
                _EntranceTestTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntranceTestTypeID");
                OnEntranceTestTypeIDChanged();
            }
        }
        private global::System.Int16 _EntranceTestTypeID;
        partial void OnEntranceTestTypeIDChanging(global::System.Int16 value);
        partial void OnEntranceTestTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Form
        {
            get
            {
                return _Form;
            }
            set
            {
                OnFormChanging(value);
                ReportPropertyChanging("Form");
                _Form = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Form");
                OnFormChanged();
            }
        }
        private global::System.String _Form;
        partial void OnFormChanging(global::System.String value);
        partial void OnFormChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MinScore
        {
            get
            {
                return _MinScore;
            }
            set
            {
                OnMinScoreChanging(value);
                ReportPropertyChanging("MinScore");
                _MinScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinScore");
                OnMinScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _MinScore;
        partial void OnMinScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnMinScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SubjectID;
        partial void OnSubjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnSubjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubjectName
        {
            get
            {
                return _SubjectName;
            }
            set
            {
                OnSubjectNameChanging(value);
                ReportPropertyChanging("SubjectName");
                _SubjectName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubjectName");
                OnSubjectNameChanged();
            }
        }
        private global::System.String _SubjectName;
        partial void OnSubjectNameChanging(global::System.String value);
        partial void OnSubjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.String _UID;
        partial void OnUIDChanging(global::System.String value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EntranceTestPriority
        {
            get
            {
                return _EntranceTestPriority;
            }
            set
            {
                OnEntranceTestPriorityChanging(value);
                ReportPropertyChanging("EntranceTestPriority");
                _EntranceTestPriority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntranceTestPriority");
                OnEntranceTestPriorityChanged();
            }
        }
        private Nullable<global::System.Int32> _EntranceTestPriority;
        partial void OnEntranceTestPriorityChanging(Nullable<global::System.Int32> value);
        partial void OnEntranceTestPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsFirst
        {
            get
            {
                return _IsFirst;
            }
            set
            {
                OnIsFirstChanging(value);
                ReportPropertyChanging("IsFirst");
                _IsFirst = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFirst");
                OnIsFirstChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsFirst;
        partial void OnIsFirstChanging(Nullable<global::System.Boolean> value);
        partial void OnIsFirstChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSecond
        {
            get
            {
                return _IsSecond;
            }
            set
            {
                OnIsSecondChanging(value);
                ReportPropertyChanging("IsSecond");
                _IsSecond = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSecond");
                OnIsSecondChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSecond;
        partial void OnIsSecondChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSecondChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntranceTestDocument_EntranceTestItemC", "ApplicationEntranceTestDocument")]
        public EntityCollection<ApplicationEntranceTestDocument> ApplicationEntranceTestDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationEntranceTestDocument>("Import.FK_ApplicationEntranceTestDocument_EntranceTestItemC", "ApplicationEntranceTestDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationEntranceTestDocument>("Import.FK_ApplicationEntranceTestDocument_EntranceTestItemC", "ApplicationEntranceTestDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_BenefitItem_EntranceTestItemC", "BenefitItemC")]
        public EntityCollection<BenefitItemC> BenefitItemC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitItemC>("Import.FK_BenefitItem_EntranceTestItemC", "BenefitItemC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitItemC>("Import.FK_BenefitItem_EntranceTestItemC", "BenefitItemC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_EntranceTestItemC_CompetitiveGroupID", "CompetitiveGroup")]
        public CompetitiveGroup CompetitiveGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_EntranceTestItemC_CompetitiveGroupID", "CompetitiveGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_EntranceTestItemC_CompetitiveGroupID", "CompetitiveGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitiveGroup> CompetitiveGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_EntranceTestItemC_CompetitiveGroupID", "CompetitiveGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitiveGroup>("Import.FK_EntranceTestItemC_CompetitiveGroupID", "CompetitiveGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_EntranceTestItemC_EntranceTestType", "EntranceTestType")]
        public EntranceTestType EntranceTestType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntranceTestType>("Import.FK_EntranceTestItemC_EntranceTestType", "EntranceTestType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntranceTestType>("Import.FK_EntranceTestItemC_EntranceTestType", "EntranceTestType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntranceTestType> EntranceTestTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntranceTestType>("Import.FK_EntranceTestItemC_EntranceTestType", "EntranceTestType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EntranceTestType>("Import.FK_EntranceTestItemC_EntranceTestType", "EntranceTestType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_EntranceTestItemC_Subject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_EntranceTestItemC_Subject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_EntranceTestItemC_Subject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_EntranceTestItemC_Subject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("Import.FK_EntranceTestItemC_Subject", "Subject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="EntranceTestProfileDirection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntranceTestProfileDirection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EntranceTestProfileDirection object.
        /// </summary>
        /// <param name="profileDirectionID">Initial value of the ProfileDirectionID property.</param>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        /// <param name="directionID">Initial value of the DirectionID property.</param>
        public static EntranceTestProfileDirection CreateEntranceTestProfileDirection(global::System.Int32 profileDirectionID, global::System.Int32 institutionID, global::System.Int32 directionID)
        {
            EntranceTestProfileDirection entranceTestProfileDirection = new EntranceTestProfileDirection();
            entranceTestProfileDirection.ProfileDirectionID = profileDirectionID;
            entranceTestProfileDirection.InstitutionID = institutionID;
            entranceTestProfileDirection.DirectionID = directionID;
            return entranceTestProfileDirection;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileDirectionID
        {
            get
            {
                return _ProfileDirectionID;
            }
            set
            {
                if (_ProfileDirectionID != value)
                {
                    OnProfileDirectionIDChanging(value);
                    ReportPropertyChanging("ProfileDirectionID");
                    _ProfileDirectionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProfileDirectionID");
                    OnProfileDirectionIDChanged();
                }
            }
        }
        private global::System.Int32 _ProfileDirectionID;
        partial void OnProfileDirectionIDChanging(global::System.Int32 value);
        partial void OnProfileDirectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                OnInstitutionIDChanging(value);
                ReportPropertyChanging("InstitutionID");
                _InstitutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionID");
                OnInstitutionIDChanged();
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DirectionID
        {
            get
            {
                return _DirectionID;
            }
            set
            {
                OnDirectionIDChanging(value);
                ReportPropertyChanging("DirectionID");
                _DirectionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DirectionID");
                OnDirectionIDChanged();
            }
        }
        private global::System.Int32 _DirectionID;
        partial void OnDirectionIDChanging(global::System.Int32 value);
        partial void OnDirectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_EntranceTestProfileDirections_Direction", "Direction")]
        public Direction Direction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_EntranceTestProfileDirections_Direction", "Direction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_EntranceTestProfileDirections_Direction", "Direction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Direction> DirectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_EntranceTestProfileDirections_Direction", "Direction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Direction>("Import.FK_EntranceTestProfileDirections_Direction", "Direction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_EntranceTestProfileDirections_Institution", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_EntranceTestProfileDirections_Institution", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_EntranceTestProfileDirections_Institution", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_EntranceTestProfileDirections_Institution", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("Import.FK_EntranceTestProfileDirections_Institution", "Institution", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="EntranceTestResultSource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntranceTestResultSource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EntranceTestResultSource object.
        /// </summary>
        /// <param name="sourceID">Initial value of the SourceID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static EntranceTestResultSource CreateEntranceTestResultSource(global::System.Int32 sourceID, global::System.String description)
        {
            EntranceTestResultSource entranceTestResultSource = new EntranceTestResultSource();
            entranceTestResultSource.SourceID = sourceID;
            entranceTestResultSource.Description = description;
            return entranceTestResultSource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SourceID
        {
            get
            {
                return _SourceID;
            }
            set
            {
                if (_SourceID != value)
                {
                    OnSourceIDChanging(value);
                    ReportPropertyChanging("SourceID");
                    _SourceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SourceID");
                    OnSourceIDChanged();
                }
            }
        }
        private global::System.Int32 _SourceID;
        partial void OnSourceIDChanging(global::System.Int32 value);
        partial void OnSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntranceTestDocument_EntranceTestResultSource", "ApplicationEntranceTestDocument")]
        public EntityCollection<ApplicationEntranceTestDocument> ApplicationEntranceTestDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationEntranceTestDocument>("Import.FK_ApplicationEntranceTestDocument_EntranceTestResultSource", "ApplicationEntranceTestDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationEntranceTestDocument>("Import.FK_ApplicationEntranceTestDocument_EntranceTestResultSource", "ApplicationEntranceTestDocument", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="EntranceTestType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntranceTestType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EntranceTestType object.
        /// </summary>
        /// <param name="entranceTestTypeID">Initial value of the EntranceTestTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static EntranceTestType CreateEntranceTestType(global::System.Int16 entranceTestTypeID, global::System.String name)
        {
            EntranceTestType entranceTestType = new EntranceTestType();
            entranceTestType.EntranceTestTypeID = entranceTestTypeID;
            entranceTestType.Name = name;
            return entranceTestType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 EntranceTestTypeID
        {
            get
            {
                return _EntranceTestTypeID;
            }
            set
            {
                if (_EntranceTestTypeID != value)
                {
                    OnEntranceTestTypeIDChanging(value);
                    ReportPropertyChanging("EntranceTestTypeID");
                    _EntranceTestTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EntranceTestTypeID");
                    OnEntranceTestTypeIDChanged();
                }
            }
        }
        private global::System.Int16 _EntranceTestTypeID;
        partial void OnEntranceTestTypeIDChanging(global::System.Int16 value);
        partial void OnEntranceTestTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntranceTestDocument_EntranceTestType", "ApplicationEntranceTestDocument")]
        public EntityCollection<ApplicationEntranceTestDocument> ApplicationEntranceTestDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationEntranceTestDocument>("Import.FK_ApplicationEntranceTestDocument_EntranceTestType", "ApplicationEntranceTestDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationEntranceTestDocument>("Import.FK_ApplicationEntranceTestDocument_EntranceTestType", "ApplicationEntranceTestDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_EntranceTestItemC_EntranceTestType", "EntranceTestItemC")]
        public EntityCollection<EntranceTestItemC> EntranceTestItemC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntranceTestItemC>("Import.FK_EntranceTestItemC_EntranceTestType", "EntranceTestItemC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntranceTestItemC>("Import.FK_EntranceTestItemC_EntranceTestType", "EntranceTestItemC", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="Entrant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Entrant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Entrant object.
        /// </summary>
        /// <param name="entrantID">Initial value of the EntrantID property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="genderID">Initial value of the GenderID property.</param>
        public static Entrant CreateEntrant(global::System.Int32 entrantID, global::System.String lastName, global::System.String firstName, global::System.Int32 genderID)
        {
            Entrant entrant = new Entrant();
            entrant.EntrantID = entrantID;
            entrant.LastName = lastName;
            entrant.FirstName = firstName;
            entrant.GenderID = genderID;
            return entrant;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntrantID
        {
            get
            {
                return _EntrantID;
            }
            set
            {
                if (_EntrantID != value)
                {
                    OnEntrantIDChanging(value);
                    ReportPropertyChanging("EntrantID");
                    _EntrantID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EntrantID");
                    OnEntrantIDChanged();
                }
            }
        }
        private global::System.Int32 _EntrantID;
        partial void OnEntrantIDChanging(global::System.Int32 value);
        partial void OnEntrantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IdentityDocumentID
        {
            get
            {
                return _IdentityDocumentID;
            }
            set
            {
                OnIdentityDocumentIDChanging(value);
                ReportPropertyChanging("IdentityDocumentID");
                _IdentityDocumentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdentityDocumentID");
                OnIdentityDocumentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _IdentityDocumentID;
        partial void OnIdentityDocumentIDChanging(Nullable<global::System.Int32> value);
        partial void OnIdentityDocumentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomInformation
        {
            get
            {
                return _CustomInformation;
            }
            set
            {
                OnCustomInformationChanging(value);
                ReportPropertyChanging("CustomInformation");
                _CustomInformation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomInformation");
                OnCustomInformationChanged();
            }
        }
        private global::System.String _CustomInformation;
        partial void OnCustomInformationChanging(global::System.String value);
        partial void OnCustomInformationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SNILS
        {
            get
            {
                return _SNILS;
            }
            set
            {
                OnSNILSChanging(value);
                ReportPropertyChanging("SNILS");
                _SNILS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SNILS");
                OnSNILSChanged();
            }
        }
        private global::System.String _SNILS;
        partial void OnSNILSChanging(global::System.String value);
        partial void OnSNILSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegistrationAddressID
        {
            get
            {
                return _RegistrationAddressID;
            }
            set
            {
                OnRegistrationAddressIDChanging(value);
                ReportPropertyChanging("RegistrationAddressID");
                _RegistrationAddressID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationAddressID");
                OnRegistrationAddressIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RegistrationAddressID;
        partial void OnRegistrationAddressIDChanging(Nullable<global::System.Int32> value);
        partial void OnRegistrationAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FactAddressID
        {
            get
            {
                return _FactAddressID;
            }
            set
            {
                OnFactAddressIDChanging(value);
                ReportPropertyChanging("FactAddressID");
                _FactAddressID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FactAddressID");
                OnFactAddressIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FactAddressID;
        partial void OnFactAddressIDChanging(Nullable<global::System.Int32> value);
        partial void OnFactAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePhone
        {
            get
            {
                return _MobilePhone;
            }
            set
            {
                OnMobilePhoneChanging(value);
                ReportPropertyChanging("MobilePhone");
                _MobilePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePhone");
                OnMobilePhoneChanged();
            }
        }
        private global::System.String _MobilePhone;
        partial void OnMobilePhoneChanging(global::System.String value);
        partial void OnMobilePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.String _UID;
        partial void OnUIDChanging(global::System.String value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                OnInstitutionIDChanging(value);
                ReportPropertyChanging("InstitutionID");
                _InstitutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionID");
                OnInstitutionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InstitutionID;
        partial void OnInstitutionIDChanging(Nullable<global::System.Int32> value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenderID
        {
            get
            {
                return _GenderID;
            }
            set
            {
                OnGenderIDChanging(value);
                ReportPropertyChanging("GenderID");
                _GenderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenderID");
                OnGenderIDChanged();
            }
        }
        private global::System.Int32 _GenderID;
        partial void OnGenderIDChanging(global::System.Int32 value);
        partial void OnGenderIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Entrant_Address_Fact", "Address")]
        public Address AddressFact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("Import.FK_Entrant_Address_Fact", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("Import.FK_Entrant_Address_Fact", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressFactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("Import.FK_Entrant_Address_Fact", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("Import.FK_Entrant_Address_Fact", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Entrant_Address_Registration", "Address")]
        public Address AddressReg
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("Import.FK_Entrant_Address_Registration", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("Import.FK_Entrant_Address_Registration", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressRegReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("Import.FK_Entrant_Address_Registration", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("Import.FK_Entrant_Address_Registration", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Entrant_EntrantDocument", "EntrantDocument")]
        public EntrantDocument EntrantDocument_Identity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntrantDocument>("Import.FK_Entrant_EntrantDocument", "EntrantDocument").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntrantDocument>("Import.FK_Entrant_EntrantDocument", "EntrantDocument").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EntrantDocument> EntrantDocument_IdentityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EntrantDocument>("Import.FK_Entrant_EntrantDocument", "EntrantDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EntrantDocument>("Import.FK_Entrant_EntrantDocument", "EntrantDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Entrant_Institution", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_Entrant_Institution", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_Entrant_Institution", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_Entrant_Institution", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("Import.FK_Entrant_Institution", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_EntrantDocument_Entrant", "EntrantDocument")]
        public EntityCollection<EntrantDocument> EntrantDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntrantDocument>("Import.FK_EntrantDocument_Entrant", "EntrantDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntrantDocument>("Import.FK_EntrantDocument_Entrant", "EntrantDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_EntrantLanguage_Entrant", "EntrantLanguage")]
        public EntityCollection<EntrantLanguage> EntrantLanguage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntrantLanguage>("Import.FK_EntrantLanguage_Entrant", "EntrantLanguage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntrantLanguage>("Import.FK_EntrantLanguage_Entrant", "EntrantLanguage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Application_Entrant", "Application")]
        public EntityCollection<Application> Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("Import.FK_Application_Entrant", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("Import.FK_Application_Entrant", "Application", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="EntrantDocument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntrantDocument : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EntrantDocument object.
        /// </summary>
        /// <param name="entrantDocumentID">Initial value of the EntrantDocumentID property.</param>
        /// <param name="entrantID">Initial value of the EntrantID property.</param>
        /// <param name="documentSpecificData">Initial value of the DocumentSpecificData property.</param>
        /// <param name="documentTypeID">Initial value of the DocumentTypeID property.</param>
        public static EntrantDocument CreateEntrantDocument(global::System.Int32 entrantDocumentID, global::System.Int32 entrantID, global::System.String documentSpecificData, global::System.Int32 documentTypeID)
        {
            EntrantDocument entrantDocument = new EntrantDocument();
            entrantDocument.EntrantDocumentID = entrantDocumentID;
            entrantDocument.EntrantID = entrantID;
            entrantDocument.DocumentSpecificData = documentSpecificData;
            entrantDocument.DocumentTypeID = documentTypeID;
            return entrantDocument;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntrantDocumentID
        {
            get
            {
                return _EntrantDocumentID;
            }
            set
            {
                if (_EntrantDocumentID != value)
                {
                    OnEntrantDocumentIDChanging(value);
                    ReportPropertyChanging("EntrantDocumentID");
                    _EntrantDocumentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EntrantDocumentID");
                    OnEntrantDocumentIDChanged();
                }
            }
        }
        private global::System.Int32 _EntrantDocumentID;
        partial void OnEntrantDocumentIDChanging(global::System.Int32 value);
        partial void OnEntrantDocumentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntrantID
        {
            get
            {
                return _EntrantID;
            }
            set
            {
                OnEntrantIDChanging(value);
                ReportPropertyChanging("EntrantID");
                _EntrantID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntrantID");
                OnEntrantIDChanged();
            }
        }
        private global::System.Int32 _EntrantID;
        partial void OnEntrantIDChanging(global::System.Int32 value);
        partial void OnEntrantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentSeries
        {
            get
            {
                return _DocumentSeries;
            }
            set
            {
                OnDocumentSeriesChanging(value);
                ReportPropertyChanging("DocumentSeries");
                _DocumentSeries = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentSeries");
                OnDocumentSeriesChanged();
            }
        }
        private global::System.String _DocumentSeries;
        partial void OnDocumentSeriesChanging(global::System.String value);
        partial void OnDocumentSeriesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentNumber
        {
            get
            {
                return _DocumentNumber;
            }
            set
            {
                OnDocumentNumberChanging(value);
                ReportPropertyChanging("DocumentNumber");
                _DocumentNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentNumber");
                OnDocumentNumberChanged();
            }
        }
        private global::System.String _DocumentNumber;
        partial void OnDocumentNumberChanging(global::System.String value);
        partial void OnDocumentNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DocumentDate
        {
            get
            {
                return _DocumentDate;
            }
            set
            {
                OnDocumentDateChanging(value);
                ReportPropertyChanging("DocumentDate");
                _DocumentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentDate");
                OnDocumentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DocumentDate;
        partial void OnDocumentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDocumentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocumentOrganization
        {
            get
            {
                return _DocumentOrganization;
            }
            set
            {
                OnDocumentOrganizationChanging(value);
                ReportPropertyChanging("DocumentOrganization");
                _DocumentOrganization = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocumentOrganization");
                OnDocumentOrganizationChanged();
            }
        }
        private global::System.String _DocumentOrganization;
        partial void OnDocumentOrganizationChanging(global::System.String value);
        partial void OnDocumentOrganizationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentSpecificData
        {
            get
            {
                return _DocumentSpecificData;
            }
            set
            {
                OnDocumentSpecificDataChanging(value);
                ReportPropertyChanging("DocumentSpecificData");
                _DocumentSpecificData = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DocumentSpecificData");
                OnDocumentSpecificDataChanged();
            }
        }
        private global::System.String _DocumentSpecificData;
        partial void OnDocumentSpecificDataChanging(global::System.String value);
        partial void OnDocumentSpecificDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AttachmentID
        {
            get
            {
                return _AttachmentID;
            }
            set
            {
                OnAttachmentIDChanging(value);
                ReportPropertyChanging("AttachmentID");
                _AttachmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttachmentID");
                OnAttachmentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AttachmentID;
        partial void OnAttachmentIDChanging(Nullable<global::System.Int32> value);
        partial void OnAttachmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentTypeID
        {
            get
            {
                return _DocumentTypeID;
            }
            set
            {
                OnDocumentTypeIDChanging(value);
                ReportPropertyChanging("DocumentTypeID");
                _DocumentTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentTypeID");
                OnDocumentTypeIDChanged();
            }
        }
        private global::System.Int32 _DocumentTypeID;
        partial void OnDocumentTypeIDChanging(global::System.Int32 value);
        partial void OnDocumentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.String _UID;
        partial void OnUIDChanging(global::System.String value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntranceTestDocument_EntrantDocument", "ApplicationEntranceTestDocument")]
        public EntityCollection<ApplicationEntranceTestDocument> ApplicationEntranceTestDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationEntranceTestDocument>("Import.FK_ApplicationEntranceTestDocument_EntrantDocument", "ApplicationEntranceTestDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationEntranceTestDocument>("Import.FK_ApplicationEntranceTestDocument_EntrantDocument", "ApplicationEntranceTestDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntrantDocument_EntrantDocument", "ApplicationEntrantDocument")]
        public EntityCollection<ApplicationEntrantDocument> ApplicationEntrantDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationEntrantDocument>("Import.FK_ApplicationEntrantDocument_EntrantDocument", "ApplicationEntrantDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationEntrantDocument>("Import.FK_ApplicationEntrantDocument_EntrantDocument", "ApplicationEntrantDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_EntrantDocument_DocumentType", "DocumentType")]
        public DocumentType DocumentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("Import.FK_EntrantDocument_DocumentType", "DocumentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("Import.FK_EntrantDocument_DocumentType", "DocumentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentType> DocumentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("Import.FK_EntrantDocument_DocumentType", "DocumentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentType>("Import.FK_EntrantDocument_DocumentType", "DocumentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Entrant_EntrantDocument", "Entrant")]
        public EntityCollection<Entrant> Entrant_IdentityDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Entrant>("Import.FK_Entrant_EntrantDocument", "Entrant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Entrant>("Import.FK_Entrant_EntrantDocument", "Entrant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_EntrantDocument_Entrant", "Entrant")]
        public Entrant Entrant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entrant>("Import.FK_EntrantDocument_Entrant", "Entrant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entrant>("Import.FK_EntrantDocument_Entrant", "Entrant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Entrant> EntrantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entrant>("Import.FK_EntrantDocument_Entrant", "Entrant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Entrant>("Import.FK_EntrantDocument_Entrant", "Entrant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="EntrantLanguage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntrantLanguage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EntrantLanguage object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="entrantID">Initial value of the EntrantID property.</param>
        /// <param name="languageID">Initial value of the LanguageID property.</param>
        public static EntrantLanguage CreateEntrantLanguage(global::System.Int32 id, global::System.Int32 entrantID, global::System.Int32 languageID)
        {
            EntrantLanguage entrantLanguage = new EntrantLanguage();
            entrantLanguage.ID = id;
            entrantLanguage.EntrantID = entrantID;
            entrantLanguage.LanguageID = languageID;
            return entrantLanguage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntrantID
        {
            get
            {
                return _EntrantID;
            }
            set
            {
                OnEntrantIDChanging(value);
                ReportPropertyChanging("EntrantID");
                _EntrantID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntrantID");
                OnEntrantIDChanged();
            }
        }
        private global::System.Int32 _EntrantID;
        partial void OnEntrantIDChanging(global::System.Int32 value);
        partial void OnEntrantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageID
        {
            get
            {
                return _LanguageID;
            }
            set
            {
                OnLanguageIDChanging(value);
                ReportPropertyChanging("LanguageID");
                _LanguageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LanguageID");
                OnLanguageIDChanged();
            }
        }
        private global::System.Int32 _LanguageID;
        partial void OnLanguageIDChanging(global::System.Int32 value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_EntrantLanguage_ForeignLanguageType", "ForeignLanguageType")]
        public ForeignLanguageType ForeignLanguageType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ForeignLanguageType>("Import.FK_EntrantLanguage_ForeignLanguageType", "ForeignLanguageType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ForeignLanguageType>("Import.FK_EntrantLanguage_ForeignLanguageType", "ForeignLanguageType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ForeignLanguageType> ForeignLanguageTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ForeignLanguageType>("Import.FK_EntrantLanguage_ForeignLanguageType", "ForeignLanguageType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ForeignLanguageType>("Import.FK_EntrantLanguage_ForeignLanguageType", "ForeignLanguageType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_EntrantLanguage_Entrant", "Entrant")]
        public Entrant Entrant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entrant>("Import.FK_EntrantLanguage_Entrant", "Entrant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entrant>("Import.FK_EntrantLanguage_Entrant", "Entrant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Entrant> EntrantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entrant>("Import.FK_EntrantLanguage_Entrant", "Entrant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Entrant>("Import.FK_EntrantLanguage_Entrant", "Entrant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="ForeignLanguageType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ForeignLanguageType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ForeignLanguageType object.
        /// </summary>
        /// <param name="languageID">Initial value of the LanguageID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ForeignLanguageType CreateForeignLanguageType(global::System.Int32 languageID, global::System.String name)
        {
            ForeignLanguageType foreignLanguageType = new ForeignLanguageType();
            foreignLanguageType.LanguageID = languageID;
            foreignLanguageType.Name = name;
            return foreignLanguageType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageID
        {
            get
            {
                return _LanguageID;
            }
            set
            {
                if (_LanguageID != value)
                {
                    OnLanguageIDChanging(value);
                    ReportPropertyChanging("LanguageID");
                    _LanguageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LanguageID");
                    OnLanguageIDChanged();
                }
            }
        }
        private global::System.Int32 _LanguageID;
        partial void OnLanguageIDChanging(global::System.Int32 value);
        partial void OnLanguageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_EntrantLanguage_ForeignLanguageType", "EntrantLanguage")]
        public EntityCollection<EntrantLanguage> EntrantLanguage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntrantLanguage>("Import.FK_EntrantLanguage_ForeignLanguageType", "EntrantLanguage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntrantLanguage>("Import.FK_EntrantLanguage_ForeignLanguageType", "EntrantLanguage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="GlobalMinEge")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GlobalMinEge : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GlobalMinEge object.
        /// </summary>
        /// <param name="egeYear">Initial value of the EgeYear property.</param>
        /// <param name="minEgeScore">Initial value of the MinEgeScore property.</param>
        public static GlobalMinEge CreateGlobalMinEge(global::System.Int32 egeYear, global::System.Int32 minEgeScore)
        {
            GlobalMinEge globalMinEge = new GlobalMinEge();
            globalMinEge.EgeYear = egeYear;
            globalMinEge.MinEgeScore = minEgeScore;
            return globalMinEge;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EgeYear
        {
            get
            {
                return _EgeYear;
            }
            set
            {
                if (_EgeYear != value)
                {
                    OnEgeYearChanging(value);
                    ReportPropertyChanging("EgeYear");
                    _EgeYear = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EgeYear");
                    OnEgeYearChanged();
                }
            }
        }
        private global::System.Int32 _EgeYear;
        partial void OnEgeYearChanging(global::System.Int32 value);
        partial void OnEgeYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinEgeScore
        {
            get
            {
                return _MinEgeScore;
            }
            set
            {
                OnMinEgeScoreChanging(value);
                ReportPropertyChanging("MinEgeScore");
                _MinEgeScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinEgeScore");
                OnMinEgeScoreChanged();
            }
        }
        private global::System.Int32 _MinEgeScore;
        partial void OnMinEgeScoreChanging(global::System.Int32 value);
        partial void OnMinEgeScoreChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="IdentityDocumentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IdentityDocumentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IdentityDocumentType object.
        /// </summary>
        /// <param name="identityDocumentTypeID">Initial value of the IdentityDocumentTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isRussianNationality">Initial value of the IsRussianNationality property.</param>
        public static IdentityDocumentType CreateIdentityDocumentType(global::System.Int32 identityDocumentTypeID, global::System.String name, global::System.Boolean isRussianNationality)
        {
            IdentityDocumentType identityDocumentType = new IdentityDocumentType();
            identityDocumentType.IdentityDocumentTypeID = identityDocumentTypeID;
            identityDocumentType.Name = name;
            identityDocumentType.IsRussianNationality = isRussianNationality;
            return identityDocumentType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdentityDocumentTypeID
        {
            get
            {
                return _IdentityDocumentTypeID;
            }
            set
            {
                if (_IdentityDocumentTypeID != value)
                {
                    OnIdentityDocumentTypeIDChanging(value);
                    ReportPropertyChanging("IdentityDocumentTypeID");
                    _IdentityDocumentTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdentityDocumentTypeID");
                    OnIdentityDocumentTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _IdentityDocumentTypeID;
        partial void OnIdentityDocumentTypeIDChanging(global::System.Int32 value);
        partial void OnIdentityDocumentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRussianNationality
        {
            get
            {
                return _IsRussianNationality;
            }
            set
            {
                OnIsRussianNationalityChanging(value);
                ReportPropertyChanging("IsRussianNationality");
                _IsRussianNationality = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRussianNationality");
                OnIsRussianNationalityChanged();
            }
        }
        private global::System.Boolean _IsRussianNationality;
        partial void OnIsRussianNationalityChanging(global::System.Boolean value);
        partial void OnIsRussianNationalityChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="ImportPackage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImportPackage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImportPackage object.
        /// </summary>
        /// <param name="packageID">Initial value of the PackageID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="packageData">Initial value of the PackageData property.</param>
        /// <param name="statusID">Initial value of the StatusID property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="lastDateChanged">Initial value of the LastDateChanged property.</param>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        public static ImportPackage CreateImportPackage(global::System.Int32 packageID, global::System.DateTime createDate, global::System.String packageData, global::System.Int32 statusID, global::System.Int32 typeID, global::System.DateTime lastDateChanged, global::System.Int32 institutionID)
        {
            ImportPackage importPackage = new ImportPackage();
            importPackage.PackageID = packageID;
            importPackage.CreateDate = createDate;
            importPackage.PackageData = packageData;
            importPackage.StatusID = statusID;
            importPackage.TypeID = typeID;
            importPackage.LastDateChanged = lastDateChanged;
            importPackage.InstitutionID = institutionID;
            return importPackage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PackageID
        {
            get
            {
                return _PackageID;
            }
            set
            {
                if (_PackageID != value)
                {
                    OnPackageIDChanging(value);
                    ReportPropertyChanging("PackageID");
                    _PackageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PackageID");
                    OnPackageIDChanged();
                }
            }
        }
        private global::System.Int32 _PackageID;
        partial void OnPackageIDChanging(global::System.Int32 value);
        partial void OnPackageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PackageData
        {
            get
            {
                return _PackageData;
            }
            set
            {
                OnPackageDataChanging(value);
                ReportPropertyChanging("PackageData");
                _PackageData = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PackageData");
                OnPackageDataChanged();
            }
        }
        private global::System.String _PackageData;
        partial void OnPackageDataChanging(global::System.String value);
        partial void OnPackageDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private global::System.Int32 _StatusID;
        partial void OnStatusIDChanging(global::System.Int32 value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastDateChanged
        {
            get
            {
                return _LastDateChanged;
            }
            set
            {
                OnLastDateChangedChanging(value);
                ReportPropertyChanging("LastDateChanged");
                _LastDateChanged = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastDateChanged");
                OnLastDateChangedChanged();
            }
        }
        private global::System.DateTime _LastDateChanged;
        partial void OnLastDateChangedChanging(global::System.DateTime value);
        partial void OnLastDateChangedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProcessResultInfo
        {
            get
            {
                return _ProcessResultInfo;
            }
            set
            {
                OnProcessResultInfoChanging(value);
                ReportPropertyChanging("ProcessResultInfo");
                _ProcessResultInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProcessResultInfo");
                OnProcessResultInfoChanged();
            }
        }
        private global::System.String _ProcessResultInfo;
        partial void OnProcessResultInfoChanging(global::System.String value);
        partial void OnProcessResultInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                OnInstitutionIDChanging(value);
                ReportPropertyChanging("InstitutionID");
                _InstitutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionID");
                OnInstitutionIDChanged();
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CheckStatusID
        {
            get
            {
                return _CheckStatusID;
            }
            set
            {
                OnCheckStatusIDChanging(value);
                ReportPropertyChanging("CheckStatusID");
                _CheckStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckStatusID");
                OnCheckStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CheckStatusID;
        partial void OnCheckStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OnCheckStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CheckResultInfo
        {
            get
            {
                return _CheckResultInfo;
            }
            set
            {
                OnCheckResultInfoChanging(value);
                ReportPropertyChanging("CheckResultInfo");
                _CheckResultInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CheckResultInfo");
                OnCheckResultInfoChanged();
            }
        }
        private global::System.String _CheckResultInfo;
        partial void OnCheckResultInfoChanging(global::System.String value);
        partial void OnCheckResultInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImportedAppIDs
        {
            get
            {
                return _ImportedAppIDs;
            }
            set
            {
                OnImportedAppIDsChanging(value);
                ReportPropertyChanging("ImportedAppIDs");
                _ImportedAppIDs = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImportedAppIDs");
                OnImportedAppIDsChanged();
            }
        }
        private global::System.String _ImportedAppIDs;
        partial void OnImportedAppIDsChanging(global::System.String value);
        partial void OnImportedAppIDsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserLogin
        {
            get
            {
                return _UserLogin;
            }
            set
            {
                OnUserLoginChanging(value);
                ReportPropertyChanging("UserLogin");
                _UserLogin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserLogin");
                OnUserLoginChanged();
            }
        }
        private global::System.String _UserLogin;
        partial void OnUserLoginChanging(global::System.String value);
        partial void OnUserLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ImportPackage_Institution", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_ImportPackage_Institution", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_ImportPackage_Institution", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_ImportPackage_Institution", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("Import.FK_ImportPackage_Institution", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ImportPackage_ImportPackageType", "ImportPackageType")]
        public ImportPackageType ImportPackageType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImportPackageType>("Import.FK_ImportPackage_ImportPackageType", "ImportPackageType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImportPackageType>("Import.FK_ImportPackage_ImportPackageType", "ImportPackageType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ImportPackageType> ImportPackageTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImportPackageType>("Import.FK_ImportPackage_ImportPackageType", "ImportPackageType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ImportPackageType>("Import.FK_ImportPackage_ImportPackageType", "ImportPackageType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ImportPackage_ImportPackageCheckStatus", "ImportPackageStatus")]
        public ImportPackageStatus ImportPackageCheckStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImportPackageStatus>("Import.FK_ImportPackage_ImportPackageCheckStatus", "ImportPackageStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImportPackageStatus>("Import.FK_ImportPackage_ImportPackageCheckStatus", "ImportPackageStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ImportPackageStatus> ImportPackageCheckStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImportPackageStatus>("Import.FK_ImportPackage_ImportPackageCheckStatus", "ImportPackageStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ImportPackageStatus>("Import.FK_ImportPackage_ImportPackageCheckStatus", "ImportPackageStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ImportPackage_ImportPackageStatus", "ImportPackageStatus")]
        public ImportPackageStatus ImportPackageStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImportPackageStatus>("Import.FK_ImportPackage_ImportPackageStatus", "ImportPackageStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImportPackageStatus>("Import.FK_ImportPackage_ImportPackageStatus", "ImportPackageStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ImportPackageStatus> ImportPackageStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImportPackageStatus>("Import.FK_ImportPackage_ImportPackageStatus", "ImportPackageStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ImportPackageStatus>("Import.FK_ImportPackage_ImportPackageStatus", "ImportPackageStatus", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="ImportPackageStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImportPackageStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImportPackageStatus object.
        /// </summary>
        /// <param name="statusID">Initial value of the StatusID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ImportPackageStatus CreateImportPackageStatus(global::System.Int32 statusID, global::System.String name)
        {
            ImportPackageStatus importPackageStatus = new ImportPackageStatus();
            importPackageStatus.StatusID = statusID;
            importPackageStatus.Name = name;
            return importPackageStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                if (_StatusID != value)
                {
                    OnStatusIDChanging(value);
                    ReportPropertyChanging("StatusID");
                    _StatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StatusID");
                    OnStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _StatusID;
        partial void OnStatusIDChanging(global::System.Int32 value);
        partial void OnStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ImportPackage_ImportPackageCheckStatus", "ImportPackage")]
        public EntityCollection<ImportPackage> ImportPackage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ImportPackage>("Import.FK_ImportPackage_ImportPackageCheckStatus", "ImportPackage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ImportPackage>("Import.FK_ImportPackage_ImportPackageCheckStatus", "ImportPackage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ImportPackage_ImportPackageStatus", "ImportPackage")]
        public EntityCollection<ImportPackage> ImportPackage1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ImportPackage>("Import.FK_ImportPackage_ImportPackageStatus", "ImportPackage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ImportPackage>("Import.FK_ImportPackage_ImportPackageStatus", "ImportPackage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="ImportPackageType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImportPackageType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImportPackageType object.
        /// </summary>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ImportPackageType CreateImportPackageType(global::System.Int32 typeID, global::System.String name)
        {
            ImportPackageType importPackageType = new ImportPackageType();
            importPackageType.TypeID = typeID;
            importPackageType.Name = name;
            return importPackageType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                if (_TypeID != value)
                {
                    OnTypeIDChanging(value);
                    ReportPropertyChanging("TypeID");
                    _TypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TypeID");
                    OnTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _TypeID;
        partial void OnTypeIDChanging(global::System.Int32 value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ImportPackage_ImportPackageType", "ImportPackage")]
        public EntityCollection<ImportPackage> ImportPackage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ImportPackage>("Import.FK_ImportPackage_ImportPackageType", "ImportPackage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ImportPackage>("Import.FK_ImportPackage_ImportPackageType", "ImportPackage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="Institution")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Institution : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Institution object.
        /// </summary>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        /// <param name="institutionTypeID">Initial value of the InstitutionTypeID property.</param>
        /// <param name="hasMilitaryDepartment">Initial value of the HasMilitaryDepartment property.</param>
        /// <param name="hasHostel">Initial value of the HasHostel property.</param>
        /// <param name="hasHostelForEntrants">Initial value of the HasHostelForEntrants property.</param>
        /// <param name="iNN">Initial value of the INN property.</param>
        /// <param name="oGRN">Initial value of the OGRN property.</param>
        public static Institution CreateInstitution(global::System.Int32 institutionID, global::System.Int16 institutionTypeID, global::System.Boolean hasMilitaryDepartment, global::System.Boolean hasHostel, global::System.Boolean hasHostelForEntrants, global::System.String iNN, global::System.String oGRN)
        {
            Institution institution = new Institution();
            institution.InstitutionID = institutionID;
            institution.InstitutionTypeID = institutionTypeID;
            institution.HasMilitaryDepartment = hasMilitaryDepartment;
            institution.HasHostel = hasHostel;
            institution.HasHostelForEntrants = hasHostelForEntrants;
            institution.INN = iNN;
            institution.OGRN = oGRN;
            return institution;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                if (_InstitutionID != value)
                {
                    OnInstitutionIDChanging(value);
                    ReportPropertyChanging("InstitutionID");
                    _InstitutionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstitutionID");
                    OnInstitutionIDChanged();
                }
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 InstitutionTypeID
        {
            get
            {
                return _InstitutionTypeID;
            }
            set
            {
                OnInstitutionTypeIDChanging(value);
                ReportPropertyChanging("InstitutionTypeID");
                _InstitutionTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionTypeID");
                OnInstitutionTypeIDChanged();
            }
        }
        private global::System.Int16 _InstitutionTypeID;
        partial void OnInstitutionTypeIDChanging(global::System.Int16 value);
        partial void OnInstitutionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BriefName
        {
            get
            {
                return _BriefName;
            }
            set
            {
                OnBriefNameChanging(value);
                ReportPropertyChanging("BriefName");
                _BriefName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BriefName");
                OnBriefNameChanged();
            }
        }
        private global::System.String _BriefName;
        partial void OnBriefNameChanging(global::System.String value);
        partial void OnBriefNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FormOfLawID
        {
            get
            {
                return _FormOfLawID;
            }
            set
            {
                OnFormOfLawIDChanging(value);
                ReportPropertyChanging("FormOfLawID");
                _FormOfLawID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FormOfLawID");
                OnFormOfLawIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FormOfLawID;
        partial void OnFormOfLawIDChanging(Nullable<global::System.Int32> value);
        partial void OnFormOfLawIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RegionID
        {
            get
            {
                return _RegionID;
            }
            set
            {
                OnRegionIDChanging(value);
                ReportPropertyChanging("RegionID");
                _RegionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegionID");
                OnRegionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RegionID;
        partial void OnRegionIDChanging(Nullable<global::System.Int32> value);
        partial void OnRegionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Site
        {
            get
            {
                return _Site;
            }
            set
            {
                OnSiteChanging(value);
                ReportPropertyChanging("Site");
                _Site = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Site");
                OnSiteChanged();
            }
        }
        private global::System.String _Site;
        partial void OnSiteChanging(global::System.String value);
        partial void OnSiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasMilitaryDepartment
        {
            get
            {
                return _HasMilitaryDepartment;
            }
            set
            {
                OnHasMilitaryDepartmentChanging(value);
                ReportPropertyChanging("HasMilitaryDepartment");
                _HasMilitaryDepartment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasMilitaryDepartment");
                OnHasMilitaryDepartmentChanged();
            }
        }
        private global::System.Boolean _HasMilitaryDepartment;
        partial void OnHasMilitaryDepartmentChanging(global::System.Boolean value);
        partial void OnHasMilitaryDepartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasHostel
        {
            get
            {
                return _HasHostel;
            }
            set
            {
                OnHasHostelChanging(value);
                ReportPropertyChanging("HasHostel");
                _HasHostel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasHostel");
                OnHasHostelChanged();
            }
        }
        private global::System.Boolean _HasHostel;
        partial void OnHasHostelChanging(global::System.Boolean value);
        partial void OnHasHostelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HostelCapacity
        {
            get
            {
                return _HostelCapacity;
            }
            set
            {
                OnHostelCapacityChanging(value);
                ReportPropertyChanging("HostelCapacity");
                _HostelCapacity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HostelCapacity");
                OnHostelCapacityChanged();
            }
        }
        private Nullable<global::System.Int32> _HostelCapacity;
        partial void OnHostelCapacityChanging(Nullable<global::System.Int32> value);
        partial void OnHostelCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasHostelForEntrants
        {
            get
            {
                return _HasHostelForEntrants;
            }
            set
            {
                OnHasHostelForEntrantsChanging(value);
                ReportPropertyChanging("HasHostelForEntrants");
                _HasHostelForEntrants = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasHostelForEntrants");
                OnHasHostelForEntrantsChanged();
            }
        }
        private global::System.Boolean _HasHostelForEntrants;
        partial void OnHasHostelForEntrantsChanging(global::System.Boolean value);
        partial void OnHasHostelForEntrantsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HostelAttachmentID
        {
            get
            {
                return _HostelAttachmentID;
            }
            set
            {
                OnHostelAttachmentIDChanging(value);
                ReportPropertyChanging("HostelAttachmentID");
                _HostelAttachmentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HostelAttachmentID");
                OnHostelAttachmentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _HostelAttachmentID;
        partial void OnHostelAttachmentIDChanging(Nullable<global::System.Int32> value);
        partial void OnHostelAttachmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String INN
        {
            get
            {
                return _INN;
            }
            set
            {
                OnINNChanging(value);
                ReportPropertyChanging("INN");
                _INN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("INN");
                OnINNChanged();
            }
        }
        private global::System.String _INN;
        partial void OnINNChanging(global::System.String value);
        partial void OnINNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OGRN
        {
            get
            {
                return _OGRN;
            }
            set
            {
                OnOGRNChanging(value);
                ReportPropertyChanging("OGRN");
                _OGRN = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OGRN");
                OnOGRNChanged();
            }
        }
        private global::System.String _OGRN;
        partial void OnOGRNChanging(global::System.String value);
        partial void OnOGRNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AdmissionStructurePublishDate
        {
            get
            {
                return _AdmissionStructurePublishDate;
            }
            set
            {
                OnAdmissionStructurePublishDateChanging(value);
                ReportPropertyChanging("AdmissionStructurePublishDate");
                _AdmissionStructurePublishDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmissionStructurePublishDate");
                OnAdmissionStructurePublishDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AdmissionStructurePublishDate;
        partial void OnAdmissionStructurePublishDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAdmissionStructurePublishDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReceivingApplicationDate
        {
            get
            {
                return _ReceivingApplicationDate;
            }
            set
            {
                OnReceivingApplicationDateChanging(value);
                ReportPropertyChanging("ReceivingApplicationDate");
                _ReceivingApplicationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivingApplicationDate");
                OnReceivingApplicationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReceivingApplicationDate;
        partial void OnReceivingApplicationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReceivingApplicationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EsrpOrgID
        {
            get
            {
                return _EsrpOrgID;
            }
            set
            {
                OnEsrpOrgIDChanging(value);
                ReportPropertyChanging("EsrpOrgID");
                _EsrpOrgID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EsrpOrgID");
                OnEsrpOrgIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EsrpOrgID;
        partial void OnEsrpOrgIDChanging(Nullable<global::System.Int32> value);
        partial void OnEsrpOrgIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OwnerDepartment
        {
            get
            {
                return _OwnerDepartment;
            }
            set
            {
                OnOwnerDepartmentChanging(value);
                ReportPropertyChanging("OwnerDepartment");
                _OwnerDepartment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OwnerDepartment");
                OnOwnerDepartmentChanged();
            }
        }
        private global::System.String _OwnerDepartment;
        partial void OnOwnerDepartmentChanging(global::System.String value);
        partial void OnOwnerDepartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MainEsrpOrgId
        {
            get
            {
                return _MainEsrpOrgId;
            }
            set
            {
                OnMainEsrpOrgIdChanging(value);
                ReportPropertyChanging("MainEsrpOrgId");
                _MainEsrpOrgId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MainEsrpOrgId");
                OnMainEsrpOrgIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MainEsrpOrgId;
        partial void OnMainEsrpOrgIdChanging(Nullable<global::System.Int32> value);
        partial void OnMainEsrpOrgIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FounderEsrpOrgId
        {
            get
            {
                return _FounderEsrpOrgId;
            }
            set
            {
                OnFounderEsrpOrgIdChanging(value);
                ReportPropertyChanging("FounderEsrpOrgId");
                _FounderEsrpOrgId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FounderEsrpOrgId");
                OnFounderEsrpOrgIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FounderEsrpOrgId;
        partial void OnFounderEsrpOrgIdChanging(Nullable<global::System.Int32> value);
        partial void OnFounderEsrpOrgIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StatusId
        {
            get
            {
                return _StatusId;
            }
            set
            {
                OnStatusIdChanging(value);
                ReportPropertyChanging("StatusId");
                _StatusId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusId");
                OnStatusIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StatusId;
        partial void OnStatusIdChanging(Nullable<global::System.Int32> value);
        partial void OnStatusIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_AdmissionVolume_Institution", "AdmissionVolume")]
        public EntityCollection<AdmissionVolume> AdmissionVolume
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdmissionVolume>("Import.FK_AdmissionVolume_Institution", "AdmissionVolume");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdmissionVolume>("Import.FK_AdmissionVolume_Institution", "AdmissionVolume", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CompetitiveGroup_Institution", "CompetitiveGroup")]
        public EntityCollection<CompetitiveGroup> CompetitiveGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitiveGroup>("Import.FK_CompetitiveGroup_Institution", "CompetitiveGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitiveGroup>("Import.FK_CompetitiveGroup_Institution", "CompetitiveGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ImportPackage_Institution", "ImportPackage")]
        public EntityCollection<ImportPackage> ImportPackage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ImportPackage>("Import.FK_ImportPackage_Institution", "ImportPackage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ImportPackage>("Import.FK_ImportPackage_Institution", "ImportPackage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_AllowedDirections_Institution", "AllowedDirections")]
        public EntityCollection<AllowedDirections> AllowedDirections
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AllowedDirections>("Import.FK_AllowedDirections_Institution", "AllowedDirections");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AllowedDirections>("Import.FK_AllowedDirections_Institution", "AllowedDirections", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_EntranceTestProfileDirections_Institution", "EntranceTestProfileDirection")]
        public EntityCollection<EntranceTestProfileDirection> EntranceTestProfileDirection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntranceTestProfileDirection>("Import.FK_EntranceTestProfileDirections_Institution", "EntranceTestProfileDirection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntranceTestProfileDirection>("Import.FK_EntranceTestProfileDirections_Institution", "EntranceTestProfileDirection", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CompetitiveGroupTarget_Institution", "CompetitiveGroupTarget")]
        public EntityCollection<CompetitiveGroupTarget> CompetitiveGroupTarget
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitiveGroupTarget>("Import.FK_CompetitiveGroupTarget_Institution", "CompetitiveGroupTarget");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitiveGroupTarget>("Import.FK_CompetitiveGroupTarget_Institution", "CompetitiveGroupTarget", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Institution_RegionType", "RegionType")]
        public RegionType RegionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionType>("Import.FK_Institution_RegionType", "RegionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionType>("Import.FK_Institution_RegionType", "RegionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RegionType> RegionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegionType>("Import.FK_Institution_RegionType", "RegionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RegionType>("Import.FK_Institution_RegionType", "RegionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Campaign_Institution", "Campaign")]
        public EntityCollection<Campaign> Campaign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Campaign>("Import.FK_Campaign_Institution", "Campaign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Campaign>("Import.FK_Campaign_Institution", "Campaign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Entrant_Institution", "Entrant")]
        public EntityCollection<Entrant> Entrant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Entrant>("Import.FK_Entrant_Institution", "Entrant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Entrant>("Import.FK_Entrant_Institution", "Entrant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OrderOfAdmission_Institution", "OrderOfAdmission")]
        public EntityCollection<OrderOfAdmission> OrderOfAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderOfAdmission>("Import.FK_OrderOfAdmission_Institution", "OrderOfAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderOfAdmission>("Import.FK_OrderOfAdmission_Institution", "OrderOfAdmission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Application_Institution", "Application")]
        public EntityCollection<Application> Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("Import.FK_Application_Institution", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("Import.FK_Application_Institution", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_RecomendedLists_Institution1", "RecomendedLists")]
        public EntityCollection<RecomendedLists> RecomendedLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RecomendedLists>("Import.FK_RecomendedLists_Institution1", "RecomendedLists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RecomendedLists>("Import.FK_RecomendedLists_Institution1", "RecomendedLists", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="InstitutionDocumentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstitutionDocumentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstitutionDocumentType object.
        /// </summary>
        /// <param name="institutionDocumentTypeID">Initial value of the InstitutionDocumentTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="displayOrder">Initial value of the DisplayOrder property.</param>
        public static InstitutionDocumentType CreateInstitutionDocumentType(global::System.Int32 institutionDocumentTypeID, global::System.String name, global::System.Int32 displayOrder)
        {
            InstitutionDocumentType institutionDocumentType = new InstitutionDocumentType();
            institutionDocumentType.InstitutionDocumentTypeID = institutionDocumentTypeID;
            institutionDocumentType.Name = name;
            institutionDocumentType.DisplayOrder = displayOrder;
            return institutionDocumentType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionDocumentTypeID
        {
            get
            {
                return _InstitutionDocumentTypeID;
            }
            set
            {
                if (_InstitutionDocumentTypeID != value)
                {
                    OnInstitutionDocumentTypeIDChanging(value);
                    ReportPropertyChanging("InstitutionDocumentTypeID");
                    _InstitutionDocumentTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstitutionDocumentTypeID");
                    OnInstitutionDocumentTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _InstitutionDocumentTypeID;
        partial void OnInstitutionDocumentTypeIDChanging(global::System.Int32 value);
        partial void OnInstitutionDocumentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private global::System.Int32 _DisplayOrder;
        partial void OnDisplayOrderChanging(global::System.Int32 value);
        partial void OnDisplayOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntranceTestDocument_InstitutionDocumentType", "ApplicationEntranceTestDocument")]
        public EntityCollection<ApplicationEntranceTestDocument> ApplicationEntranceTestDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationEntranceTestDocument>("Import.FK_ApplicationEntranceTestDocument_InstitutionDocumentType", "ApplicationEntranceTestDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationEntranceTestDocument>("Import.FK_ApplicationEntranceTestDocument_InstitutionDocumentType", "ApplicationEntranceTestDocument", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="NationalityType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NationalityType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NationalityType object.
        /// </summary>
        /// <param name="nationalityID">Initial value of the NationalityID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static NationalityType CreateNationalityType(global::System.Int32 nationalityID, global::System.String name)
        {
            NationalityType nationalityType = new NationalityType();
            nationalityType.NationalityID = nationalityID;
            nationalityType.Name = name;
            return nationalityType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NationalityID
        {
            get
            {
                return _NationalityID;
            }
            set
            {
                if (_NationalityID != value)
                {
                    OnNationalityIDChanging(value);
                    ReportPropertyChanging("NationalityID");
                    _NationalityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NationalityID");
                    OnNationalityIDChanged();
                }
            }
        }
        private global::System.Int32 _NationalityID;
        partial void OnNationalityIDChanging(global::System.Int32 value);
        partial void OnNationalityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="OlympicDiplomType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OlympicDiplomType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OlympicDiplomType object.
        /// </summary>
        /// <param name="olympicDiplomTypeID">Initial value of the OlympicDiplomTypeID property.</param>
        public static OlympicDiplomType CreateOlympicDiplomType(global::System.Int16 olympicDiplomTypeID)
        {
            OlympicDiplomType olympicDiplomType = new OlympicDiplomType();
            olympicDiplomType.OlympicDiplomTypeID = olympicDiplomTypeID;
            return olympicDiplomType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 OlympicDiplomTypeID
        {
            get
            {
                return _OlympicDiplomTypeID;
            }
            set
            {
                if (_OlympicDiplomTypeID != value)
                {
                    OnOlympicDiplomTypeIDChanging(value);
                    ReportPropertyChanging("OlympicDiplomTypeID");
                    _OlympicDiplomTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OlympicDiplomTypeID");
                    OnOlympicDiplomTypeIDChanged();
                }
            }
        }
        private global::System.Int16 _OlympicDiplomTypeID;
        partial void OnOlympicDiplomTypeIDChanging(global::System.Int16 value);
        partial void OnOlympicDiplomTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_BenefitItemC_OlympicDiplomType", "BenefitItemC")]
        public EntityCollection<BenefitItemC> BenefitItemC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitItemC>("Import.FK_BenefitItemC_OlympicDiplomType", "BenefitItemC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitItemC>("Import.FK_BenefitItemC_OlympicDiplomType", "BenefitItemC", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="OlympicLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OlympicLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OlympicLevel object.
        /// </summary>
        /// <param name="olympicLevelID">Initial value of the OlympicLevelID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static OlympicLevel CreateOlympicLevel(global::System.Int16 olympicLevelID, global::System.String name)
        {
            OlympicLevel olympicLevel = new OlympicLevel();
            olympicLevel.OlympicLevelID = olympicLevelID;
            olympicLevel.Name = name;
            return olympicLevel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 OlympicLevelID
        {
            get
            {
                return _OlympicLevelID;
            }
            set
            {
                if (_OlympicLevelID != value)
                {
                    OnOlympicLevelIDChanging(value);
                    ReportPropertyChanging("OlympicLevelID");
                    _OlympicLevelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OlympicLevelID");
                    OnOlympicLevelIDChanged();
                }
            }
        }
        private global::System.Int16 _OlympicLevelID;
        partial void OnOlympicLevelIDChanging(global::System.Int16 value);
        partial void OnOlympicLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OlympicLevel_OlympicTypeSubjectLink", "OlympicTypeSubjectLink")]
        public EntityCollection<OlympicTypeSubjectLink> OlympicTypeSubjectLink
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OlympicTypeSubjectLink>("Import.FK_OlympicLevel_OlympicTypeSubjectLink", "OlympicTypeSubjectLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OlympicTypeSubjectLink>("Import.FK_OlympicLevel_OlympicTypeSubjectLink", "OlympicTypeSubjectLink", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OlympicType_OlympicLevel", "OlympicType")]
        public EntityCollection<OlympicType> OlympicType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OlympicType>("Import.FK_OlympicType_OlympicLevel", "OlympicType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OlympicType>("Import.FK_OlympicType_OlympicLevel", "OlympicType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="OlympicType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OlympicType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OlympicType object.
        /// </summary>
        /// <param name="olympicID">Initial value of the OlympicID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="organizerName">Initial value of the OrganizerName property.</param>
        /// <param name="olympicNumber">Initial value of the OlympicNumber property.</param>
        /// <param name="olympicYear">Initial value of the OlympicYear property.</param>
        public static OlympicType CreateOlympicType(global::System.Int32 olympicID, global::System.String name, global::System.String organizerName, global::System.Int32 olympicNumber, global::System.Int32 olympicYear)
        {
            OlympicType olympicType = new OlympicType();
            olympicType.OlympicID = olympicID;
            olympicType.Name = name;
            olympicType.OrganizerName = organizerName;
            olympicType.OlympicNumber = olympicNumber;
            olympicType.OlympicYear = olympicYear;
            return olympicType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OlympicID
        {
            get
            {
                return _OlympicID;
            }
            set
            {
                if (_OlympicID != value)
                {
                    OnOlympicIDChanging(value);
                    ReportPropertyChanging("OlympicID");
                    _OlympicID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OlympicID");
                    OnOlympicIDChanged();
                }
            }
        }
        private global::System.Int32 _OlympicID;
        partial void OnOlympicIDChanging(global::System.Int32 value);
        partial void OnOlympicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> OlympicLevelID
        {
            get
            {
                return _OlympicLevelID;
            }
            set
            {
                OnOlympicLevelIDChanging(value);
                ReportPropertyChanging("OlympicLevelID");
                _OlympicLevelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympicLevelID");
                OnOlympicLevelIDChanged();
            }
        }
        private Nullable<global::System.Int16> _OlympicLevelID;
        partial void OnOlympicLevelIDChanging(Nullable<global::System.Int16> value);
        partial void OnOlympicLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrganizerName
        {
            get
            {
                return _OrganizerName;
            }
            set
            {
                OnOrganizerNameChanging(value);
                ReportPropertyChanging("OrganizerName");
                _OrganizerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrganizerName");
                OnOrganizerNameChanged();
            }
        }
        private global::System.String _OrganizerName;
        partial void OnOrganizerNameChanging(global::System.String value);
        partial void OnOrganizerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OlympicNumber
        {
            get
            {
                return _OlympicNumber;
            }
            set
            {
                OnOlympicNumberChanging(value);
                ReportPropertyChanging("OlympicNumber");
                _OlympicNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympicNumber");
                OnOlympicNumberChanged();
            }
        }
        private global::System.Int32 _OlympicNumber;
        partial void OnOlympicNumberChanging(global::System.Int32 value);
        partial void OnOlympicNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OlympicYear
        {
            get
            {
                return _OlympicYear;
            }
            set
            {
                OnOlympicYearChanging(value);
                ReportPropertyChanging("OlympicYear");
                _OlympicYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympicYear");
                OnOlympicYearChanged();
            }
        }
        private global::System.Int32 _OlympicYear;
        partial void OnOlympicYearChanging(global::System.Int32 value);
        partial void OnOlympicYearChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_BenefitItemCOlympicType_OlympicType", "BenefitItemCOlympicType")]
        public EntityCollection<BenefitItemCOlympicType> BenefitItemCOlympicType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitItemCOlympicType>("Import.FK_BenefitItemCOlympicType_OlympicType", "BenefitItemCOlympicType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitItemCOlympicType>("Import.FK_BenefitItemCOlympicType_OlympicType", "BenefitItemCOlympicType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OlympicType_OlympicLevel", "OlympicLevel")]
        public OlympicLevel OlympicLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicLevel>("Import.FK_OlympicType_OlympicLevel", "OlympicLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicLevel>("Import.FK_OlympicType_OlympicLevel", "OlympicLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OlympicLevel> OlympicLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicLevel>("Import.FK_OlympicType_OlympicLevel", "OlympicLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OlympicLevel>("Import.FK_OlympicType_OlympicLevel", "OlympicLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OlympicTypeSubjectLink_OlympicType", "OlympicTypeSubjectLink")]
        public EntityCollection<OlympicTypeSubjectLink> OlympicTypeSubjectLink
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OlympicTypeSubjectLink>("Import.FK_OlympicTypeSubjectLink_OlympicType", "OlympicTypeSubjectLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OlympicTypeSubjectLink>("Import.FK_OlympicTypeSubjectLink_OlympicType", "OlympicTypeSubjectLink", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="OlympicTypeSubjectLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OlympicTypeSubjectLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OlympicTypeSubjectLink object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="olympicID">Initial value of the OlympicID property.</param>
        /// <param name="subjectID">Initial value of the SubjectID property.</param>
        public static OlympicTypeSubjectLink CreateOlympicTypeSubjectLink(global::System.Int32 id, global::System.Int32 olympicID, global::System.Int32 subjectID)
        {
            OlympicTypeSubjectLink olympicTypeSubjectLink = new OlympicTypeSubjectLink();
            olympicTypeSubjectLink.ID = id;
            olympicTypeSubjectLink.OlympicID = olympicID;
            olympicTypeSubjectLink.SubjectID = subjectID;
            return olympicTypeSubjectLink;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OlympicID
        {
            get
            {
                return _OlympicID;
            }
            set
            {
                OnOlympicIDChanging(value);
                ReportPropertyChanging("OlympicID");
                _OlympicID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OlympicID");
                OnOlympicIDChanged();
            }
        }
        private global::System.Int32 _OlympicID;
        partial void OnOlympicIDChanging(global::System.Int32 value);
        partial void OnOlympicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private global::System.Int32 _SubjectID;
        partial void OnSubjectIDChanging(global::System.Int32 value);
        partial void OnSubjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> SubjectLevelID
        {
            get
            {
                return _SubjectLevelID;
            }
            set
            {
                OnSubjectLevelIDChanging(value);
                ReportPropertyChanging("SubjectLevelID");
                _SubjectLevelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectLevelID");
                OnSubjectLevelIDChanged();
            }
        }
        private Nullable<global::System.Int16> _SubjectLevelID;
        partial void OnSubjectLevelIDChanging(Nullable<global::System.Int16> value);
        partial void OnSubjectLevelIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OlympicTypeSubjectLink_Subject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_OlympicTypeSubjectLink_Subject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_OlympicTypeSubjectLink_Subject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_OlympicTypeSubjectLink_Subject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("Import.FK_OlympicTypeSubjectLink_Subject", "Subject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OlympicLevel_OlympicTypeSubjectLink", "OlympicLevel")]
        public OlympicLevel OlympicLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicLevel>("Import.FK_OlympicLevel_OlympicTypeSubjectLink", "OlympicLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicLevel>("Import.FK_OlympicLevel_OlympicTypeSubjectLink", "OlympicLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OlympicLevel> OlympicLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicLevel>("Import.FK_OlympicLevel_OlympicTypeSubjectLink", "OlympicLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OlympicLevel>("Import.FK_OlympicLevel_OlympicTypeSubjectLink", "OlympicLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OlympicTypeSubjectLink_OlympicType", "OlympicType")]
        public OlympicType OlympicType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicType>("Import.FK_OlympicTypeSubjectLink_OlympicType", "OlympicType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicType>("Import.FK_OlympicTypeSubjectLink_OlympicType", "OlympicType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OlympicType> OlympicTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OlympicType>("Import.FK_OlympicTypeSubjectLink_OlympicType", "OlympicType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OlympicType>("Import.FK_OlympicTypeSubjectLink_OlympicType", "OlympicType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="OrderOfAdmission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderOfAdmission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderOfAdmission object.
        /// </summary>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="orderStatus">Initial value of the OrderStatus property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="dateEdited">Initial value of the DateEdited property.</param>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        /// <param name="campaignID">Initial value of the CampaignID property.</param>
        /// <param name="isForBeneficiary">Initial value of the IsForBeneficiary property.</param>
        /// <param name="isForeigner">Initial value of the IsForeigner property.</param>
        public static OrderOfAdmission CreateOrderOfAdmission(global::System.Int32 orderID, global::System.Int16 orderStatus, global::System.DateTime dateCreated, global::System.DateTime dateEdited, global::System.Int32 institutionID, global::System.Int32 campaignID, global::System.Boolean isForBeneficiary, global::System.Boolean isForeigner)
        {
            OrderOfAdmission orderOfAdmission = new OrderOfAdmission();
            orderOfAdmission.OrderID = orderID;
            orderOfAdmission.OrderStatus = orderStatus;
            orderOfAdmission.DateCreated = dateCreated;
            orderOfAdmission.DateEdited = dateEdited;
            orderOfAdmission.InstitutionID = institutionID;
            orderOfAdmission.CampaignID = campaignID;
            orderOfAdmission.IsForBeneficiary = isForBeneficiary;
            orderOfAdmission.IsForeigner = isForeigner;
            return orderOfAdmission;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                if (_OrderID != value)
                {
                    OnOrderIDChanging(value);
                    ReportPropertyChanging("OrderID");
                    _OrderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderID");
                    OnOrderIDChanged();
                }
            }
        }
        private global::System.Int32 _OrderID;
        partial void OnOrderIDChanging(global::System.Int32 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 OrderStatus
        {
            get
            {
                return _OrderStatus;
            }
            set
            {
                OnOrderStatusChanging(value);
                ReportPropertyChanging("OrderStatus");
                _OrderStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderStatus");
                OnOrderStatusChanged();
            }
        }
        private global::System.Int16 _OrderStatus;
        partial void OnOrderStatusChanging(global::System.Int16 value);
        partial void OnOrderStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateEdited
        {
            get
            {
                return _DateEdited;
            }
            set
            {
                OnDateEditedChanging(value);
                ReportPropertyChanging("DateEdited");
                _DateEdited = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEdited");
                OnDateEditedChanged();
            }
        }
        private global::System.DateTime _DateEdited;
        partial void OnDateEditedChanging(global::System.DateTime value);
        partial void OnDateEditedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DatePublished
        {
            get
            {
                return _DatePublished;
            }
            set
            {
                OnDatePublishedChanging(value);
                ReportPropertyChanging("DatePublished");
                _DatePublished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DatePublished");
                OnDatePublishedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DatePublished;
        partial void OnDatePublishedChanging(Nullable<global::System.DateTime> value);
        partial void OnDatePublishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                OnInstitutionIDChanging(value);
                ReportPropertyChanging("InstitutionID");
                _InstitutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionID");
                OnInstitutionIDChanged();
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UID
        {
            get
            {
                return _UID;
            }
            set
            {
                OnUIDChanging(value);
                ReportPropertyChanging("UID");
                _UID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UID");
                OnUIDChanged();
            }
        }
        private global::System.String _UID;
        partial void OnUIDChanging(global::System.String value);
        partial void OnUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CampaignID
        {
            get
            {
                return _CampaignID;
            }
            set
            {
                OnCampaignIDChanging(value);
                ReportPropertyChanging("CampaignID");
                _CampaignID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CampaignID");
                OnCampaignIDChanged();
            }
        }
        private global::System.Int32 _CampaignID;
        partial void OnCampaignIDChanging(global::System.Int32 value);
        partial void OnCampaignIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Course
        {
            get
            {
                return _Course;
            }
            set
            {
                OnCourseChanging(value);
                ReportPropertyChanging("Course");
                _Course = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Course");
                OnCourseChanged();
            }
        }
        private Nullable<global::System.Int32> _Course;
        partial void OnCourseChanging(Nullable<global::System.Int32> value);
        partial void OnCourseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> EducationLevelID
        {
            get
            {
                return _EducationLevelID;
            }
            set
            {
                OnEducationLevelIDChanging(value);
                ReportPropertyChanging("EducationLevelID");
                _EducationLevelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducationLevelID");
                OnEducationLevelIDChanged();
            }
        }
        private Nullable<global::System.Int16> _EducationLevelID;
        partial void OnEducationLevelIDChanging(Nullable<global::System.Int16> value);
        partial void OnEducationLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> EducationFormID
        {
            get
            {
                return _EducationFormID;
            }
            set
            {
                OnEducationFormIDChanging(value);
                ReportPropertyChanging("EducationFormID");
                _EducationFormID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducationFormID");
                OnEducationFormIDChanged();
            }
        }
        private Nullable<global::System.Int16> _EducationFormID;
        partial void OnEducationFormIDChanging(Nullable<global::System.Int16> value);
        partial void OnEducationFormIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> EducationSourceID
        {
            get
            {
                return _EducationSourceID;
            }
            set
            {
                OnEducationSourceIDChanging(value);
                ReportPropertyChanging("EducationSourceID");
                _EducationSourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EducationSourceID");
                OnEducationSourceIDChanged();
            }
        }
        private Nullable<global::System.Int16> _EducationSourceID;
        partial void OnEducationSourceIDChanging(Nullable<global::System.Int16> value);
        partial void OnEducationSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Stage
        {
            get
            {
                return _Stage;
            }
            set
            {
                OnStageChanging(value);
                ReportPropertyChanging("Stage");
                _Stage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stage");
                OnStageChanged();
            }
        }
        private Nullable<global::System.Int16> _Stage;
        partial void OnStageChanging(Nullable<global::System.Int16> value);
        partial void OnStageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsForBeneficiary
        {
            get
            {
                return _IsForBeneficiary;
            }
            set
            {
                OnIsForBeneficiaryChanging(value);
                ReportPropertyChanging("IsForBeneficiary");
                _IsForBeneficiary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsForBeneficiary");
                OnIsForBeneficiaryChanged();
            }
        }
        private global::System.Boolean _IsForBeneficiary;
        partial void OnIsForBeneficiaryChanging(global::System.Boolean value);
        partial void OnIsForBeneficiaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsForeigner
        {
            get
            {
                return _IsForeigner;
            }
            set
            {
                OnIsForeignerChanging(value);
                ReportPropertyChanging("IsForeigner");
                _IsForeigner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsForeigner");
                OnIsForeignerChanged();
            }
        }
        private global::System.Boolean _IsForeigner;
        partial void OnIsForeignerChanging(global::System.Boolean value);
        partial void OnIsForeignerChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OrderOfAdmission_AdmissionItemTypeForm", "AdmissionItemType")]
        public AdmissionItemType AdmissionItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_OrderOfAdmission_AdmissionItemTypeForm", "AdmissionItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_OrderOfAdmission_AdmissionItemTypeForm", "AdmissionItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdmissionItemType> AdmissionItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_OrderOfAdmission_AdmissionItemTypeForm", "AdmissionItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdmissionItemType>("Import.FK_OrderOfAdmission_AdmissionItemTypeForm", "AdmissionItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OrderOfAdmission_AdmissionItemTypeLevel", "AdmissionItemType")]
        public AdmissionItemType AdmissionItemType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_OrderOfAdmission_AdmissionItemTypeLevel", "AdmissionItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_OrderOfAdmission_AdmissionItemTypeLevel", "AdmissionItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdmissionItemType> AdmissionItemType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_OrderOfAdmission_AdmissionItemTypeLevel", "AdmissionItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdmissionItemType>("Import.FK_OrderOfAdmission_AdmissionItemTypeLevel", "AdmissionItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OrderOfAdmission_AdmissionItemTypeSource", "AdmissionItemType")]
        public AdmissionItemType AdmissionItemType2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_OrderOfAdmission_AdmissionItemTypeSource", "AdmissionItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_OrderOfAdmission_AdmissionItemTypeSource", "AdmissionItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdmissionItemType> AdmissionItemType2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmissionItemType>("Import.FK_OrderOfAdmission_AdmissionItemTypeSource", "AdmissionItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdmissionItemType>("Import.FK_OrderOfAdmission_AdmissionItemTypeSource", "AdmissionItemType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OrderOfAdmission_Campaign", "Campaign")]
        public Campaign Campaign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("Import.FK_OrderOfAdmission_Campaign", "Campaign").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("Import.FK_OrderOfAdmission_Campaign", "Campaign").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Campaign> CampaignReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("Import.FK_OrderOfAdmission_Campaign", "Campaign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Campaign>("Import.FK_OrderOfAdmission_Campaign", "Campaign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OrderOfAdmission_Institution", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_OrderOfAdmission_Institution", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_OrderOfAdmission_Institution", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_OrderOfAdmission_Institution", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("Import.FK_OrderOfAdmission_Institution", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OrderOfAdmissionHistory_OrderOfAdmission", "OrderOfAdmissionHistory")]
        public EntityCollection<OrderOfAdmissionHistory> OrderOfAdmissionHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderOfAdmissionHistory>("Import.FK_OrderOfAdmissionHistory_OrderOfAdmission", "OrderOfAdmissionHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderOfAdmissionHistory>("Import.FK_OrderOfAdmissionHistory_OrderOfAdmission", "OrderOfAdmissionHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Application_OrderOfAdmission", "Application")]
        public EntityCollection<Application> Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("Import.FK_Application_OrderOfAdmission", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("Import.FK_Application_OrderOfAdmission", "Application", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="OrderOfAdmissionHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderOfAdmissionHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderOfAdmissionHistory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="applicationID">Initial value of the ApplicationID property.</param>
        /// <param name="datePublished">Initial value of the DatePublished property.</param>
        public static OrderOfAdmissionHistory CreateOrderOfAdmissionHistory(global::System.Int32 id, global::System.Int32 orderID, global::System.Int32 applicationID, global::System.DateTime datePublished)
        {
            OrderOfAdmissionHistory orderOfAdmissionHistory = new OrderOfAdmissionHistory();
            orderOfAdmissionHistory.ID = id;
            orderOfAdmissionHistory.OrderID = orderID;
            orderOfAdmissionHistory.ApplicationID = applicationID;
            orderOfAdmissionHistory.DatePublished = datePublished;
            return orderOfAdmissionHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Int32 _OrderID;
        partial void OnOrderIDChanging(global::System.Int32 value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationID
        {
            get
            {
                return _ApplicationID;
            }
            set
            {
                OnApplicationIDChanging(value);
                ReportPropertyChanging("ApplicationID");
                _ApplicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationID");
                OnApplicationIDChanged();
            }
        }
        private global::System.Int32 _ApplicationID;
        partial void OnApplicationIDChanging(global::System.Int32 value);
        partial void OnApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DatePublished
        {
            get
            {
                return _DatePublished;
            }
            set
            {
                OnDatePublishedChanging(value);
                ReportPropertyChanging("DatePublished");
                _DatePublished = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DatePublished");
                OnDatePublishedChanged();
            }
        }
        private global::System.DateTime _DatePublished;
        partial void OnDatePublishedChanging(global::System.DateTime value);
        partial void OnDatePublishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OrderOfAdmissionHistory_OrderOfAdmission", "OrderOfAdmission")]
        public OrderOfAdmission OrderOfAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderOfAdmission>("Import.FK_OrderOfAdmissionHistory_OrderOfAdmission", "OrderOfAdmission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderOfAdmission>("Import.FK_OrderOfAdmissionHistory_OrderOfAdmission", "OrderOfAdmission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderOfAdmission> OrderOfAdmissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderOfAdmission>("Import.FK_OrderOfAdmissionHistory_OrderOfAdmission", "OrderOfAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderOfAdmission>("Import.FK_OrderOfAdmissionHistory_OrderOfAdmission", "OrderOfAdmission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OrderOfAdmissionHistory_Application", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_OrderOfAdmissionHistory_Application", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_OrderOfAdmissionHistory_Application", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_OrderOfAdmissionHistory_Application", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("Import.FK_OrderOfAdmissionHistory_Application", "Application", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="ParentDirection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ParentDirection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ParentDirection object.
        /// </summary>
        /// <param name="parentDirectionID">Initial value of the ParentDirectionID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ParentDirection CreateParentDirection(global::System.Int32 parentDirectionID, global::System.String code, global::System.String name)
        {
            ParentDirection parentDirection = new ParentDirection();
            parentDirection.ParentDirectionID = parentDirectionID;
            parentDirection.Code = code;
            parentDirection.Name = name;
            return parentDirection;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ParentDirectionID
        {
            get
            {
                return _ParentDirectionID;
            }
            set
            {
                if (_ParentDirectionID != value)
                {
                    OnParentDirectionIDChanging(value);
                    ReportPropertyChanging("ParentDirectionID");
                    _ParentDirectionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParentDirectionID");
                    OnParentDirectionIDChanged();
                }
            }
        }
        private global::System.Int32 _ParentDirectionID;
        partial void OnParentDirectionIDChanging(global::System.Int32 value);
        partial void OnParentDirectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Direction_ParentDirection", "Direction")]
        public EntityCollection<Direction> Direction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Direction>("Import.FK_Direction_ParentDirection", "Direction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Direction>("Import.FK_Direction_ParentDirection", "Direction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_CompetitiveGroup_ParentDirection", "CompetitiveGroup")]
        public EntityCollection<CompetitiveGroup> CompetitiveGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitiveGroup>("Import.FK_CompetitiveGroup_ParentDirection", "CompetitiveGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitiveGroup>("Import.FK_CompetitiveGroup_ParentDirection", "CompetitiveGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_AdmissionVolume_ParentDirection", "AdmissionVolume")]
        public EntityCollection<AdmissionVolume> AdmissionVolume
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdmissionVolume>("Import.FK_AdmissionVolume_ParentDirection", "AdmissionVolume");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdmissionVolume>("Import.FK_AdmissionVolume_ParentDirection", "AdmissionVolume", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="PersonalDataAccessLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonalDataAccessLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonalDataAccessLog object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="method">Initial value of the Method property.</param>
        /// <param name="objectType">Initial value of the ObjectType property.</param>
        /// <param name="accessDate">Initial value of the AccessDate property.</param>
        public static PersonalDataAccessLog CreatePersonalDataAccessLog(global::System.Int32 id, global::System.String method, global::System.String objectType, global::System.DateTime accessDate)
        {
            PersonalDataAccessLog personalDataAccessLog = new PersonalDataAccessLog();
            personalDataAccessLog.ID = id;
            personalDataAccessLog.Method = method;
            personalDataAccessLog.ObjectType = objectType;
            personalDataAccessLog.AccessDate = accessDate;
            return personalDataAccessLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Method
        {
            get
            {
                return _Method;
            }
            set
            {
                OnMethodChanging(value);
                ReportPropertyChanging("Method");
                _Method = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Method");
                OnMethodChanged();
            }
        }
        private global::System.String _Method;
        partial void OnMethodChanging(global::System.String value);
        partial void OnMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OldData
        {
            get
            {
                return _OldData;
            }
            set
            {
                OnOldDataChanging(value);
                ReportPropertyChanging("OldData");
                _OldData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OldData");
                OnOldDataChanged();
            }
        }
        private global::System.String _OldData;
        partial void OnOldDataChanging(global::System.String value);
        partial void OnOldDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NewData
        {
            get
            {
                return _NewData;
            }
            set
            {
                OnNewDataChanging(value);
                ReportPropertyChanging("NewData");
                _NewData = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NewData");
                OnNewDataChanged();
            }
        }
        private global::System.String _NewData;
        partial void OnNewDataChanging(global::System.String value);
        partial void OnNewDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ObjectType
        {
            get
            {
                return _ObjectType;
            }
            set
            {
                OnObjectTypeChanging(value);
                ReportPropertyChanging("ObjectType");
                _ObjectType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ObjectType");
                OnObjectTypeChanged();
            }
        }
        private global::System.String _ObjectType;
        partial void OnObjectTypeChanging(global::System.String value);
        partial void OnObjectTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccessMethod
        {
            get
            {
                return _AccessMethod;
            }
            set
            {
                OnAccessMethodChanging(value);
                ReportPropertyChanging("AccessMethod");
                _AccessMethod = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccessMethod");
                OnAccessMethodChanged();
            }
        }
        private global::System.String _AccessMethod;
        partial void OnAccessMethodChanging(global::System.String value);
        partial void OnAccessMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                OnInstitutionIDChanging(value);
                ReportPropertyChanging("InstitutionID");
                _InstitutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionID");
                OnInstitutionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InstitutionID;
        partial void OnInstitutionIDChanging(Nullable<global::System.Int32> value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserLogin
        {
            get
            {
                return _UserLogin;
            }
            set
            {
                OnUserLoginChanging(value);
                ReportPropertyChanging("UserLogin");
                _UserLogin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserLogin");
                OnUserLoginChanged();
            }
        }
        private global::System.String _UserLogin;
        partial void OnUserLoginChanging(global::System.String value);
        partial void OnUserLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ObjectID
        {
            get
            {
                return _ObjectID;
            }
            set
            {
                OnObjectIDChanging(value);
                ReportPropertyChanging("ObjectID");
                _ObjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ObjectID");
                OnObjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ObjectID;
        partial void OnObjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnObjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AccessDate
        {
            get
            {
                return _AccessDate;
            }
            set
            {
                OnAccessDateChanging(value);
                ReportPropertyChanging("AccessDate");
                _AccessDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessDate");
                OnAccessDateChanged();
            }
        }
        private global::System.DateTime _AccessDate;
        partial void OnAccessDateChanging(global::System.DateTime value);
        partial void OnAccessDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="RecomendedLists")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RecomendedLists : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RecomendedLists object.
        /// </summary>
        /// <param name="recListID">Initial value of the RecListID property.</param>
        /// <param name="institutionID">Initial value of the InstitutionID property.</param>
        /// <param name="campaignID">Initial value of the CampaignID property.</param>
        /// <param name="eduLevelID">Initial value of the EduLevelID property.</param>
        /// <param name="eduFormID">Initial value of the EduFormID property.</param>
        /// <param name="competitiveGroupID">Initial value of the CompetitiveGroupID property.</param>
        /// <param name="directionID">Initial value of the DirectionID property.</param>
        /// <param name="stage">Initial value of the Stage property.</param>
        /// <param name="applicationID">Initial value of the ApplicationID property.</param>
        /// <param name="rating">Initial value of the Rating property.</param>
        public static RecomendedLists CreateRecomendedLists(global::System.Int32 recListID, global::System.Int32 institutionID, global::System.Int32 campaignID, global::System.Int32 eduLevelID, global::System.Int32 eduFormID, global::System.Int32 competitiveGroupID, global::System.Int32 directionID, global::System.Byte stage, global::System.Int32 applicationID, global::System.Decimal rating)
        {
            RecomendedLists recomendedLists = new RecomendedLists();
            recomendedLists.RecListID = recListID;
            recomendedLists.InstitutionID = institutionID;
            recomendedLists.CampaignID = campaignID;
            recomendedLists.EduLevelID = eduLevelID;
            recomendedLists.EduFormID = eduFormID;
            recomendedLists.CompetitiveGroupID = competitiveGroupID;
            recomendedLists.DirectionID = directionID;
            recomendedLists.Stage = stage;
            recomendedLists.ApplicationID = applicationID;
            recomendedLists.Rating = rating;
            return recomendedLists;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecListID
        {
            get
            {
                return _RecListID;
            }
            set
            {
                if (_RecListID != value)
                {
                    OnRecListIDChanging(value);
                    ReportPropertyChanging("RecListID");
                    _RecListID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RecListID");
                    OnRecListIDChanged();
                }
            }
        }
        private global::System.Int32 _RecListID;
        partial void OnRecListIDChanging(global::System.Int32 value);
        partial void OnRecListIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstitutionID
        {
            get
            {
                return _InstitutionID;
            }
            set
            {
                OnInstitutionIDChanging(value);
                ReportPropertyChanging("InstitutionID");
                _InstitutionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitutionID");
                OnInstitutionIDChanged();
            }
        }
        private global::System.Int32 _InstitutionID;
        partial void OnInstitutionIDChanging(global::System.Int32 value);
        partial void OnInstitutionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CampaignID
        {
            get
            {
                return _CampaignID;
            }
            set
            {
                OnCampaignIDChanging(value);
                ReportPropertyChanging("CampaignID");
                _CampaignID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CampaignID");
                OnCampaignIDChanged();
            }
        }
        private global::System.Int32 _CampaignID;
        partial void OnCampaignIDChanging(global::System.Int32 value);
        partial void OnCampaignIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EduLevelID
        {
            get
            {
                return _EduLevelID;
            }
            set
            {
                OnEduLevelIDChanging(value);
                ReportPropertyChanging("EduLevelID");
                _EduLevelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EduLevelID");
                OnEduLevelIDChanged();
            }
        }
        private global::System.Int32 _EduLevelID;
        partial void OnEduLevelIDChanging(global::System.Int32 value);
        partial void OnEduLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EduFormID
        {
            get
            {
                return _EduFormID;
            }
            set
            {
                OnEduFormIDChanging(value);
                ReportPropertyChanging("EduFormID");
                _EduFormID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EduFormID");
                OnEduFormIDChanged();
            }
        }
        private global::System.Int32 _EduFormID;
        partial void OnEduFormIDChanging(global::System.Int32 value);
        partial void OnEduFormIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitiveGroupID
        {
            get
            {
                return _CompetitiveGroupID;
            }
            set
            {
                OnCompetitiveGroupIDChanging(value);
                ReportPropertyChanging("CompetitiveGroupID");
                _CompetitiveGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompetitiveGroupID");
                OnCompetitiveGroupIDChanged();
            }
        }
        private global::System.Int32 _CompetitiveGroupID;
        partial void OnCompetitiveGroupIDChanging(global::System.Int32 value);
        partial void OnCompetitiveGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DirectionID
        {
            get
            {
                return _DirectionID;
            }
            set
            {
                OnDirectionIDChanging(value);
                ReportPropertyChanging("DirectionID");
                _DirectionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DirectionID");
                OnDirectionIDChanged();
            }
        }
        private global::System.Int32 _DirectionID;
        partial void OnDirectionIDChanging(global::System.Int32 value);
        partial void OnDirectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Stage
        {
            get
            {
                return _Stage;
            }
            set
            {
                OnStageChanging(value);
                ReportPropertyChanging("Stage");
                _Stage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stage");
                OnStageChanged();
            }
        }
        private global::System.Byte _Stage;
        partial void OnStageChanging(global::System.Byte value);
        partial void OnStageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApplicationID
        {
            get
            {
                return _ApplicationID;
            }
            set
            {
                OnApplicationIDChanging(value);
                ReportPropertyChanging("ApplicationID");
                _ApplicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationID");
                OnApplicationIDChanged();
            }
        }
        private global::System.Int32 _ApplicationID;
        partial void OnApplicationIDChanging(global::System.Int32 value);
        partial void OnApplicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private global::System.Decimal _Rating;
        partial void OnRatingChanging(global::System.Decimal value);
        partial void OnRatingChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_RecomendedLists_Application1", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_RecomendedLists_Application1", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_RecomendedLists_Application1", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("Import.FK_RecomendedLists_Application1", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("Import.FK_RecomendedLists_Application1", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_RecomendedLists_Campaign1", "Campaign")]
        public Campaign Campaign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("Import.FK_RecomendedLists_Campaign1", "Campaign").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("Import.FK_RecomendedLists_Campaign1", "Campaign").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Campaign> CampaignReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Campaign>("Import.FK_RecomendedLists_Campaign1", "Campaign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Campaign>("Import.FK_RecomendedLists_Campaign1", "Campaign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_RecomendedLists_CompetitiveGroup1", "CompetitiveGroup")]
        public CompetitiveGroup CompetitiveGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_RecomendedLists_CompetitiveGroup1", "CompetitiveGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_RecomendedLists_CompetitiveGroup1", "CompetitiveGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitiveGroup> CompetitiveGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitiveGroup>("Import.FK_RecomendedLists_CompetitiveGroup1", "CompetitiveGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitiveGroup>("Import.FK_RecomendedLists_CompetitiveGroup1", "CompetitiveGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_RecomendedLists_Direction1", "Direction")]
        public Direction Direction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_RecomendedLists_Direction1", "Direction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_RecomendedLists_Direction1", "Direction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Direction> DirectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Direction>("Import.FK_RecomendedLists_Direction1", "Direction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Direction>("Import.FK_RecomendedLists_Direction1", "Direction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_RecomendedLists_Institution1", "Institution")]
        public Institution Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_RecomendedLists_Institution1", "Institution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_RecomendedLists_Institution1", "Institution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Institution> InstitutionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Institution>("Import.FK_RecomendedLists_Institution1", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Institution>("Import.FK_RecomendedLists_Institution1", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_RecomendedListsHistory_RecomendedLists1", "RecomendedListsHistory")]
        public EntityCollection<RecomendedListsHistory> RecomendedListsHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RecomendedListsHistory>("Import.FK_RecomendedListsHistory_RecomendedLists1", "RecomendedListsHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RecomendedListsHistory>("Import.FK_RecomendedListsHistory_RecomendedLists1", "RecomendedListsHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="RecomendedListsHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RecomendedListsHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RecomendedListsHistory object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="recListID">Initial value of the RecListID property.</param>
        /// <param name="dateAdd">Initial value of the DateAdd property.</param>
        public static RecomendedListsHistory CreateRecomendedListsHistory(global::System.Int32 id, global::System.Int32 recListID, global::System.DateTime dateAdd)
        {
            RecomendedListsHistory recomendedListsHistory = new RecomendedListsHistory();
            recomendedListsHistory.ID = id;
            recomendedListsHistory.RecListID = recListID;
            recomendedListsHistory.DateAdd = dateAdd;
            return recomendedListsHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecListID
        {
            get
            {
                return _RecListID;
            }
            set
            {
                OnRecListIDChanging(value);
                ReportPropertyChanging("RecListID");
                _RecListID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecListID");
                OnRecListIDChanged();
            }
        }
        private global::System.Int32 _RecListID;
        partial void OnRecListIDChanging(global::System.Int32 value);
        partial void OnRecListIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdd
        {
            get
            {
                return _DateAdd;
            }
            set
            {
                OnDateAddChanging(value);
                ReportPropertyChanging("DateAdd");
                _DateAdd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdd");
                OnDateAddChanged();
            }
        }
        private global::System.DateTime _DateAdd;
        partial void OnDateAddChanging(global::System.DateTime value);
        partial void OnDateAddChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateDelete
        {
            get
            {
                return _DateDelete;
            }
            set
            {
                OnDateDeleteChanging(value);
                ReportPropertyChanging("DateDelete");
                _DateDelete = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateDelete");
                OnDateDeleteChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateDelete;
        partial void OnDateDeleteChanging(Nullable<global::System.DateTime> value);
        partial void OnDateDeleteChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_RecomendedListsHistory_RecomendedLists1", "RecomendedLists")]
        public RecomendedLists RecomendedLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecomendedLists>("Import.FK_RecomendedListsHistory_RecomendedLists1", "RecomendedLists").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecomendedLists>("Import.FK_RecomendedListsHistory_RecomendedLists1", "RecomendedLists").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RecomendedLists> RecomendedListsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RecomendedLists>("Import.FK_RecomendedListsHistory_RecomendedLists1", "RecomendedLists");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RecomendedLists>("Import.FK_RecomendedListsHistory_RecomendedLists1", "RecomendedLists", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="RegionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RegionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegionType object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="displayOrder">Initial value of the DisplayOrder property.</param>
        /// <param name="regionId">Initial value of the RegionId property.</param>
        public static RegionType CreateRegionType(global::System.Int32 countryID, global::System.String name, global::System.Int32 displayOrder, global::System.Int32 regionId)
        {
            RegionType regionType = new RegionType();
            regionType.CountryID = countryID;
            regionType.Name = name;
            regionType.DisplayOrder = displayOrder;
            regionType.RegionId = regionId;
            return regionType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OkatoCode
        {
            get
            {
                return _OkatoCode;
            }
            set
            {
                OnOkatoCodeChanging(value);
                ReportPropertyChanging("OkatoCode");
                _OkatoCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OkatoCode");
                OnOkatoCodeChanged();
            }
        }
        private global::System.String _OkatoCode;
        partial void OnOkatoCodeChanging(global::System.String value);
        partial void OnOkatoCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> OkatoModified
        {
            get
            {
                return _OkatoModified;
            }
            set
            {
                OnOkatoModifiedChanging(value);
                ReportPropertyChanging("OkatoModified");
                _OkatoModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OkatoModified");
                OnOkatoModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _OkatoModified;
        partial void OnOkatoModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnOkatoModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private global::System.Int32 _DisplayOrder;
        partial void OnDisplayOrderChanging(global::System.Int32 value);
        partial void OnDisplayOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EsrpCode
        {
            get
            {
                return _EsrpCode;
            }
            set
            {
                OnEsrpCodeChanging(value);
                ReportPropertyChanging("EsrpCode");
                _EsrpCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EsrpCode");
                OnEsrpCodeChanged();
            }
        }
        private global::System.String _EsrpCode;
        partial void OnEsrpCodeChanging(global::System.String value);
        partial void OnEsrpCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RegionId
        {
            get
            {
                return _RegionId;
            }
            set
            {
                if (_RegionId != value)
                {
                    OnRegionIdChanging(value);
                    ReportPropertyChanging("RegionId");
                    _RegionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegionId");
                    OnRegionIdChanged();
                }
            }
        }
        private global::System.Int32 _RegionId;
        partial void OnRegionIdChanging(global::System.Int32 value);
        partial void OnRegionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_RegionType_CountryType", "CountryType")]
        public CountryType CountryType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryType>("Import.FK_RegionType_CountryType", "CountryType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryType>("Import.FK_RegionType_CountryType", "CountryType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CountryType> CountryTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CountryType>("Import.FK_RegionType_CountryType", "CountryType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CountryType>("Import.FK_RegionType_CountryType", "CountryType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Institution_RegionType", "Institution")]
        public EntityCollection<Institution> Institution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Institution>("Import.FK_Institution_RegionType", "Institution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Institution>("Import.FK_Institution_RegionType", "Institution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_Address_RegionType", "Address")]
        public EntityCollection<Address> Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("Import.FK_Address_RegionType", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("Import.FK_Address_RegionType", "Address", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="Subject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subject object.
        /// </summary>
        /// <param name="subjectID">Initial value of the SubjectID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isEge">Initial value of the IsEge property.</param>
        public static Subject CreateSubject(global::System.Int32 subjectID, global::System.String name, global::System.Boolean isEge)
        {
            Subject subject = new Subject();
            subject.SubjectID = subjectID;
            subject.Name = name;
            subject.IsEge = isEge;
            return subject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                if (_SubjectID != value)
                {
                    OnSubjectIDChanging(value);
                    ReportPropertyChanging("SubjectID");
                    _SubjectID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubjectID");
                    OnSubjectIDChanged();
                }
            }
        }
        private global::System.Int32 _SubjectID;
        partial void OnSubjectIDChanging(global::System.Int32 value);
        partial void OnSubjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsEge
        {
            get
            {
                return _IsEge;
            }
            set
            {
                OnIsEgeChanging(value);
                ReportPropertyChanging("IsEge");
                _IsEge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEge");
                OnIsEgeChanged();
            }
        }
        private global::System.Boolean _IsEge;
        partial void OnIsEgeChanging(global::System.Boolean value);
        partial void OnIsEgeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_ApplicationEntranceTestDocument_Subject", "ApplicationEntranceTestDocument")]
        public EntityCollection<ApplicationEntranceTestDocument> ApplicationEntranceTestDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ApplicationEntranceTestDocument>("Import.FK_ApplicationEntranceTestDocument_Subject", "ApplicationEntranceTestDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ApplicationEntranceTestDocument>("Import.FK_ApplicationEntranceTestDocument_Subject", "ApplicationEntranceTestDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_EntranceTestItemC_Subject", "EntranceTestItemC")]
        public EntityCollection<EntranceTestItemC> EntranceTestItemC
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EntranceTestItemC>("Import.FK_EntranceTestItemC_Subject", "EntranceTestItemC");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EntranceTestItemC>("Import.FK_EntranceTestItemC_Subject", "EntranceTestItemC", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_DirectionSubjectLinkDirection_Subject", "DirectionSubjectLinkSubject")]
        public EntityCollection<DirectionSubjectLinkSubject> DirectionSubjectLinkSubject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DirectionSubjectLinkSubject>("Import.FK_DirectionSubjectLinkDirection_Subject", "DirectionSubjectLinkSubject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DirectionSubjectLinkSubject>("Import.FK_DirectionSubjectLinkDirection_Subject", "DirectionSubjectLinkSubject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_DirectionSubjectLinkSubject_Subject", "DirectionSubjectLinkSubject")]
        public EntityCollection<DirectionSubjectLinkSubject> DirectionSubjectLinkSubject1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DirectionSubjectLinkSubject>("Import.FK_DirectionSubjectLinkSubject_Subject", "DirectionSubjectLinkSubject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DirectionSubjectLinkSubject>("Import.FK_DirectionSubjectLinkSubject_Subject", "DirectionSubjectLinkSubject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_SubjectEgeMinValue_Subject", "SubjectEgeMinValue")]
        public EntityCollection<SubjectEgeMinValue> SubjectEgeMinValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubjectEgeMinValue>("Import.FK_SubjectEgeMinValue_Subject", "SubjectEgeMinValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubjectEgeMinValue>("Import.FK_SubjectEgeMinValue_Subject", "SubjectEgeMinValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_DirectionSubjectLink_Subject", "DirectionSubjectLink")]
        public EntityCollection<DirectionSubjectLink> DirectionSubjectLink
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DirectionSubjectLink>("Import.FK_DirectionSubjectLink_Subject", "DirectionSubjectLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DirectionSubjectLink>("Import.FK_DirectionSubjectLink_Subject", "DirectionSubjectLink", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_OlympicTypeSubjectLink_Subject", "OlympicTypeSubjectLink")]
        public EntityCollection<OlympicTypeSubjectLink> OlympicTypeSubjectLink
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OlympicTypeSubjectLink>("Import.FK_OlympicTypeSubjectLink_Subject", "OlympicTypeSubjectLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OlympicTypeSubjectLink>("Import.FK_OlympicTypeSubjectLink_Subject", "OlympicTypeSubjectLink", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_BenefitItemSubject_Subject1", "BenefitItemSubject")]
        public EntityCollection<BenefitItemSubject> BenefitItemSubject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BenefitItemSubject>("Import.FK_BenefitItemSubject_Subject1", "BenefitItemSubject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BenefitItemSubject>("Import.FK_BenefitItemSubject_Subject1", "BenefitItemSubject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Import", Name="SubjectEgeMinValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubjectEgeMinValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubjectEgeMinValue object.
        /// </summary>
        /// <param name="scoreID">Initial value of the ScoreID property.</param>
        /// <param name="subjectID">Initial value of the SubjectID property.</param>
        /// <param name="minValue">Initial value of the MinValue property.</param>
        public static SubjectEgeMinValue CreateSubjectEgeMinValue(global::System.Int32 scoreID, global::System.Int32 subjectID, global::System.Int32 minValue)
        {
            SubjectEgeMinValue subjectEgeMinValue = new SubjectEgeMinValue();
            subjectEgeMinValue.ScoreID = scoreID;
            subjectEgeMinValue.SubjectID = subjectID;
            subjectEgeMinValue.MinValue = minValue;
            return subjectEgeMinValue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ScoreID
        {
            get
            {
                return _ScoreID;
            }
            set
            {
                if (_ScoreID != value)
                {
                    OnScoreIDChanging(value);
                    ReportPropertyChanging("ScoreID");
                    _ScoreID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScoreID");
                    OnScoreIDChanged();
                }
            }
        }
        private global::System.Int32 _ScoreID;
        partial void OnScoreIDChanging(global::System.Int32 value);
        partial void OnScoreIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private global::System.Int32 _SubjectID;
        partial void OnSubjectIDChanging(global::System.Int32 value);
        partial void OnSubjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinValue
        {
            get
            {
                return _MinValue;
            }
            set
            {
                OnMinValueChanging(value);
                ReportPropertyChanging("MinValue");
                _MinValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinValue");
                OnMinValueChanged();
            }
        }
        private global::System.Int32 _MinValue;
        partial void OnMinValueChanging(global::System.Int32 value);
        partial void OnMinValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Import", "FK_SubjectEgeMinValue_Subject", "Subject")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_SubjectEgeMinValue_Subject", "Subject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_SubjectEgeMinValue_Subject", "Subject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("Import.FK_SubjectEgeMinValue_Subject", "Subject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("Import.FK_SubjectEgeMinValue_Subject", "Subject", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
