#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GVUZ.DAL.Tests.TestHelpers.L2SFBS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FBS")]
	public partial class FBSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertHumanTest(HumanTest instance);
    partial void UpdateHumanTest(HumanTest instance);
    partial void DeleteHumanTest(HumanTest instance);
    partial void InsertAppealStatus(AppealStatus instance);
    partial void UpdateAppealStatus(AppealStatus instance);
    partial void DeleteAppealStatus(AppealStatus instance);
    partial void InsertSubject(Subject instance);
    partial void UpdateSubject(Subject instance);
    partial void DeleteSubject(Subject instance);
    partial void InsertWave(Wave instance);
    partial void UpdateWave(Wave instance);
    partial void DeleteWave(Wave instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertAccountIp(AccountIp instance);
    partial void UpdateAccountIp(AccountIp instance);
    partial void DeleteAccountIp(AccountIp instance);
    partial void InsertAccountLog(AccountLog instance);
    partial void UpdateAccountLog(AccountLog instance);
    partial void DeleteAccountLog(AccountLog instance);
    partial void InsertAskedQuestion(AskedQuestion instance);
    partial void UpdateAskedQuestion(AskedQuestion instance);
    partial void DeleteAskedQuestion(AskedQuestion instance);
    partial void InsertAskedQuestionContext(AskedQuestionContext instance);
    partial void UpdateAskedQuestionContext(AskedQuestionContext instance);
    partial void DeleteAskedQuestionContext(AskedQuestionContext instance);
    partial void InsertBanData(BanData instance);
    partial void UpdateBanData(BanData instance);
    partial void DeleteBanData(BanData instance);
    partial void InsertBatchGUID(BatchGUID instance);
    partial void UpdateBatchGUID(BatchGUID instance);
    partial void DeleteBatchGUID(BatchGUID instance);
    partial void InsertCancelledCertificate(CancelledCertificate instance);
    partial void UpdateCancelledCertificate(CancelledCertificate instance);
    partial void DeleteCancelledCertificate(CancelledCertificate instance);
    partial void InsertCheckHistory(CheckHistory instance);
    partial void UpdateCheckHistory(CheckHistory instance);
    partial void DeleteCheckHistory(CheckHistory instance);
    partial void InsertCheckResultsHistory(CheckResultsHistory instance);
    partial void UpdateCheckResultsHistory(CheckResultsHistory instance);
    partial void DeleteCheckResultsHistory(CheckResultsHistory instance);
    partial void InsertCheckSenderType(CheckSenderType instance);
    partial void UpdateCheckSenderType(CheckSenderType instance);
    partial void DeleteCheckSenderType(CheckSenderType instance);
    partial void InsertCheckType(CheckType instance);
    partial void UpdateCheckType(CheckType instance);
    partial void DeleteCheckType(CheckType instance);
    partial void InsertCNEWebUICheckLog(CNEWebUICheckLog instance);
    partial void UpdateCNEWebUICheckLog(CNEWebUICheckLog instance);
    partial void DeleteCNEWebUICheckLog(CNEWebUICheckLog instance);
    partial void InsertCommonNationalExamCertificate(CommonNationalExamCertificate instance);
    partial void UpdateCommonNationalExamCertificate(CommonNationalExamCertificate instance);
    partial void DeleteCommonNationalExamCertificate(CommonNationalExamCertificate instance);
    partial void InsertCommonNationalExamCertificateCheck(CommonNationalExamCertificateCheck instance);
    partial void UpdateCommonNationalExamCertificateCheck(CommonNationalExamCertificateCheck instance);
    partial void DeleteCommonNationalExamCertificateCheck(CommonNationalExamCertificateCheck instance);
    partial void InsertCommonNationalExamCertificateCheckBatch(CommonNationalExamCertificateCheckBatch instance);
    partial void UpdateCommonNationalExamCertificateCheckBatch(CommonNationalExamCertificateCheckBatch instance);
    partial void DeleteCommonNationalExamCertificateCheckBatch(CommonNationalExamCertificateCheckBatch instance);
    partial void InsertCommonNationalExamCertificateDeny(CommonNationalExamCertificateDeny instance);
    partial void UpdateCommonNationalExamCertificateDeny(CommonNationalExamCertificateDeny instance);
    partial void DeleteCommonNationalExamCertificateDeny(CommonNationalExamCertificateDeny instance);
    partial void InsertCommonNationalExamCertificateDenyLoadingTask(CommonNationalExamCertificateDenyLoadingTask instance);
    partial void UpdateCommonNationalExamCertificateDenyLoadingTask(CommonNationalExamCertificateDenyLoadingTask instance);
    partial void DeleteCommonNationalExamCertificateDenyLoadingTask(CommonNationalExamCertificateDenyLoadingTask instance);
    partial void InsertCommonNationalExamCertificateForm(CommonNationalExamCertificateForm instance);
    partial void UpdateCommonNationalExamCertificateForm(CommonNationalExamCertificateForm instance);
    partial void DeleteCommonNationalExamCertificateForm(CommonNationalExamCertificateForm instance);
    partial void InsertCommonNationalExamCertificateFormNumberRange(CommonNationalExamCertificateFormNumberRange instance);
    partial void UpdateCommonNationalExamCertificateFormNumberRange(CommonNationalExamCertificateFormNumberRange instance);
    partial void DeleteCommonNationalExamCertificateFormNumberRange(CommonNationalExamCertificateFormNumberRange instance);
    partial void InsertCommonNationalExamCertificateLoadingTask(CommonNationalExamCertificateLoadingTask instance);
    partial void UpdateCommonNationalExamCertificateLoadingTask(CommonNationalExamCertificateLoadingTask instance);
    partial void DeleteCommonNationalExamCertificateLoadingTask(CommonNationalExamCertificateLoadingTask instance);
    partial void InsertCommonNationalExamCertificateLoadingTaskError(CommonNationalExamCertificateLoadingTaskError instance);
    partial void UpdateCommonNationalExamCertificateLoadingTaskError(CommonNationalExamCertificateLoadingTaskError instance);
    partial void DeleteCommonNationalExamCertificateLoadingTaskError(CommonNationalExamCertificateLoadingTaskError instance);
    partial void InsertCommonNationalExamCertificateRequest(CommonNationalExamCertificateRequest instance);
    partial void UpdateCommonNationalExamCertificateRequest(CommonNationalExamCertificateRequest instance);
    partial void DeleteCommonNationalExamCertificateRequest(CommonNationalExamCertificateRequest instance);
    partial void InsertCommonNationalExamCertificateRequestBatch(CommonNationalExamCertificateRequestBatch instance);
    partial void UpdateCommonNationalExamCertificateRequestBatch(CommonNationalExamCertificateRequestBatch instance);
    partial void DeleteCommonNationalExamCertificateRequestBatch(CommonNationalExamCertificateRequestBatch instance);
    partial void InsertCommonNationalExamCertificateSubject(CommonNationalExamCertificateSubject instance);
    partial void UpdateCommonNationalExamCertificateSubject(CommonNationalExamCertificateSubject instance);
    partial void DeleteCommonNationalExamCertificateSubject(CommonNationalExamCertificateSubject instance);
    partial void InsertCommonNationalExamCertificateSubjectCheck(CommonNationalExamCertificateSubjectCheck instance);
    partial void UpdateCommonNationalExamCertificateSubjectCheck(CommonNationalExamCertificateSubjectCheck instance);
    partial void DeleteCommonNationalExamCertificateSubjectCheck(CommonNationalExamCertificateSubjectCheck instance);
    partial void InsertCommonNationalExamCertificateSubjectForm(CommonNationalExamCertificateSubjectForm instance);
    partial void UpdateCommonNationalExamCertificateSubjectForm(CommonNationalExamCertificateSubjectForm instance);
    partial void DeleteCommonNationalExamCertificateSubjectForm(CommonNationalExamCertificateSubjectForm instance);
    partial void InsertCommonNationalExamCertificateSumCheck(CommonNationalExamCertificateSumCheck instance);
    partial void UpdateCommonNationalExamCertificateSumCheck(CommonNationalExamCertificateSumCheck instance);
    partial void DeleteCommonNationalExamCertificateSumCheck(CommonNationalExamCertificateSumCheck instance);
    partial void InsertCompetitionCertificate(CompetitionCertificate instance);
    partial void UpdateCompetitionCertificate(CompetitionCertificate instance);
    partial void DeleteCompetitionCertificate(CompetitionCertificate instance);
    partial void InsertCompetitionCertificateRequest(CompetitionCertificateRequest instance);
    partial void UpdateCompetitionCertificateRequest(CompetitionCertificateRequest instance);
    partial void DeleteCompetitionCertificateRequest(CompetitionCertificateRequest instance);
    partial void InsertCompetitionCertificateRequestBatch(CompetitionCertificateRequestBatch instance);
    partial void UpdateCompetitionCertificateRequestBatch(CompetitionCertificateRequestBatch instance);
    partial void DeleteCompetitionCertificateRequestBatch(CompetitionCertificateRequestBatch instance);
    partial void InsertContext(Context instance);
    partial void UpdateContext(Context instance);
    partial void DeleteContext(Context instance);
    partial void Insertdba_indexDefragLog(dba_indexDefragLog instance);
    partial void Updatedba_indexDefragLog(dba_indexDefragLog instance);
    partial void Deletedba_indexDefragLog(dba_indexDefragLog instance);
    partial void InsertDelivery(Delivery instance);
    partial void UpdateDelivery(Delivery instance);
    partial void DeleteDelivery(Delivery instance);
    partial void InsertDeliveryStatus(DeliveryStatus instance);
    partial void UpdateDeliveryStatus(DeliveryStatus instance);
    partial void DeleteDeliveryStatus(DeliveryStatus instance);
    partial void InsertDeprecatedCommonNationalExamCertificateSubject(DeprecatedCommonNationalExamCertificateSubject instance);
    partial void UpdateDeprecatedCommonNationalExamCertificateSubject(DeprecatedCommonNationalExamCertificateSubject instance);
    partial void DeleteDeprecatedCommonNationalExamCertificateSubject(DeprecatedCommonNationalExamCertificateSubject instance);
    partial void InsertDocument(Document instance);
    partial void UpdateDocument(Document instance);
    partial void DeleteDocument(Document instance);
    partial void InsertDocumentContext(DocumentContext instance);
    partial void UpdateDocumentContext(DocumentContext instance);
    partial void DeleteDocumentContext(DocumentContext instance);
    partial void InsertEntrant(Entrant instance);
    partial void UpdateEntrant(Entrant instance);
    partial void DeleteEntrant(Entrant instance);
    partial void InsertEntrantCheck(EntrantCheck instance);
    partial void UpdateEntrantCheck(EntrantCheck instance);
    partial void DeleteEntrantCheck(EntrantCheck instance);
    partial void InsertEntrantCheckBatch(EntrantCheckBatch instance);
    partial void UpdateEntrantCheckBatch(EntrantCheckBatch instance);
    partial void DeleteEntrantCheckBatch(EntrantCheckBatch instance);
    partial void InsertEntrantRenunciation(EntrantRenunciation instance);
    partial void UpdateEntrantRenunciation(EntrantRenunciation instance);
    partial void DeleteEntrantRenunciation(EntrantRenunciation instance);
    partial void InsertEventLog(EventLog instance);
    partial void UpdateEventLog(EventLog instance);
    partial void DeleteEventLog(EventLog instance);
    partial void InsertExamCertificateUniqueCheck(ExamCertificateUniqueCheck instance);
    partial void UpdateExamCertificateUniqueCheck(ExamCertificateUniqueCheck instance);
    partial void DeleteExamCertificateUniqueCheck(ExamCertificateUniqueCheck instance);
    partial void InsertExpireDate(ExpireDate instance);
    partial void UpdateExpireDate(ExpireDate instance);
    partial void DeleteExpireDate(ExpireDate instance);
    partial void InsertFederalDistrict(FederalDistrict instance);
    partial void UpdateFederalDistrict(FederalDistrict instance);
    partial void DeleteFederalDistrict(FederalDistrict instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertGroupRole(GroupRole instance);
    partial void UpdateGroupRole(GroupRole instance);
    partial void DeleteGroupRole(GroupRole instance);
    partial void InsertImportingCommonNationalExamCertificate(ImportingCommonNationalExamCertificate instance);
    partial void UpdateImportingCommonNationalExamCertificate(ImportingCommonNationalExamCertificate instance);
    partial void DeleteImportingCommonNationalExamCertificate(ImportingCommonNationalExamCertificate instance);
    partial void InsertImportingCommonNationalExamCertificateDeny(ImportingCommonNationalExamCertificateDeny instance);
    partial void UpdateImportingCommonNationalExamCertificateDeny(ImportingCommonNationalExamCertificateDeny instance);
    partial void DeleteImportingCommonNationalExamCertificateDeny(ImportingCommonNationalExamCertificateDeny instance);
    partial void InsertImportingCommonNationalExamCertificateSubject(ImportingCommonNationalExamCertificateSubject instance);
    partial void UpdateImportingCommonNationalExamCertificateSubject(ImportingCommonNationalExamCertificateSubject instance);
    partial void DeleteImportingCommonNationalExamCertificateSubject(ImportingCommonNationalExamCertificateSubject instance);
    partial void InsertMinimalMark(MinimalMark instance);
    partial void UpdateMinimalMark(MinimalMark instance);
    partial void DeleteMinimalMark(MinimalMark instance);
    partial void InsertNew(New instance);
    partial void UpdateNew(New instance);
    partial void DeleteNew(New instance);
    partial void InsertOlympicDiplomant(OlympicDiplomant instance);
    partial void UpdateOlympicDiplomant(OlympicDiplomant instance);
    partial void DeleteOlympicDiplomant(OlympicDiplomant instance);
    partial void InsertOlympicParticipant(OlympicParticipant instance);
    partial void UpdateOlympicParticipant(OlympicParticipant instance);
    partial void DeleteOlympicParticipant(OlympicParticipant instance);
    partial void InsertOlympicProfileSubject(OlympicProfileSubject instance);
    partial void UpdateOlympicProfileSubject(OlympicProfileSubject instance);
    partial void DeleteOlympicProfileSubject(OlympicProfileSubject instance);
    partial void InsertOlympic(Olympic instance);
    partial void UpdateOlympic(Olympic instance);
    partial void DeleteOlympic(Olympic instance);
    partial void InsertOlympicSubject(OlympicSubject instance);
    partial void UpdateOlympicSubject(OlympicSubject instance);
    partial void DeleteOlympicSubject(OlympicSubject instance);
    partial void InsertOlympicThemeSubject(OlympicThemeSubject instance);
    partial void UpdateOlympicThemeSubject(OlympicThemeSubject instance);
    partial void DeleteOlympicThemeSubject(OlympicThemeSubject instance);
    partial void InsertOlympicToFbsSubjectMap(OlympicToFbsSubjectMap instance);
    partial void UpdateOlympicToFbsSubjectMap(OlympicToFbsSubjectMap instance);
    partial void DeleteOlympicToFbsSubjectMap(OlympicToFbsSubjectMap instance);
    partial void InsertOperatorLog(OperatorLog instance);
    partial void UpdateOperatorLog(OperatorLog instance);
    partial void DeleteOperatorLog(OperatorLog instance);
    partial void InsertOrganization2010(Organization2010 instance);
    partial void UpdateOrganization2010(Organization2010 instance);
    partial void DeleteOrganization2010(Organization2010 instance);
    partial void InsertOrganizationCertificateCheck(OrganizationCertificateCheck instance);
    partial void UpdateOrganizationCertificateCheck(OrganizationCertificateCheck instance);
    partial void DeleteOrganizationCertificateCheck(OrganizationCertificateCheck instance);
    partial void InsertOrganizationKind(OrganizationKind instance);
    partial void UpdateOrganizationKind(OrganizationKind instance);
    partial void DeleteOrganizationKind(OrganizationKind instance);
    partial void InsertOrganizationLog(OrganizationLog instance);
    partial void UpdateOrganizationLog(OrganizationLog instance);
    partial void DeleteOrganizationLog(OrganizationLog instance);
    partial void InsertOrganizationOperatingStatus(OrganizationOperatingStatus instance);
    partial void UpdateOrganizationOperatingStatus(OrganizationOperatingStatus instance);
    partial void DeleteOrganizationOperatingStatus(OrganizationOperatingStatus instance);
    partial void InsertOrganizationRequest2010(OrganizationRequest2010 instance);
    partial void UpdateOrganizationRequest2010(OrganizationRequest2010 instance);
    partial void DeleteOrganizationRequest2010(OrganizationRequest2010 instance);
    partial void InsertOrganizationType2010(OrganizationType2010 instance);
    partial void UpdateOrganizationType2010(OrganizationType2010 instance);
    partial void DeleteOrganizationType2010(OrganizationType2010 instance);
    partial void InsertOrganizationUpdateHistory(OrganizationUpdateHistory instance);
    partial void UpdateOrganizationUpdateHistory(OrganizationUpdateHistory instance);
    partial void DeleteOrganizationUpdateHistory(OrganizationUpdateHistory instance);
    partial void InsertRecruitmentCampaign(RecruitmentCampaign instance);
    partial void UpdateRecruitmentCampaign(RecruitmentCampaign instance);
    partial void DeleteRecruitmentCampaign(RecruitmentCampaign instance);
    partial void InsertRegion(Region instance);
    partial void UpdateRegion(Region instance);
    partial void DeleteRegion(Region instance);
    partial void InsertReport(Report instance);
    partial void UpdateReport(Report instance);
    partial void DeleteReport(Report instance);
    partial void InsertResultGlobalStatuse(ResultGlobalStatuse instance);
    partial void UpdateResultGlobalStatuse(ResultGlobalStatuse instance);
    partial void DeleteResultGlobalStatuse(ResultGlobalStatuse instance);
    partial void InsertResultStatuse(ResultStatuse instance);
    partial void UpdateResultStatuse(ResultStatuse instance);
    partial void DeleteResultStatuse(ResultStatuse instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertSchoolLeavingCertificateCheck(SchoolLeavingCertificateCheck instance);
    partial void UpdateSchoolLeavingCertificateCheck(SchoolLeavingCertificateCheck instance);
    partial void DeleteSchoolLeavingCertificateCheck(SchoolLeavingCertificateCheck instance);
    partial void InsertSchoolLeavingCertificateCheckBatch(SchoolLeavingCertificateCheckBatch instance);
    partial void UpdateSchoolLeavingCertificateCheckBatch(SchoolLeavingCertificateCheckBatch instance);
    partial void DeleteSchoolLeavingCertificateCheckBatch(SchoolLeavingCertificateCheckBatch instance);
    partial void InsertSchoolLeavingCertificateDeny(SchoolLeavingCertificateDeny instance);
    partial void UpdateSchoolLeavingCertificateDeny(SchoolLeavingCertificateDeny instance);
    partial void DeleteSchoolLeavingCertificateDeny(SchoolLeavingCertificateDeny instance);
    partial void InsertSubject1(Subject1 instance);
    partial void UpdateSubject1(Subject1 instance);
    partial void DeleteSubject1(Subject1 instance);
    partial void InsertSubjectMapping(SubjectMapping instance);
    partial void UpdateSubjectMapping(SubjectMapping instance);
    partial void DeleteSubjectMapping(SubjectMapping instance);
    partial void InsertUserAccountPassword(UserAccountPassword instance);
    partial void UpdateUserAccountPassword(UserAccountPassword instance);
    partial void DeleteUserAccountPassword(UserAccountPassword instance);
    partial void InsertCancelledCertificatesA(CancelledCertificatesA instance);
    partial void UpdateCancelledCertificatesA(CancelledCertificatesA instance);
    partial void DeleteCancelledCertificatesA(CancelledCertificatesA instance);
    partial void InsertCancelledCertificatesB(CancelledCertificatesB instance);
    partial void UpdateCancelledCertificatesB(CancelledCertificatesB instance);
    partial void DeleteCancelledCertificatesB(CancelledCertificatesB instance);
    partial void InsertCertificatesA(CertificatesA instance);
    partial void UpdateCertificatesA(CertificatesA instance);
    partial void DeleteCertificatesA(CertificatesA instance);
    partial void InsertCertificatesB(CertificatesB instance);
    partial void UpdateCertificatesB(CertificatesB instance);
    partial void DeleteCertificatesB(CertificatesB instance);
    partial void InsertCertificatesMarksA(CertificatesMarksA instance);
    partial void UpdateCertificatesMarksA(CertificatesMarksA instance);
    partial void DeleteCertificatesMarksA(CertificatesMarksA instance);
    partial void InsertCertificatesMarksB(CertificatesMarksB instance);
    partial void UpdateCertificatesMarksB(CertificatesMarksB instance);
    partial void DeleteCertificatesMarksB(CertificatesMarksB instance);
    partial void InsertParticipantsA(ParticipantsA instance);
    partial void UpdateParticipantsA(ParticipantsA instance);
    partial void DeleteParticipantsA(ParticipantsA instance);
    partial void InsertParticipantsB(ParticipantsB instance);
    partial void UpdateParticipantsB(ParticipantsB instance);
    partial void DeleteParticipantsB(ParticipantsB instance);
    partial void InsertDocumentType(DocumentType instance);
    partial void UpdateDocumentType(DocumentType instance);
    partial void DeleteDocumentType(DocumentType instance);
    partial void InsertParticipantCategory(ParticipantCategory instance);
    partial void UpdateParticipantCategory(ParticipantCategory instance);
    partial void DeleteParticipantCategory(ParticipantCategory instance);
    partial void InsertRegion1(Region1 instance);
    partial void UpdateRegion1(Region1 instance);
    partial void DeleteRegion1(Region1 instance);
    partial void InsertResultStatuse1(ResultStatuse1 instance);
    partial void UpdateResultStatuse1(ResultStatuse1 instance);
    partial void DeleteResultStatuse1(ResultStatuse1 instance);
    partial void InsertTranslation_RVIDT_ParticipantDT(Translation_RVIDT_ParticipantDT instance);
    partial void UpdateTranslation_RVIDT_ParticipantDT(Translation_RVIDT_ParticipantDT instance);
    partial void DeleteTranslation_RVIDT_ParticipantDT(Translation_RVIDT_ParticipantDT instance);
    #endregion
		
		public FBSDataContext() : 
				base(global::GVUZ.DAL.Tests.Properties.Settings.Default.FBSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FBSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FBSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FBSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FBSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<HumanTest> HumanTests
		{
			get
			{
				return this.GetTable<HumanTest>();
			}
		}
		
		public System.Data.Linq.Table<AppealStatus> AppealStatus
		{
			get
			{
				return this.GetTable<AppealStatus>();
			}
		}
		
		public System.Data.Linq.Table<Subject> Subjects
		{
			get
			{
				return this.GetTable<Subject>();
			}
		}
		
		public System.Data.Linq.Table<Wave> Waves
		{
			get
			{
				return this.GetTable<Wave>();
			}
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<AccountIp> AccountIps
		{
			get
			{
				return this.GetTable<AccountIp>();
			}
		}
		
		public System.Data.Linq.Table<AccountKey> AccountKeys
		{
			get
			{
				return this.GetTable<AccountKey>();
			}
		}
		
		public System.Data.Linq.Table<AccountLog> AccountLogs
		{
			get
			{
				return this.GetTable<AccountLog>();
			}
		}
		
		public System.Data.Linq.Table<AccountRoleActivity> AccountRoleActivities
		{
			get
			{
				return this.GetTable<AccountRoleActivity>();
			}
		}
		
		public System.Data.Linq.Table<ApplicantCheck> ApplicantChecks
		{
			get
			{
				return this.GetTable<ApplicantCheck>();
			}
		}
		
		public System.Data.Linq.Table<AskedQuestion> AskedQuestions
		{
			get
			{
				return this.GetTable<AskedQuestion>();
			}
		}
		
		public System.Data.Linq.Table<AskedQuestionContext> AskedQuestionContexts
		{
			get
			{
				return this.GetTable<AskedQuestionContext>();
			}
		}
		
		public System.Data.Linq.Table<BanData> BanDatas
		{
			get
			{
				return this.GetTable<BanData>();
			}
		}
		
		public System.Data.Linq.Table<BatchGUID> BatchGUIDs
		{
			get
			{
				return this.GetTable<BatchGUID>();
			}
		}
		
		public System.Data.Linq.Table<BatchProcessLog> BatchProcessLogs
		{
			get
			{
				return this.GetTable<BatchProcessLog>();
			}
		}
		
		public System.Data.Linq.Table<CancelledCertificate> CancelledCertificates
		{
			get
			{
				return this.GetTable<CancelledCertificate>();
			}
		}
		
		public System.Data.Linq.Table<CheckCommonNationalExamCertificateLog> CheckCommonNationalExamCertificateLogs
		{
			get
			{
				return this.GetTable<CheckCommonNationalExamCertificateLog>();
			}
		}
		
		public System.Data.Linq.Table<CheckHistory> CheckHistories
		{
			get
			{
				return this.GetTable<CheckHistory>();
			}
		}
		
		public System.Data.Linq.Table<CheckResultsHistory> CheckResultsHistories
		{
			get
			{
				return this.GetTable<CheckResultsHistory>();
			}
		}
		
		public System.Data.Linq.Table<CheckSenderType> CheckSenderTypes
		{
			get
			{
				return this.GetTable<CheckSenderType>();
			}
		}
		
		public System.Data.Linq.Table<CheckType> CheckTypes
		{
			get
			{
				return this.GetTable<CheckType>();
			}
		}
		
		public System.Data.Linq.Table<CNEWebUICheckLog> CNEWebUICheckLogs
		{
			get
			{
				return this.GetTable<CNEWebUICheckLog>();
			}
		}
		
		public System.Data.Linq.Table<CommonNationalExamCertificate> CommonNationalExamCertificates
		{
			get
			{
				return this.GetTable<CommonNationalExamCertificate>();
			}
		}
		
		public System.Data.Linq.Table<CommonNationalExamCertificateCheck> CommonNationalExamCertificateChecks
		{
			get
			{
				return this.GetTable<CommonNationalExamCertificateCheck>();
			}
		}
		
		public System.Data.Linq.Table<CommonNationalExamCertificateCheckBatch> CommonNationalExamCertificateCheckBatches
		{
			get
			{
				return this.GetTable<CommonNationalExamCertificateCheckBatch>();
			}
		}
		
		public System.Data.Linq.Table<CommonNationalExamCertificateCheckLog> CommonNationalExamCertificateCheckLogs
		{
			get
			{
				return this.GetTable<CommonNationalExamCertificateCheckLog>();
			}
		}
		
		public System.Data.Linq.Table<CommonNationalExamCertificateDeny> CommonNationalExamCertificateDenies
		{
			get
			{
				return this.GetTable<CommonNationalExamCertificateDeny>();
			}
		}
		
		public System.Data.Linq.Table<CommonNationalExamCertificateDenyLoadingTask> CommonNationalExamCertificateDenyLoadingTasks
		{
			get
			{
				return this.GetTable<CommonNationalExamCertificateDenyLoadingTask>();
			}
		}
		
		public System.Data.Linq.Table<CommonNationalExamCertificateDenyLoadingTaskError> CommonNationalExamCertificateDenyLoadingTaskErrors
		{
			get
			{
				return this.GetTable<CommonNationalExamCertificateDenyLoadingTaskError>();
			}
		}
		
		public System.Data.Linq.Table<CommonNationalExamCertificateForm> CommonNationalExamCertificateForms
		{
			get
			{
				return this.GetTable<CommonNationalExamCertificateForm>();
			}
		}
		
		public System.Data.Linq.Table<CommonNationalExamCertificateFormNumberRange> CommonNationalExamCertificateFormNumberRanges
		{
			get
			{
				return this.GetTable<CommonNationalExamCertificateFormNumberRange>();
			}
		}
		
		public System.Data.Linq.Table<CommonNationalExamCertificateLoadingTask> CommonNationalExamCertificateLoadingTasks
		{
			get
			{
				return this.GetTable<CommonNationalExamCertificateLoadingTask>();
			}
		}
		
		public System.Data.Linq.Table<CommonNationalExamCertificateLoadingTaskError> CommonNationalExamCertificateLoadingTaskErrors
		{
			get
			{
				return this.GetTable<CommonNationalExamCertificateLoadingTaskError>();
			}
		}
		
		public System.Data.Linq.Table<CommonNationalExamCertificateRequest> CommonNationalExamCertificateRequests
		{
			get
			{
				return this.GetTable<CommonNationalExamCertificateRequest>();
			}
		}
		
		public System.Data.Linq.Table<CommonNationalExamCertificateRequestBatch> CommonNationalExamCertificateRequestBatches
		{
			get
			{
				return this.GetTable<CommonNationalExamCertificateRequestBatch>();
			}
		}
		
		public System.Data.Linq.Table<CommonNationalExamCertificateSubject> CommonNationalExamCertificateSubjects
		{
			get
			{
				return this.GetTable<CommonNationalExamCertificateSubject>();
			}
		}
		
		public System.Data.Linq.Table<CommonNationalExamCertificateSubjectCheck> CommonNationalExamCertificateSubjectChecks
		{
			get
			{
				return this.GetTable<CommonNationalExamCertificateSubjectCheck>();
			}
		}
		
		public System.Data.Linq.Table<CommonNationalExamCertificateSubjectForm> CommonNationalExamCertificateSubjectForms
		{
			get
			{
				return this.GetTable<CommonNationalExamCertificateSubjectForm>();
			}
		}
		
		public System.Data.Linq.Table<CommonNationalExamCertificateSumCheck> CommonNationalExamCertificateSumChecks
		{
			get
			{
				return this.GetTable<CommonNationalExamCertificateSumCheck>();
			}
		}
		
		public System.Data.Linq.Table<CompetitionCertificate> CompetitionCertificates
		{
			get
			{
				return this.GetTable<CompetitionCertificate>();
			}
		}
		
		public System.Data.Linq.Table<CompetitionCertificateRequest> CompetitionCertificateRequests
		{
			get
			{
				return this.GetTable<CompetitionCertificateRequest>();
			}
		}
		
		public System.Data.Linq.Table<CompetitionCertificateRequestBatch> CompetitionCertificateRequestBatches
		{
			get
			{
				return this.GetTable<CompetitionCertificateRequestBatch>();
			}
		}
		
		public System.Data.Linq.Table<CompetitionType> CompetitionTypes
		{
			get
			{
				return this.GetTable<CompetitionType>();
			}
		}
		
		public System.Data.Linq.Table<Context> Contexts
		{
			get
			{
				return this.GetTable<Context>();
			}
		}
		
		public System.Data.Linq.Table<dba_indexDefragLog> dba_indexDefragLogs
		{
			get
			{
				return this.GetTable<dba_indexDefragLog>();
			}
		}
		
		public System.Data.Linq.Table<Delivery> Deliveries
		{
			get
			{
				return this.GetTable<Delivery>();
			}
		}
		
		public System.Data.Linq.Table<DeliveryLog> DeliveryLogs
		{
			get
			{
				return this.GetTable<DeliveryLog>();
			}
		}
		
		public System.Data.Linq.Table<DeliveryRecipient> DeliveryRecipients
		{
			get
			{
				return this.GetTable<DeliveryRecipient>();
			}
		}
		
		public System.Data.Linq.Table<DeliveryStatus> DeliveryStatus
		{
			get
			{
				return this.GetTable<DeliveryStatus>();
			}
		}
		
		public System.Data.Linq.Table<DeprecatedCommonNationalExamCertificate> DeprecatedCommonNationalExamCertificates
		{
			get
			{
				return this.GetTable<DeprecatedCommonNationalExamCertificate>();
			}
		}
		
		public System.Data.Linq.Table<DeprecatedCommonNationalExamCertificateSubject> DeprecatedCommonNationalExamCertificateSubjects
		{
			get
			{
				return this.GetTable<DeprecatedCommonNationalExamCertificateSubject>();
			}
		}
		
		public System.Data.Linq.Table<Document> Documents
		{
			get
			{
				return this.GetTable<Document>();
			}
		}
		
		public System.Data.Linq.Table<DocumentContext> DocumentContexts
		{
			get
			{
				return this.GetTable<DocumentContext>();
			}
		}
		
		public System.Data.Linq.Table<Double> Doubles
		{
			get
			{
				return this.GetTable<Double>();
			}
		}
		
		public System.Data.Linq.Table<Entrant> Entrants
		{
			get
			{
				return this.GetTable<Entrant>();
			}
		}
		
		public System.Data.Linq.Table<EntrantCheck> EntrantChecks
		{
			get
			{
				return this.GetTable<EntrantCheck>();
			}
		}
		
		public System.Data.Linq.Table<EntrantCheckBatch> EntrantCheckBatches
		{
			get
			{
				return this.GetTable<EntrantCheckBatch>();
			}
		}
		
		public System.Data.Linq.Table<EntrantRenunciation> EntrantRenunciations
		{
			get
			{
				return this.GetTable<EntrantRenunciation>();
			}
		}
		
		public System.Data.Linq.Table<EventLog> EventLogs
		{
			get
			{
				return this.GetTable<EventLog>();
			}
		}
		
		public System.Data.Linq.Table<ExamCertificateUniqueCheck> ExamCertificateUniqueChecks
		{
			get
			{
				return this.GetTable<ExamCertificateUniqueCheck>();
			}
		}
		
		public System.Data.Linq.Table<ExpireDate> ExpireDates
		{
			get
			{
				return this.GetTable<ExpireDate>();
			}
		}
		
		public System.Data.Linq.Table<FederalDistrict> FederalDistricts
		{
			get
			{
				return this.GetTable<FederalDistrict>();
			}
		}
		
		public System.Data.Linq.Table<Group> Groups
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<GroupAccount> GroupAccounts
		{
			get
			{
				return this.GetTable<GroupAccount>();
			}
		}
		
		public System.Data.Linq.Table<GroupRole> GroupRoles
		{
			get
			{
				return this.GetTable<GroupRole>();
			}
		}
		
		public System.Data.Linq.Table<ImportingCommonNationalExamCertificate> ImportingCommonNationalExamCertificates
		{
			get
			{
				return this.GetTable<ImportingCommonNationalExamCertificate>();
			}
		}
		
		public System.Data.Linq.Table<ImportingCommonNationalExamCertificateDeny> ImportingCommonNationalExamCertificateDenies
		{
			get
			{
				return this.GetTable<ImportingCommonNationalExamCertificateDeny>();
			}
		}
		
		public System.Data.Linq.Table<ImportingCommonNationalExamCertificateSubject> ImportingCommonNationalExamCertificateSubjects
		{
			get
			{
				return this.GetTable<ImportingCommonNationalExamCertificateSubject>();
			}
		}
		
		public System.Data.Linq.Table<Migration> Migrations
		{
			get
			{
				return this.GetTable<Migration>();
			}
		}
		
		public System.Data.Linq.Table<MinimalMark> MinimalMarks
		{
			get
			{
				return this.GetTable<MinimalMark>();
			}
		}
		
		public System.Data.Linq.Table<New> News
		{
			get
			{
				return this.GetTable<New>();
			}
		}
		
		public System.Data.Linq.Table<OlympicDiplomant> OlympicDiplomants
		{
			get
			{
				return this.GetTable<OlympicDiplomant>();
			}
		}
		
		public System.Data.Linq.Table<OlympicParticipant> OlympicParticipants
		{
			get
			{
				return this.GetTable<OlympicParticipant>();
			}
		}
		
		public System.Data.Linq.Table<OlympicProfileSubject> OlympicProfileSubjects
		{
			get
			{
				return this.GetTable<OlympicProfileSubject>();
			}
		}
		
		public System.Data.Linq.Table<Olympic> Olympics
		{
			get
			{
				return this.GetTable<Olympic>();
			}
		}
		
		public System.Data.Linq.Table<OlympicSubject> OlympicSubjects
		{
			get
			{
				return this.GetTable<OlympicSubject>();
			}
		}
		
		public System.Data.Linq.Table<OlympicThemeSubject> OlympicThemeSubjects
		{
			get
			{
				return this.GetTable<OlympicThemeSubject>();
			}
		}
		
		public System.Data.Linq.Table<OlympicToFbsSubjectMap> OlympicToFbsSubjectMaps
		{
			get
			{
				return this.GetTable<OlympicToFbsSubjectMap>();
			}
		}
		
		public System.Data.Linq.Table<OperatorLog> OperatorLogs
		{
			get
			{
				return this.GetTable<OperatorLog>();
			}
		}
		
		public System.Data.Linq.Table<Organization2010> Organization2010s
		{
			get
			{
				return this.GetTable<Organization2010>();
			}
		}
		
		public System.Data.Linq.Table<OrganizationCertificateCheck> OrganizationCertificateChecks
		{
			get
			{
				return this.GetTable<OrganizationCertificateCheck>();
			}
		}
		
		public System.Data.Linq.Table<OrganizationKind> OrganizationKinds
		{
			get
			{
				return this.GetTable<OrganizationKind>();
			}
		}
		
		public System.Data.Linq.Table<OrganizationLog> OrganizationLogs
		{
			get
			{
				return this.GetTable<OrganizationLog>();
			}
		}
		
		public System.Data.Linq.Table<OrganizationOperatingStatus> OrganizationOperatingStatus
		{
			get
			{
				return this.GetTable<OrganizationOperatingStatus>();
			}
		}
		
		public System.Data.Linq.Table<OrganizationRequest2010> OrganizationRequest2010s
		{
			get
			{
				return this.GetTable<OrganizationRequest2010>();
			}
		}
		
		public System.Data.Linq.Table<OrganizationType2010> OrganizationType2010s
		{
			get
			{
				return this.GetTable<OrganizationType2010>();
			}
		}
		
		public System.Data.Linq.Table<OrganizationUpdateHistory> OrganizationUpdateHistories
		{
			get
			{
				return this.GetTable<OrganizationUpdateHistory>();
			}
		}
		
		public System.Data.Linq.Table<RecruitmentCampaign> RecruitmentCampaigns
		{
			get
			{
				return this.GetTable<RecruitmentCampaign>();
			}
		}
		
		public System.Data.Linq.Table<Region> Regions
		{
			get
			{
				return this.GetTable<Region>();
			}
		}
		
		public System.Data.Linq.Table<Report> Reports
		{
			get
			{
				return this.GetTable<Report>();
			}
		}
		
		public System.Data.Linq.Table<ResultGlobalStatuse> ResultGlobalStatuses
		{
			get
			{
				return this.GetTable<ResultGlobalStatuse>();
			}
		}
		
		public System.Data.Linq.Table<ResultStatuse> ResultStatuses
		{
			get
			{
				return this.GetTable<ResultStatuse>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<SchoolLeavingCertificateCheck> SchoolLeavingCertificateChecks
		{
			get
			{
				return this.GetTable<SchoolLeavingCertificateCheck>();
			}
		}
		
		public System.Data.Linq.Table<SchoolLeavingCertificateCheckBatch> SchoolLeavingCertificateCheckBatches
		{
			get
			{
				return this.GetTable<SchoolLeavingCertificateCheckBatch>();
			}
		}
		
		public System.Data.Linq.Table<SchoolLeavingCertificateDeny> SchoolLeavingCertificateDenies
		{
			get
			{
				return this.GetTable<SchoolLeavingCertificateDeny>();
			}
		}
		
		public System.Data.Linq.Table<Subject1> Subject1s
		{
			get
			{
				return this.GetTable<Subject1>();
			}
		}
		
		public System.Data.Linq.Table<SubjectMapping> SubjectMappings
		{
			get
			{
				return this.GetTable<SubjectMapping>();
			}
		}
		
		public System.Data.Linq.Table<UserAccountPassword> UserAccountPasswords
		{
			get
			{
				return this.GetTable<UserAccountPassword>();
			}
		}
		
		public System.Data.Linq.Table<UsingTable> UsingTables
		{
			get
			{
				return this.GetTable<UsingTable>();
			}
		}
		
		public System.Data.Linq.Table<VpnIp> VpnIps
		{
			get
			{
				return this.GetTable<VpnIp>();
			}
		}
		
		public System.Data.Linq.Table<CancelledCertificatesA> CancelledCertificatesAs
		{
			get
			{
				return this.GetTable<CancelledCertificatesA>();
			}
		}
		
		public System.Data.Linq.Table<CancelledCertificatesB> CancelledCertificatesBs
		{
			get
			{
				return this.GetTable<CancelledCertificatesB>();
			}
		}
		
		public System.Data.Linq.Table<CertificatesA> CertificatesAs
		{
			get
			{
				return this.GetTable<CertificatesA>();
			}
		}
		
		public System.Data.Linq.Table<CertificatesB> CertificatesBs
		{
			get
			{
				return this.GetTable<CertificatesB>();
			}
		}
		
		public System.Data.Linq.Table<CertificatesMarksA> CertificatesMarksAs
		{
			get
			{
				return this.GetTable<CertificatesMarksA>();
			}
		}
		
		public System.Data.Linq.Table<CertificatesMarksB> CertificatesMarksBs
		{
			get
			{
				return this.GetTable<CertificatesMarksB>();
			}
		}
		
		public System.Data.Linq.Table<ParticipantsA> ParticipantsAs
		{
			get
			{
				return this.GetTable<ParticipantsA>();
			}
		}
		
		public System.Data.Linq.Table<ParticipantsB> ParticipantsBs
		{
			get
			{
				return this.GetTable<ParticipantsB>();
			}
		}
		
		public System.Data.Linq.Table<DocumentType> DocumentTypes
		{
			get
			{
				return this.GetTable<DocumentType>();
			}
		}
		
		public System.Data.Linq.Table<ParticipantCategory> ParticipantCategories
		{
			get
			{
				return this.GetTable<ParticipantCategory>();
			}
		}
		
		public System.Data.Linq.Table<Region1> Region1s
		{
			get
			{
				return this.GetTable<Region1>();
			}
		}
		
		public System.Data.Linq.Table<ResultStatuse1> ResultStatuse1s
		{
			get
			{
				return this.GetTable<ResultStatuse1>();
			}
		}
		
		public System.Data.Linq.Table<Translation_RVIDT_ParticipantDT> Translation_RVIDT_ParticipantDTs
		{
			get
			{
				return this.GetTable<Translation_RVIDT_ParticipantDT>();
			}
		}
		
		public System.Data.Linq.Table<Participant> Participants
		{
			get
			{
				return this.GetTable<Participant>();
			}
		}
		
		public System.Data.Linq.Table<CancelledCertificate1> CancelledCertificate1s
		{
			get
			{
				return this.GetTable<CancelledCertificate1>();
			}
		}
		
		public System.Data.Linq.Table<Certificate> Certificates
		{
			get
			{
				return this.GetTable<Certificate>();
			}
		}
		
		public System.Data.Linq.Table<CertificatesMark> CertificatesMarks
		{
			get
			{
				return this.GetTable<CertificatesMark>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="res.HumanTests")]
	public partial class HumanTest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _HumanTestID;
		
		private System.Guid _ParticipantFK;
		
		private int _RegionCode;
		
		private int _TestTypeID;
		
		private int _SubjectCode;
		
		private string _ExamDate;
		
		private int _StationCode;
		
		private string _AuditoriumCode;
		
		private int _VariantCode;
		
		private int _ProcessCondition;
		
		private int _Mark;
		
		private int _UseYear;
		
		private System.Nullable<System.DateTime> _ImportCreateDate;
		
		private System.Nullable<System.DateTime> _ImportUpdateDate;
		
		private System.Nullable<bool> _HasAppeal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHumanTestIDChanging(System.Guid value);
    partial void OnHumanTestIDChanged();
    partial void OnParticipantFKChanging(System.Guid value);
    partial void OnParticipantFKChanged();
    partial void OnRegionCodeChanging(int value);
    partial void OnRegionCodeChanged();
    partial void OnTestTypeIDChanging(int value);
    partial void OnTestTypeIDChanged();
    partial void OnSubjectCodeChanging(int value);
    partial void OnSubjectCodeChanged();
    partial void OnExamDateChanging(string value);
    partial void OnExamDateChanged();
    partial void OnStationCodeChanging(int value);
    partial void OnStationCodeChanged();
    partial void OnAuditoriumCodeChanging(string value);
    partial void OnAuditoriumCodeChanged();
    partial void OnVariantCodeChanging(int value);
    partial void OnVariantCodeChanged();
    partial void OnProcessConditionChanging(int value);
    partial void OnProcessConditionChanged();
    partial void OnMarkChanging(int value);
    partial void OnMarkChanged();
    partial void OnUseYearChanging(int value);
    partial void OnUseYearChanged();
    partial void OnImportCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnImportCreateDateChanged();
    partial void OnImportUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnImportUpdateDateChanged();
    partial void OnHasAppealChanging(System.Nullable<bool> value);
    partial void OnHasAppealChanged();
    #endregion
		
		public HumanTest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HumanTestID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid HumanTestID
		{
			get
			{
				return this._HumanTestID;
			}
			set
			{
				if ((this._HumanTestID != value))
				{
					this.OnHumanTestIDChanging(value);
					this.SendPropertyChanging();
					this._HumanTestID = value;
					this.SendPropertyChanged("HumanTestID");
					this.OnHumanTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantFK", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParticipantFK
		{
			get
			{
				return this._ParticipantFK;
			}
			set
			{
				if ((this._ParticipantFK != value))
				{
					this.OnParticipantFKChanging(value);
					this.SendPropertyChanging();
					this._ParticipantFK = value;
					this.SendPropertyChanged("ParticipantFK");
					this.OnParticipantFKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionCode", DbType="Int NOT NULL")]
		public int RegionCode
		{
			get
			{
				return this._RegionCode;
			}
			set
			{
				if ((this._RegionCode != value))
				{
					this.OnRegionCodeChanging(value);
					this.SendPropertyChanging();
					this._RegionCode = value;
					this.SendPropertyChanged("RegionCode");
					this.OnRegionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestTypeID", DbType="Int NOT NULL")]
		public int TestTypeID
		{
			get
			{
				return this._TestTypeID;
			}
			set
			{
				if ((this._TestTypeID != value))
				{
					this.OnTestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TestTypeID = value;
					this.SendPropertyChanged("TestTypeID");
					this.OnTestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectCode", DbType="Int NOT NULL")]
		public int SubjectCode
		{
			get
			{
				return this._SubjectCode;
			}
			set
			{
				if ((this._SubjectCode != value))
				{
					this.OnSubjectCodeChanging(value);
					this.SendPropertyChanging();
					this._SubjectCode = value;
					this.SendPropertyChanged("SubjectCode");
					this.OnSubjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExamDate", DbType="VarChar(100)")]
		public string ExamDate
		{
			get
			{
				return this._ExamDate;
			}
			set
			{
				if ((this._ExamDate != value))
				{
					this.OnExamDateChanging(value);
					this.SendPropertyChanging();
					this._ExamDate = value;
					this.SendPropertyChanged("ExamDate");
					this.OnExamDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationCode", DbType="Int NOT NULL")]
		public int StationCode
		{
			get
			{
				return this._StationCode;
			}
			set
			{
				if ((this._StationCode != value))
				{
					this.OnStationCodeChanging(value);
					this.SendPropertyChanging();
					this._StationCode = value;
					this.SendPropertyChanged("StationCode");
					this.OnStationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuditoriumCode", DbType="VarChar(100)")]
		public string AuditoriumCode
		{
			get
			{
				return this._AuditoriumCode;
			}
			set
			{
				if ((this._AuditoriumCode != value))
				{
					this.OnAuditoriumCodeChanging(value);
					this.SendPropertyChanging();
					this._AuditoriumCode = value;
					this.SendPropertyChanged("AuditoriumCode");
					this.OnAuditoriumCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariantCode", DbType="Int NOT NULL")]
		public int VariantCode
		{
			get
			{
				return this._VariantCode;
			}
			set
			{
				if ((this._VariantCode != value))
				{
					this.OnVariantCodeChanging(value);
					this.SendPropertyChanging();
					this._VariantCode = value;
					this.SendPropertyChanged("VariantCode");
					this.OnVariantCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessCondition", DbType="Int NOT NULL")]
		public int ProcessCondition
		{
			get
			{
				return this._ProcessCondition;
			}
			set
			{
				if ((this._ProcessCondition != value))
				{
					this.OnProcessConditionChanging(value);
					this.SendPropertyChanging();
					this._ProcessCondition = value;
					this.SendPropertyChanged("ProcessCondition");
					this.OnProcessConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int NOT NULL")]
		public int Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseYear", DbType="Int NOT NULL")]
		public int UseYear
		{
			get
			{
				return this._UseYear;
			}
			set
			{
				if ((this._UseYear != value))
				{
					this.OnUseYearChanging(value);
					this.SendPropertyChanging();
					this._UseYear = value;
					this.SendPropertyChanged("UseYear");
					this.OnUseYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImportCreateDate
		{
			get
			{
				return this._ImportCreateDate;
			}
			set
			{
				if ((this._ImportCreateDate != value))
				{
					this.OnImportCreateDateChanging(value);
					this.SendPropertyChanging();
					this._ImportCreateDate = value;
					this.SendPropertyChanged("ImportCreateDate");
					this.OnImportCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImportUpdateDate
		{
			get
			{
				return this._ImportUpdateDate;
			}
			set
			{
				if ((this._ImportUpdateDate != value))
				{
					this.OnImportUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._ImportUpdateDate = value;
					this.SendPropertyChanged("ImportUpdateDate");
					this.OnImportUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAppeal", DbType="Bit")]
		public System.Nullable<bool> HasAppeal
		{
			get
			{
				return this._HasAppeal;
			}
			set
			{
				if ((this._HasAppeal != value))
				{
					this.OnHasAppealChanging(value);
					this.SendPropertyChanging();
					this._HasAppeal = value;
					this.SendPropertyChanged("HasAppeal");
					this.OnHasAppealChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dat.AppealStatus")]
	public partial class AppealStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AppealStatusID;
		
		private string _StatusName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppealStatusIDChanging(int value);
    partial void OnAppealStatusIDChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    #endregion
		
		public AppealStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppealStatusID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AppealStatusID
		{
			get
			{
				return this._AppealStatusID;
			}
			set
			{
				if ((this._AppealStatusID != value))
				{
					this.OnAppealStatusIDChanging(value);
					this.SendPropertyChanging();
					this._AppealStatusID = value;
					this.SendPropertyChanged("AppealStatusID");
					this.OnAppealStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dat.Subjects")]
	public partial class Subject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubjectCode;
		
		private string _SubjectName;
		
		private EntitySet<SubjectMapping> _SubjectMappings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubjectCodeChanging(int value);
    partial void OnSubjectCodeChanged();
    partial void OnSubjectNameChanging(string value);
    partial void OnSubjectNameChanged();
    #endregion
		
		public Subject()
		{
			this._SubjectMappings = new EntitySet<SubjectMapping>(new Action<SubjectMapping>(this.attach_SubjectMappings), new Action<SubjectMapping>(this.detach_SubjectMappings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectCode", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SubjectCode
		{
			get
			{
				return this._SubjectCode;
			}
			set
			{
				if ((this._SubjectCode != value))
				{
					this.OnSubjectCodeChanging(value);
					this.SendPropertyChanging();
					this._SubjectCode = value;
					this.SendPropertyChanged("SubjectCode");
					this.OnSubjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(100)")]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this.OnSubjectNameChanging(value);
					this.SendPropertyChanging();
					this._SubjectName = value;
					this.SendPropertyChanged("SubjectName");
					this.OnSubjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_SubjectMapping", Storage="_SubjectMappings", ThisKey="SubjectCode", OtherKey="id_subject_new")]
		public EntitySet<SubjectMapping> SubjectMappings
		{
			get
			{
				return this._SubjectMappings;
			}
			set
			{
				this._SubjectMappings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SubjectMappings(SubjectMapping entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_SubjectMappings(SubjectMapping entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dat.Waves")]
	public partial class Wave : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WaveCode;
		
		private string _WaveName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWaveCodeChanging(int value);
    partial void OnWaveCodeChanged();
    partial void OnWaveNameChanging(string value);
    partial void OnWaveNameChanged();
    #endregion
		
		public Wave()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaveCode", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int WaveCode
		{
			get
			{
				return this._WaveCode;
			}
			set
			{
				if ((this._WaveCode != value))
				{
					this.OnWaveCodeChanging(value);
					this.SendPropertyChanging();
					this._WaveCode = value;
					this.SendPropertyChanged("WaveCode");
					this.OnWaveCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WaveName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string WaveName
		{
			get
			{
				return this._WaveName;
			}
			set
			{
				if ((this._WaveName != value))
				{
					this.OnWaveNameChanging(value);
					this.SendPropertyChanging();
					this._WaveName = value;
					this.SendPropertyChanged("WaveName");
					this.OnWaveNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Guid _UpdateId;
		
		private System.Nullable<long> _EditorAccountId;
		
		private string _EditorIp;
		
		private string _Login;
		
		private string _PasswordHash;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _PatronymicName;
		
		private System.Nullable<long> _OrganizationId;
		
		private System.Nullable<bool> _IsOrganizationOwner;
		
		private System.Nullable<int> _ConfirmYear;
		
		private string _Phone;
		
		private string _Email;
		
		private System.Data.Linq.Binary _RegistrationDocument;
		
		private string _RegistrationDocumentContentType;
		
		private string _AdminComment;
		
		private bool _IsActive;
		
		private string _Status;
		
		private string _IpAddresses;
		
		private System.Nullable<bool> _HasFixedIp;
		
		private System.Nullable<bool> _HasCrocEgeIntegration;
		
		private bool _IsBanned;
		
		private string _LoginTrimmed;
		
		private EntitySet<CheckHistory> _CheckHistories;
		
		private EntitySet<CNEWebUICheckLog> _CNEWebUICheckLogs;
		
		private EntitySet<CNEWebUICheckLog> _CNEWebUICheckLogs1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateIdChanging(System.Guid value);
    partial void OnUpdateIdChanged();
    partial void OnEditorAccountIdChanging(System.Nullable<long> value);
    partial void OnEditorAccountIdChanged();
    partial void OnEditorIpChanging(string value);
    partial void OnEditorIpChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnPatronymicNameChanging(string value);
    partial void OnPatronymicNameChanged();
    partial void OnOrganizationIdChanging(System.Nullable<long> value);
    partial void OnOrganizationIdChanged();
    partial void OnIsOrganizationOwnerChanging(System.Nullable<bool> value);
    partial void OnIsOrganizationOwnerChanged();
    partial void OnConfirmYearChanging(System.Nullable<int> value);
    partial void OnConfirmYearChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnRegistrationDocumentChanging(System.Data.Linq.Binary value);
    partial void OnRegistrationDocumentChanged();
    partial void OnRegistrationDocumentContentTypeChanging(string value);
    partial void OnRegistrationDocumentContentTypeChanged();
    partial void OnAdminCommentChanging(string value);
    partial void OnAdminCommentChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIpAddressesChanging(string value);
    partial void OnIpAddressesChanged();
    partial void OnHasFixedIpChanging(System.Nullable<bool> value);
    partial void OnHasFixedIpChanged();
    partial void OnHasCrocEgeIntegrationChanging(System.Nullable<bool> value);
    partial void OnHasCrocEgeIntegrationChanged();
    partial void OnIsBannedChanging(bool value);
    partial void OnIsBannedChanged();
    partial void OnLoginTrimmedChanging(string value);
    partial void OnLoginTrimmedChanged();
    #endregion
		
		public Account()
		{
			this._CheckHistories = new EntitySet<CheckHistory>(new Action<CheckHistory>(this.attach_CheckHistories), new Action<CheckHistory>(this.detach_CheckHistories));
			this._CNEWebUICheckLogs = new EntitySet<CNEWebUICheckLog>(new Action<CNEWebUICheckLog>(this.attach_CNEWebUICheckLogs), new Action<CNEWebUICheckLog>(this.detach_CNEWebUICheckLogs));
			this._CNEWebUICheckLogs1 = new EntitySet<CNEWebUICheckLog>(new Action<CNEWebUICheckLog>(this.attach_CNEWebUICheckLogs1), new Action<CNEWebUICheckLog>(this.detach_CNEWebUICheckLogs1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorAccountId", DbType="BigInt")]
		public System.Nullable<long> EditorAccountId
		{
			get
			{
				return this._EditorAccountId;
			}
			set
			{
				if ((this._EditorAccountId != value))
				{
					this.OnEditorAccountIdChanging(value);
					this.SendPropertyChanging();
					this._EditorAccountId = value;
					this.SendPropertyChanged("EditorAccountId");
					this.OnEditorAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorIp", DbType="NVarChar(255)")]
		public string EditorIp
		{
			get
			{
				return this._EditorIp;
			}
			set
			{
				if ((this._EditorIp != value))
				{
					this.OnEditorIpChanging(value);
					this.SendPropertyChanging();
					this._EditorIp = value;
					this.SendPropertyChanged("EditorIp");
					this.OnEditorIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(255)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatronymicName", DbType="NVarChar(255)")]
		public string PatronymicName
		{
			get
			{
				return this._PatronymicName;
			}
			set
			{
				if ((this._PatronymicName != value))
				{
					this.OnPatronymicNameChanging(value);
					this.SendPropertyChanging();
					this._PatronymicName = value;
					this.SendPropertyChanged("PatronymicName");
					this.OnPatronymicNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="BigInt")]
		public System.Nullable<long> OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOrganizationOwner", DbType="Bit")]
		public System.Nullable<bool> IsOrganizationOwner
		{
			get
			{
				return this._IsOrganizationOwner;
			}
			set
			{
				if ((this._IsOrganizationOwner != value))
				{
					this.OnIsOrganizationOwnerChanging(value);
					this.SendPropertyChanging();
					this._IsOrganizationOwner = value;
					this.SendPropertyChanged("IsOrganizationOwner");
					this.OnIsOrganizationOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmYear", DbType="Int")]
		public System.Nullable<int> ConfirmYear
		{
			get
			{
				return this._ConfirmYear;
			}
			set
			{
				if ((this._ConfirmYear != value))
				{
					this.OnConfirmYearChanging(value);
					this.SendPropertyChanging();
					this._ConfirmYear = value;
					this.SendPropertyChanged("ConfirmYear");
					this.OnConfirmYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(255)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDocument", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RegistrationDocument
		{
			get
			{
				return this._RegistrationDocument;
			}
			set
			{
				if ((this._RegistrationDocument != value))
				{
					this.OnRegistrationDocumentChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDocument = value;
					this.SendPropertyChanged("RegistrationDocument");
					this.OnRegistrationDocumentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDocumentContentType", DbType="NVarChar(255)")]
		public string RegistrationDocumentContentType
		{
			get
			{
				return this._RegistrationDocumentContentType;
			}
			set
			{
				if ((this._RegistrationDocumentContentType != value))
				{
					this.OnRegistrationDocumentContentTypeChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDocumentContentType = value;
					this.SendPropertyChanged("RegistrationDocumentContentType");
					this.OnRegistrationDocumentContentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminComment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string AdminComment
		{
			get
			{
				return this._AdminComment;
			}
			set
			{
				if ((this._AdminComment != value))
				{
					this.OnAdminCommentChanging(value);
					this.SendPropertyChanging();
					this._AdminComment = value;
					this.SendPropertyChanged("AdminComment");
					this.OnAdminCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(255)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpAddresses", DbType="NVarChar(4000)")]
		public string IpAddresses
		{
			get
			{
				return this._IpAddresses;
			}
			set
			{
				if ((this._IpAddresses != value))
				{
					this.OnIpAddressesChanging(value);
					this.SendPropertyChanging();
					this._IpAddresses = value;
					this.SendPropertyChanged("IpAddresses");
					this.OnIpAddressesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasFixedIp", DbType="Bit")]
		public System.Nullable<bool> HasFixedIp
		{
			get
			{
				return this._HasFixedIp;
			}
			set
			{
				if ((this._HasFixedIp != value))
				{
					this.OnHasFixedIpChanging(value);
					this.SendPropertyChanging();
					this._HasFixedIp = value;
					this.SendPropertyChanged("HasFixedIp");
					this.OnHasFixedIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasCrocEgeIntegration", DbType="Bit")]
		public System.Nullable<bool> HasCrocEgeIntegration
		{
			get
			{
				return this._HasCrocEgeIntegration;
			}
			set
			{
				if ((this._HasCrocEgeIntegration != value))
				{
					this.OnHasCrocEgeIntegrationChanging(value);
					this.SendPropertyChanging();
					this._HasCrocEgeIntegration = value;
					this.SendPropertyChanged("HasCrocEgeIntegration");
					this.OnHasCrocEgeIntegrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBanned", DbType="Bit NOT NULL")]
		public bool IsBanned
		{
			get
			{
				return this._IsBanned;
			}
			set
			{
				if ((this._IsBanned != value))
				{
					this.OnIsBannedChanging(value);
					this.SendPropertyChanging();
					this._IsBanned = value;
					this.SendPropertyChanged("IsBanned");
					this.OnIsBannedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginTrimmed", DbType="NVarChar(255)")]
		public string LoginTrimmed
		{
			get
			{
				return this._LoginTrimmed;
			}
			set
			{
				if ((this._LoginTrimmed != value))
				{
					this.OnLoginTrimmedChanging(value);
					this.SendPropertyChanging();
					this._LoginTrimmed = value;
					this.SendPropertyChanged("LoginTrimmed");
					this.OnLoginTrimmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_CheckHistory", Storage="_CheckHistories", ThisKey="Id", OtherKey="OwnerId")]
		public EntitySet<CheckHistory> CheckHistories
		{
			get
			{
				return this._CheckHistories;
			}
			set
			{
				this._CheckHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_CNEWebUICheckLog", Storage="_CNEWebUICheckLogs", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<CNEWebUICheckLog> CNEWebUICheckLogs
		{
			get
			{
				return this._CNEWebUICheckLogs;
			}
			set
			{
				this._CNEWebUICheckLogs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_CNEWebUICheckLog1", Storage="_CNEWebUICheckLogs1", ThisKey="Id", OtherKey="AccountId")]
		public EntitySet<CNEWebUICheckLog> CNEWebUICheckLogs1
		{
			get
			{
				return this._CNEWebUICheckLogs1;
			}
			set
			{
				this._CNEWebUICheckLogs1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CheckHistories(CheckHistory entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_CheckHistories(CheckHistory entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_CNEWebUICheckLogs(CNEWebUICheckLog entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_CNEWebUICheckLogs(CNEWebUICheckLog entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
		
		private void attach_CNEWebUICheckLogs1(CNEWebUICheckLog entity)
		{
			this.SendPropertyChanging();
			entity.Account1 = this;
		}
		
		private void detach_CNEWebUICheckLogs1(CNEWebUICheckLog entity)
		{
			this.SendPropertyChanging();
			entity.Account1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountIp")]
	public partial class AccountIp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _AccountId;
		
		private string _Ip;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAccountIdChanging(long value);
    partial void OnAccountIdChanged();
    partial void OnIpChanging(string value);
    partial void OnIpChanged();
    #endregion
		
		public AccountIp()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt NOT NULL")]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="NVarChar(255)")]
		public string Ip
		{
			get
			{
				return this._Ip;
			}
			set
			{
				if ((this._Ip != value))
				{
					this.OnIpChanging(value);
					this.SendPropertyChanging();
					this._Ip = value;
					this.SendPropertyChanged("Ip");
					this.OnIpChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountKey")]
	public partial class AccountKey
	{
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Guid _UpdateId;
		
		private long _EditorAccountId;
		
		private string _EditorIp;
		
		private long _AccountId;
		
		private string _Key;
		
		private System.Nullable<System.DateTime> _DateFrom;
		
		private System.Nullable<System.DateTime> _DateTo;
		
		private bool _IsActive;
		
		public AccountKey()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this._UpdateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorAccountId", DbType="BigInt NOT NULL")]
		public long EditorAccountId
		{
			get
			{
				return this._EditorAccountId;
			}
			set
			{
				if ((this._EditorAccountId != value))
				{
					this._EditorAccountId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorIp", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EditorIp
		{
			get
			{
				return this._EditorIp;
			}
			set
			{
				if ((this._EditorIp != value))
				{
					this._EditorIp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt NOT NULL")]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this._Key = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateFrom
		{
			get
			{
				return this._DateFrom;
			}
			set
			{
				if ((this._DateFrom != value))
				{
					this._DateFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTo
		{
			get
			{
				return this._DateTo;
			}
			set
			{
				if ((this._DateTo != value))
				{
					this._DateTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountLog")]
	public partial class AccountLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _AccountId;
		
		private int _VersionId;
		
		private System.DateTime _UpdateDate;
		
		private System.Guid _UpdateId;
		
		private System.Nullable<long> _EditorAccountId;
		
		private string _EditorIp;
		
		private string _Login;
		
		private string _PasswordHash;
		
		private System.Nullable<long> _OrganizationId;
		
		private System.Nullable<bool> _IsOrganizationOwner;
		
		private System.Nullable<int> _ConfirmYear;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _PatronymicName;
		
		private string _Phone;
		
		private string _Email;
		
		private string _AdminComment;
		
		private bool _IsActive;
		
		private string _Status;
		
		private string _IpAddresses;
		
		private bool _IsActiveChange;
		
		private bool _IsStatusChange;
		
		private bool _IsEdit;
		
		private bool _IsPasswordChange;
		
		private bool _HasFixedIp;
		
		private bool _IsVpnEditorIp;
		
		private System.Nullable<bool> _HasCrocEgeIntegration;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIdChanging(long value);
    partial void OnAccountIdChanged();
    partial void OnVersionIdChanging(int value);
    partial void OnVersionIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateIdChanging(System.Guid value);
    partial void OnUpdateIdChanged();
    partial void OnEditorAccountIdChanging(System.Nullable<long> value);
    partial void OnEditorAccountIdChanged();
    partial void OnEditorIpChanging(string value);
    partial void OnEditorIpChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnOrganizationIdChanging(System.Nullable<long> value);
    partial void OnOrganizationIdChanged();
    partial void OnIsOrganizationOwnerChanging(System.Nullable<bool> value);
    partial void OnIsOrganizationOwnerChanged();
    partial void OnConfirmYearChanging(System.Nullable<int> value);
    partial void OnConfirmYearChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnPatronymicNameChanging(string value);
    partial void OnPatronymicNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAdminCommentChanging(string value);
    partial void OnAdminCommentChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIpAddressesChanging(string value);
    partial void OnIpAddressesChanged();
    partial void OnIsActiveChangeChanging(bool value);
    partial void OnIsActiveChangeChanged();
    partial void OnIsStatusChangeChanging(bool value);
    partial void OnIsStatusChangeChanged();
    partial void OnIsEditChanging(bool value);
    partial void OnIsEditChanged();
    partial void OnIsPasswordChangeChanging(bool value);
    partial void OnIsPasswordChangeChanged();
    partial void OnHasFixedIpChanging(bool value);
    partial void OnHasFixedIpChanged();
    partial void OnIsVpnEditorIpChanging(bool value);
    partial void OnIsVpnEditorIpChanged();
    partial void OnHasCrocEgeIntegrationChanging(System.Nullable<bool> value);
    partial void OnHasCrocEgeIntegrationChanged();
    #endregion
		
		public AccountLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int VersionId
		{
			get
			{
				return this._VersionId;
			}
			set
			{
				if ((this._VersionId != value))
				{
					this.OnVersionIdChanging(value);
					this.SendPropertyChanging();
					this._VersionId = value;
					this.SendPropertyChanged("VersionId");
					this.OnVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorAccountId", DbType="BigInt")]
		public System.Nullable<long> EditorAccountId
		{
			get
			{
				return this._EditorAccountId;
			}
			set
			{
				if ((this._EditorAccountId != value))
				{
					this.OnEditorAccountIdChanging(value);
					this.SendPropertyChanging();
					this._EditorAccountId = value;
					this.SendPropertyChanged("EditorAccountId");
					this.OnEditorAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorIp", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EditorIp
		{
			get
			{
				return this._EditorIp;
			}
			set
			{
				if ((this._EditorIp != value))
				{
					this.OnEditorIpChanging(value);
					this.SendPropertyChanging();
					this._EditorIp = value;
					this.SendPropertyChanged("EditorIp");
					this.OnEditorIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(255)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="BigInt")]
		public System.Nullable<long> OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOrganizationOwner", DbType="Bit")]
		public System.Nullable<bool> IsOrganizationOwner
		{
			get
			{
				return this._IsOrganizationOwner;
			}
			set
			{
				if ((this._IsOrganizationOwner != value))
				{
					this.OnIsOrganizationOwnerChanging(value);
					this.SendPropertyChanging();
					this._IsOrganizationOwner = value;
					this.SendPropertyChanged("IsOrganizationOwner");
					this.OnIsOrganizationOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfirmYear", DbType="Int")]
		public System.Nullable<int> ConfirmYear
		{
			get
			{
				return this._ConfirmYear;
			}
			set
			{
				if ((this._ConfirmYear != value))
				{
					this.OnConfirmYearChanging(value);
					this.SendPropertyChanging();
					this._ConfirmYear = value;
					this.SendPropertyChanged("ConfirmYear");
					this.OnConfirmYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatronymicName", DbType="NVarChar(255)")]
		public string PatronymicName
		{
			get
			{
				return this._PatronymicName;
			}
			set
			{
				if ((this._PatronymicName != value))
				{
					this.OnPatronymicNameChanging(value);
					this.SendPropertyChanging();
					this._PatronymicName = value;
					this.SendPropertyChanged("PatronymicName");
					this.OnPatronymicNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(255)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminComment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string AdminComment
		{
			get
			{
				return this._AdminComment;
			}
			set
			{
				if ((this._AdminComment != value))
				{
					this.OnAdminCommentChanging(value);
					this.SendPropertyChanging();
					this._AdminComment = value;
					this.SendPropertyChanged("AdminComment");
					this.OnAdminCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(255)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IpAddresses", DbType="NVarChar(4000)")]
		public string IpAddresses
		{
			get
			{
				return this._IpAddresses;
			}
			set
			{
				if ((this._IpAddresses != value))
				{
					this.OnIpAddressesChanging(value);
					this.SendPropertyChanging();
					this._IpAddresses = value;
					this.SendPropertyChanged("IpAddresses");
					this.OnIpAddressesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActiveChange", DbType="Bit NOT NULL")]
		public bool IsActiveChange
		{
			get
			{
				return this._IsActiveChange;
			}
			set
			{
				if ((this._IsActiveChange != value))
				{
					this.OnIsActiveChangeChanging(value);
					this.SendPropertyChanging();
					this._IsActiveChange = value;
					this.SendPropertyChanged("IsActiveChange");
					this.OnIsActiveChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStatusChange", DbType="Bit NOT NULL")]
		public bool IsStatusChange
		{
			get
			{
				return this._IsStatusChange;
			}
			set
			{
				if ((this._IsStatusChange != value))
				{
					this.OnIsStatusChangeChanging(value);
					this.SendPropertyChanging();
					this._IsStatusChange = value;
					this.SendPropertyChanged("IsStatusChange");
					this.OnIsStatusChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEdit", DbType="Bit NOT NULL")]
		public bool IsEdit
		{
			get
			{
				return this._IsEdit;
			}
			set
			{
				if ((this._IsEdit != value))
				{
					this.OnIsEditChanging(value);
					this.SendPropertyChanging();
					this._IsEdit = value;
					this.SendPropertyChanged("IsEdit");
					this.OnIsEditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPasswordChange", DbType="Bit NOT NULL")]
		public bool IsPasswordChange
		{
			get
			{
				return this._IsPasswordChange;
			}
			set
			{
				if ((this._IsPasswordChange != value))
				{
					this.OnIsPasswordChangeChanging(value);
					this.SendPropertyChanging();
					this._IsPasswordChange = value;
					this.SendPropertyChanged("IsPasswordChange");
					this.OnIsPasswordChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasFixedIp", DbType="Bit NOT NULL")]
		public bool HasFixedIp
		{
			get
			{
				return this._HasFixedIp;
			}
			set
			{
				if ((this._HasFixedIp != value))
				{
					this.OnHasFixedIpChanging(value);
					this.SendPropertyChanging();
					this._HasFixedIp = value;
					this.SendPropertyChanged("HasFixedIp");
					this.OnHasFixedIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVpnEditorIp", DbType="Bit NOT NULL")]
		public bool IsVpnEditorIp
		{
			get
			{
				return this._IsVpnEditorIp;
			}
			set
			{
				if ((this._IsVpnEditorIp != value))
				{
					this.OnIsVpnEditorIpChanging(value);
					this.SendPropertyChanging();
					this._IsVpnEditorIp = value;
					this.SendPropertyChanged("IsVpnEditorIp");
					this.OnIsVpnEditorIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasCrocEgeIntegration", DbType="Bit")]
		public System.Nullable<bool> HasCrocEgeIntegration
		{
			get
			{
				return this._HasCrocEgeIntegration;
			}
			set
			{
				if ((this._HasCrocEgeIntegration != value))
				{
					this.OnHasCrocEgeIntegrationChanging(value);
					this.SendPropertyChanging();
					this._HasCrocEgeIntegration = value;
					this.SendPropertyChanged("HasCrocEgeIntegration");
					this.OnHasCrocEgeIntegrationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccountRoleActivity")]
	public partial class AccountRoleActivity
	{
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private long _AccountId;
		
		private int _RoleId;
		
		public AccountRoleActivity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt NOT NULL")]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this._RoleId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicantChecks")]
	public partial class ApplicantCheck
	{
		
		private int _OrganizationId;
		
		private string _OrganizationName;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _PatronymicName;
		
		private string _PassportSeria;
		
		private string _PassportNumber;
		
		private System.DateTime _CheckDate;
		
		private string _CertNumber;
		
		public ApplicantCheck()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="Int NOT NULL")]
		public int OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					this._OrganizationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string OrganizationName
		{
			get
			{
				return this._OrganizationName;
			}
			set
			{
				if ((this._OrganizationName != value))
				{
					this._OrganizationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatronymicName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PatronymicName
		{
			get
			{
				return this._PatronymicName;
			}
			set
			{
				if ((this._PatronymicName != value))
				{
					this._PatronymicName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportSeria", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PassportSeria
		{
			get
			{
				return this._PassportSeria;
			}
			set
			{
				if ((this._PassportSeria != value))
				{
					this._PassportSeria = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PassportNumber
		{
			get
			{
				return this._PassportNumber;
			}
			set
			{
				if ((this._PassportNumber != value))
				{
					this._PassportNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime NOT NULL")]
		public System.DateTime CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this._CheckDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CertNumber
		{
			get
			{
				return this._CertNumber;
			}
			set
			{
				if ((this._CertNumber != value))
				{
					this._CertNumber = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AskedQuestion")]
	public partial class AskedQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Guid _UpdateId;
		
		private long _EditorAccountId;
		
		private string _EditorIp;
		
		private string _Name;
		
		private string _Question;
		
		private string _Answer;
		
		private bool _IsActive;
		
		private int _ViewCount;
		
		private decimal _Popularity;
		
		private string _ContextCodes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateIdChanging(System.Guid value);
    partial void OnUpdateIdChanged();
    partial void OnEditorAccountIdChanging(long value);
    partial void OnEditorAccountIdChanged();
    partial void OnEditorIpChanging(string value);
    partial void OnEditorIpChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnQuestionChanging(string value);
    partial void OnQuestionChanged();
    partial void OnAnswerChanging(string value);
    partial void OnAnswerChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnViewCountChanging(int value);
    partial void OnViewCountChanged();
    partial void OnPopularityChanging(decimal value);
    partial void OnPopularityChanged();
    partial void OnContextCodesChanging(string value);
    partial void OnContextCodesChanged();
    #endregion
		
		public AskedQuestion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorAccountId", DbType="BigInt NOT NULL")]
		public long EditorAccountId
		{
			get
			{
				return this._EditorAccountId;
			}
			set
			{
				if ((this._EditorAccountId != value))
				{
					this.OnEditorAccountIdChanging(value);
					this.SendPropertyChanging();
					this._EditorAccountId = value;
					this.SendPropertyChanged("EditorAccountId");
					this.OnEditorAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorIp", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string EditorIp
		{
			get
			{
				return this._EditorIp;
			}
			set
			{
				if ((this._EditorIp != value))
				{
					this.OnEditorIpChanging(value);
					this.SendPropertyChanging();
					this._EditorIp = value;
					this.SendPropertyChanged("EditorIp");
					this.OnEditorIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Question", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Question
		{
			get
			{
				return this._Question;
			}
			set
			{
				if ((this._Question != value))
				{
					this.OnQuestionChanging(value);
					this.SendPropertyChanging();
					this._Question = value;
					this.SendPropertyChanged("Question");
					this.OnQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Answer", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Answer
		{
			get
			{
				return this._Answer;
			}
			set
			{
				if ((this._Answer != value))
				{
					this.OnAnswerChanging(value);
					this.SendPropertyChanging();
					this._Answer = value;
					this.SendPropertyChanged("Answer");
					this.OnAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViewCount", DbType="Int NOT NULL")]
		public int ViewCount
		{
			get
			{
				return this._ViewCount;
			}
			set
			{
				if ((this._ViewCount != value))
				{
					this.OnViewCountChanging(value);
					this.SendPropertyChanging();
					this._ViewCount = value;
					this.SendPropertyChanged("ViewCount");
					this.OnViewCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Popularity", DbType="Decimal(18,4) NOT NULL")]
		public decimal Popularity
		{
			get
			{
				return this._Popularity;
			}
			set
			{
				if ((this._Popularity != value))
				{
					this.OnPopularityChanging(value);
					this.SendPropertyChanging();
					this._Popularity = value;
					this.SendPropertyChanged("Popularity");
					this.OnPopularityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContextCodes", DbType="NVarChar(4000)")]
		public string ContextCodes
		{
			get
			{
				return this._ContextCodes;
			}
			set
			{
				if ((this._ContextCodes != value))
				{
					this.OnContextCodesChanging(value);
					this.SendPropertyChanging();
					this._ContextCodes = value;
					this.SendPropertyChanged("ContextCodes");
					this.OnContextCodesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AskedQuestionContext")]
	public partial class AskedQuestionContext : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _AskedQuestionId;
		
		private int _ContextId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnAskedQuestionIdChanging(long value);
    partial void OnAskedQuestionIdChanged();
    partial void OnContextIdChanging(int value);
    partial void OnContextIdChanged();
    #endregion
		
		public AskedQuestionContext()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AskedQuestionId", DbType="BigInt NOT NULL")]
		public long AskedQuestionId
		{
			get
			{
				return this._AskedQuestionId;
			}
			set
			{
				if ((this._AskedQuestionId != value))
				{
					this.OnAskedQuestionIdChanging(value);
					this.SendPropertyChanging();
					this._AskedQuestionId = value;
					this.SendPropertyChanged("AskedQuestionId");
					this.OnAskedQuestionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContextId", DbType="Int NOT NULL")]
		public int ContextId
		{
			get
			{
				return this._ContextId;
			}
			set
			{
				if ((this._ContextId != value))
				{
					this.OnContextIdChanging(value);
					this.SendPropertyChanging();
					this._ContextId = value;
					this.SendPropertyChanged("ContextId");
					this.OnContextIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BanData")]
	public partial class BanData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _AccountId;
		
		private int _WrongCheckCount;
		
		private int _SuccessCheckCount;
		
		private System.DateTime _CheckDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIdChanging(long value);
    partial void OnAccountIdChanged();
    partial void OnWrongCheckCountChanging(int value);
    partial void OnWrongCheckCountChanged();
    partial void OnSuccessCheckCountChanging(int value);
    partial void OnSuccessCheckCountChanged();
    partial void OnCheckDateChanging(System.DateTime value);
    partial void OnCheckDateChanged();
    #endregion
		
		public BanData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WrongCheckCount", DbType="Int NOT NULL")]
		public int WrongCheckCount
		{
			get
			{
				return this._WrongCheckCount;
			}
			set
			{
				if ((this._WrongCheckCount != value))
				{
					this.OnWrongCheckCountChanging(value);
					this.SendPropertyChanging();
					this._WrongCheckCount = value;
					this.SendPropertyChanged("WrongCheckCount");
					this.OnWrongCheckCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuccessCheckCount", DbType="Int NOT NULL")]
		public int SuccessCheckCount
		{
			get
			{
				return this._SuccessCheckCount;
			}
			set
			{
				if ((this._SuccessCheckCount != value))
				{
					this.OnSuccessCheckCountChanging(value);
					this.SendPropertyChanging();
					this._SuccessCheckCount = value;
					this.SendPropertyChanged("SuccessCheckCount");
					this.OnSuccessCheckCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDate", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime CheckDate
		{
			get
			{
				return this._CheckDate;
			}
			set
			{
				if ((this._CheckDate != value))
				{
					this.OnCheckDateChanging(value);
					this.SendPropertyChanging();
					this._CheckDate = value;
					this.SendPropertyChanged("CheckDate");
					this.OnCheckDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BatchGUID")]
	public partial class BatchGUID : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _BatchUniqueId;
		
		private long _Id;
		
		private System.Nullable<int> _WSSearchType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBatchUniqueIdChanging(System.Guid value);
    partial void OnBatchUniqueIdChanged();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnWSSearchTypeChanging(System.Nullable<int> value);
    partial void OnWSSearchTypeChanged();
    #endregion
		
		public BatchGUID()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchUniqueId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid BatchUniqueId
		{
			get
			{
				return this._BatchUniqueId;
			}
			set
			{
				if ((this._BatchUniqueId != value))
				{
					this.OnBatchUniqueIdChanging(value);
					this.SendPropertyChanging();
					this._BatchUniqueId = value;
					this.SendPropertyChanged("BatchUniqueId");
					this.OnBatchUniqueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WSSearchType", DbType="Int")]
		public System.Nullable<int> WSSearchType
		{
			get
			{
				return this._WSSearchType;
			}
			set
			{
				if ((this._WSSearchType != value))
				{
					this.OnWSSearchTypeChanging(value);
					this.SendPropertyChanging();
					this._WSSearchType = value;
					this.SendPropertyChanged("WSSearchType");
					this.OnWSSearchTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BatchProcessLog")]
	public partial class BatchProcessLog
	{
		
		private System.DateTime _CreateDate;
		
		private int _Instance;
		
		private long _BatchId;
		
		private int _CheckType;
		
		private bool _IsError;
		
		private string _Message;
		
		public BatchProcessLog()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Instance", DbType="Int NOT NULL")]
		public int Instance
		{
			get
			{
				return this._Instance;
			}
			set
			{
				if ((this._Instance != value))
				{
					this._Instance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchId", DbType="BigInt NOT NULL")]
		public long BatchId
		{
			get
			{
				return this._BatchId;
			}
			set
			{
				if ((this._BatchId != value))
				{
					this._BatchId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckType", DbType="Int NOT NULL")]
		public int CheckType
		{
			get
			{
				return this._CheckType;
			}
			set
			{
				if ((this._CheckType != value))
				{
					this._CheckType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsError", DbType="Bit NOT NULL")]
		public bool IsError
		{
			get
			{
				return this._IsError;
			}
			set
			{
				if ((this._IsError != value))
				{
					this._IsError = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(2048) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this._Message = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CancelledCertificates")]
	public partial class CancelledCertificate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UseYear;
		
		private int _REGION;
		
		private System.Guid _CertificateFK;
		
		private string _Reason;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUseYearChanging(int value);
    partial void OnUseYearChanged();
    partial void OnREGIONChanging(int value);
    partial void OnREGIONChanged();
    partial void OnCertificateFKChanging(System.Guid value);
    partial void OnCertificateFKChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    #endregion
		
		public CancelledCertificate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseYear", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UseYear
		{
			get
			{
				return this._UseYear;
			}
			set
			{
				if ((this._UseYear != value))
				{
					this.OnUseYearChanging(value);
					this.SendPropertyChanging();
					this._UseYear = value;
					this.SendPropertyChanged("UseYear");
					this.OnUseYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGION", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int REGION
		{
			get
			{
				return this._REGION;
			}
			set
			{
				if ((this._REGION != value))
				{
					this.OnREGIONChanging(value);
					this.SendPropertyChanging();
					this._REGION = value;
					this.SendPropertyChanged("REGION");
					this.OnREGIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateFK", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CertificateFK
		{
			get
			{
				return this._CertificateFK;
			}
			set
			{
				if ((this._CertificateFK != value))
				{
					this.OnCertificateFKChanging(value);
					this.SendPropertyChanging();
					this._CertificateFK = value;
					this.SendPropertyChanged("CertificateFK");
					this.OnCertificateFKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(255)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CheckCommonNationalExamCertificateLog")]
	public partial class CheckCommonNationalExamCertificateLog
	{
		
		private System.DateTime _Date;
		
		private System.Nullable<long> _AccountId;
		
		private string _CertificateNumber;
		
		private System.Nullable<bool> _IsOriginal;
		
		private System.Nullable<bool> _IsBatch;
		
		private System.Nullable<bool> _IsExist;
		
		public CheckCommonNationalExamCertificateLog()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt")]
		public System.Nullable<long> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CertificateNumber
		{
			get
			{
				return this._CertificateNumber;
			}
			set
			{
				if ((this._CertificateNumber != value))
				{
					this._CertificateNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOriginal", DbType="Bit")]
		public System.Nullable<bool> IsOriginal
		{
			get
			{
				return this._IsOriginal;
			}
			set
			{
				if ((this._IsOriginal != value))
				{
					this._IsOriginal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBatch", DbType="Bit")]
		public System.Nullable<bool> IsBatch
		{
			get
			{
				return this._IsBatch;
			}
			set
			{
				if ((this._IsBatch != value))
				{
					this._IsBatch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsExist", DbType="Bit")]
		public System.Nullable<bool> IsExist
		{
			get
			{
				return this._IsExist;
			}
			set
			{
				if ((this._IsExist != value))
				{
					this._IsExist = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CheckHistory")]
	public partial class CheckHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _BatchId;
		
		private System.DateTime _CreateDate;
		
		private long _OwnerId;
		
		private int _SenderTypeId;
		
		private int _CheckTypeId;
		
		private string _Status;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<CheckSenderType> _CheckSenderType;
		
		private EntityRef<CheckType> _CheckType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnBatchIdChanging(System.Nullable<long> value);
    partial void OnBatchIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnOwnerIdChanging(long value);
    partial void OnOwnerIdChanged();
    partial void OnSenderTypeIdChanging(int value);
    partial void OnSenderTypeIdChanged();
    partial void OnCheckTypeIdChanging(int value);
    partial void OnCheckTypeIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public CheckHistory()
		{
			this._Account = default(EntityRef<Account>);
			this._CheckSenderType = default(EntityRef<CheckSenderType>);
			this._CheckType = default(EntityRef<CheckType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchId", DbType="BigInt")]
		public System.Nullable<long> BatchId
		{
			get
			{
				return this._BatchId;
			}
			set
			{
				if ((this._BatchId != value))
				{
					this.OnBatchIdChanging(value);
					this.SendPropertyChanging();
					this._BatchId = value;
					this.SendPropertyChanged("BatchId");
					this.OnBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerId", DbType="BigInt NOT NULL")]
		public long OwnerId
		{
			get
			{
				return this._OwnerId;
			}
			set
			{
				if ((this._OwnerId != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerId = value;
					this.SendPropertyChanged("OwnerId");
					this.OnOwnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderTypeId", DbType="Int NOT NULL")]
		public int SenderTypeId
		{
			get
			{
				return this._SenderTypeId;
			}
			set
			{
				if ((this._SenderTypeId != value))
				{
					if (this._CheckSenderType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSenderTypeIdChanging(value);
					this.SendPropertyChanging();
					this._SenderTypeId = value;
					this.SendPropertyChanged("SenderTypeId");
					this.OnSenderTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckTypeId", DbType="Int NOT NULL")]
		public int CheckTypeId
		{
			get
			{
				return this._CheckTypeId;
			}
			set
			{
				if ((this._CheckTypeId != value))
				{
					if (this._CheckType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCheckTypeIdChanging(value);
					this.SendPropertyChanging();
					this._CheckTypeId = value;
					this.SendPropertyChanged("CheckTypeId");
					this.OnCheckTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(250)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_CheckHistory", Storage="_Account", ThisKey="OwnerId", OtherKey="Id", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.CheckHistories.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.CheckHistories.Add(this);
						this._OwnerId = value.Id;
					}
					else
					{
						this._OwnerId = default(long);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CheckSenderType_CheckHistory", Storage="_CheckSenderType", ThisKey="SenderTypeId", OtherKey="Id", IsForeignKey=true)]
		public CheckSenderType CheckSenderType
		{
			get
			{
				return this._CheckSenderType.Entity;
			}
			set
			{
				CheckSenderType previousValue = this._CheckSenderType.Entity;
				if (((previousValue != value) 
							|| (this._CheckSenderType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CheckSenderType.Entity = null;
						previousValue.CheckHistories.Remove(this);
					}
					this._CheckSenderType.Entity = value;
					if ((value != null))
					{
						value.CheckHistories.Add(this);
						this._SenderTypeId = value.Id;
					}
					else
					{
						this._SenderTypeId = default(int);
					}
					this.SendPropertyChanged("CheckSenderType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CheckType_CheckHistory", Storage="_CheckType", ThisKey="CheckTypeId", OtherKey="Id", IsForeignKey=true)]
		public CheckType CheckType
		{
			get
			{
				return this._CheckType.Entity;
			}
			set
			{
				CheckType previousValue = this._CheckType.Entity;
				if (((previousValue != value) 
							|| (this._CheckType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CheckType.Entity = null;
						previousValue.CheckHistories.Remove(this);
					}
					this._CheckType.Entity = value;
					if ((value != null))
					{
						value.CheckHistories.Add(this);
						this._CheckTypeId = value.Id;
					}
					else
					{
						this._CheckTypeId = default(int);
					}
					this.SendPropertyChanged("CheckType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CheckResultsHistory")]
	public partial class CheckResultsHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _CheckId;
		
		private System.DateTime _CreateDate;
		
		private string _CheckSurname;
		
		private string _CheckName;
		
		private string _CheckSecondName;
		
		private string _CheckDocumentSeries;
		
		private string _CheckDocumentNumber;
		
		private string _CheckCertificateNumber;
		
		private string _CheckTypographicNumber;
		
		private string _CheckSubjectsMarks;
		
		private System.Nullable<long> _GroupId;
		
		private System.Nullable<System.Guid> _ParticipantId;
		
		private System.Nullable<int> _UseYear;
		
		private System.Nullable<int> _RegionId;
		
		private string _Surname;
		
		private string _Name;
		
		private string _SecondName;
		
		private string _DocumentSeries;
		
		private string _DocumentNumber;
		
		private bool _IsBroken;
		
		private string _StatusMessage;
		
		private EntityRef<Region> _Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCheckIdChanging(long value);
    partial void OnCheckIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnCheckSurnameChanging(string value);
    partial void OnCheckSurnameChanged();
    partial void OnCheckNameChanging(string value);
    partial void OnCheckNameChanged();
    partial void OnCheckSecondNameChanging(string value);
    partial void OnCheckSecondNameChanged();
    partial void OnCheckDocumentSeriesChanging(string value);
    partial void OnCheckDocumentSeriesChanged();
    partial void OnCheckDocumentNumberChanging(string value);
    partial void OnCheckDocumentNumberChanged();
    partial void OnCheckCertificateNumberChanging(string value);
    partial void OnCheckCertificateNumberChanged();
    partial void OnCheckTypographicNumberChanging(string value);
    partial void OnCheckTypographicNumberChanged();
    partial void OnCheckSubjectsMarksChanging(string value);
    partial void OnCheckSubjectsMarksChanged();
    partial void OnGroupIdChanging(System.Nullable<long> value);
    partial void OnGroupIdChanged();
    partial void OnParticipantIdChanging(System.Nullable<System.Guid> value);
    partial void OnParticipantIdChanged();
    partial void OnUseYearChanging(System.Nullable<int> value);
    partial void OnUseYearChanged();
    partial void OnRegionIdChanging(System.Nullable<int> value);
    partial void OnRegionIdChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSecondNameChanging(string value);
    partial void OnSecondNameChanged();
    partial void OnDocumentSeriesChanging(string value);
    partial void OnDocumentSeriesChanged();
    partial void OnDocumentNumberChanging(string value);
    partial void OnDocumentNumberChanged();
    partial void OnIsBrokenChanging(bool value);
    partial void OnIsBrokenChanged();
    partial void OnStatusMessageChanging(string value);
    partial void OnStatusMessageChanged();
    #endregion
		
		public CheckResultsHistory()
		{
			this._Region = default(EntityRef<Region>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckId", DbType="BigInt NOT NULL")]
		public long CheckId
		{
			get
			{
				return this._CheckId;
			}
			set
			{
				if ((this._CheckId != value))
				{
					this.OnCheckIdChanging(value);
					this.SendPropertyChanging();
					this._CheckId = value;
					this.SendPropertyChanged("CheckId");
					this.OnCheckIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckSurname", DbType="VarChar(80)")]
		public string CheckSurname
		{
			get
			{
				return this._CheckSurname;
			}
			set
			{
				if ((this._CheckSurname != value))
				{
					this.OnCheckSurnameChanging(value);
					this.SendPropertyChanging();
					this._CheckSurname = value;
					this.SendPropertyChanged("CheckSurname");
					this.OnCheckSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckName", DbType="VarChar(80)")]
		public string CheckName
		{
			get
			{
				return this._CheckName;
			}
			set
			{
				if ((this._CheckName != value))
				{
					this.OnCheckNameChanging(value);
					this.SendPropertyChanging();
					this._CheckName = value;
					this.SendPropertyChanged("CheckName");
					this.OnCheckNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckSecondName", DbType="VarChar(80)")]
		public string CheckSecondName
		{
			get
			{
				return this._CheckSecondName;
			}
			set
			{
				if ((this._CheckSecondName != value))
				{
					this.OnCheckSecondNameChanging(value);
					this.SendPropertyChanging();
					this._CheckSecondName = value;
					this.SendPropertyChanged("CheckSecondName");
					this.OnCheckSecondNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDocumentSeries", DbType="VarChar(80)")]
		public string CheckDocumentSeries
		{
			get
			{
				return this._CheckDocumentSeries;
			}
			set
			{
				if ((this._CheckDocumentSeries != value))
				{
					this.OnCheckDocumentSeriesChanging(value);
					this.SendPropertyChanging();
					this._CheckDocumentSeries = value;
					this.SendPropertyChanged("CheckDocumentSeries");
					this.OnCheckDocumentSeriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckDocumentNumber", DbType="VarChar(80)")]
		public string CheckDocumentNumber
		{
			get
			{
				return this._CheckDocumentNumber;
			}
			set
			{
				if ((this._CheckDocumentNumber != value))
				{
					this.OnCheckDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._CheckDocumentNumber = value;
					this.SendPropertyChanged("CheckDocumentNumber");
					this.OnCheckDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckCertificateNumber", DbType="VarChar(80)")]
		public string CheckCertificateNumber
		{
			get
			{
				return this._CheckCertificateNumber;
			}
			set
			{
				if ((this._CheckCertificateNumber != value))
				{
					this.OnCheckCertificateNumberChanging(value);
					this.SendPropertyChanging();
					this._CheckCertificateNumber = value;
					this.SendPropertyChanged("CheckCertificateNumber");
					this.OnCheckCertificateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckTypographicNumber", DbType="VarChar(80)")]
		public string CheckTypographicNumber
		{
			get
			{
				return this._CheckTypographicNumber;
			}
			set
			{
				if ((this._CheckTypographicNumber != value))
				{
					this.OnCheckTypographicNumberChanging(value);
					this.SendPropertyChanging();
					this._CheckTypographicNumber = value;
					this.SendPropertyChanged("CheckTypographicNumber");
					this.OnCheckTypographicNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckSubjectsMarks", DbType="VarChar(1024)")]
		public string CheckSubjectsMarks
		{
			get
			{
				return this._CheckSubjectsMarks;
			}
			set
			{
				if ((this._CheckSubjectsMarks != value))
				{
					this.OnCheckSubjectsMarksChanging(value);
					this.SendPropertyChanging();
					this._CheckSubjectsMarks = value;
					this.SendPropertyChanged("CheckSubjectsMarks");
					this.OnCheckSubjectsMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="BigInt")]
		public System.Nullable<long> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParticipantId
		{
			get
			{
				return this._ParticipantId;
			}
			set
			{
				if ((this._ParticipantId != value))
				{
					this.OnParticipantIdChanging(value);
					this.SendPropertyChanging();
					this._ParticipantId = value;
					this.SendPropertyChanged("ParticipantId");
					this.OnParticipantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseYear", DbType="Int")]
		public System.Nullable<int> UseYear
		{
			get
			{
				return this._UseYear;
			}
			set
			{
				if ((this._UseYear != value))
				{
					this.OnUseYearChanging(value);
					this.SendPropertyChanging();
					this._UseYear = value;
					this.SendPropertyChanged("UseYear");
					this.OnUseYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int")]
		public System.Nullable<int> RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					if (this._Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(80)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(80)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondName", DbType="VarChar(80)")]
		public string SecondName
		{
			get
			{
				return this._SecondName;
			}
			set
			{
				if ((this._SecondName != value))
				{
					this.OnSecondNameChanging(value);
					this.SendPropertyChanging();
					this._SecondName = value;
					this.SendPropertyChanged("SecondName");
					this.OnSecondNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentSeries", DbType="VarChar(9)")]
		public string DocumentSeries
		{
			get
			{
				return this._DocumentSeries;
			}
			set
			{
				if ((this._DocumentSeries != value))
				{
					this.OnDocumentSeriesChanging(value);
					this.SendPropertyChanging();
					this._DocumentSeries = value;
					this.SendPropertyChanged("DocumentSeries");
					this.OnDocumentSeriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="VarChar(10)")]
		public string DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this.OnDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._DocumentNumber = value;
					this.SendPropertyChanged("DocumentNumber");
					this.OnDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBroken", DbType="Bit NOT NULL")]
		public bool IsBroken
		{
			get
			{
				return this._IsBroken;
			}
			set
			{
				if ((this._IsBroken != value))
				{
					this.OnIsBrokenChanging(value);
					this.SendPropertyChanging();
					this._IsBroken = value;
					this.SendPropertyChanged("IsBroken");
					this.OnIsBrokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusMessage", DbType="VarChar(1024)")]
		public string StatusMessage
		{
			get
			{
				return this._StatusMessage;
			}
			set
			{
				if ((this._StatusMessage != value))
				{
					this.OnStatusMessageChanging(value);
					this.SendPropertyChanging();
					this._StatusMessage = value;
					this.SendPropertyChanged("StatusMessage");
					this.OnStatusMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_CheckResultsHistory", Storage="_Region", ThisKey="RegionId", OtherKey="Id", IsForeignKey=true)]
		public Region Region
		{
			get
			{
				return this._Region.Entity;
			}
			set
			{
				Region previousValue = this._Region.Entity;
				if (((previousValue != value) 
							|| (this._Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Region.Entity = null;
						previousValue.CheckResultsHistories.Remove(this);
					}
					this._Region.Entity = value;
					if ((value != null))
					{
						value.CheckResultsHistories.Add(this);
						this._RegionId = value.Id;
					}
					else
					{
						this._RegionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Region");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CheckSenderTypes")]
	public partial class CheckSenderType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<CheckHistory> _CheckHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CheckSenderType()
		{
			this._CheckHistories = new EntitySet<CheckHistory>(new Action<CheckHistory>(this.attach_CheckHistories), new Action<CheckHistory>(this.detach_CheckHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CheckSenderType_CheckHistory", Storage="_CheckHistories", ThisKey="Id", OtherKey="SenderTypeId")]
		public EntitySet<CheckHistory> CheckHistories
		{
			get
			{
				return this._CheckHistories;
			}
			set
			{
				this._CheckHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CheckHistories(CheckHistory entity)
		{
			this.SendPropertyChanging();
			entity.CheckSenderType = this;
		}
		
		private void detach_CheckHistories(CheckHistory entity)
		{
			this.SendPropertyChanging();
			entity.CheckSenderType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CheckTypes")]
	public partial class CheckType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<CheckHistory> _CheckHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CheckType()
		{
			this._CheckHistories = new EntitySet<CheckHistory>(new Action<CheckHistory>(this.attach_CheckHistories), new Action<CheckHistory>(this.detach_CheckHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CheckType_CheckHistory", Storage="_CheckHistories", ThisKey="Id", OtherKey="CheckTypeId")]
		public EntitySet<CheckHistory> CheckHistories
		{
			get
			{
				return this._CheckHistories;
			}
			set
			{
				this._CheckHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CheckHistories(CheckHistory entity)
		{
			this.SendPropertyChanging();
			entity.CheckType = this;
		}
		
		private void detach_CheckHistories(CheckHistory entity)
		{
			this.SendPropertyChanging();
			entity.CheckType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CNEWebUICheckLog")]
	public partial class CNEWebUICheckLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private long _AccountId;
		
		private System.DateTime _EventDate;
		
		private string _TypeCode;
		
		private string _TypographicNumber;
		
		private string _PassportSeria;
		
		private string _PassportNumber;
		
		private string _CNENumber;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _PatronymicName;
		
		private string _Marks;
		
		private string _FoundedCNEId;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Account> _Account1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAccountIdChanging(long value);
    partial void OnAccountIdChanged();
    partial void OnEventDateChanging(System.DateTime value);
    partial void OnEventDateChanged();
    partial void OnTypeCodeChanging(string value);
    partial void OnTypeCodeChanged();
    partial void OnTypographicNumberChanging(string value);
    partial void OnTypographicNumberChanged();
    partial void OnPassportSeriaChanging(string value);
    partial void OnPassportSeriaChanged();
    partial void OnPassportNumberChanging(string value);
    partial void OnPassportNumberChanged();
    partial void OnCNENumberChanging(string value);
    partial void OnCNENumberChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnPatronymicNameChanging(string value);
    partial void OnPatronymicNameChanged();
    partial void OnMarksChanging(string value);
    partial void OnMarksChanged();
    partial void OnFoundedCNEIdChanging(string value);
    partial void OnFoundedCNEIdChanged();
    #endregion
		
		public CNEWebUICheckLog()
		{
			this._Account = default(EntityRef<Account>);
			this._Account1 = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt NOT NULL")]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					if ((this._Account.HasLoadedOrAssignedValue || this._Account1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="DateTime NOT NULL")]
		public System.DateTime EventDate
		{
			get
			{
				return this._EventDate;
			}
			set
			{
				if ((this._EventDate != value))
				{
					this.OnEventDateChanging(value);
					this.SendPropertyChanging();
					this._EventDate = value;
					this.SendPropertyChanged("EventDate");
					this.OnEventDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TypeCode
		{
			get
			{
				return this._TypeCode;
			}
			set
			{
				if ((this._TypeCode != value))
				{
					this.OnTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TypeCode = value;
					this.SendPropertyChanged("TypeCode");
					this.OnTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypographicNumber", DbType="NVarChar(20)")]
		public string TypographicNumber
		{
			get
			{
				return this._TypographicNumber;
			}
			set
			{
				if ((this._TypographicNumber != value))
				{
					this.OnTypographicNumberChanging(value);
					this.SendPropertyChanging();
					this._TypographicNumber = value;
					this.SendPropertyChanged("TypographicNumber");
					this.OnTypographicNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportSeria", DbType="NVarChar(20)")]
		public string PassportSeria
		{
			get
			{
				return this._PassportSeria;
			}
			set
			{
				if ((this._PassportSeria != value))
				{
					this.OnPassportSeriaChanging(value);
					this.SendPropertyChanging();
					this._PassportSeria = value;
					this.SendPropertyChanged("PassportSeria");
					this.OnPassportSeriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNumber", DbType="NVarChar(20)")]
		public string PassportNumber
		{
			get
			{
				return this._PassportNumber;
			}
			set
			{
				if ((this._PassportNumber != value))
				{
					this.OnPassportNumberChanging(value);
					this.SendPropertyChanging();
					this._PassportNumber = value;
					this.SendPropertyChanged("PassportNumber");
					this.OnPassportNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNENumber", DbType="NVarChar(20)")]
		public string CNENumber
		{
			get
			{
				return this._CNENumber;
			}
			set
			{
				if ((this._CNENumber != value))
				{
					this.OnCNENumberChanging(value);
					this.SendPropertyChanging();
					this._CNENumber = value;
					this.SendPropertyChanged("CNENumber");
					this.OnCNENumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatronymicName", DbType="NVarChar(255)")]
		public string PatronymicName
		{
			get
			{
				return this._PatronymicName;
			}
			set
			{
				if ((this._PatronymicName != value))
				{
					this.OnPatronymicNameChanging(value);
					this.SendPropertyChanging();
					this._PatronymicName = value;
					this.SendPropertyChanged("PatronymicName");
					this.OnPatronymicNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marks", DbType="NVarChar(500)")]
		public string Marks
		{
			get
			{
				return this._Marks;
			}
			set
			{
				if ((this._Marks != value))
				{
					this.OnMarksChanging(value);
					this.SendPropertyChanging();
					this._Marks = value;
					this.SendPropertyChanged("Marks");
					this.OnMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoundedCNEId", DbType="NVarChar(255)")]
		public string FoundedCNEId
		{
			get
			{
				return this._FoundedCNEId;
			}
			set
			{
				if ((this._FoundedCNEId != value))
				{
					this.OnFoundedCNEIdChanging(value);
					this.SendPropertyChanging();
					this._FoundedCNEId = value;
					this.SendPropertyChanged("FoundedCNEId");
					this.OnFoundedCNEIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_CNEWebUICheckLog", Storage="_Account", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.CNEWebUICheckLogs.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.CNEWebUICheckLogs.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(long);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_CNEWebUICheckLog1", Storage="_Account1", ThisKey="AccountId", OtherKey="Id", IsForeignKey=true)]
		public Account Account1
		{
			get
			{
				return this._Account1.Entity;
			}
			set
			{
				Account previousValue = this._Account1.Entity;
				if (((previousValue != value) 
							|| (this._Account1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account1.Entity = null;
						previousValue.CNEWebUICheckLogs1.Remove(this);
					}
					this._Account1.Entity = value;
					if ((value != null))
					{
						value.CNEWebUICheckLogs1.Add(this);
						this._AccountId = value.Id;
					}
					else
					{
						this._AccountId = default(long);
					}
					this.SendPropertyChanged("Account1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommonNationalExamCertificate")]
	public partial class CommonNationalExamCertificate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Guid _UpdateId;
		
		private long _EditorAccountId;
		
		private string _EditorIp;
		
		private string _Number;
		
		private string _EducationInstitutionCode;
		
		private int _Year;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _PatronymicName;
		
		private bool _Sex;
		
		private string _Class;
		
		private string _InternalPassportSeria;
		
		private string _PassportSeria;
		
		private string _PassportNumber;
		
		private string _EntrantNumber;
		
		private int _RegionId;
		
		private string _TypographicNumber;
		
		private string _FIO;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateIdChanging(System.Guid value);
    partial void OnUpdateIdChanged();
    partial void OnEditorAccountIdChanging(long value);
    partial void OnEditorAccountIdChanged();
    partial void OnEditorIpChanging(string value);
    partial void OnEditorIpChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnEducationInstitutionCodeChanging(string value);
    partial void OnEducationInstitutionCodeChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnPatronymicNameChanging(string value);
    partial void OnPatronymicNameChanged();
    partial void OnSexChanging(bool value);
    partial void OnSexChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnInternalPassportSeriaChanging(string value);
    partial void OnInternalPassportSeriaChanged();
    partial void OnPassportSeriaChanging(string value);
    partial void OnPassportSeriaChanged();
    partial void OnPassportNumberChanging(string value);
    partial void OnPassportNumberChanged();
    partial void OnEntrantNumberChanging(string value);
    partial void OnEntrantNumberChanged();
    partial void OnRegionIdChanging(int value);
    partial void OnRegionIdChanged();
    partial void OnTypographicNumberChanging(string value);
    partial void OnTypographicNumberChanged();
    partial void OnFIOChanging(string value);
    partial void OnFIOChanged();
    #endregion
		
		public CommonNationalExamCertificate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorAccountId", DbType="BigInt NOT NULL")]
		public long EditorAccountId
		{
			get
			{
				return this._EditorAccountId;
			}
			set
			{
				if ((this._EditorAccountId != value))
				{
					this.OnEditorAccountIdChanging(value);
					this.SendPropertyChanging();
					this._EditorAccountId = value;
					this.SendPropertyChanged("EditorAccountId");
					this.OnEditorAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorIp", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EditorIp
		{
			get
			{
				return this._EditorIp;
			}
			set
			{
				if ((this._EditorIp != value))
				{
					this.OnEditorIpChanging(value);
					this.SendPropertyChanging();
					this._EditorIp = value;
					this.SendPropertyChanged("EditorIp");
					this.OnEditorIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationInstitutionCode", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EducationInstitutionCode
		{
			get
			{
				return this._EducationInstitutionCode;
			}
			set
			{
				if ((this._EducationInstitutionCode != value))
				{
					this.OnEducationInstitutionCodeChanging(value);
					this.SendPropertyChanging();
					this._EducationInstitutionCode = value;
					this.SendPropertyChanged("EducationInstitutionCode");
					this.OnEducationInstitutionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatronymicName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PatronymicName
		{
			get
			{
				return this._PatronymicName;
			}
			set
			{
				if ((this._PatronymicName != value))
				{
					this.OnPatronymicNameChanging(value);
					this.SendPropertyChanging();
					this._PatronymicName = value;
					this.SendPropertyChanged("PatronymicName");
					this.OnPatronymicNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit NOT NULL")]
		public bool Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalPassportSeria", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string InternalPassportSeria
		{
			get
			{
				return this._InternalPassportSeria;
			}
			set
			{
				if ((this._InternalPassportSeria != value))
				{
					this.OnInternalPassportSeriaChanging(value);
					this.SendPropertyChanging();
					this._InternalPassportSeria = value;
					this.SendPropertyChanged("InternalPassportSeria");
					this.OnInternalPassportSeriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportSeria", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PassportSeria
		{
			get
			{
				return this._PassportSeria;
			}
			set
			{
				if ((this._PassportSeria != value))
				{
					this.OnPassportSeriaChanging(value);
					this.SendPropertyChanging();
					this._PassportSeria = value;
					this.SendPropertyChanged("PassportSeria");
					this.OnPassportSeriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PassportNumber
		{
			get
			{
				return this._PassportNumber;
			}
			set
			{
				if ((this._PassportNumber != value))
				{
					this.OnPassportNumberChanging(value);
					this.SendPropertyChanging();
					this._PassportNumber = value;
					this.SendPropertyChanged("PassportNumber");
					this.OnPassportNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantNumber", DbType="NVarChar(255)")]
		public string EntrantNumber
		{
			get
			{
				return this._EntrantNumber;
			}
			set
			{
				if ((this._EntrantNumber != value))
				{
					this.OnEntrantNumberChanging(value);
					this.SendPropertyChanging();
					this._EntrantNumber = value;
					this.SendPropertyChanged("EntrantNumber");
					this.OnEntrantNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int NOT NULL")]
		public int RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypographicNumber", DbType="NVarChar(255)")]
		public string TypographicNumber
		{
			get
			{
				return this._TypographicNumber;
			}
			set
			{
				if ((this._TypographicNumber != value))
				{
					this.OnTypographicNumberChanging(value);
					this.SendPropertyChanging();
					this._TypographicNumber = value;
					this.SendPropertyChanged("TypographicNumber");
					this.OnTypographicNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIO", AutoSync=AutoSync.Always, DbType="NVarChar(4000)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string FIO
		{
			get
			{
				return this._FIO;
			}
			set
			{
				if ((this._FIO != value))
				{
					this.OnFIOChanging(value);
					this.SendPropertyChanging();
					this._FIO = value;
					this.SendPropertyChanged("FIO");
					this.OnFIOChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommonNationalExamCertificateCheck")]
	public partial class CommonNationalExamCertificateCheck : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _BatchId;
		
		private System.Nullable<System.Guid> _CertificateCheckingId;
		
		private string _CertificateNumber;
		
		private System.Nullable<bool> _IsOriginal;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _PatronymicName;
		
		private System.Nullable<bool> _IsCorrect;
		
		private System.Nullable<long> _SourceCertificateId;
		
		private string _SourceLastName;
		
		private string _SourceFirstName;
		
		private string _SourcePatronymicName;
		
		private System.Nullable<bool> _IsDeny;
		
		private string _DenyComment;
		
		private string _DenyNewCertificateNumber;
		
		private System.Nullable<int> _Year;
		
		private string _TypographicNumber;
		
		private System.Nullable<int> _RegionId;
		
		private string _PassportSeria;
		
		private string _PassportNumber;
		
		private System.Nullable<long> _idtemp;
		
		private System.Nullable<System.Guid> _SourceCertificateIdGuid;
		
		private System.Nullable<System.Guid> _ParticipantFK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnBatchIdChanging(long value);
    partial void OnBatchIdChanged();
    partial void OnCertificateCheckingIdChanging(System.Nullable<System.Guid> value);
    partial void OnCertificateCheckingIdChanged();
    partial void OnCertificateNumberChanging(string value);
    partial void OnCertificateNumberChanged();
    partial void OnIsOriginalChanging(System.Nullable<bool> value);
    partial void OnIsOriginalChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnPatronymicNameChanging(string value);
    partial void OnPatronymicNameChanged();
    partial void OnIsCorrectChanging(System.Nullable<bool> value);
    partial void OnIsCorrectChanged();
    partial void OnSourceCertificateIdChanging(System.Nullable<long> value);
    partial void OnSourceCertificateIdChanged();
    partial void OnSourceLastNameChanging(string value);
    partial void OnSourceLastNameChanged();
    partial void OnSourceFirstNameChanging(string value);
    partial void OnSourceFirstNameChanged();
    partial void OnSourcePatronymicNameChanging(string value);
    partial void OnSourcePatronymicNameChanged();
    partial void OnIsDenyChanging(System.Nullable<bool> value);
    partial void OnIsDenyChanged();
    partial void OnDenyCommentChanging(string value);
    partial void OnDenyCommentChanged();
    partial void OnDenyNewCertificateNumberChanging(string value);
    partial void OnDenyNewCertificateNumberChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnTypographicNumberChanging(string value);
    partial void OnTypographicNumberChanged();
    partial void OnRegionIdChanging(System.Nullable<int> value);
    partial void OnRegionIdChanged();
    partial void OnPassportSeriaChanging(string value);
    partial void OnPassportSeriaChanged();
    partial void OnPassportNumberChanging(string value);
    partial void OnPassportNumberChanged();
    partial void OnidtempChanging(System.Nullable<long> value);
    partial void OnidtempChanged();
    partial void OnSourceCertificateIdGuidChanging(System.Nullable<System.Guid> value);
    partial void OnSourceCertificateIdGuidChanged();
    partial void OnParticipantFKChanging(System.Nullable<System.Guid> value);
    partial void OnParticipantFKChanged();
    #endregion
		
		public CommonNationalExamCertificateCheck()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchId", DbType="BigInt NOT NULL")]
		public long BatchId
		{
			get
			{
				return this._BatchId;
			}
			set
			{
				if ((this._BatchId != value))
				{
					this.OnBatchIdChanging(value);
					this.SendPropertyChanging();
					this._BatchId = value;
					this.SendPropertyChanged("BatchId");
					this.OnBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateCheckingId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CertificateCheckingId
		{
			get
			{
				return this._CertificateCheckingId;
			}
			set
			{
				if ((this._CertificateCheckingId != value))
				{
					this.OnCertificateCheckingIdChanging(value);
					this.SendPropertyChanging();
					this._CertificateCheckingId = value;
					this.SendPropertyChanged("CertificateCheckingId");
					this.OnCertificateCheckingIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CertificateNumber
		{
			get
			{
				return this._CertificateNumber;
			}
			set
			{
				if ((this._CertificateNumber != value))
				{
					this.OnCertificateNumberChanging(value);
					this.SendPropertyChanging();
					this._CertificateNumber = value;
					this.SendPropertyChanged("CertificateNumber");
					this.OnCertificateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOriginal", DbType="Bit")]
		public System.Nullable<bool> IsOriginal
		{
			get
			{
				return this._IsOriginal;
			}
			set
			{
				if ((this._IsOriginal != value))
				{
					this.OnIsOriginalChanging(value);
					this.SendPropertyChanging();
					this._IsOriginal = value;
					this.SendPropertyChanged("IsOriginal");
					this.OnIsOriginalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatronymicName", DbType="NVarChar(255)")]
		public string PatronymicName
		{
			get
			{
				return this._PatronymicName;
			}
			set
			{
				if ((this._PatronymicName != value))
				{
					this.OnPatronymicNameChanging(value);
					this.SendPropertyChanging();
					this._PatronymicName = value;
					this.SendPropertyChanged("PatronymicName");
					this.OnPatronymicNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCorrect", DbType="Bit")]
		public System.Nullable<bool> IsCorrect
		{
			get
			{
				return this._IsCorrect;
			}
			set
			{
				if ((this._IsCorrect != value))
				{
					this.OnIsCorrectChanging(value);
					this.SendPropertyChanging();
					this._IsCorrect = value;
					this.SendPropertyChanged("IsCorrect");
					this.OnIsCorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCertificateId", DbType="BigInt")]
		public System.Nullable<long> SourceCertificateId
		{
			get
			{
				return this._SourceCertificateId;
			}
			set
			{
				if ((this._SourceCertificateId != value))
				{
					this.OnSourceCertificateIdChanging(value);
					this.SendPropertyChanging();
					this._SourceCertificateId = value;
					this.SendPropertyChanged("SourceCertificateId");
					this.OnSourceCertificateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceLastName", DbType="NVarChar(255)")]
		public string SourceLastName
		{
			get
			{
				return this._SourceLastName;
			}
			set
			{
				if ((this._SourceLastName != value))
				{
					this.OnSourceLastNameChanging(value);
					this.SendPropertyChanging();
					this._SourceLastName = value;
					this.SendPropertyChanged("SourceLastName");
					this.OnSourceLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceFirstName", DbType="NVarChar(255)")]
		public string SourceFirstName
		{
			get
			{
				return this._SourceFirstName;
			}
			set
			{
				if ((this._SourceFirstName != value))
				{
					this.OnSourceFirstNameChanging(value);
					this.SendPropertyChanging();
					this._SourceFirstName = value;
					this.SendPropertyChanged("SourceFirstName");
					this.OnSourceFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourcePatronymicName", DbType="NVarChar(255)")]
		public string SourcePatronymicName
		{
			get
			{
				return this._SourcePatronymicName;
			}
			set
			{
				if ((this._SourcePatronymicName != value))
				{
					this.OnSourcePatronymicNameChanging(value);
					this.SendPropertyChanging();
					this._SourcePatronymicName = value;
					this.SendPropertyChanged("SourcePatronymicName");
					this.OnSourcePatronymicNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeny", DbType="Bit")]
		public System.Nullable<bool> IsDeny
		{
			get
			{
				return this._IsDeny;
			}
			set
			{
				if ((this._IsDeny != value))
				{
					this.OnIsDenyChanging(value);
					this.SendPropertyChanging();
					this._IsDeny = value;
					this.SendPropertyChanged("IsDeny");
					this.OnIsDenyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DenyComment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DenyComment
		{
			get
			{
				return this._DenyComment;
			}
			set
			{
				if ((this._DenyComment != value))
				{
					this.OnDenyCommentChanging(value);
					this.SendPropertyChanging();
					this._DenyComment = value;
					this.SendPropertyChanged("DenyComment");
					this.OnDenyCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DenyNewCertificateNumber", DbType="NVarChar(255)")]
		public string DenyNewCertificateNumber
		{
			get
			{
				return this._DenyNewCertificateNumber;
			}
			set
			{
				if ((this._DenyNewCertificateNumber != value))
				{
					this.OnDenyNewCertificateNumberChanging(value);
					this.SendPropertyChanging();
					this._DenyNewCertificateNumber = value;
					this.SendPropertyChanged("DenyNewCertificateNumber");
					this.OnDenyNewCertificateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypographicNumber", DbType="NVarChar(255)")]
		public string TypographicNumber
		{
			get
			{
				return this._TypographicNumber;
			}
			set
			{
				if ((this._TypographicNumber != value))
				{
					this.OnTypographicNumberChanging(value);
					this.SendPropertyChanging();
					this._TypographicNumber = value;
					this.SendPropertyChanged("TypographicNumber");
					this.OnTypographicNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int")]
		public System.Nullable<int> RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportSeria", DbType="NVarChar(255)")]
		public string PassportSeria
		{
			get
			{
				return this._PassportSeria;
			}
			set
			{
				if ((this._PassportSeria != value))
				{
					this.OnPassportSeriaChanging(value);
					this.SendPropertyChanging();
					this._PassportSeria = value;
					this.SendPropertyChanged("PassportSeria");
					this.OnPassportSeriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNumber", DbType="NVarChar(255)")]
		public string PassportNumber
		{
			get
			{
				return this._PassportNumber;
			}
			set
			{
				if ((this._PassportNumber != value))
				{
					this.OnPassportNumberChanging(value);
					this.SendPropertyChanging();
					this._PassportNumber = value;
					this.SendPropertyChanged("PassportNumber");
					this.OnPassportNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idtemp", DbType="BigInt")]
		public System.Nullable<long> idtemp
		{
			get
			{
				return this._idtemp;
			}
			set
			{
				if ((this._idtemp != value))
				{
					this.OnidtempChanging(value);
					this.SendPropertyChanging();
					this._idtemp = value;
					this.SendPropertyChanged("idtemp");
					this.OnidtempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCertificateIdGuid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SourceCertificateIdGuid
		{
			get
			{
				return this._SourceCertificateIdGuid;
			}
			set
			{
				if ((this._SourceCertificateIdGuid != value))
				{
					this.OnSourceCertificateIdGuidChanging(value);
					this.SendPropertyChanging();
					this._SourceCertificateIdGuid = value;
					this.SendPropertyChanged("SourceCertificateIdGuid");
					this.OnSourceCertificateIdGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantFK", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParticipantFK
		{
			get
			{
				return this._ParticipantFK;
			}
			set
			{
				if ((this._ParticipantFK != value))
				{
					this.OnParticipantFKChanging(value);
					this.SendPropertyChanging();
					this._ParticipantFK = value;
					this.SendPropertyChanged("ParticipantFK");
					this.OnParticipantFKChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommonNationalExamCertificateCheckBatch")]
	public partial class CommonNationalExamCertificateCheckBatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Nullable<long> _OwnerAccountId;
		
		private bool _IsProcess;
		
		private System.Nullable<bool> _IsCorrect;
		
		private string _Batch;
		
		private System.Nullable<bool> _Executing;
		
		private string _Filter;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<long> _outerId;
		
		private System.Nullable<int> _Year;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnOwnerAccountIdChanging(System.Nullable<long> value);
    partial void OnOwnerAccountIdChanged();
    partial void OnIsProcessChanging(bool value);
    partial void OnIsProcessChanged();
    partial void OnIsCorrectChanging(System.Nullable<bool> value);
    partial void OnIsCorrectChanged();
    partial void OnBatchChanging(string value);
    partial void OnBatchChanged();
    partial void OnExecutingChanging(System.Nullable<bool> value);
    partial void OnExecutingChanged();
    partial void OnFilterChanging(string value);
    partial void OnFilterChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnouterIdChanging(System.Nullable<long> value);
    partial void OnouterIdChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    #endregion
		
		public CommonNationalExamCertificateCheckBatch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerAccountId", DbType="BigInt")]
		public System.Nullable<long> OwnerAccountId
		{
			get
			{
				return this._OwnerAccountId;
			}
			set
			{
				if ((this._OwnerAccountId != value))
				{
					this.OnOwnerAccountIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerAccountId = value;
					this.SendPropertyChanged("OwnerAccountId");
					this.OnOwnerAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProcess", DbType="Bit NOT NULL")]
		public bool IsProcess
		{
			get
			{
				return this._IsProcess;
			}
			set
			{
				if ((this._IsProcess != value))
				{
					this.OnIsProcessChanging(value);
					this.SendPropertyChanging();
					this._IsProcess = value;
					this.SendPropertyChanged("IsProcess");
					this.OnIsProcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCorrect", DbType="Bit")]
		public System.Nullable<bool> IsCorrect
		{
			get
			{
				return this._IsCorrect;
			}
			set
			{
				if ((this._IsCorrect != value))
				{
					this.OnIsCorrectChanging(value);
					this.SendPropertyChanging();
					this._IsCorrect = value;
					this.SendPropertyChanged("IsCorrect");
					this.OnIsCorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Batch", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Batch
		{
			get
			{
				return this._Batch;
			}
			set
			{
				if ((this._Batch != value))
				{
					this.OnBatchChanging(value);
					this.SendPropertyChanging();
					this._Batch = value;
					this.SendPropertyChanged("Batch");
					this.OnBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Executing", DbType="Bit")]
		public System.Nullable<bool> Executing
		{
			get
			{
				return this._Executing;
			}
			set
			{
				if ((this._Executing != value))
				{
					this.OnExecutingChanging(value);
					this.SendPropertyChanging();
					this._Executing = value;
					this.SendPropertyChanged("Executing");
					this.OnExecutingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filter", DbType="NVarChar(255)")]
		public string Filter
		{
			get
			{
				return this._Filter;
			}
			set
			{
				if ((this._Filter != value))
				{
					this.OnFilterChanging(value);
					this.SendPropertyChanging();
					this._Filter = value;
					this.SendPropertyChanged("Filter");
					this.OnFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_outerId", DbType="BigInt")]
		public System.Nullable<long> outerId
		{
			get
			{
				return this._outerId;
			}
			set
			{
				if ((this._outerId != value))
				{
					this.OnouterIdChanging(value);
					this.SendPropertyChanging();
					this._outerId = value;
					this.SendPropertyChanged("outerId");
					this.OnouterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommonNationalExamCertificateCheckLog")]
	public partial class CommonNationalExamCertificateCheckLog
	{
		
		private System.DateTime _Date;
		
		private System.Nullable<long> _AccountId;
		
		private string _Ip;
		
		private string _PeriodName;
		
		private long _Count;
		
		private bool _IsBatch;
		
		public CommonNationalExamCertificateCheckLog()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt")]
		public System.Nullable<long> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="NVarChar(255)")]
		public string Ip
		{
			get
			{
				return this._Ip;
			}
			set
			{
				if ((this._Ip != value))
				{
					this._Ip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeriodName", DbType="NVarChar(20)")]
		public string PeriodName
		{
			get
			{
				return this._PeriodName;
			}
			set
			{
				if ((this._PeriodName != value))
				{
					this._PeriodName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="BigInt NOT NULL")]
		public long Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this._Count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBatch", DbType="Bit NOT NULL")]
		public bool IsBatch
		{
			get
			{
				return this._IsBatch;
			}
			set
			{
				if ((this._IsBatch != value))
				{
					this._IsBatch = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommonNationalExamCertificateDeny")]
	public partial class CommonNationalExamCertificateDeny : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Nullable<System.Guid> _UpdateId;
		
		private int _Year;
		
		private string _CertificateNumber;
		
		private string _Comment;
		
		private string _NewCertificateNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateIdChanging(System.Nullable<System.Guid> value);
    partial void OnUpdateIdChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnCertificateNumberChanging(string value);
    partial void OnCertificateNumberChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnNewCertificateNumberChanging(string value);
    partial void OnNewCertificateNumberChanged();
    #endregion
		
		public CommonNationalExamCertificateDeny()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CertificateNumber
		{
			get
			{
				return this._CertificateNumber;
			}
			set
			{
				if ((this._CertificateNumber != value))
				{
					this.OnCertificateNumberChanging(value);
					this.SendPropertyChanging();
					this._CertificateNumber = value;
					this.SendPropertyChanged("CertificateNumber");
					this.OnCertificateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCertificateNumber", DbType="NVarChar(255)")]
		public string NewCertificateNumber
		{
			get
			{
				return this._NewCertificateNumber;
			}
			set
			{
				if ((this._NewCertificateNumber != value))
				{
					this.OnNewCertificateNumberChanging(value);
					this.SendPropertyChanging();
					this._NewCertificateNumber = value;
					this.SendPropertyChanged("NewCertificateNumber");
					this.OnNewCertificateNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommonNationalExamCertificateDenyLoadingTask")]
	public partial class CommonNationalExamCertificateDenyLoadingTask : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Nullable<System.Guid> _UpdateId;
		
		private System.Nullable<long> _EditorAccountId;
		
		private string _EditorIp;
		
		private string _SourceBatchUrl;
		
		private bool _IsActive;
		
		private System.Nullable<bool> _IsProcess;
		
		private System.Nullable<bool> _IsCorrect;
		
		private bool _IsLoaded;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateIdChanging(System.Nullable<System.Guid> value);
    partial void OnUpdateIdChanged();
    partial void OnEditorAccountIdChanging(System.Nullable<long> value);
    partial void OnEditorAccountIdChanged();
    partial void OnEditorIpChanging(string value);
    partial void OnEditorIpChanged();
    partial void OnSourceBatchUrlChanging(string value);
    partial void OnSourceBatchUrlChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsProcessChanging(System.Nullable<bool> value);
    partial void OnIsProcessChanged();
    partial void OnIsCorrectChanging(System.Nullable<bool> value);
    partial void OnIsCorrectChanged();
    partial void OnIsLoadedChanging(bool value);
    partial void OnIsLoadedChanged();
    #endregion
		
		public CommonNationalExamCertificateDenyLoadingTask()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorAccountId", DbType="BigInt")]
		public System.Nullable<long> EditorAccountId
		{
			get
			{
				return this._EditorAccountId;
			}
			set
			{
				if ((this._EditorAccountId != value))
				{
					this.OnEditorAccountIdChanging(value);
					this.SendPropertyChanging();
					this._EditorAccountId = value;
					this.SendPropertyChanged("EditorAccountId");
					this.OnEditorAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorIp", DbType="NVarChar(255)")]
		public string EditorIp
		{
			get
			{
				return this._EditorIp;
			}
			set
			{
				if ((this._EditorIp != value))
				{
					this.OnEditorIpChanging(value);
					this.SendPropertyChanging();
					this._EditorIp = value;
					this.SendPropertyChanged("EditorIp");
					this.OnEditorIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceBatchUrl", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SourceBatchUrl
		{
			get
			{
				return this._SourceBatchUrl;
			}
			set
			{
				if ((this._SourceBatchUrl != value))
				{
					this.OnSourceBatchUrlChanging(value);
					this.SendPropertyChanging();
					this._SourceBatchUrl = value;
					this.SendPropertyChanged("SourceBatchUrl");
					this.OnSourceBatchUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProcess", DbType="Bit")]
		public System.Nullable<bool> IsProcess
		{
			get
			{
				return this._IsProcess;
			}
			set
			{
				if ((this._IsProcess != value))
				{
					this.OnIsProcessChanging(value);
					this.SendPropertyChanging();
					this._IsProcess = value;
					this.SendPropertyChanged("IsProcess");
					this.OnIsProcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCorrect", DbType="Bit")]
		public System.Nullable<bool> IsCorrect
		{
			get
			{
				return this._IsCorrect;
			}
			set
			{
				if ((this._IsCorrect != value))
				{
					this.OnIsCorrectChanging(value);
					this.SendPropertyChanging();
					this._IsCorrect = value;
					this.SendPropertyChanged("IsCorrect");
					this.OnIsCorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLoaded", DbType="Bit NOT NULL")]
		public bool IsLoaded
		{
			get
			{
				return this._IsLoaded;
			}
			set
			{
				if ((this._IsLoaded != value))
				{
					this.OnIsLoadedChanging(value);
					this.SendPropertyChanging();
					this._IsLoaded = value;
					this.SendPropertyChanged("IsLoaded");
					this.OnIsLoadedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommonNationalExamCertificateDenyLoadingTaskError")]
	public partial class CommonNationalExamCertificateDenyLoadingTaskError
	{
		
		private long _Id;
		
		private System.DateTime _Date;
		
		private long _TaskId;
		
		private System.Nullable<int> _RowIndex;
		
		private string _Error;
		
		public CommonNationalExamCertificateDenyLoadingTaskError()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskId", DbType="BigInt NOT NULL")]
		public long TaskId
		{
			get
			{
				return this._TaskId;
			}
			set
			{
				if ((this._TaskId != value))
				{
					this._TaskId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowIndex", DbType="Int")]
		public System.Nullable<int> RowIndex
		{
			get
			{
				return this._RowIndex;
			}
			set
			{
				if ((this._RowIndex != value))
				{
					this._RowIndex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Error", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Error
		{
			get
			{
				return this._Error;
			}
			set
			{
				if ((this._Error != value))
				{
					this._Error = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommonNationalExamCertificateForm")]
	public partial class CommonNationalExamCertificateForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Number;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Guid _UpdateId;
		
		private int _Year;
		
		private int _RegionId;
		
		private long _Partition;
		
		private string _CertificateNumber;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _PatronymicName;
		
		private string _PassportSeria;
		
		private string _PassportNumber;
		
		private bool _IsBlank;
		
		private bool _IsDeny;
		
		private bool _IsDuplicate;
		
		private System.Nullable<bool> _IsValid;
		
		private System.Nullable<bool> _IsCertificateExist;
		
		private System.Nullable<bool> _IsCertificateDeny;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateIdChanging(System.Guid value);
    partial void OnUpdateIdChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnRegionIdChanging(int value);
    partial void OnRegionIdChanged();
    partial void OnPartitionChanging(long value);
    partial void OnPartitionChanged();
    partial void OnCertificateNumberChanging(string value);
    partial void OnCertificateNumberChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnPatronymicNameChanging(string value);
    partial void OnPatronymicNameChanged();
    partial void OnPassportSeriaChanging(string value);
    partial void OnPassportSeriaChanged();
    partial void OnPassportNumberChanging(string value);
    partial void OnPassportNumberChanged();
    partial void OnIsBlankChanging(bool value);
    partial void OnIsBlankChanged();
    partial void OnIsDenyChanging(bool value);
    partial void OnIsDenyChanged();
    partial void OnIsDuplicateChanging(bool value);
    partial void OnIsDuplicateChanged();
    partial void OnIsValidChanging(System.Nullable<bool> value);
    partial void OnIsValidChanged();
    partial void OnIsCertificateExistChanging(System.Nullable<bool> value);
    partial void OnIsCertificateExistChanged();
    partial void OnIsCertificateDenyChanging(System.Nullable<bool> value);
    partial void OnIsCertificateDenyChanged();
    #endregion
		
		public CommonNationalExamCertificateForm()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int NOT NULL")]
		public int RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Partition", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Partition
		{
			get
			{
				return this._Partition;
			}
			set
			{
				if ((this._Partition != value))
				{
					this.OnPartitionChanging(value);
					this.SendPropertyChanging();
					this._Partition = value;
					this.SendPropertyChanged("Partition");
					this.OnPartitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNumber", DbType="NVarChar(255)")]
		public string CertificateNumber
		{
			get
			{
				return this._CertificateNumber;
			}
			set
			{
				if ((this._CertificateNumber != value))
				{
					this.OnCertificateNumberChanging(value);
					this.SendPropertyChanging();
					this._CertificateNumber = value;
					this.SendPropertyChanged("CertificateNumber");
					this.OnCertificateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatronymicName", DbType="NVarChar(255)")]
		public string PatronymicName
		{
			get
			{
				return this._PatronymicName;
			}
			set
			{
				if ((this._PatronymicName != value))
				{
					this.OnPatronymicNameChanging(value);
					this.SendPropertyChanging();
					this._PatronymicName = value;
					this.SendPropertyChanged("PatronymicName");
					this.OnPatronymicNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportSeria", DbType="NVarChar(255)")]
		public string PassportSeria
		{
			get
			{
				return this._PassportSeria;
			}
			set
			{
				if ((this._PassportSeria != value))
				{
					this.OnPassportSeriaChanging(value);
					this.SendPropertyChanging();
					this._PassportSeria = value;
					this.SendPropertyChanged("PassportSeria");
					this.OnPassportSeriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNumber", DbType="NVarChar(255)")]
		public string PassportNumber
		{
			get
			{
				return this._PassportNumber;
			}
			set
			{
				if ((this._PassportNumber != value))
				{
					this.OnPassportNumberChanging(value);
					this.SendPropertyChanging();
					this._PassportNumber = value;
					this.SendPropertyChanged("PassportNumber");
					this.OnPassportNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBlank", DbType="Bit NOT NULL")]
		public bool IsBlank
		{
			get
			{
				return this._IsBlank;
			}
			set
			{
				if ((this._IsBlank != value))
				{
					this.OnIsBlankChanging(value);
					this.SendPropertyChanging();
					this._IsBlank = value;
					this.SendPropertyChanged("IsBlank");
					this.OnIsBlankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeny", DbType="Bit NOT NULL")]
		public bool IsDeny
		{
			get
			{
				return this._IsDeny;
			}
			set
			{
				if ((this._IsDeny != value))
				{
					this.OnIsDenyChanging(value);
					this.SendPropertyChanging();
					this._IsDeny = value;
					this.SendPropertyChanged("IsDeny");
					this.OnIsDenyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDuplicate", DbType="Bit NOT NULL")]
		public bool IsDuplicate
		{
			get
			{
				return this._IsDuplicate;
			}
			set
			{
				if ((this._IsDuplicate != value))
				{
					this.OnIsDuplicateChanging(value);
					this.SendPropertyChanging();
					this._IsDuplicate = value;
					this.SendPropertyChanged("IsDuplicate");
					this.OnIsDuplicateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsValid", DbType="Bit")]
		public System.Nullable<bool> IsValid
		{
			get
			{
				return this._IsValid;
			}
			set
			{
				if ((this._IsValid != value))
				{
					this.OnIsValidChanging(value);
					this.SendPropertyChanging();
					this._IsValid = value;
					this.SendPropertyChanged("IsValid");
					this.OnIsValidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCertificateExist", DbType="Bit")]
		public System.Nullable<bool> IsCertificateExist
		{
			get
			{
				return this._IsCertificateExist;
			}
			set
			{
				if ((this._IsCertificateExist != value))
				{
					this.OnIsCertificateExistChanging(value);
					this.SendPropertyChanging();
					this._IsCertificateExist = value;
					this.SendPropertyChanged("IsCertificateExist");
					this.OnIsCertificateExistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCertificateDeny", DbType="Bit")]
		public System.Nullable<bool> IsCertificateDeny
		{
			get
			{
				return this._IsCertificateDeny;
			}
			set
			{
				if ((this._IsCertificateDeny != value))
				{
					this.OnIsCertificateDenyChanging(value);
					this.SendPropertyChanging();
					this._IsCertificateDeny = value;
					this.SendPropertyChanged("IsCertificateDeny");
					this.OnIsCertificateDenyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommonNationalExamCertificateFormNumberRange")]
	public partial class CommonNationalExamCertificateFormNumberRange : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Guid _UpdateId;
		
		private int _Year;
		
		private int _RegionId;
		
		private string _NumberFrom;
		
		private string _NumberTo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateIdChanging(System.Guid value);
    partial void OnUpdateIdChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnRegionIdChanging(int value);
    partial void OnRegionIdChanged();
    partial void OnNumberFromChanging(string value);
    partial void OnNumberFromChanged();
    partial void OnNumberToChanging(string value);
    partial void OnNumberToChanged();
    #endregion
		
		public CommonNationalExamCertificateFormNumberRange()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int NOT NULL")]
		public int RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberFrom", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string NumberFrom
		{
			get
			{
				return this._NumberFrom;
			}
			set
			{
				if ((this._NumberFrom != value))
				{
					this.OnNumberFromChanging(value);
					this.SendPropertyChanging();
					this._NumberFrom = value;
					this.SendPropertyChanged("NumberFrom");
					this.OnNumberFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTo", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string NumberTo
		{
			get
			{
				return this._NumberTo;
			}
			set
			{
				if ((this._NumberTo != value))
				{
					this.OnNumberToChanging(value);
					this.SendPropertyChanging();
					this._NumberTo = value;
					this.SendPropertyChanged("NumberTo");
					this.OnNumberToChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommonNationalExamCertificateLoadingTask")]
	public partial class CommonNationalExamCertificateLoadingTask : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Nullable<System.Guid> _UpdateId;
		
		private System.Nullable<long> _EditorAccountId;
		
		private string _EditorIp;
		
		private string _SourceBatchUrl;
		
		private bool _IsActive;
		
		private System.Nullable<bool> _IsProcess;
		
		private System.Nullable<bool> _IsCorrect;
		
		private bool _IsLoaded;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateIdChanging(System.Nullable<System.Guid> value);
    partial void OnUpdateIdChanged();
    partial void OnEditorAccountIdChanging(System.Nullable<long> value);
    partial void OnEditorAccountIdChanged();
    partial void OnEditorIpChanging(string value);
    partial void OnEditorIpChanged();
    partial void OnSourceBatchUrlChanging(string value);
    partial void OnSourceBatchUrlChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsProcessChanging(System.Nullable<bool> value);
    partial void OnIsProcessChanged();
    partial void OnIsCorrectChanging(System.Nullable<bool> value);
    partial void OnIsCorrectChanged();
    partial void OnIsLoadedChanging(bool value);
    partial void OnIsLoadedChanged();
    #endregion
		
		public CommonNationalExamCertificateLoadingTask()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorAccountId", DbType="BigInt")]
		public System.Nullable<long> EditorAccountId
		{
			get
			{
				return this._EditorAccountId;
			}
			set
			{
				if ((this._EditorAccountId != value))
				{
					this.OnEditorAccountIdChanging(value);
					this.SendPropertyChanging();
					this._EditorAccountId = value;
					this.SendPropertyChanged("EditorAccountId");
					this.OnEditorAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorIp", DbType="NVarChar(255)")]
		public string EditorIp
		{
			get
			{
				return this._EditorIp;
			}
			set
			{
				if ((this._EditorIp != value))
				{
					this.OnEditorIpChanging(value);
					this.SendPropertyChanging();
					this._EditorIp = value;
					this.SendPropertyChanged("EditorIp");
					this.OnEditorIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceBatchUrl", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string SourceBatchUrl
		{
			get
			{
				return this._SourceBatchUrl;
			}
			set
			{
				if ((this._SourceBatchUrl != value))
				{
					this.OnSourceBatchUrlChanging(value);
					this.SendPropertyChanging();
					this._SourceBatchUrl = value;
					this.SendPropertyChanged("SourceBatchUrl");
					this.OnSourceBatchUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProcess", DbType="Bit")]
		public System.Nullable<bool> IsProcess
		{
			get
			{
				return this._IsProcess;
			}
			set
			{
				if ((this._IsProcess != value))
				{
					this.OnIsProcessChanging(value);
					this.SendPropertyChanging();
					this._IsProcess = value;
					this.SendPropertyChanged("IsProcess");
					this.OnIsProcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCorrect", DbType="Bit")]
		public System.Nullable<bool> IsCorrect
		{
			get
			{
				return this._IsCorrect;
			}
			set
			{
				if ((this._IsCorrect != value))
				{
					this.OnIsCorrectChanging(value);
					this.SendPropertyChanging();
					this._IsCorrect = value;
					this.SendPropertyChanged("IsCorrect");
					this.OnIsCorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLoaded", DbType="Bit NOT NULL")]
		public bool IsLoaded
		{
			get
			{
				return this._IsLoaded;
			}
			set
			{
				if ((this._IsLoaded != value))
				{
					this.OnIsLoadedChanging(value);
					this.SendPropertyChanging();
					this._IsLoaded = value;
					this.SendPropertyChanged("IsLoaded");
					this.OnIsLoadedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommonNationalExamCertificateLoadingTaskError")]
	public partial class CommonNationalExamCertificateLoadingTaskError : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _Date;
		
		private long _TaskId;
		
		private System.Nullable<long> _RowIndex;
		
		private string _Error;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnTaskIdChanging(long value);
    partial void OnTaskIdChanged();
    partial void OnRowIndexChanging(System.Nullable<long> value);
    partial void OnRowIndexChanged();
    partial void OnErrorChanging(string value);
    partial void OnErrorChanged();
    #endregion
		
		public CommonNationalExamCertificateLoadingTaskError()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskId", DbType="BigInt NOT NULL")]
		public long TaskId
		{
			get
			{
				return this._TaskId;
			}
			set
			{
				if ((this._TaskId != value))
				{
					this.OnTaskIdChanging(value);
					this.SendPropertyChanging();
					this._TaskId = value;
					this.SendPropertyChanged("TaskId");
					this.OnTaskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowIndex", DbType="BigInt")]
		public System.Nullable<long> RowIndex
		{
			get
			{
				return this._RowIndex;
			}
			set
			{
				if ((this._RowIndex != value))
				{
					this.OnRowIndexChanging(value);
					this.SendPropertyChanging();
					this._RowIndex = value;
					this.SendPropertyChanged("RowIndex");
					this.OnRowIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Error", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Error
		{
			get
			{
				return this._Error;
			}
			set
			{
				if ((this._Error != value))
				{
					this.OnErrorChanging(value);
					this.SendPropertyChanging();
					this._Error = value;
					this.SendPropertyChanged("Error");
					this.OnErrorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommonNationalExamCertificateRequest")]
	public partial class CommonNationalExamCertificateRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _BatchId;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _PatronymicName;
		
		private string _PassportSeria;
		
		private string _PassportNumber;
		
		private System.Nullable<bool> _IsCorrect;
		
		private System.Nullable<long> _SourceCertificateId;
		
		private System.Nullable<int> _SourceCertificateYear;
		
		private string _SourceCertificateNumber;
		
		private System.Nullable<int> _SourceRegionId;
		
		private System.Nullable<bool> _IsDeny;
		
		private string _DenyComment;
		
		private string _DenyNewCertificateNumber;
		
		private string _TypographicNumber;
		
		private System.Nullable<System.Guid> _SourceCertificateIdGuid;
		
		private System.Nullable<System.Guid> _ParticipantID;
		
		private System.Nullable<System.Guid> _SourceCertificateIdGuid_test;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnBatchIdChanging(long value);
    partial void OnBatchIdChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnPatronymicNameChanging(string value);
    partial void OnPatronymicNameChanged();
    partial void OnPassportSeriaChanging(string value);
    partial void OnPassportSeriaChanged();
    partial void OnPassportNumberChanging(string value);
    partial void OnPassportNumberChanged();
    partial void OnIsCorrectChanging(System.Nullable<bool> value);
    partial void OnIsCorrectChanged();
    partial void OnSourceCertificateIdChanging(System.Nullable<long> value);
    partial void OnSourceCertificateIdChanged();
    partial void OnSourceCertificateYearChanging(System.Nullable<int> value);
    partial void OnSourceCertificateYearChanged();
    partial void OnSourceCertificateNumberChanging(string value);
    partial void OnSourceCertificateNumberChanged();
    partial void OnSourceRegionIdChanging(System.Nullable<int> value);
    partial void OnSourceRegionIdChanged();
    partial void OnIsDenyChanging(System.Nullable<bool> value);
    partial void OnIsDenyChanged();
    partial void OnDenyCommentChanging(string value);
    partial void OnDenyCommentChanged();
    partial void OnDenyNewCertificateNumberChanging(string value);
    partial void OnDenyNewCertificateNumberChanged();
    partial void OnTypographicNumberChanging(string value);
    partial void OnTypographicNumberChanged();
    partial void OnSourceCertificateIdGuidChanging(System.Nullable<System.Guid> value);
    partial void OnSourceCertificateIdGuidChanged();
    partial void OnParticipantIDChanging(System.Nullable<System.Guid> value);
    partial void OnParticipantIDChanged();
    partial void OnSourceCertificateIdGuid_testChanging(System.Nullable<System.Guid> value);
    partial void OnSourceCertificateIdGuid_testChanged();
    #endregion
		
		public CommonNationalExamCertificateRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchId", DbType="BigInt NOT NULL")]
		public long BatchId
		{
			get
			{
				return this._BatchId;
			}
			set
			{
				if ((this._BatchId != value))
				{
					this.OnBatchIdChanging(value);
					this.SendPropertyChanging();
					this._BatchId = value;
					this.SendPropertyChanged("BatchId");
					this.OnBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatronymicName", DbType="NVarChar(255)")]
		public string PatronymicName
		{
			get
			{
				return this._PatronymicName;
			}
			set
			{
				if ((this._PatronymicName != value))
				{
					this.OnPatronymicNameChanging(value);
					this.SendPropertyChanging();
					this._PatronymicName = value;
					this.SendPropertyChanged("PatronymicName");
					this.OnPatronymicNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportSeria", DbType="NVarChar(255)")]
		public string PassportSeria
		{
			get
			{
				return this._PassportSeria;
			}
			set
			{
				if ((this._PassportSeria != value))
				{
					this.OnPassportSeriaChanging(value);
					this.SendPropertyChanging();
					this._PassportSeria = value;
					this.SendPropertyChanged("PassportSeria");
					this.OnPassportSeriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNumber", DbType="NVarChar(255)")]
		public string PassportNumber
		{
			get
			{
				return this._PassportNumber;
			}
			set
			{
				if ((this._PassportNumber != value))
				{
					this.OnPassportNumberChanging(value);
					this.SendPropertyChanging();
					this._PassportNumber = value;
					this.SendPropertyChanged("PassportNumber");
					this.OnPassportNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCorrect", DbType="Bit")]
		public System.Nullable<bool> IsCorrect
		{
			get
			{
				return this._IsCorrect;
			}
			set
			{
				if ((this._IsCorrect != value))
				{
					this.OnIsCorrectChanging(value);
					this.SendPropertyChanging();
					this._IsCorrect = value;
					this.SendPropertyChanged("IsCorrect");
					this.OnIsCorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCertificateId", DbType="BigInt")]
		public System.Nullable<long> SourceCertificateId
		{
			get
			{
				return this._SourceCertificateId;
			}
			set
			{
				if ((this._SourceCertificateId != value))
				{
					this.OnSourceCertificateIdChanging(value);
					this.SendPropertyChanging();
					this._SourceCertificateId = value;
					this.SendPropertyChanged("SourceCertificateId");
					this.OnSourceCertificateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCertificateYear", DbType="Int")]
		public System.Nullable<int> SourceCertificateYear
		{
			get
			{
				return this._SourceCertificateYear;
			}
			set
			{
				if ((this._SourceCertificateYear != value))
				{
					this.OnSourceCertificateYearChanging(value);
					this.SendPropertyChanging();
					this._SourceCertificateYear = value;
					this.SendPropertyChanged("SourceCertificateYear");
					this.OnSourceCertificateYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCertificateNumber", DbType="NVarChar(255)")]
		public string SourceCertificateNumber
		{
			get
			{
				return this._SourceCertificateNumber;
			}
			set
			{
				if ((this._SourceCertificateNumber != value))
				{
					this.OnSourceCertificateNumberChanging(value);
					this.SendPropertyChanging();
					this._SourceCertificateNumber = value;
					this.SendPropertyChanged("SourceCertificateNumber");
					this.OnSourceCertificateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceRegionId", DbType="Int")]
		public System.Nullable<int> SourceRegionId
		{
			get
			{
				return this._SourceRegionId;
			}
			set
			{
				if ((this._SourceRegionId != value))
				{
					this.OnSourceRegionIdChanging(value);
					this.SendPropertyChanging();
					this._SourceRegionId = value;
					this.SendPropertyChanged("SourceRegionId");
					this.OnSourceRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeny", DbType="Bit")]
		public System.Nullable<bool> IsDeny
		{
			get
			{
				return this._IsDeny;
			}
			set
			{
				if ((this._IsDeny != value))
				{
					this.OnIsDenyChanging(value);
					this.SendPropertyChanging();
					this._IsDeny = value;
					this.SendPropertyChanged("IsDeny");
					this.OnIsDenyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DenyComment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DenyComment
		{
			get
			{
				return this._DenyComment;
			}
			set
			{
				if ((this._DenyComment != value))
				{
					this.OnDenyCommentChanging(value);
					this.SendPropertyChanging();
					this._DenyComment = value;
					this.SendPropertyChanged("DenyComment");
					this.OnDenyCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DenyNewCertificateNumber", DbType="NVarChar(255)")]
		public string DenyNewCertificateNumber
		{
			get
			{
				return this._DenyNewCertificateNumber;
			}
			set
			{
				if ((this._DenyNewCertificateNumber != value))
				{
					this.OnDenyNewCertificateNumberChanging(value);
					this.SendPropertyChanging();
					this._DenyNewCertificateNumber = value;
					this.SendPropertyChanged("DenyNewCertificateNumber");
					this.OnDenyNewCertificateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypographicNumber", DbType="NVarChar(255)")]
		public string TypographicNumber
		{
			get
			{
				return this._TypographicNumber;
			}
			set
			{
				if ((this._TypographicNumber != value))
				{
					this.OnTypographicNumberChanging(value);
					this.SendPropertyChanging();
					this._TypographicNumber = value;
					this.SendPropertyChanged("TypographicNumber");
					this.OnTypographicNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCertificateIdGuid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SourceCertificateIdGuid
		{
			get
			{
				return this._SourceCertificateIdGuid;
			}
			set
			{
				if ((this._SourceCertificateIdGuid != value))
				{
					this.OnSourceCertificateIdGuidChanging(value);
					this.SendPropertyChanging();
					this._SourceCertificateIdGuid = value;
					this.SendPropertyChanged("SourceCertificateIdGuid");
					this.OnSourceCertificateIdGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParticipantID
		{
			get
			{
				return this._ParticipantID;
			}
			set
			{
				if ((this._ParticipantID != value))
				{
					this.OnParticipantIDChanging(value);
					this.SendPropertyChanging();
					this._ParticipantID = value;
					this.SendPropertyChanged("ParticipantID");
					this.OnParticipantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCertificateIdGuid_test", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SourceCertificateIdGuid_test
		{
			get
			{
				return this._SourceCertificateIdGuid_test;
			}
			set
			{
				if ((this._SourceCertificateIdGuid_test != value))
				{
					this.OnSourceCertificateIdGuid_testChanging(value);
					this.SendPropertyChanging();
					this._SourceCertificateIdGuid_test = value;
					this.SendPropertyChanged("SourceCertificateIdGuid_test");
					this.OnSourceCertificateIdGuid_testChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommonNationalExamCertificateRequestBatch")]
	public partial class CommonNationalExamCertificateRequestBatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private long _OwnerAccountId;
		
		private bool _IsProcess;
		
		private System.Nullable<bool> _IsCorrect;
		
		private string _Batch;
		
		private System.Nullable<bool> _Executing;
		
		private bool _IsTypographicNumber;
		
		private System.Nullable<int> _year;
		
		private string _Filter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnOwnerAccountIdChanging(long value);
    partial void OnOwnerAccountIdChanged();
    partial void OnIsProcessChanging(bool value);
    partial void OnIsProcessChanged();
    partial void OnIsCorrectChanging(System.Nullable<bool> value);
    partial void OnIsCorrectChanged();
    partial void OnBatchChanging(string value);
    partial void OnBatchChanged();
    partial void OnExecutingChanging(System.Nullable<bool> value);
    partial void OnExecutingChanged();
    partial void OnIsTypographicNumberChanging(bool value);
    partial void OnIsTypographicNumberChanged();
    partial void OnyearChanging(System.Nullable<int> value);
    partial void OnyearChanged();
    partial void OnFilterChanging(string value);
    partial void OnFilterChanged();
    #endregion
		
		public CommonNationalExamCertificateRequestBatch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerAccountId", DbType="BigInt NOT NULL")]
		public long OwnerAccountId
		{
			get
			{
				return this._OwnerAccountId;
			}
			set
			{
				if ((this._OwnerAccountId != value))
				{
					this.OnOwnerAccountIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerAccountId = value;
					this.SendPropertyChanged("OwnerAccountId");
					this.OnOwnerAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProcess", DbType="Bit NOT NULL")]
		public bool IsProcess
		{
			get
			{
				return this._IsProcess;
			}
			set
			{
				if ((this._IsProcess != value))
				{
					this.OnIsProcessChanging(value);
					this.SendPropertyChanging();
					this._IsProcess = value;
					this.SendPropertyChanged("IsProcess");
					this.OnIsProcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCorrect", DbType="Bit")]
		public System.Nullable<bool> IsCorrect
		{
			get
			{
				return this._IsCorrect;
			}
			set
			{
				if ((this._IsCorrect != value))
				{
					this.OnIsCorrectChanging(value);
					this.SendPropertyChanging();
					this._IsCorrect = value;
					this.SendPropertyChanged("IsCorrect");
					this.OnIsCorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Batch", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Batch
		{
			get
			{
				return this._Batch;
			}
			set
			{
				if ((this._Batch != value))
				{
					this.OnBatchChanging(value);
					this.SendPropertyChanging();
					this._Batch = value;
					this.SendPropertyChanged("Batch");
					this.OnBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Executing", DbType="Bit")]
		public System.Nullable<bool> Executing
		{
			get
			{
				return this._Executing;
			}
			set
			{
				if ((this._Executing != value))
				{
					this.OnExecutingChanging(value);
					this.SendPropertyChanging();
					this._Executing = value;
					this.SendPropertyChanged("Executing");
					this.OnExecutingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTypographicNumber", DbType="Bit NOT NULL")]
		public bool IsTypographicNumber
		{
			get
			{
				return this._IsTypographicNumber;
			}
			set
			{
				if ((this._IsTypographicNumber != value))
				{
					this.OnIsTypographicNumberChanging(value);
					this.SendPropertyChanging();
					this._IsTypographicNumber = value;
					this.SendPropertyChanged("IsTypographicNumber");
					this.OnIsTypographicNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year", DbType="Int")]
		public System.Nullable<int> year
		{
			get
			{
				return this._year;
			}
			set
			{
				if ((this._year != value))
				{
					this.OnyearChanging(value);
					this.SendPropertyChanging();
					this._year = value;
					this.SendPropertyChanged("year");
					this.OnyearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filter", DbType="NVarChar(255)")]
		public string Filter
		{
			get
			{
				return this._Filter;
			}
			set
			{
				if ((this._Filter != value))
				{
					this.OnFilterChanging(value);
					this.SendPropertyChanging();
					this._Filter = value;
					this.SendPropertyChanged("Filter");
					this.OnFilterChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommonNationalExamCertificateSubject")]
	public partial class CommonNationalExamCertificateSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _CertificateId;
		
		private long _SubjectId;
		
		private System.Nullable<decimal> _Mark;
		
		private bool _HasAppeal;
		
		private int _Year;
		
		private int _RegionId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCertificateIdChanging(long value);
    partial void OnCertificateIdChanged();
    partial void OnSubjectIdChanging(long value);
    partial void OnSubjectIdChanged();
    partial void OnMarkChanging(System.Nullable<decimal> value);
    partial void OnMarkChanged();
    partial void OnHasAppealChanging(bool value);
    partial void OnHasAppealChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnRegionIdChanging(int value);
    partial void OnRegionIdChanged();
    #endregion
		
		public CommonNationalExamCertificateSubject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long CertificateId
		{
			get
			{
				return this._CertificateId;
			}
			set
			{
				if ((this._CertificateId != value))
				{
					this.OnCertificateIdChanging(value);
					this.SendPropertyChanging();
					this._CertificateId = value;
					this.SendPropertyChanged("CertificateId");
					this.OnCertificateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Decimal(5,1)")]
		public System.Nullable<decimal> Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAppeal", DbType="Bit NOT NULL")]
		public bool HasAppeal
		{
			get
			{
				return this._HasAppeal;
			}
			set
			{
				if ((this._HasAppeal != value))
				{
					this.OnHasAppealChanging(value);
					this.SendPropertyChanging();
					this._HasAppeal = value;
					this.SendPropertyChanged("HasAppeal");
					this.OnHasAppealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int NOT NULL")]
		public int RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommonNationalExamCertificateSubjectCheck")]
	public partial class CommonNationalExamCertificateSubjectCheck : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _BatchId;
		
		private long _CheckId;
		
		private long _SubjectId;
		
		private System.Nullable<decimal> _Mark;
		
		private System.Nullable<bool> _IsCorrect;
		
		private System.Nullable<long> _SourceCertificateSubjectId;
		
		private System.Nullable<decimal> _SourceMark;
		
		private System.Nullable<bool> _SourceHasAppeal;
		
		private System.Nullable<int> _Year;
		
		private System.Nullable<System.Guid> _SourceCertificateSubjectIdGuid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnBatchIdChanging(long value);
    partial void OnBatchIdChanged();
    partial void OnCheckIdChanging(long value);
    partial void OnCheckIdChanged();
    partial void OnSubjectIdChanging(long value);
    partial void OnSubjectIdChanged();
    partial void OnMarkChanging(System.Nullable<decimal> value);
    partial void OnMarkChanged();
    partial void OnIsCorrectChanging(System.Nullable<bool> value);
    partial void OnIsCorrectChanged();
    partial void OnSourceCertificateSubjectIdChanging(System.Nullable<long> value);
    partial void OnSourceCertificateSubjectIdChanged();
    partial void OnSourceMarkChanging(System.Nullable<decimal> value);
    partial void OnSourceMarkChanged();
    partial void OnSourceHasAppealChanging(System.Nullable<bool> value);
    partial void OnSourceHasAppealChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnSourceCertificateSubjectIdGuidChanging(System.Nullable<System.Guid> value);
    partial void OnSourceCertificateSubjectIdGuidChanged();
    #endregion
		
		public CommonNationalExamCertificateSubjectCheck()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchId", DbType="BigInt NOT NULL")]
		public long BatchId
		{
			get
			{
				return this._BatchId;
			}
			set
			{
				if ((this._BatchId != value))
				{
					this.OnBatchIdChanging(value);
					this.SendPropertyChanging();
					this._BatchId = value;
					this.SendPropertyChanged("BatchId");
					this.OnBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckId", DbType="BigInt NOT NULL")]
		public long CheckId
		{
			get
			{
				return this._CheckId;
			}
			set
			{
				if ((this._CheckId != value))
				{
					this.OnCheckIdChanging(value);
					this.SendPropertyChanging();
					this._CheckId = value;
					this.SendPropertyChanged("CheckId");
					this.OnCheckIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt NOT NULL")]
		public long SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Decimal(5,1)")]
		public System.Nullable<decimal> Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCorrect", DbType="Bit")]
		public System.Nullable<bool> IsCorrect
		{
			get
			{
				return this._IsCorrect;
			}
			set
			{
				if ((this._IsCorrect != value))
				{
					this.OnIsCorrectChanging(value);
					this.SendPropertyChanging();
					this._IsCorrect = value;
					this.SendPropertyChanged("IsCorrect");
					this.OnIsCorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCertificateSubjectId", DbType="BigInt")]
		public System.Nullable<long> SourceCertificateSubjectId
		{
			get
			{
				return this._SourceCertificateSubjectId;
			}
			set
			{
				if ((this._SourceCertificateSubjectId != value))
				{
					this.OnSourceCertificateSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SourceCertificateSubjectId = value;
					this.SendPropertyChanged("SourceCertificateSubjectId");
					this.OnSourceCertificateSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceMark", DbType="Decimal(5,1)")]
		public System.Nullable<decimal> SourceMark
		{
			get
			{
				return this._SourceMark;
			}
			set
			{
				if ((this._SourceMark != value))
				{
					this.OnSourceMarkChanging(value);
					this.SendPropertyChanging();
					this._SourceMark = value;
					this.SendPropertyChanged("SourceMark");
					this.OnSourceMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceHasAppeal", DbType="Bit")]
		public System.Nullable<bool> SourceHasAppeal
		{
			get
			{
				return this._SourceHasAppeal;
			}
			set
			{
				if ((this._SourceHasAppeal != value))
				{
					this.OnSourceHasAppealChanging(value);
					this.SendPropertyChanging();
					this._SourceHasAppeal = value;
					this.SendPropertyChanged("SourceHasAppeal");
					this.OnSourceHasAppealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCertificateSubjectIdGuid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> SourceCertificateSubjectIdGuid
		{
			get
			{
				return this._SourceCertificateSubjectIdGuid;
			}
			set
			{
				if ((this._SourceCertificateSubjectIdGuid != value))
				{
					this.OnSourceCertificateSubjectIdGuidChanging(value);
					this.SendPropertyChanging();
					this._SourceCertificateSubjectIdGuid = value;
					this.SendPropertyChanged("SourceCertificateSubjectIdGuid");
					this.OnSourceCertificateSubjectIdGuidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommonNationalExamCertificateSubjectForm")]
	public partial class CommonNationalExamCertificateSubjectForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private int _Year;
		
		private int _RegionId;
		
		private long _Partition;
		
		private long _FormId;
		
		private int _SubjectId;
		
		private System.Nullable<decimal> _Mark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnRegionIdChanging(int value);
    partial void OnRegionIdChanged();
    partial void OnPartitionChanging(long value);
    partial void OnPartitionChanged();
    partial void OnFormIdChanging(long value);
    partial void OnFormIdChanged();
    partial void OnSubjectIdChanging(int value);
    partial void OnSubjectIdChanged();
    partial void OnMarkChanging(System.Nullable<decimal> value);
    partial void OnMarkChanged();
    #endregion
		
		public CommonNationalExamCertificateSubjectForm()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int NOT NULL")]
		public int RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Partition", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Partition
		{
			get
			{
				return this._Partition;
			}
			set
			{
				if ((this._Partition != value))
				{
					this.OnPartitionChanging(value);
					this.SendPropertyChanging();
					this._Partition = value;
					this.SendPropertyChanged("Partition");
					this.OnPartitionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long FormId
		{
			get
			{
				return this._FormId;
			}
			set
			{
				if ((this._FormId != value))
				{
					this.OnFormIdChanging(value);
					this.SendPropertyChanging();
					this._FormId = value;
					this.SendPropertyChanged("FormId");
					this.OnFormIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Decimal(5,1)")]
		public System.Nullable<decimal> Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CommonNationalExamCertificateSumCheck")]
	public partial class CommonNationalExamCertificateSumCheck : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _BatchId;
		
		private string _Name;
		
		private System.Nullable<decimal> _Sum;
		
		private int _Status;
		
		private bool _NameSake;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnBatchIdChanging(long value);
    partial void OnBatchIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSumChanging(System.Nullable<decimal> value);
    partial void OnSumChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnNameSakeChanging(bool value);
    partial void OnNameSakeChanged();
    #endregion
		
		public CommonNationalExamCertificateSumCheck()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchId", DbType="BigInt NOT NULL")]
		public long BatchId
		{
			get
			{
				return this._BatchId;
			}
			set
			{
				if ((this._BatchId != value))
				{
					this.OnBatchIdChanging(value);
					this.SendPropertyChanging();
					this._BatchId = value;
					this.SendPropertyChanged("BatchId");
					this.OnBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sum", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Sum
		{
			get
			{
				return this._Sum;
			}
			set
			{
				if ((this._Sum != value))
				{
					this.OnSumChanging(value);
					this.SendPropertyChanging();
					this._Sum = value;
					this.SendPropertyChanged("Sum");
					this.OnSumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameSake", DbType="Bit NOT NULL")]
		public bool NameSake
		{
			get
			{
				return this._NameSake;
			}
			set
			{
				if ((this._NameSake != value))
				{
					this.OnNameSakeChanging(value);
					this.SendPropertyChanging();
					this._NameSake = value;
					this.SendPropertyChanged("NameSake");
					this.OnNameSakeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompetitionCertificate")]
	public partial class CompetitionCertificate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Guid _UpdateId;
		
		private System.Nullable<long> _EditorAccountId;
		
		private string _EditorIp;
		
		private int _CompetitionTypeId;
		
		private int _Year;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _PatronymicName;
		
		private string _Degree;
		
		private int _RegionId;
		
		private string _City;
		
		private string _School;
		
		private string _Class;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateIdChanging(System.Guid value);
    partial void OnUpdateIdChanged();
    partial void OnEditorAccountIdChanging(System.Nullable<long> value);
    partial void OnEditorAccountIdChanged();
    partial void OnEditorIpChanging(string value);
    partial void OnEditorIpChanged();
    partial void OnCompetitionTypeIdChanging(int value);
    partial void OnCompetitionTypeIdChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnPatronymicNameChanging(string value);
    partial void OnPatronymicNameChanged();
    partial void OnDegreeChanging(string value);
    partial void OnDegreeChanged();
    partial void OnRegionIdChanging(int value);
    partial void OnRegionIdChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnSchoolChanging(string value);
    partial void OnSchoolChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    #endregion
		
		public CompetitionCertificate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorAccountId", DbType="BigInt")]
		public System.Nullable<long> EditorAccountId
		{
			get
			{
				return this._EditorAccountId;
			}
			set
			{
				if ((this._EditorAccountId != value))
				{
					this.OnEditorAccountIdChanging(value);
					this.SendPropertyChanging();
					this._EditorAccountId = value;
					this.SendPropertyChanged("EditorAccountId");
					this.OnEditorAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorIp", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EditorIp
		{
			get
			{
				return this._EditorIp;
			}
			set
			{
				if ((this._EditorIp != value))
				{
					this.OnEditorIpChanging(value);
					this.SendPropertyChanging();
					this._EditorIp = value;
					this.SendPropertyChanged("EditorIp");
					this.OnEditorIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitionTypeId", DbType="Int NOT NULL")]
		public int CompetitionTypeId
		{
			get
			{
				return this._CompetitionTypeId;
			}
			set
			{
				if ((this._CompetitionTypeId != value))
				{
					this.OnCompetitionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._CompetitionTypeId = value;
					this.SendPropertyChanged("CompetitionTypeId");
					this.OnCompetitionTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatronymicName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PatronymicName
		{
			get
			{
				return this._PatronymicName;
			}
			set
			{
				if ((this._PatronymicName != value))
				{
					this.OnPatronymicNameChanging(value);
					this.SendPropertyChanging();
					this._PatronymicName = value;
					this.SendPropertyChanged("PatronymicName");
					this.OnPatronymicNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Degree", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Degree
		{
			get
			{
				return this._Degree;
			}
			set
			{
				if ((this._Degree != value))
				{
					this.OnDegreeChanging(value);
					this.SendPropertyChanging();
					this._Degree = value;
					this.SendPropertyChanged("Degree");
					this.OnDegreeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int NOT NULL")]
		public int RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_School", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string School
		{
			get
			{
				return this._School;
			}
			set
			{
				if ((this._School != value))
				{
					this.OnSchoolChanging(value);
					this.SendPropertyChanging();
					this._School = value;
					this.SendPropertyChanged("School");
					this.OnSchoolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompetitionCertificateRequest")]
	public partial class CompetitionCertificateRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _BatchId;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _PatronymicName;
		
		private System.Nullable<bool> _IsCorrect;
		
		private System.Nullable<long> _SourceCertificateId;
		
		private string _SourceLastName;
		
		private string _SourceFirstName;
		
		private string _SourcePatronymicName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnBatchIdChanging(long value);
    partial void OnBatchIdChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnPatronymicNameChanging(string value);
    partial void OnPatronymicNameChanged();
    partial void OnIsCorrectChanging(System.Nullable<bool> value);
    partial void OnIsCorrectChanged();
    partial void OnSourceCertificateIdChanging(System.Nullable<long> value);
    partial void OnSourceCertificateIdChanged();
    partial void OnSourceLastNameChanging(string value);
    partial void OnSourceLastNameChanged();
    partial void OnSourceFirstNameChanging(string value);
    partial void OnSourceFirstNameChanged();
    partial void OnSourcePatronymicNameChanging(string value);
    partial void OnSourcePatronymicNameChanged();
    #endregion
		
		public CompetitionCertificateRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchId", DbType="BigInt NOT NULL")]
		public long BatchId
		{
			get
			{
				return this._BatchId;
			}
			set
			{
				if ((this._BatchId != value))
				{
					this.OnBatchIdChanging(value);
					this.SendPropertyChanging();
					this._BatchId = value;
					this.SendPropertyChanged("BatchId");
					this.OnBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatronymicName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PatronymicName
		{
			get
			{
				return this._PatronymicName;
			}
			set
			{
				if ((this._PatronymicName != value))
				{
					this.OnPatronymicNameChanging(value);
					this.SendPropertyChanging();
					this._PatronymicName = value;
					this.SendPropertyChanged("PatronymicName");
					this.OnPatronymicNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCorrect", DbType="Bit")]
		public System.Nullable<bool> IsCorrect
		{
			get
			{
				return this._IsCorrect;
			}
			set
			{
				if ((this._IsCorrect != value))
				{
					this.OnIsCorrectChanging(value);
					this.SendPropertyChanging();
					this._IsCorrect = value;
					this.SendPropertyChanged("IsCorrect");
					this.OnIsCorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCertificateId", DbType="BigInt")]
		public System.Nullable<long> SourceCertificateId
		{
			get
			{
				return this._SourceCertificateId;
			}
			set
			{
				if ((this._SourceCertificateId != value))
				{
					this.OnSourceCertificateIdChanging(value);
					this.SendPropertyChanging();
					this._SourceCertificateId = value;
					this.SendPropertyChanged("SourceCertificateId");
					this.OnSourceCertificateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceLastName", DbType="NVarChar(255)")]
		public string SourceLastName
		{
			get
			{
				return this._SourceLastName;
			}
			set
			{
				if ((this._SourceLastName != value))
				{
					this.OnSourceLastNameChanging(value);
					this.SendPropertyChanging();
					this._SourceLastName = value;
					this.SendPropertyChanged("SourceLastName");
					this.OnSourceLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceFirstName", DbType="NVarChar(255)")]
		public string SourceFirstName
		{
			get
			{
				return this._SourceFirstName;
			}
			set
			{
				if ((this._SourceFirstName != value))
				{
					this.OnSourceFirstNameChanging(value);
					this.SendPropertyChanging();
					this._SourceFirstName = value;
					this.SendPropertyChanged("SourceFirstName");
					this.OnSourceFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourcePatronymicName", DbType="NVarChar(255)")]
		public string SourcePatronymicName
		{
			get
			{
				return this._SourcePatronymicName;
			}
			set
			{
				if ((this._SourcePatronymicName != value))
				{
					this.OnSourcePatronymicNameChanging(value);
					this.SendPropertyChanging();
					this._SourcePatronymicName = value;
					this.SendPropertyChanged("SourcePatronymicName");
					this.OnSourcePatronymicNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompetitionCertificateRequestBatch")]
	public partial class CompetitionCertificateRequestBatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private long _OwnerAccountId;
		
		private bool _IsProcess;
		
		private System.Nullable<bool> _IsCorrect;
		
		private string _Batch;
		
		private System.Nullable<bool> _Executing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnOwnerAccountIdChanging(long value);
    partial void OnOwnerAccountIdChanged();
    partial void OnIsProcessChanging(bool value);
    partial void OnIsProcessChanged();
    partial void OnIsCorrectChanging(System.Nullable<bool> value);
    partial void OnIsCorrectChanged();
    partial void OnBatchChanging(string value);
    partial void OnBatchChanged();
    partial void OnExecutingChanging(System.Nullable<bool> value);
    partial void OnExecutingChanged();
    #endregion
		
		public CompetitionCertificateRequestBatch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerAccountId", DbType="BigInt NOT NULL")]
		public long OwnerAccountId
		{
			get
			{
				return this._OwnerAccountId;
			}
			set
			{
				if ((this._OwnerAccountId != value))
				{
					this.OnOwnerAccountIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerAccountId = value;
					this.SendPropertyChanged("OwnerAccountId");
					this.OnOwnerAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProcess", DbType="Bit NOT NULL")]
		public bool IsProcess
		{
			get
			{
				return this._IsProcess;
			}
			set
			{
				if ((this._IsProcess != value))
				{
					this.OnIsProcessChanging(value);
					this.SendPropertyChanging();
					this._IsProcess = value;
					this.SendPropertyChanged("IsProcess");
					this.OnIsProcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCorrect", DbType="Bit")]
		public System.Nullable<bool> IsCorrect
		{
			get
			{
				return this._IsCorrect;
			}
			set
			{
				if ((this._IsCorrect != value))
				{
					this.OnIsCorrectChanging(value);
					this.SendPropertyChanging();
					this._IsCorrect = value;
					this.SendPropertyChanged("IsCorrect");
					this.OnIsCorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Batch", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Batch
		{
			get
			{
				return this._Batch;
			}
			set
			{
				if ((this._Batch != value))
				{
					this.OnBatchChanging(value);
					this.SendPropertyChanging();
					this._Batch = value;
					this.SendPropertyChanged("Batch");
					this.OnBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Executing", DbType="Bit")]
		public System.Nullable<bool> Executing
		{
			get
			{
				return this._Executing;
			}
			set
			{
				if ((this._Executing != value))
				{
					this.OnExecutingChanging(value);
					this.SendPropertyChanging();
					this._Executing = value;
					this.SendPropertyChanged("Executing");
					this.OnExecutingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompetitionType")]
	public partial class CompetitionType
	{
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<int> _SubjectId;
		
		public CompetitionType()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="Int")]
		public System.Nullable<int> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this._SubjectId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Context")]
	public partial class Context : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Context()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dba_indexDefragLog")]
	public partial class dba_indexDefragLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _indexDefrag_id;
		
		private int _objectID;
		
		private string _objectName;
		
		private int _indexID;
		
		private string _indexName;
		
		private double _fragmentation;
		
		private int _page_count;
		
		private System.DateTime _dateTimeStart;
		
		private int _durationSeconds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnindexDefrag_idChanging(int value);
    partial void OnindexDefrag_idChanged();
    partial void OnobjectIDChanging(int value);
    partial void OnobjectIDChanged();
    partial void OnobjectNameChanging(string value);
    partial void OnobjectNameChanged();
    partial void OnindexIDChanging(int value);
    partial void OnindexIDChanged();
    partial void OnindexNameChanging(string value);
    partial void OnindexNameChanged();
    partial void OnfragmentationChanging(double value);
    partial void OnfragmentationChanged();
    partial void Onpage_countChanging(int value);
    partial void Onpage_countChanged();
    partial void OndateTimeStartChanging(System.DateTime value);
    partial void OndateTimeStartChanged();
    partial void OndurationSecondsChanging(int value);
    partial void OndurationSecondsChanged();
    #endregion
		
		public dba_indexDefragLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_indexDefrag_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int indexDefrag_id
		{
			get
			{
				return this._indexDefrag_id;
			}
			set
			{
				if ((this._indexDefrag_id != value))
				{
					this.OnindexDefrag_idChanging(value);
					this.SendPropertyChanging();
					this._indexDefrag_id = value;
					this.SendPropertyChanged("indexDefrag_id");
					this.OnindexDefrag_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_objectID", DbType="Int NOT NULL")]
		public int objectID
		{
			get
			{
				return this._objectID;
			}
			set
			{
				if ((this._objectID != value))
				{
					this.OnobjectIDChanging(value);
					this.SendPropertyChanging();
					this._objectID = value;
					this.SendPropertyChanged("objectID");
					this.OnobjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_objectName", DbType="NVarChar(130) NOT NULL", CanBeNull=false)]
		public string objectName
		{
			get
			{
				return this._objectName;
			}
			set
			{
				if ((this._objectName != value))
				{
					this.OnobjectNameChanging(value);
					this.SendPropertyChanging();
					this._objectName = value;
					this.SendPropertyChanged("objectName");
					this.OnobjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_indexID", DbType="Int NOT NULL")]
		public int indexID
		{
			get
			{
				return this._indexID;
			}
			set
			{
				if ((this._indexID != value))
				{
					this.OnindexIDChanging(value);
					this.SendPropertyChanging();
					this._indexID = value;
					this.SendPropertyChanged("indexID");
					this.OnindexIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_indexName", DbType="NVarChar(130) NOT NULL", CanBeNull=false)]
		public string indexName
		{
			get
			{
				return this._indexName;
			}
			set
			{
				if ((this._indexName != value))
				{
					this.OnindexNameChanging(value);
					this.SendPropertyChanging();
					this._indexName = value;
					this.SendPropertyChanged("indexName");
					this.OnindexNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fragmentation", DbType="Float NOT NULL")]
		public double fragmentation
		{
			get
			{
				return this._fragmentation;
			}
			set
			{
				if ((this._fragmentation != value))
				{
					this.OnfragmentationChanging(value);
					this.SendPropertyChanging();
					this._fragmentation = value;
					this.SendPropertyChanged("fragmentation");
					this.OnfragmentationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_count", DbType="Int NOT NULL")]
		public int page_count
		{
			get
			{
				return this._page_count;
			}
			set
			{
				if ((this._page_count != value))
				{
					this.Onpage_countChanging(value);
					this.SendPropertyChanging();
					this._page_count = value;
					this.SendPropertyChanged("page_count");
					this.Onpage_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateTimeStart", DbType="DateTime NOT NULL")]
		public System.DateTime dateTimeStart
		{
			get
			{
				return this._dateTimeStart;
			}
			set
			{
				if ((this._dateTimeStart != value))
				{
					this.OndateTimeStartChanging(value);
					this.SendPropertyChanging();
					this._dateTimeStart = value;
					this.SendPropertyChanged("dateTimeStart");
					this.OndateTimeStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_durationSeconds", DbType="Int NOT NULL")]
		public int durationSeconds
		{
			get
			{
				return this._durationSeconds;
			}
			set
			{
				if ((this._durationSeconds != value))
				{
					this.OndurationSecondsChanging(value);
					this.SendPropertyChanging();
					this._durationSeconds = value;
					this.SendPropertyChanged("durationSeconds");
					this.OndurationSecondsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Delivery")]
	public partial class Delivery : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Title;
		
		private string _Message;
		
		private string _TypeCode;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _DeliveryDate;
		
		private int _Status;
		
		private EntityRef<DeliveryStatus> _DeliveryStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnTypeCodeChanging(string value);
    partial void OnTypeCodeChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnDeliveryDateChanging(System.DateTime value);
    partial void OnDeliveryDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public Delivery()
		{
			this._DeliveryStatus = default(EntityRef<DeliveryStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TypeCode
		{
			get
			{
				return this._TypeCode;
			}
			set
			{
				if ((this._TypeCode != value))
				{
					this.OnTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._TypeCode = value;
					this.SendPropertyChanged("TypeCode");
					this.OnTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryDate", DbType="DateTime NOT NULL")]
		public System.DateTime DeliveryDate
		{
			get
			{
				return this._DeliveryDate;
			}
			set
			{
				if ((this._DeliveryDate != value))
				{
					this.OnDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._DeliveryDate = value;
					this.SendPropertyChanged("DeliveryDate");
					this.OnDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					if (this._DeliveryStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeliveryStatus_Delivery", Storage="_DeliveryStatus", ThisKey="Status", OtherKey="Id", IsForeignKey=true)]
		public DeliveryStatus DeliveryStatus
		{
			get
			{
				return this._DeliveryStatus.Entity;
			}
			set
			{
				DeliveryStatus previousValue = this._DeliveryStatus.Entity;
				if (((previousValue != value) 
							|| (this._DeliveryStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DeliveryStatus.Entity = null;
						previousValue.Deliveries.Remove(this);
					}
					this._DeliveryStatus.Entity = value;
					if ((value != null))
					{
						value.Deliveries.Add(this);
						this._Status = value.Id;
					}
					else
					{
						this._Status = default(int);
					}
					this.SendPropertyChanged("DeliveryStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeliveryLog")]
	public partial class DeliveryLog
	{
		
		private System.Nullable<long> _DeliveryId;
		
		private string _ReciverEMail;
		
		private bool _Success;
		
		private System.DateTime _EventDate;
		
		private string _ErrorDescription;
		
		public DeliveryLog()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryId", DbType="BigInt")]
		public System.Nullable<long> DeliveryId
		{
			get
			{
				return this._DeliveryId;
			}
			set
			{
				if ((this._DeliveryId != value))
				{
					this._DeliveryId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReciverEMail", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ReciverEMail
		{
			get
			{
				return this._ReciverEMail;
			}
			set
			{
				if ((this._ReciverEMail != value))
				{
					this._ReciverEMail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Success", DbType="Bit NOT NULL")]
		public bool Success
		{
			get
			{
				return this._Success;
			}
			set
			{
				if ((this._Success != value))
				{
					this._Success = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="DateTime NOT NULL")]
		public System.DateTime EventDate
		{
			get
			{
				return this._EventDate;
			}
			set
			{
				if ((this._EventDate != value))
				{
					this._EventDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorDescription", DbType="NVarChar(1000)")]
		public string ErrorDescription
		{
			get
			{
				return this._ErrorDescription;
			}
			set
			{
				if ((this._ErrorDescription != value))
				{
					this._ErrorDescription = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeliveryRecipients")]
	public partial class DeliveryRecipient
	{
		
		private System.Nullable<int> _RecipientCode;
		
		private System.Nullable<long> _DeliveryId;
		
		public DeliveryRecipient()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipientCode", DbType="Int")]
		public System.Nullable<int> RecipientCode
		{
			get
			{
				return this._RecipientCode;
			}
			set
			{
				if ((this._RecipientCode != value))
				{
					this._RecipientCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryId", DbType="BigInt")]
		public System.Nullable<long> DeliveryId
		{
			get
			{
				return this._DeliveryId;
			}
			set
			{
				if ((this._DeliveryId != value))
				{
					this._DeliveryId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeliveryStatus")]
	public partial class DeliveryStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Delivery> _Deliveries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public DeliveryStatus()
		{
			this._Deliveries = new EntitySet<Delivery>(new Action<Delivery>(this.attach_Deliveries), new Action<Delivery>(this.detach_Deliveries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DeliveryStatus_Delivery", Storage="_Deliveries", ThisKey="Id", OtherKey="Status")]
		public EntitySet<Delivery> Deliveries
		{
			get
			{
				return this._Deliveries;
			}
			set
			{
				this._Deliveries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Deliveries(Delivery entity)
		{
			this.SendPropertyChanging();
			entity.DeliveryStatus = this;
		}
		
		private void detach_Deliveries(Delivery entity)
		{
			this.SendPropertyChanging();
			entity.DeliveryStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeprecatedCommonNationalExamCertificate")]
	public partial class DeprecatedCommonNationalExamCertificate
	{
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Guid _UpdateId;
		
		private long _EditorAccountId;
		
		private string _EditorIp;
		
		private string _Number;
		
		private string _EducationInstitutionCode;
		
		private int _Year;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _PatronymicName;
		
		private bool _Sex;
		
		private string _Class;
		
		private string _InternalPassportSeria;
		
		private string _PassportSeria;
		
		private string _PassportNumber;
		
		private string _EntrantNumber;
		
		private int _RegionId;
		
		public DeprecatedCommonNationalExamCertificate()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this._UpdateId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorAccountId", DbType="BigInt NOT NULL")]
		public long EditorAccountId
		{
			get
			{
				return this._EditorAccountId;
			}
			set
			{
				if ((this._EditorAccountId != value))
				{
					this._EditorAccountId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorIp", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EditorIp
		{
			get
			{
				return this._EditorIp;
			}
			set
			{
				if ((this._EditorIp != value))
				{
					this._EditorIp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationInstitutionCode", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EducationInstitutionCode
		{
			get
			{
				return this._EducationInstitutionCode;
			}
			set
			{
				if ((this._EducationInstitutionCode != value))
				{
					this._EducationInstitutionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatronymicName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PatronymicName
		{
			get
			{
				return this._PatronymicName;
			}
			set
			{
				if ((this._PatronymicName != value))
				{
					this._PatronymicName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit NOT NULL")]
		public bool Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this._Class = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalPassportSeria", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string InternalPassportSeria
		{
			get
			{
				return this._InternalPassportSeria;
			}
			set
			{
				if ((this._InternalPassportSeria != value))
				{
					this._InternalPassportSeria = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportSeria", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PassportSeria
		{
			get
			{
				return this._PassportSeria;
			}
			set
			{
				if ((this._PassportSeria != value))
				{
					this._PassportSeria = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PassportNumber
		{
			get
			{
				return this._PassportNumber;
			}
			set
			{
				if ((this._PassportNumber != value))
				{
					this._PassportNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantNumber", DbType="NVarChar(255)")]
		public string EntrantNumber
		{
			get
			{
				return this._EntrantNumber;
			}
			set
			{
				if ((this._EntrantNumber != value))
				{
					this._EntrantNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int NOT NULL")]
		public int RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this._RegionId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeprecatedCommonNationalExamCertificateSubject")]
	public partial class DeprecatedCommonNationalExamCertificateSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _CertificateId;
		
		private long _SubjectId;
		
		private decimal _Mark;
		
		private bool _HasAppeal;
		
		private int _Year;
		
		private int _RegionId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCertificateIdChanging(long value);
    partial void OnCertificateIdChanged();
    partial void OnSubjectIdChanging(long value);
    partial void OnSubjectIdChanged();
    partial void OnMarkChanging(decimal value);
    partial void OnMarkChanged();
    partial void OnHasAppealChanging(bool value);
    partial void OnHasAppealChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnRegionIdChanging(int value);
    partial void OnRegionIdChanged();
    #endregion
		
		public DeprecatedCommonNationalExamCertificateSubject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long CertificateId
		{
			get
			{
				return this._CertificateId;
			}
			set
			{
				if ((this._CertificateId != value))
				{
					this.OnCertificateIdChanging(value);
					this.SendPropertyChanging();
					this._CertificateId = value;
					this.SendPropertyChanged("CertificateId");
					this.OnCertificateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Decimal(5,1) NOT NULL")]
		public decimal Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAppeal", DbType="Bit NOT NULL")]
		public bool HasAppeal
		{
			get
			{
				return this._HasAppeal;
			}
			set
			{
				if ((this._HasAppeal != value))
				{
					this.OnHasAppealChanging(value);
					this.SendPropertyChanging();
					this._HasAppeal = value;
					this.SendPropertyChanged("HasAppeal");
					this.OnHasAppealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int NOT NULL")]
		public int RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Document")]
	public partial class Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Guid _UpdateId;
		
		private long _EditorAccountId;
		
		private string _EditorIp;
		
		private string _Name;
		
		private string _Description;
		
		private System.Data.Linq.Binary _Content;
		
		private int _ContentSize;
		
		private string _ContentType;
		
		private bool _IsActive;
		
		private System.Nullable<System.DateTime> _ActivateDate;
		
		private string _ContextCodes;
		
		private string _RelativeUrl;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateIdChanging(System.Guid value);
    partial void OnUpdateIdChanged();
    partial void OnEditorAccountIdChanging(long value);
    partial void OnEditorAccountIdChanged();
    partial void OnEditorIpChanging(string value);
    partial void OnEditorIpChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnContentChanging(System.Data.Linq.Binary value);
    partial void OnContentChanged();
    partial void OnContentSizeChanging(int value);
    partial void OnContentSizeChanged();
    partial void OnContentTypeChanging(string value);
    partial void OnContentTypeChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnActivateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActivateDateChanged();
    partial void OnContextCodesChanging(string value);
    partial void OnContextCodesChanged();
    partial void OnRelativeUrlChanging(string value);
    partial void OnRelativeUrlChanged();
    #endregion
		
		public Document()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorAccountId", DbType="BigInt NOT NULL")]
		public long EditorAccountId
		{
			get
			{
				return this._EditorAccountId;
			}
			set
			{
				if ((this._EditorAccountId != value))
				{
					this.OnEditorAccountIdChanging(value);
					this.SendPropertyChanging();
					this._EditorAccountId = value;
					this.SendPropertyChanged("EditorAccountId");
					this.OnEditorAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorIp", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EditorIp
		{
			get
			{
				return this._EditorIp;
			}
			set
			{
				if ((this._EditorIp != value))
				{
					this.OnEditorIpChanging(value);
					this.SendPropertyChanging();
					this._EditorIp = value;
					this.SendPropertyChanged("EditorIp");
					this.OnEditorIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentSize", DbType="Int NOT NULL")]
		public int ContentSize
		{
			get
			{
				return this._ContentSize;
			}
			set
			{
				if ((this._ContentSize != value))
				{
					this.OnContentSizeChanging(value);
					this.SendPropertyChanging();
					this._ContentSize = value;
					this.SendPropertyChanged("ContentSize");
					this.OnContentSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentType", DbType="NVarChar(255)")]
		public string ContentType
		{
			get
			{
				return this._ContentType;
			}
			set
			{
				if ((this._ContentType != value))
				{
					this.OnContentTypeChanging(value);
					this.SendPropertyChanging();
					this._ContentType = value;
					this.SendPropertyChanged("ContentType");
					this.OnContentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActivateDate
		{
			get
			{
				return this._ActivateDate;
			}
			set
			{
				if ((this._ActivateDate != value))
				{
					this.OnActivateDateChanging(value);
					this.SendPropertyChanging();
					this._ActivateDate = value;
					this.SendPropertyChanged("ActivateDate");
					this.OnActivateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContextCodes", DbType="NVarChar(4000)")]
		public string ContextCodes
		{
			get
			{
				return this._ContextCodes;
			}
			set
			{
				if ((this._ContextCodes != value))
				{
					this.OnContextCodesChanging(value);
					this.SendPropertyChanging();
					this._ContextCodes = value;
					this.SendPropertyChanged("ContextCodes");
					this.OnContextCodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelativeUrl", DbType="NVarChar(255)")]
		public string RelativeUrl
		{
			get
			{
				return this._RelativeUrl;
			}
			set
			{
				if ((this._RelativeUrl != value))
				{
					this.OnRelativeUrlChanging(value);
					this.SendPropertyChanging();
					this._RelativeUrl = value;
					this.SendPropertyChanged("RelativeUrl");
					this.OnRelativeUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentContext")]
	public partial class DocumentContext : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _DocumentId;
		
		private int _ContextId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDocumentIdChanging(long value);
    partial void OnDocumentIdChanged();
    partial void OnContextIdChanging(int value);
    partial void OnContextIdChanged();
    #endregion
		
		public DocumentContext()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentId", DbType="BigInt NOT NULL")]
		public long DocumentId
		{
			get
			{
				return this._DocumentId;
			}
			set
			{
				if ((this._DocumentId != value))
				{
					this.OnDocumentIdChanging(value);
					this.SendPropertyChanging();
					this._DocumentId = value;
					this.SendPropertyChanged("DocumentId");
					this.OnDocumentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContextId", DbType="Int NOT NULL")]
		public int ContextId
		{
			get
			{
				return this._ContextId;
			}
			set
			{
				if ((this._ContextId != value))
				{
					this.OnContextIdChanging(value);
					this.SendPropertyChanging();
					this._ContextId = value;
					this.SendPropertyChanged("ContextId");
					this.OnContextIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Doubles")]
	public partial class Double
	{
		
		private string _Number;
		
		private string _Lastname;
		
		private string _Firstname;
		
		private string _MiddleName;
		
		public Double()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(50)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this._Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lastname", DbType="NVarChar(50)")]
		public string Lastname
		{
			get
			{
				return this._Lastname;
			}
			set
			{
				if ((this._Lastname != value))
				{
					this._Lastname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Firstname", DbType="NVarChar(50)")]
		public string Firstname
		{
			get
			{
				return this._Firstname;
			}
			set
			{
				if ((this._Firstname != value))
				{
					this._Firstname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="NVarChar(50)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this._MiddleName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Entrant")]
	public partial class Entrant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Guid _UpdateId;
		
		private long _EditorAccountId;
		
		private string _EditorIp;
		
		private long _OwnerOrganizationId;
		
		private int _Year;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _PatronymicName;
		
		private string _CertificateNumber;
		
		private string _PassportNumber;
		
		private string _PassportSeria;
		
		private string _GIFOCategoryName;
		
		private string _DirectionCode;
		
		private string _SpecialtyCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateIdChanging(System.Guid value);
    partial void OnUpdateIdChanged();
    partial void OnEditorAccountIdChanging(long value);
    partial void OnEditorAccountIdChanged();
    partial void OnEditorIpChanging(string value);
    partial void OnEditorIpChanged();
    partial void OnOwnerOrganizationIdChanging(long value);
    partial void OnOwnerOrganizationIdChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnPatronymicNameChanging(string value);
    partial void OnPatronymicNameChanged();
    partial void OnCertificateNumberChanging(string value);
    partial void OnCertificateNumberChanged();
    partial void OnPassportNumberChanging(string value);
    partial void OnPassportNumberChanged();
    partial void OnPassportSeriaChanging(string value);
    partial void OnPassportSeriaChanged();
    partial void OnGIFOCategoryNameChanging(string value);
    partial void OnGIFOCategoryNameChanged();
    partial void OnDirectionCodeChanging(string value);
    partial void OnDirectionCodeChanged();
    partial void OnSpecialtyCodeChanging(string value);
    partial void OnSpecialtyCodeChanged();
    #endregion
		
		public Entrant()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorAccountId", DbType="BigInt NOT NULL")]
		public long EditorAccountId
		{
			get
			{
				return this._EditorAccountId;
			}
			set
			{
				if ((this._EditorAccountId != value))
				{
					this.OnEditorAccountIdChanging(value);
					this.SendPropertyChanging();
					this._EditorAccountId = value;
					this.SendPropertyChanged("EditorAccountId");
					this.OnEditorAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorIp", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EditorIp
		{
			get
			{
				return this._EditorIp;
			}
			set
			{
				if ((this._EditorIp != value))
				{
					this.OnEditorIpChanging(value);
					this.SendPropertyChanging();
					this._EditorIp = value;
					this.SendPropertyChanged("EditorIp");
					this.OnEditorIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerOrganizationId", DbType="BigInt NOT NULL")]
		public long OwnerOrganizationId
		{
			get
			{
				return this._OwnerOrganizationId;
			}
			set
			{
				if ((this._OwnerOrganizationId != value))
				{
					this.OnOwnerOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerOrganizationId = value;
					this.SendPropertyChanged("OwnerOrganizationId");
					this.OnOwnerOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatronymicName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PatronymicName
		{
			get
			{
				return this._PatronymicName;
			}
			set
			{
				if ((this._PatronymicName != value))
				{
					this.OnPatronymicNameChanging(value);
					this.SendPropertyChanging();
					this._PatronymicName = value;
					this.SendPropertyChanged("PatronymicName");
					this.OnPatronymicNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNumber", DbType="NVarChar(255)")]
		public string CertificateNumber
		{
			get
			{
				return this._CertificateNumber;
			}
			set
			{
				if ((this._CertificateNumber != value))
				{
					this.OnCertificateNumberChanging(value);
					this.SendPropertyChanging();
					this._CertificateNumber = value;
					this.SendPropertyChanged("CertificateNumber");
					this.OnCertificateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PassportNumber
		{
			get
			{
				return this._PassportNumber;
			}
			set
			{
				if ((this._PassportNumber != value))
				{
					this.OnPassportNumberChanging(value);
					this.SendPropertyChanging();
					this._PassportNumber = value;
					this.SendPropertyChanged("PassportNumber");
					this.OnPassportNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportSeria", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PassportSeria
		{
			get
			{
				return this._PassportSeria;
			}
			set
			{
				if ((this._PassportSeria != value))
				{
					this.OnPassportSeriaChanging(value);
					this.SendPropertyChanging();
					this._PassportSeria = value;
					this.SendPropertyChanged("PassportSeria");
					this.OnPassportSeriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIFOCategoryName", DbType="NVarChar(255)")]
		public string GIFOCategoryName
		{
			get
			{
				return this._GIFOCategoryName;
			}
			set
			{
				if ((this._GIFOCategoryName != value))
				{
					this.OnGIFOCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._GIFOCategoryName = value;
					this.SendPropertyChanged("GIFOCategoryName");
					this.OnGIFOCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionCode", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string DirectionCode
		{
			get
			{
				return this._DirectionCode;
			}
			set
			{
				if ((this._DirectionCode != value))
				{
					this.OnDirectionCodeChanging(value);
					this.SendPropertyChanging();
					this._DirectionCode = value;
					this.SendPropertyChanged("DirectionCode");
					this.OnDirectionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialtyCode", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string SpecialtyCode
		{
			get
			{
				return this._SpecialtyCode;
			}
			set
			{
				if ((this._SpecialtyCode != value))
				{
					this.OnSpecialtyCodeChanging(value);
					this.SendPropertyChanging();
					this._SpecialtyCode = value;
					this.SendPropertyChanged("SpecialtyCode");
					this.OnSpecialtyCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntrantCheck")]
	public partial class EntrantCheck : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _BatchCheckId;
		
		private string _CertificateNumber;
		
		private System.Nullable<bool> _IsCorrect;
		
		private System.Nullable<long> _SourceEntrantId;
		
		private string _SourceLastName;
		
		private string _SourceFirstName;
		
		private string _SourcePatronymicName;
		
		private string _SourceOrganizationName;
		
		private System.Nullable<System.DateTime> _SourceEntrantCreateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnBatchCheckIdChanging(long value);
    partial void OnBatchCheckIdChanged();
    partial void OnCertificateNumberChanging(string value);
    partial void OnCertificateNumberChanged();
    partial void OnIsCorrectChanging(System.Nullable<bool> value);
    partial void OnIsCorrectChanged();
    partial void OnSourceEntrantIdChanging(System.Nullable<long> value);
    partial void OnSourceEntrantIdChanged();
    partial void OnSourceLastNameChanging(string value);
    partial void OnSourceLastNameChanged();
    partial void OnSourceFirstNameChanging(string value);
    partial void OnSourceFirstNameChanged();
    partial void OnSourcePatronymicNameChanging(string value);
    partial void OnSourcePatronymicNameChanged();
    partial void OnSourceOrganizationNameChanging(string value);
    partial void OnSourceOrganizationNameChanged();
    partial void OnSourceEntrantCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSourceEntrantCreateDateChanged();
    #endregion
		
		public EntrantCheck()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchCheckId", DbType="BigInt NOT NULL")]
		public long BatchCheckId
		{
			get
			{
				return this._BatchCheckId;
			}
			set
			{
				if ((this._BatchCheckId != value))
				{
					this.OnBatchCheckIdChanging(value);
					this.SendPropertyChanging();
					this._BatchCheckId = value;
					this.SendPropertyChanged("BatchCheckId");
					this.OnBatchCheckIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CertificateNumber
		{
			get
			{
				return this._CertificateNumber;
			}
			set
			{
				if ((this._CertificateNumber != value))
				{
					this.OnCertificateNumberChanging(value);
					this.SendPropertyChanging();
					this._CertificateNumber = value;
					this.SendPropertyChanged("CertificateNumber");
					this.OnCertificateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCorrect", DbType="Bit")]
		public System.Nullable<bool> IsCorrect
		{
			get
			{
				return this._IsCorrect;
			}
			set
			{
				if ((this._IsCorrect != value))
				{
					this.OnIsCorrectChanging(value);
					this.SendPropertyChanging();
					this._IsCorrect = value;
					this.SendPropertyChanged("IsCorrect");
					this.OnIsCorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceEntrantId", DbType="BigInt")]
		public System.Nullable<long> SourceEntrantId
		{
			get
			{
				return this._SourceEntrantId;
			}
			set
			{
				if ((this._SourceEntrantId != value))
				{
					this.OnSourceEntrantIdChanging(value);
					this.SendPropertyChanging();
					this._SourceEntrantId = value;
					this.SendPropertyChanged("SourceEntrantId");
					this.OnSourceEntrantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceLastName", DbType="NVarChar(255)")]
		public string SourceLastName
		{
			get
			{
				return this._SourceLastName;
			}
			set
			{
				if ((this._SourceLastName != value))
				{
					this.OnSourceLastNameChanging(value);
					this.SendPropertyChanging();
					this._SourceLastName = value;
					this.SendPropertyChanged("SourceLastName");
					this.OnSourceLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceFirstName", DbType="NVarChar(255)")]
		public string SourceFirstName
		{
			get
			{
				return this._SourceFirstName;
			}
			set
			{
				if ((this._SourceFirstName != value))
				{
					this.OnSourceFirstNameChanging(value);
					this.SendPropertyChanging();
					this._SourceFirstName = value;
					this.SendPropertyChanged("SourceFirstName");
					this.OnSourceFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourcePatronymicName", DbType="NVarChar(255)")]
		public string SourcePatronymicName
		{
			get
			{
				return this._SourcePatronymicName;
			}
			set
			{
				if ((this._SourcePatronymicName != value))
				{
					this.OnSourcePatronymicNameChanging(value);
					this.SendPropertyChanging();
					this._SourcePatronymicName = value;
					this.SendPropertyChanged("SourcePatronymicName");
					this.OnSourcePatronymicNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceOrganizationName", DbType="NVarChar(255)")]
		public string SourceOrganizationName
		{
			get
			{
				return this._SourceOrganizationName;
			}
			set
			{
				if ((this._SourceOrganizationName != value))
				{
					this.OnSourceOrganizationNameChanging(value);
					this.SendPropertyChanging();
					this._SourceOrganizationName = value;
					this.SendPropertyChanged("SourceOrganizationName");
					this.OnSourceOrganizationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceEntrantCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SourceEntrantCreateDate
		{
			get
			{
				return this._SourceEntrantCreateDate;
			}
			set
			{
				if ((this._SourceEntrantCreateDate != value))
				{
					this.OnSourceEntrantCreateDateChanging(value);
					this.SendPropertyChanging();
					this._SourceEntrantCreateDate = value;
					this.SendPropertyChanged("SourceEntrantCreateDate");
					this.OnSourceEntrantCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntrantCheckBatch")]
	public partial class EntrantCheckBatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private long _OwnerAccountId;
		
		private bool _IsProcess;
		
		private System.Nullable<bool> _IsCorrect;
		
		private string _Batch;
		
		private System.Nullable<bool> _Executing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnOwnerAccountIdChanging(long value);
    partial void OnOwnerAccountIdChanged();
    partial void OnIsProcessChanging(bool value);
    partial void OnIsProcessChanged();
    partial void OnIsCorrectChanging(System.Nullable<bool> value);
    partial void OnIsCorrectChanged();
    partial void OnBatchChanging(string value);
    partial void OnBatchChanged();
    partial void OnExecutingChanging(System.Nullable<bool> value);
    partial void OnExecutingChanged();
    #endregion
		
		public EntrantCheckBatch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerAccountId", DbType="BigInt NOT NULL")]
		public long OwnerAccountId
		{
			get
			{
				return this._OwnerAccountId;
			}
			set
			{
				if ((this._OwnerAccountId != value))
				{
					this.OnOwnerAccountIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerAccountId = value;
					this.SendPropertyChanged("OwnerAccountId");
					this.OnOwnerAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProcess", DbType="Bit NOT NULL")]
		public bool IsProcess
		{
			get
			{
				return this._IsProcess;
			}
			set
			{
				if ((this._IsProcess != value))
				{
					this.OnIsProcessChanging(value);
					this.SendPropertyChanging();
					this._IsProcess = value;
					this.SendPropertyChanged("IsProcess");
					this.OnIsProcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCorrect", DbType="Bit")]
		public System.Nullable<bool> IsCorrect
		{
			get
			{
				return this._IsCorrect;
			}
			set
			{
				if ((this._IsCorrect != value))
				{
					this.OnIsCorrectChanging(value);
					this.SendPropertyChanging();
					this._IsCorrect = value;
					this.SendPropertyChanged("IsCorrect");
					this.OnIsCorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Batch", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Batch
		{
			get
			{
				return this._Batch;
			}
			set
			{
				if ((this._Batch != value))
				{
					this.OnBatchChanging(value);
					this.SendPropertyChanging();
					this._Batch = value;
					this.SendPropertyChanged("Batch");
					this.OnBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Executing", DbType="Bit")]
		public System.Nullable<bool> Executing
		{
			get
			{
				return this._Executing;
			}
			set
			{
				if ((this._Executing != value))
				{
					this.OnExecutingChanging(value);
					this.SendPropertyChanging();
					this._Executing = value;
					this.SendPropertyChanged("Executing");
					this.OnExecutingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntrantRenunciation")]
	public partial class EntrantRenunciation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Guid _UpdateId;
		
		private long _EditorAccountId;
		
		private string _EditorIp;
		
		private long _OwnerOrganizationId;
		
		private int _Year;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _PatronymicName;
		
		private string _PassportNumber;
		
		private string _PassportSeria;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateIdChanging(System.Guid value);
    partial void OnUpdateIdChanged();
    partial void OnEditorAccountIdChanging(long value);
    partial void OnEditorAccountIdChanged();
    partial void OnEditorIpChanging(string value);
    partial void OnEditorIpChanged();
    partial void OnOwnerOrganizationIdChanging(long value);
    partial void OnOwnerOrganizationIdChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnPatronymicNameChanging(string value);
    partial void OnPatronymicNameChanged();
    partial void OnPassportNumberChanging(string value);
    partial void OnPassportNumberChanged();
    partial void OnPassportSeriaChanging(string value);
    partial void OnPassportSeriaChanged();
    #endregion
		
		public EntrantRenunciation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorAccountId", DbType="BigInt NOT NULL")]
		public long EditorAccountId
		{
			get
			{
				return this._EditorAccountId;
			}
			set
			{
				if ((this._EditorAccountId != value))
				{
					this.OnEditorAccountIdChanging(value);
					this.SendPropertyChanging();
					this._EditorAccountId = value;
					this.SendPropertyChanged("EditorAccountId");
					this.OnEditorAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorIp", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EditorIp
		{
			get
			{
				return this._EditorIp;
			}
			set
			{
				if ((this._EditorIp != value))
				{
					this.OnEditorIpChanging(value);
					this.SendPropertyChanging();
					this._EditorIp = value;
					this.SendPropertyChanged("EditorIp");
					this.OnEditorIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerOrganizationId", DbType="BigInt NOT NULL")]
		public long OwnerOrganizationId
		{
			get
			{
				return this._OwnerOrganizationId;
			}
			set
			{
				if ((this._OwnerOrganizationId != value))
				{
					this.OnOwnerOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerOrganizationId = value;
					this.SendPropertyChanged("OwnerOrganizationId");
					this.OnOwnerOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatronymicName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PatronymicName
		{
			get
			{
				return this._PatronymicName;
			}
			set
			{
				if ((this._PatronymicName != value))
				{
					this.OnPatronymicNameChanging(value);
					this.SendPropertyChanging();
					this._PatronymicName = value;
					this.SendPropertyChanged("PatronymicName");
					this.OnPatronymicNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PassportNumber
		{
			get
			{
				return this._PassportNumber;
			}
			set
			{
				if ((this._PassportNumber != value))
				{
					this.OnPassportNumberChanging(value);
					this.SendPropertyChanging();
					this._PassportNumber = value;
					this.SendPropertyChanged("PassportNumber");
					this.OnPassportNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportSeria", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string PassportSeria
		{
			get
			{
				return this._PassportSeria;
			}
			set
			{
				if ((this._PassportSeria != value))
				{
					this.OnPassportSeriaChanging(value);
					this.SendPropertyChanging();
					this._PassportSeria = value;
					this.SendPropertyChanged("PassportSeria");
					this.OnPassportSeriaChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EventLog")]
	public partial class EventLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _Date;
		
		private System.Nullable<long> _AccountId;
		
		private string _Ip;
		
		private string _EventCode;
		
		private string _SourceEntityId;
		
		private string _EventParams;
		
		private System.Nullable<System.Guid> _UpdateId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnAccountIdChanging(System.Nullable<long> value);
    partial void OnAccountIdChanged();
    partial void OnIpChanging(string value);
    partial void OnIpChanged();
    partial void OnEventCodeChanging(string value);
    partial void OnEventCodeChanged();
    partial void OnSourceEntityIdChanging(string value);
    partial void OnSourceEntityIdChanged();
    partial void OnEventParamsChanging(string value);
    partial void OnEventParamsChanged();
    partial void OnUpdateIdChanging(System.Nullable<System.Guid> value);
    partial void OnUpdateIdChanged();
    #endregion
		
		public EventLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt")]
		public System.Nullable<long> AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Ip
		{
			get
			{
				return this._Ip;
			}
			set
			{
				if ((this._Ip != value))
				{
					this.OnIpChanging(value);
					this.SendPropertyChanging();
					this._Ip = value;
					this.SendPropertyChanged("Ip");
					this.OnIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EventCode
		{
			get
			{
				return this._EventCode;
			}
			set
			{
				if ((this._EventCode != value))
				{
					this.OnEventCodeChanging(value);
					this.SendPropertyChanging();
					this._EventCode = value;
					this.SendPropertyChanged("EventCode");
					this.OnEventCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceEntityId", DbType="NVarChar(4000)")]
		public string SourceEntityId
		{
			get
			{
				return this._SourceEntityId;
			}
			set
			{
				if ((this._SourceEntityId != value))
				{
					this.OnSourceEntityIdChanging(value);
					this.SendPropertyChanging();
					this._SourceEntityId = value;
					this.SendPropertyChanged("SourceEntityId");
					this.OnSourceEntityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventParams", DbType="NVarChar(4000)")]
		public string EventParams
		{
			get
			{
				return this._EventParams;
			}
			set
			{
				if ((this._EventParams != value))
				{
					this.OnEventParamsChanging(value);
					this.SendPropertyChanging();
					this._EventParams = value;
					this.SendPropertyChanged("EventParams");
					this.OnEventParamsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExamCertificateUniqueChecks")]
	public partial class ExamCertificateUniqueCheck : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<long> _Id;
		
		private int _Year;
		
		private int _UniqueChecks;
		
		private int _UniqueIHEaFCheck;
		
		private int _UniqueIHECheck;
		
		private int _UniqueIHEFCheck;
		
		private int _UniqueTSSaFCheck;
		
		private int _UniqueTSSCheck;
		
		private int _UniqueTSSFCheck;
		
		private int _UniqueRCOICheck;
		
		private int _UniqueOUOCheck;
		
		private int _UniqueFounderCheck;
		
		private int _UniqueOtherCheck;
		
		private System.Guid _idGUID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Nullable<long> value);
    partial void OnIdChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnUniqueChecksChanging(int value);
    partial void OnUniqueChecksChanged();
    partial void OnUniqueIHEaFCheckChanging(int value);
    partial void OnUniqueIHEaFCheckChanged();
    partial void OnUniqueIHECheckChanging(int value);
    partial void OnUniqueIHECheckChanged();
    partial void OnUniqueIHEFCheckChanging(int value);
    partial void OnUniqueIHEFCheckChanged();
    partial void OnUniqueTSSaFCheckChanging(int value);
    partial void OnUniqueTSSaFCheckChanged();
    partial void OnUniqueTSSCheckChanging(int value);
    partial void OnUniqueTSSCheckChanged();
    partial void OnUniqueTSSFCheckChanging(int value);
    partial void OnUniqueTSSFCheckChanged();
    partial void OnUniqueRCOICheckChanging(int value);
    partial void OnUniqueRCOICheckChanged();
    partial void OnUniqueOUOCheckChanging(int value);
    partial void OnUniqueOUOCheckChanged();
    partial void OnUniqueFounderCheckChanging(int value);
    partial void OnUniqueFounderCheckChanged();
    partial void OnUniqueOtherCheckChanging(int value);
    partial void OnUniqueOtherCheckChanged();
    partial void OnidGUIDChanging(System.Guid value);
    partial void OnidGUIDChanged();
    #endregion
		
		public ExamCertificateUniqueCheck()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt")]
		public System.Nullable<long> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueChecks", DbType="Int NOT NULL")]
		public int UniqueChecks
		{
			get
			{
				return this._UniqueChecks;
			}
			set
			{
				if ((this._UniqueChecks != value))
				{
					this.OnUniqueChecksChanging(value);
					this.SendPropertyChanging();
					this._UniqueChecks = value;
					this.SendPropertyChanged("UniqueChecks");
					this.OnUniqueChecksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIHEaFCheck", DbType="Int NOT NULL")]
		public int UniqueIHEaFCheck
		{
			get
			{
				return this._UniqueIHEaFCheck;
			}
			set
			{
				if ((this._UniqueIHEaFCheck != value))
				{
					this.OnUniqueIHEaFCheckChanging(value);
					this.SendPropertyChanging();
					this._UniqueIHEaFCheck = value;
					this.SendPropertyChanged("UniqueIHEaFCheck");
					this.OnUniqueIHEaFCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIHECheck", DbType="Int NOT NULL")]
		public int UniqueIHECheck
		{
			get
			{
				return this._UniqueIHECheck;
			}
			set
			{
				if ((this._UniqueIHECheck != value))
				{
					this.OnUniqueIHECheckChanging(value);
					this.SendPropertyChanging();
					this._UniqueIHECheck = value;
					this.SendPropertyChanged("UniqueIHECheck");
					this.OnUniqueIHECheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueIHEFCheck", DbType="Int NOT NULL")]
		public int UniqueIHEFCheck
		{
			get
			{
				return this._UniqueIHEFCheck;
			}
			set
			{
				if ((this._UniqueIHEFCheck != value))
				{
					this.OnUniqueIHEFCheckChanging(value);
					this.SendPropertyChanging();
					this._UniqueIHEFCheck = value;
					this.SendPropertyChanged("UniqueIHEFCheck");
					this.OnUniqueIHEFCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueTSSaFCheck", DbType="Int NOT NULL")]
		public int UniqueTSSaFCheck
		{
			get
			{
				return this._UniqueTSSaFCheck;
			}
			set
			{
				if ((this._UniqueTSSaFCheck != value))
				{
					this.OnUniqueTSSaFCheckChanging(value);
					this.SendPropertyChanging();
					this._UniqueTSSaFCheck = value;
					this.SendPropertyChanged("UniqueTSSaFCheck");
					this.OnUniqueTSSaFCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueTSSCheck", DbType="Int NOT NULL")]
		public int UniqueTSSCheck
		{
			get
			{
				return this._UniqueTSSCheck;
			}
			set
			{
				if ((this._UniqueTSSCheck != value))
				{
					this.OnUniqueTSSCheckChanging(value);
					this.SendPropertyChanging();
					this._UniqueTSSCheck = value;
					this.SendPropertyChanged("UniqueTSSCheck");
					this.OnUniqueTSSCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueTSSFCheck", DbType="Int NOT NULL")]
		public int UniqueTSSFCheck
		{
			get
			{
				return this._UniqueTSSFCheck;
			}
			set
			{
				if ((this._UniqueTSSFCheck != value))
				{
					this.OnUniqueTSSFCheckChanging(value);
					this.SendPropertyChanging();
					this._UniqueTSSFCheck = value;
					this.SendPropertyChanged("UniqueTSSFCheck");
					this.OnUniqueTSSFCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueRCOICheck", DbType="Int NOT NULL")]
		public int UniqueRCOICheck
		{
			get
			{
				return this._UniqueRCOICheck;
			}
			set
			{
				if ((this._UniqueRCOICheck != value))
				{
					this.OnUniqueRCOICheckChanging(value);
					this.SendPropertyChanging();
					this._UniqueRCOICheck = value;
					this.SendPropertyChanged("UniqueRCOICheck");
					this.OnUniqueRCOICheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueOUOCheck", DbType="Int NOT NULL")]
		public int UniqueOUOCheck
		{
			get
			{
				return this._UniqueOUOCheck;
			}
			set
			{
				if ((this._UniqueOUOCheck != value))
				{
					this.OnUniqueOUOCheckChanging(value);
					this.SendPropertyChanging();
					this._UniqueOUOCheck = value;
					this.SendPropertyChanged("UniqueOUOCheck");
					this.OnUniqueOUOCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueFounderCheck", DbType="Int NOT NULL")]
		public int UniqueFounderCheck
		{
			get
			{
				return this._UniqueFounderCheck;
			}
			set
			{
				if ((this._UniqueFounderCheck != value))
				{
					this.OnUniqueFounderCheckChanging(value);
					this.SendPropertyChanging();
					this._UniqueFounderCheck = value;
					this.SendPropertyChanged("UniqueFounderCheck");
					this.OnUniqueFounderCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueOtherCheck", DbType="Int NOT NULL")]
		public int UniqueOtherCheck
		{
			get
			{
				return this._UniqueOtherCheck;
			}
			set
			{
				if ((this._UniqueOtherCheck != value))
				{
					this.OnUniqueOtherCheckChanging(value);
					this.SendPropertyChanging();
					this._UniqueOtherCheck = value;
					this.SendPropertyChanged("UniqueOtherCheck");
					this.OnUniqueOtherCheckChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid idGUID
		{
			get
			{
				return this._idGUID;
			}
			set
			{
				if ((this._idGUID != value))
				{
					this.OnidGUIDChanging(value);
					this.SendPropertyChanging();
					this._idGUID = value;
					this.SendPropertyChanged("idGUID");
					this.OnidGUIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExpireDate")]
	public partial class ExpireDate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Year;
		
		private System.DateTime _ExpireDate1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnExpireDate1Changing(System.DateTime value);
    partial void OnExpireDate1Changed();
    #endregion
		
		public ExpireDate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ExpireDate", Storage="_ExpireDate1", DbType="DateTime NOT NULL")]
		public System.DateTime ExpireDate1
		{
			get
			{
				return this._ExpireDate1;
			}
			set
			{
				if ((this._ExpireDate1 != value))
				{
					this.OnExpireDate1Changing(value);
					this.SendPropertyChanging();
					this._ExpireDate1 = value;
					this.SendPropertyChanged("ExpireDate1");
					this.OnExpireDate1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FederalDistricts")]
	public partial class FederalDistrict : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Code;
		
		private string _Name;
		
		private EntitySet<Region> _Regions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(System.Nullable<int> value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public FederalDistrict()
		{
			this._Regions = new EntitySet<Region>(new Action<Region>(this.attach_Regions), new Action<Region>(this.detach_Regions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int")]
		public System.Nullable<int> Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FederalDistrict_Region", Storage="_Regions", ThisKey="Id", OtherKey="FederalDistrictId")]
		public EntitySet<Region> Regions
		{
			get
			{
				return this._Regions;
			}
			set
			{
				this._Regions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Regions(Region entity)
		{
			this.SendPropertyChanging();
			entity.FederalDistrict = this;
		}
		
		private void detach_Regions(Region entity)
		{
			this.SendPropertyChanging();
			entity.FederalDistrict = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Group]")]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<int> _GroupIdEsrp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGroupIdEsrpChanging(System.Nullable<int> value);
    partial void OnGroupIdEsrpChanged();
    #endregion
		
		public Group()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupIdEsrp", DbType="Int")]
		public System.Nullable<int> GroupIdEsrp
		{
			get
			{
				return this._GroupIdEsrp;
			}
			set
			{
				if ((this._GroupIdEsrp != value))
				{
					this.OnGroupIdEsrpChanging(value);
					this.SendPropertyChanging();
					this._GroupIdEsrp = value;
					this.SendPropertyChanged("GroupIdEsrp");
					this.OnGroupIdEsrpChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupAccount")]
	public partial class GroupAccount
	{
		
		private long _Id;
		
		private int _GroupId;
		
		private long _AccountId;
		
		public GroupAccount()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int NOT NULL")]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this._GroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt NOT NULL")]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this._AccountId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GroupRole")]
	public partial class GroupRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _RoleId;
		
		private int _GroupId;
		
		private bool _IsActive;
		
		private string _IsActiveCondition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnGroupIdChanging(int value);
    partial void OnGroupIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnIsActiveConditionChanging(string value);
    partial void OnIsActiveConditionChanged();
    #endregion
		
		public GroupRole()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL")]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int NOT NULL")]
		public int GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActiveCondition", DbType="NVarChar(MAX)")]
		public string IsActiveCondition
		{
			get
			{
				return this._IsActiveCondition;
			}
			set
			{
				if ((this._IsActiveCondition != value))
				{
					this.OnIsActiveConditionChanging(value);
					this.SendPropertyChanging();
					this._IsActiveCondition = value;
					this.SendPropertyChanged("IsActiveCondition");
					this.OnIsActiveConditionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImportingCommonNationalExamCertificate")]
	public partial class ImportingCommonNationalExamCertificate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<System.Guid> _UpdateId;
		
		private System.Nullable<long> _EditorAccountId;
		
		private string _EditorIp;
		
		private string _Number;
		
		private string _EducationInstitutionCode;
		
		private int _Year;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _PatronymicName;
		
		private System.Nullable<bool> _Sex;
		
		private string _Class;
		
		private string _InternalPassportSeria;
		
		private string _PassportSeria;
		
		private string _PassportNumber;
		
		private string _EntrantNumber;
		
		private System.Nullable<int> _RegionId;
		
		private string _TypographicNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateIdChanging(System.Nullable<System.Guid> value);
    partial void OnUpdateIdChanged();
    partial void OnEditorAccountIdChanging(System.Nullable<long> value);
    partial void OnEditorAccountIdChanged();
    partial void OnEditorIpChanging(string value);
    partial void OnEditorIpChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnEducationInstitutionCodeChanging(string value);
    partial void OnEducationInstitutionCodeChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnPatronymicNameChanging(string value);
    partial void OnPatronymicNameChanged();
    partial void OnSexChanging(System.Nullable<bool> value);
    partial void OnSexChanged();
    partial void OnClassChanging(string value);
    partial void OnClassChanged();
    partial void OnInternalPassportSeriaChanging(string value);
    partial void OnInternalPassportSeriaChanged();
    partial void OnPassportSeriaChanging(string value);
    partial void OnPassportSeriaChanged();
    partial void OnPassportNumberChanging(string value);
    partial void OnPassportNumberChanged();
    partial void OnEntrantNumberChanging(string value);
    partial void OnEntrantNumberChanged();
    partial void OnRegionIdChanging(System.Nullable<int> value);
    partial void OnRegionIdChanged();
    partial void OnTypographicNumberChanging(string value);
    partial void OnTypographicNumberChanged();
    #endregion
		
		public ImportingCommonNationalExamCertificate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorAccountId", DbType="BigInt")]
		public System.Nullable<long> EditorAccountId
		{
			get
			{
				return this._EditorAccountId;
			}
			set
			{
				if ((this._EditorAccountId != value))
				{
					this.OnEditorAccountIdChanging(value);
					this.SendPropertyChanging();
					this._EditorAccountId = value;
					this.SendPropertyChanged("EditorAccountId");
					this.OnEditorAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorIp", DbType="NVarChar(255)")]
		public string EditorIp
		{
			get
			{
				return this._EditorIp;
			}
			set
			{
				if ((this._EditorIp != value))
				{
					this.OnEditorIpChanging(value);
					this.SendPropertyChanging();
					this._EditorIp = value;
					this.SendPropertyChanged("EditorIp");
					this.OnEditorIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(255)")]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationInstitutionCode", DbType="NVarChar(255)")]
		public string EducationInstitutionCode
		{
			get
			{
				return this._EducationInstitutionCode;
			}
			set
			{
				if ((this._EducationInstitutionCode != value))
				{
					this.OnEducationInstitutionCodeChanging(value);
					this.SendPropertyChanging();
					this._EducationInstitutionCode = value;
					this.SendPropertyChanged("EducationInstitutionCode");
					this.OnEducationInstitutionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatronymicName", DbType="NVarChar(255)")]
		public string PatronymicName
		{
			get
			{
				return this._PatronymicName;
			}
			set
			{
				if ((this._PatronymicName != value))
				{
					this.OnPatronymicNameChanging(value);
					this.SendPropertyChanging();
					this._PatronymicName = value;
					this.SendPropertyChanged("PatronymicName");
					this.OnPatronymicNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="NVarChar(255)")]
		public string Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InternalPassportSeria", DbType="NVarChar(255)")]
		public string InternalPassportSeria
		{
			get
			{
				return this._InternalPassportSeria;
			}
			set
			{
				if ((this._InternalPassportSeria != value))
				{
					this.OnInternalPassportSeriaChanging(value);
					this.SendPropertyChanging();
					this._InternalPassportSeria = value;
					this.SendPropertyChanged("InternalPassportSeria");
					this.OnInternalPassportSeriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportSeria", DbType="NVarChar(255)")]
		public string PassportSeria
		{
			get
			{
				return this._PassportSeria;
			}
			set
			{
				if ((this._PassportSeria != value))
				{
					this.OnPassportSeriaChanging(value);
					this.SendPropertyChanging();
					this._PassportSeria = value;
					this.SendPropertyChanged("PassportSeria");
					this.OnPassportSeriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassportNumber", DbType="NVarChar(255)")]
		public string PassportNumber
		{
			get
			{
				return this._PassportNumber;
			}
			set
			{
				if ((this._PassportNumber != value))
				{
					this.OnPassportNumberChanging(value);
					this.SendPropertyChanging();
					this._PassportNumber = value;
					this.SendPropertyChanged("PassportNumber");
					this.OnPassportNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantNumber", DbType="NVarChar(255)")]
		public string EntrantNumber
		{
			get
			{
				return this._EntrantNumber;
			}
			set
			{
				if ((this._EntrantNumber != value))
				{
					this.OnEntrantNumberChanging(value);
					this.SendPropertyChanging();
					this._EntrantNumber = value;
					this.SendPropertyChanged("EntrantNumber");
					this.OnEntrantNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int")]
		public System.Nullable<int> RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypographicNumber", DbType="NVarChar(255)")]
		public string TypographicNumber
		{
			get
			{
				return this._TypographicNumber;
			}
			set
			{
				if ((this._TypographicNumber != value))
				{
					this.OnTypographicNumberChanging(value);
					this.SendPropertyChanging();
					this._TypographicNumber = value;
					this.SendPropertyChanged("TypographicNumber");
					this.OnTypographicNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImportingCommonNationalExamCertificateDeny")]
	public partial class ImportingCommonNationalExamCertificateDeny : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Nullable<System.Guid> _UpdateId;
		
		private int _Year;
		
		private string _CertificateNumber;
		
		private string _Comment;
		
		private string _NewCertificateNumber;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateIdChanging(System.Nullable<System.Guid> value);
    partial void OnUpdateIdChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnCertificateNumberChanging(string value);
    partial void OnCertificateNumberChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnNewCertificateNumberChanging(string value);
    partial void OnNewCertificateNumberChanged();
    #endregion
		
		public ImportingCommonNationalExamCertificateDeny()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CertificateNumber
		{
			get
			{
				return this._CertificateNumber;
			}
			set
			{
				if ((this._CertificateNumber != value))
				{
					this.OnCertificateNumberChanging(value);
					this.SendPropertyChanging();
					this._CertificateNumber = value;
					this.SendPropertyChanged("CertificateNumber");
					this.OnCertificateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCertificateNumber", DbType="NVarChar(255)")]
		public string NewCertificateNumber
		{
			get
			{
				return this._NewCertificateNumber;
			}
			set
			{
				if ((this._NewCertificateNumber != value))
				{
					this.OnNewCertificateNumberChanging(value);
					this.SendPropertyChanging();
					this._NewCertificateNumber = value;
					this.SendPropertyChanged("NewCertificateNumber");
					this.OnNewCertificateNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImportingCommonNationalExamCertificateSubject")]
	public partial class ImportingCommonNationalExamCertificateSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _CertificateId;
		
		private long _SubjectId;
		
		private short _Mark;
		
		private bool _HasAppeal;
		
		private int _Year;
		
		private int _RegionId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCertificateIdChanging(long value);
    partial void OnCertificateIdChanged();
    partial void OnSubjectIdChanging(long value);
    partial void OnSubjectIdChanged();
    partial void OnMarkChanging(short value);
    partial void OnMarkChanged();
    partial void OnHasAppealChanging(bool value);
    partial void OnHasAppealChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnRegionIdChanging(int value);
    partial void OnRegionIdChanged();
    #endregion
		
		public ImportingCommonNationalExamCertificateSubject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL")]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long CertificateId
		{
			get
			{
				return this._CertificateId;
			}
			set
			{
				if ((this._CertificateId != value))
				{
					this.OnCertificateIdChanging(value);
					this.SendPropertyChanging();
					this._CertificateId = value;
					this.SendPropertyChanged("CertificateId");
					this.OnCertificateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="SmallInt NOT NULL")]
		public short Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAppeal", DbType="Bit NOT NULL")]
		public bool HasAppeal
		{
			get
			{
				return this._HasAppeal;
			}
			set
			{
				if ((this._HasAppeal != value))
				{
					this.OnHasAppealChanging(value);
					this.SendPropertyChanging();
					this._HasAppeal = value;
					this.SendPropertyChanged("HasAppeal");
					this.OnHasAppealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int NOT NULL")]
		public int RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Migrations")]
	public partial class Migration
	{
		
		private int _MigrationVersion;
		
		private string _MigrationName;
		
		private System.DateTime _CreateDate;
		
		public Migration()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MigrationVersion", DbType="Int NOT NULL")]
		public int MigrationVersion
		{
			get
			{
				return this._MigrationVersion;
			}
			set
			{
				if ((this._MigrationVersion != value))
				{
					this._MigrationVersion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MigrationName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string MigrationName
		{
			get
			{
				return this._MigrationName;
			}
			set
			{
				if ((this._MigrationName != value))
				{
					this._MigrationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MinimalMark")]
	public partial class MinimalMark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SubjectId;
		
		private int _Year;
		
		private decimal _MinimalMark1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectIdChanging(int value);
    partial void OnSubjectIdChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnMinimalMark1Changing(decimal value);
    partial void OnMinimalMark1Changed();
    #endregion
		
		public MinimalMark()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MinimalMark", Storage="_MinimalMark1", DbType="Decimal(5,1) NOT NULL")]
		public decimal MinimalMark1
		{
			get
			{
				return this._MinimalMark1;
			}
			set
			{
				if ((this._MinimalMark1 != value))
				{
					this.OnMinimalMark1Changing(value);
					this.SendPropertyChanging();
					this._MinimalMark1 = value;
					this.SendPropertyChanged("MinimalMark1");
					this.OnMinimalMark1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.News")]
	public partial class New : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Guid _UpdateId;
		
		private long _EditorAccountId;
		
		private string _EditorIp;
		
		private System.DateTime _Date;
		
		private string _Name;
		
		private string _Description;
		
		private string _Text;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateIdChanging(System.Guid value);
    partial void OnUpdateIdChanged();
    partial void OnEditorAccountIdChanging(long value);
    partial void OnEditorAccountIdChanged();
    partial void OnEditorIpChanging(string value);
    partial void OnEditorIpChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public New()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorAccountId", DbType="BigInt NOT NULL")]
		public long EditorAccountId
		{
			get
			{
				return this._EditorAccountId;
			}
			set
			{
				if ((this._EditorAccountId != value))
				{
					this.OnEditorAccountIdChanging(value);
					this.SendPropertyChanging();
					this._EditorAccountId = value;
					this.SendPropertyChanged("EditorAccountId");
					this.OnEditorAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorIp", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EditorIp
		{
			get
			{
				return this._EditorIp;
			}
			set
			{
				if ((this._EditorIp != value))
				{
					this.OnEditorIpChanging(value);
					this.SendPropertyChanging();
					this._EditorIp = value;
					this.SendPropertyChanged("EditorIp");
					this.OnEditorIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OlympicDiplomants")]
	public partial class OlympicDiplomant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<long> _olympics_id;
		
		private string _last_name;
		
		private string _first_name;
		
		private string _middle_name;
		
		private System.Nullable<System.DateTime> _birth_date;
		
		private string _school_region;
		
		private System.Nullable<long> _school_ege_code;
		
		private string _school_ege_name;
		
		private System.Nullable<int> _form_number;
		
		private string _reg_code;
		
		private System.Nullable<int> _result_level;
		
		private string _egeid;
		
		private EntitySet<OlympicParticipant> _OlympicParticipants;
		
		private EntityRef<Olympic> _Olympic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onolympics_idChanging(System.Nullable<long> value);
    partial void Onolympics_idChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onmiddle_nameChanging(string value);
    partial void Onmiddle_nameChanged();
    partial void Onbirth_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onbirth_dateChanged();
    partial void Onschool_regionChanging(string value);
    partial void Onschool_regionChanged();
    partial void Onschool_ege_codeChanging(System.Nullable<long> value);
    partial void Onschool_ege_codeChanged();
    partial void Onschool_ege_nameChanging(string value);
    partial void Onschool_ege_nameChanged();
    partial void Onform_numberChanging(System.Nullable<int> value);
    partial void Onform_numberChanged();
    partial void Onreg_codeChanging(string value);
    partial void Onreg_codeChanged();
    partial void Onresult_levelChanging(System.Nullable<int> value);
    partial void Onresult_levelChanged();
    partial void OnegeidChanging(string value);
    partial void OnegeidChanged();
    #endregion
		
		public OlympicDiplomant()
		{
			this._OlympicParticipants = new EntitySet<OlympicParticipant>(new Action<OlympicParticipant>(this.attach_OlympicParticipants), new Action<OlympicParticipant>(this.detach_OlympicParticipants));
			this._Olympic = default(EntityRef<Olympic>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_olympics_id", DbType="BigInt")]
		public System.Nullable<long> olympics_id
		{
			get
			{
				return this._olympics_id;
			}
			set
			{
				if ((this._olympics_id != value))
				{
					if (this._Olympic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onolympics_idChanging(value);
					this.SendPropertyChanging();
					this._olympics_id = value;
					this.SendPropertyChanged("olympics_id");
					this.Onolympics_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(64)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(64)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_middle_name", DbType="VarChar(64)")]
		public string middle_name
		{
			get
			{
				return this._middle_name;
			}
			set
			{
				if ((this._middle_name != value))
				{
					this.Onmiddle_nameChanging(value);
					this.SendPropertyChanging();
					this._middle_name = value;
					this.SendPropertyChanged("middle_name");
					this.Onmiddle_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birth_date", DbType="Date")]
		public System.Nullable<System.DateTime> birth_date
		{
			get
			{
				return this._birth_date;
			}
			set
			{
				if ((this._birth_date != value))
				{
					this.Onbirth_dateChanging(value);
					this.SendPropertyChanging();
					this._birth_date = value;
					this.SendPropertyChanged("birth_date");
					this.Onbirth_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_school_region", DbType="VarChar(32)")]
		public string school_region
		{
			get
			{
				return this._school_region;
			}
			set
			{
				if ((this._school_region != value))
				{
					this.Onschool_regionChanging(value);
					this.SendPropertyChanging();
					this._school_region = value;
					this.SendPropertyChanged("school_region");
					this.Onschool_regionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_school_ege_code", DbType="BigInt")]
		public System.Nullable<long> school_ege_code
		{
			get
			{
				return this._school_ege_code;
			}
			set
			{
				if ((this._school_ege_code != value))
				{
					this.Onschool_ege_codeChanging(value);
					this.SendPropertyChanging();
					this._school_ege_code = value;
					this.SendPropertyChanged("school_ege_code");
					this.Onschool_ege_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_school_ege_name", DbType="VarChar(512)")]
		public string school_ege_name
		{
			get
			{
				return this._school_ege_name;
			}
			set
			{
				if ((this._school_ege_name != value))
				{
					this.Onschool_ege_nameChanging(value);
					this.SendPropertyChanging();
					this._school_ege_name = value;
					this.SendPropertyChanged("school_ege_name");
					this.Onschool_ege_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_form_number", DbType="Int")]
		public System.Nullable<int> form_number
		{
			get
			{
				return this._form_number;
			}
			set
			{
				if ((this._form_number != value))
				{
					this.Onform_numberChanging(value);
					this.SendPropertyChanging();
					this._form_number = value;
					this.SendPropertyChanged("form_number");
					this.Onform_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reg_code", DbType="VarChar(32)")]
		public string reg_code
		{
			get
			{
				return this._reg_code;
			}
			set
			{
				if ((this._reg_code != value))
				{
					this.Onreg_codeChanging(value);
					this.SendPropertyChanging();
					this._reg_code = value;
					this.SendPropertyChanged("reg_code");
					this.Onreg_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_result_level", DbType="Int")]
		public System.Nullable<int> result_level
		{
			get
			{
				return this._result_level;
			}
			set
			{
				if ((this._result_level != value))
				{
					this.Onresult_levelChanging(value);
					this.SendPropertyChanging();
					this._result_level = value;
					this.SendPropertyChanged("result_level");
					this.Onresult_levelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_egeid", DbType="VarChar(1024)")]
		public string egeid
		{
			get
			{
				return this._egeid;
			}
			set
			{
				if ((this._egeid != value))
				{
					this.OnegeidChanging(value);
					this.SendPropertyChanging();
					this._egeid = value;
					this.SendPropertyChanged("egeid");
					this.OnegeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicDiplomant_OlympicParticipant", Storage="_OlympicParticipants", ThisKey="id", OtherKey="diplomant_id")]
		public EntitySet<OlympicParticipant> OlympicParticipants
		{
			get
			{
				return this._OlympicParticipants;
			}
			set
			{
				this._OlympicParticipants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Olympic_OlympicDiplomant", Storage="_Olympic", ThisKey="olympics_id", OtherKey="id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Olympic Olympic
		{
			get
			{
				return this._Olympic.Entity;
			}
			set
			{
				Olympic previousValue = this._Olympic.Entity;
				if (((previousValue != value) 
							|| (this._Olympic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Olympic.Entity = null;
						previousValue.OlympicDiplomants.Remove(this);
					}
					this._Olympic.Entity = value;
					if ((value != null))
					{
						value.OlympicDiplomants.Add(this);
						this._olympics_id = value.id;
					}
					else
					{
						this._olympics_id = default(Nullable<long>);
					}
					this.SendPropertyChanged("Olympic");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OlympicParticipants(OlympicParticipant entity)
		{
			this.SendPropertyChanging();
			entity.OlympicDiplomant = this;
		}
		
		private void detach_OlympicParticipants(OlympicParticipant entity)
		{
			this.SendPropertyChanging();
			entity.OlympicDiplomant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OlympicParticipants")]
	public partial class OlympicParticipant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _diplomant_id;
		
		private System.Guid _participant_id;
		
		private EntityRef<OlympicDiplomant> _OlympicDiplomant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondiplomant_idChanging(long value);
    partial void Ondiplomant_idChanged();
    partial void Onparticipant_idChanging(System.Guid value);
    partial void Onparticipant_idChanged();
    #endregion
		
		public OlympicParticipant()
		{
			this._OlympicDiplomant = default(EntityRef<OlympicDiplomant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diplomant_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long diplomant_id
		{
			get
			{
				return this._diplomant_id;
			}
			set
			{
				if ((this._diplomant_id != value))
				{
					if (this._OlympicDiplomant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondiplomant_idChanging(value);
					this.SendPropertyChanging();
					this._diplomant_id = value;
					this.SendPropertyChanged("diplomant_id");
					this.Ondiplomant_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_participant_id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid participant_id
		{
			get
			{
				return this._participant_id;
			}
			set
			{
				if ((this._participant_id != value))
				{
					this.Onparticipant_idChanging(value);
					this.SendPropertyChanging();
					this._participant_id = value;
					this.SendPropertyChanged("participant_id");
					this.Onparticipant_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicDiplomant_OlympicParticipant", Storage="_OlympicDiplomant", ThisKey="diplomant_id", OtherKey="id", IsForeignKey=true)]
		public OlympicDiplomant OlympicDiplomant
		{
			get
			{
				return this._OlympicDiplomant.Entity;
			}
			set
			{
				OlympicDiplomant previousValue = this._OlympicDiplomant.Entity;
				if (((previousValue != value) 
							|| (this._OlympicDiplomant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OlympicDiplomant.Entity = null;
						previousValue.OlympicParticipants.Remove(this);
					}
					this._OlympicDiplomant.Entity = value;
					if ((value != null))
					{
						value.OlympicParticipants.Add(this);
						this._diplomant_id = value.id;
					}
					else
					{
						this._diplomant_id = default(long);
					}
					this.SendPropertyChanged("OlympicDiplomant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OlympicProfileSubjects")]
	public partial class OlympicProfileSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _olympics_id;
		
		private long _olympic_subject_id;
		
		private EntityRef<Olympic> _Olympic;
		
		private EntityRef<OlympicSubject> _OlympicSubject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onolympics_idChanging(long value);
    partial void Onolympics_idChanged();
    partial void Onolympic_subject_idChanging(long value);
    partial void Onolympic_subject_idChanged();
    #endregion
		
		public OlympicProfileSubject()
		{
			this._Olympic = default(EntityRef<Olympic>);
			this._OlympicSubject = default(EntityRef<OlympicSubject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_olympics_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long olympics_id
		{
			get
			{
				return this._olympics_id;
			}
			set
			{
				if ((this._olympics_id != value))
				{
					if (this._Olympic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onolympics_idChanging(value);
					this.SendPropertyChanging();
					this._olympics_id = value;
					this.SendPropertyChanged("olympics_id");
					this.Onolympics_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_olympic_subject_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long olympic_subject_id
		{
			get
			{
				return this._olympic_subject_id;
			}
			set
			{
				if ((this._olympic_subject_id != value))
				{
					if (this._OlympicSubject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onolympic_subject_idChanging(value);
					this.SendPropertyChanging();
					this._olympic_subject_id = value;
					this.SendPropertyChanged("olympic_subject_id");
					this.Onolympic_subject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Olympic_OlympicProfileSubject", Storage="_Olympic", ThisKey="olympics_id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Olympic Olympic
		{
			get
			{
				return this._Olympic.Entity;
			}
			set
			{
				Olympic previousValue = this._Olympic.Entity;
				if (((previousValue != value) 
							|| (this._Olympic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Olympic.Entity = null;
						previousValue.OlympicProfileSubjects.Remove(this);
					}
					this._Olympic.Entity = value;
					if ((value != null))
					{
						value.OlympicProfileSubjects.Add(this);
						this._olympics_id = value.id;
					}
					else
					{
						this._olympics_id = default(long);
					}
					this.SendPropertyChanged("Olympic");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicSubject_OlympicProfileSubject", Storage="_OlympicSubject", ThisKey="olympic_subject_id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OlympicSubject OlympicSubject
		{
			get
			{
				return this._OlympicSubject.Entity;
			}
			set
			{
				OlympicSubject previousValue = this._OlympicSubject.Entity;
				if (((previousValue != value) 
							|| (this._OlympicSubject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OlympicSubject.Entity = null;
						previousValue.OlympicProfileSubjects.Remove(this);
					}
					this._OlympicSubject.Entity = value;
					if ((value != null))
					{
						value.OlympicProfileSubjects.Add(this);
						this._olympic_subject_id = value.id;
					}
					else
					{
						this._olympic_subject_id = default(long);
					}
					this.SendPropertyChanged("OlympicSubject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Olympics")]
	public partial class Olympic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _code_name;
		
		private string _olympiad_name;
		
		private System.Nullable<int> _olympiad_number;
		
		private System.Nullable<int> _olympiad_level;
		
		private string _olympiad_subject_name;
		
		private string _olympiad_subject_profile_name;
		
		private System.Nullable<int> _olympiad_year;
		
		private EntitySet<OlympicDiplomant> _OlympicDiplomants;
		
		private EntitySet<OlympicProfileSubject> _OlympicProfileSubjects;
		
		private EntitySet<OlympicThemeSubject> _OlympicThemeSubjects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Oncode_nameChanging(string value);
    partial void Oncode_nameChanged();
    partial void Onolympiad_nameChanging(string value);
    partial void Onolympiad_nameChanged();
    partial void Onolympiad_numberChanging(System.Nullable<int> value);
    partial void Onolympiad_numberChanged();
    partial void Onolympiad_levelChanging(System.Nullable<int> value);
    partial void Onolympiad_levelChanged();
    partial void Onolympiad_subject_nameChanging(string value);
    partial void Onolympiad_subject_nameChanged();
    partial void Onolympiad_subject_profile_nameChanging(string value);
    partial void Onolympiad_subject_profile_nameChanged();
    partial void Onolympiad_yearChanging(System.Nullable<int> value);
    partial void Onolympiad_yearChanged();
    #endregion
		
		public Olympic()
		{
			this._OlympicDiplomants = new EntitySet<OlympicDiplomant>(new Action<OlympicDiplomant>(this.attach_OlympicDiplomants), new Action<OlympicDiplomant>(this.detach_OlympicDiplomants));
			this._OlympicProfileSubjects = new EntitySet<OlympicProfileSubject>(new Action<OlympicProfileSubject>(this.attach_OlympicProfileSubjects), new Action<OlympicProfileSubject>(this.detach_OlympicProfileSubjects));
			this._OlympicThemeSubjects = new EntitySet<OlympicThemeSubject>(new Action<OlympicThemeSubject>(this.attach_OlympicThemeSubjects), new Action<OlympicThemeSubject>(this.detach_OlympicThemeSubjects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code_name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string code_name
		{
			get
			{
				return this._code_name;
			}
			set
			{
				if ((this._code_name != value))
				{
					this.Oncode_nameChanging(value);
					this.SendPropertyChanging();
					this._code_name = value;
					this.SendPropertyChanged("code_name");
					this.Oncode_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_olympiad_name", DbType="VarChar(255)")]
		public string olympiad_name
		{
			get
			{
				return this._olympiad_name;
			}
			set
			{
				if ((this._olympiad_name != value))
				{
					this.Onolympiad_nameChanging(value);
					this.SendPropertyChanging();
					this._olympiad_name = value;
					this.SendPropertyChanged("olympiad_name");
					this.Onolympiad_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_olympiad_number", DbType="Int")]
		public System.Nullable<int> olympiad_number
		{
			get
			{
				return this._olympiad_number;
			}
			set
			{
				if ((this._olympiad_number != value))
				{
					this.Onolympiad_numberChanging(value);
					this.SendPropertyChanging();
					this._olympiad_number = value;
					this.SendPropertyChanged("olympiad_number");
					this.Onolympiad_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_olympiad_level", DbType="Int")]
		public System.Nullable<int> olympiad_level
		{
			get
			{
				return this._olympiad_level;
			}
			set
			{
				if ((this._olympiad_level != value))
				{
					this.Onolympiad_levelChanging(value);
					this.SendPropertyChanging();
					this._olympiad_level = value;
					this.SendPropertyChanged("olympiad_level");
					this.Onolympiad_levelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_olympiad_subject_name", DbType="VarChar(4000)")]
		public string olympiad_subject_name
		{
			get
			{
				return this._olympiad_subject_name;
			}
			set
			{
				if ((this._olympiad_subject_name != value))
				{
					this.Onolympiad_subject_nameChanging(value);
					this.SendPropertyChanging();
					this._olympiad_subject_name = value;
					this.SendPropertyChanged("olympiad_subject_name");
					this.Onolympiad_subject_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_olympiad_subject_profile_name", DbType="VarChar(4000)")]
		public string olympiad_subject_profile_name
		{
			get
			{
				return this._olympiad_subject_profile_name;
			}
			set
			{
				if ((this._olympiad_subject_profile_name != value))
				{
					this.Onolympiad_subject_profile_nameChanging(value);
					this.SendPropertyChanging();
					this._olympiad_subject_profile_name = value;
					this.SendPropertyChanged("olympiad_subject_profile_name");
					this.Onolympiad_subject_profile_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_olympiad_year", DbType="Int")]
		public System.Nullable<int> olympiad_year
		{
			get
			{
				return this._olympiad_year;
			}
			set
			{
				if ((this._olympiad_year != value))
				{
					this.Onolympiad_yearChanging(value);
					this.SendPropertyChanging();
					this._olympiad_year = value;
					this.SendPropertyChanged("olympiad_year");
					this.Onolympiad_yearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Olympic_OlympicDiplomant", Storage="_OlympicDiplomants", ThisKey="id", OtherKey="olympics_id")]
		public EntitySet<OlympicDiplomant> OlympicDiplomants
		{
			get
			{
				return this._OlympicDiplomants;
			}
			set
			{
				this._OlympicDiplomants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Olympic_OlympicProfileSubject", Storage="_OlympicProfileSubjects", ThisKey="id", OtherKey="olympics_id")]
		public EntitySet<OlympicProfileSubject> OlympicProfileSubjects
		{
			get
			{
				return this._OlympicProfileSubjects;
			}
			set
			{
				this._OlympicProfileSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Olympic_OlympicThemeSubject", Storage="_OlympicThemeSubjects", ThisKey="id", OtherKey="olympics_id")]
		public EntitySet<OlympicThemeSubject> OlympicThemeSubjects
		{
			get
			{
				return this._OlympicThemeSubjects;
			}
			set
			{
				this._OlympicThemeSubjects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OlympicDiplomants(OlympicDiplomant entity)
		{
			this.SendPropertyChanging();
			entity.Olympic = this;
		}
		
		private void detach_OlympicDiplomants(OlympicDiplomant entity)
		{
			this.SendPropertyChanging();
			entity.Olympic = null;
		}
		
		private void attach_OlympicProfileSubjects(OlympicProfileSubject entity)
		{
			this.SendPropertyChanging();
			entity.Olympic = this;
		}
		
		private void detach_OlympicProfileSubjects(OlympicProfileSubject entity)
		{
			this.SendPropertyChanging();
			entity.Olympic = null;
		}
		
		private void attach_OlympicThemeSubjects(OlympicThemeSubject entity)
		{
			this.SendPropertyChanging();
			entity.Olympic = this;
		}
		
		private void detach_OlympicThemeSubjects(OlympicThemeSubject entity)
		{
			this.SendPropertyChanging();
			entity.Olympic = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OlympicSubjects")]
	public partial class OlympicSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _subject_name;
		
		private EntitySet<OlympicProfileSubject> _OlympicProfileSubjects;
		
		private EntitySet<OlympicThemeSubject> _OlympicThemeSubjects;
		
		private EntitySet<OlympicToFbsSubjectMap> _OlympicToFbsSubjectMaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void Onsubject_nameChanging(string value);
    partial void Onsubject_nameChanged();
    #endregion
		
		public OlympicSubject()
		{
			this._OlympicProfileSubjects = new EntitySet<OlympicProfileSubject>(new Action<OlympicProfileSubject>(this.attach_OlympicProfileSubjects), new Action<OlympicProfileSubject>(this.detach_OlympicProfileSubjects));
			this._OlympicThemeSubjects = new EntitySet<OlympicThemeSubject>(new Action<OlympicThemeSubject>(this.attach_OlympicThemeSubjects), new Action<OlympicThemeSubject>(this.detach_OlympicThemeSubjects));
			this._OlympicToFbsSubjectMaps = new EntitySet<OlympicToFbsSubjectMap>(new Action<OlympicToFbsSubjectMap>(this.attach_OlympicToFbsSubjectMaps), new Action<OlympicToFbsSubjectMap>(this.detach_OlympicToFbsSubjectMaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject_name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string subject_name
		{
			get
			{
				return this._subject_name;
			}
			set
			{
				if ((this._subject_name != value))
				{
					this.Onsubject_nameChanging(value);
					this.SendPropertyChanging();
					this._subject_name = value;
					this.SendPropertyChanged("subject_name");
					this.Onsubject_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicSubject_OlympicProfileSubject", Storage="_OlympicProfileSubjects", ThisKey="id", OtherKey="olympic_subject_id")]
		public EntitySet<OlympicProfileSubject> OlympicProfileSubjects
		{
			get
			{
				return this._OlympicProfileSubjects;
			}
			set
			{
				this._OlympicProfileSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicSubject_OlympicThemeSubject", Storage="_OlympicThemeSubjects", ThisKey="id", OtherKey="olympic_subject_id")]
		public EntitySet<OlympicThemeSubject> OlympicThemeSubjects
		{
			get
			{
				return this._OlympicThemeSubjects;
			}
			set
			{
				this._OlympicThemeSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicSubject_OlympicToFbsSubjectMap", Storage="_OlympicToFbsSubjectMaps", ThisKey="id", OtherKey="olympic_subject_id")]
		public EntitySet<OlympicToFbsSubjectMap> OlympicToFbsSubjectMaps
		{
			get
			{
				return this._OlympicToFbsSubjectMaps;
			}
			set
			{
				this._OlympicToFbsSubjectMaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OlympicProfileSubjects(OlympicProfileSubject entity)
		{
			this.SendPropertyChanging();
			entity.OlympicSubject = this;
		}
		
		private void detach_OlympicProfileSubjects(OlympicProfileSubject entity)
		{
			this.SendPropertyChanging();
			entity.OlympicSubject = null;
		}
		
		private void attach_OlympicThemeSubjects(OlympicThemeSubject entity)
		{
			this.SendPropertyChanging();
			entity.OlympicSubject = this;
		}
		
		private void detach_OlympicThemeSubjects(OlympicThemeSubject entity)
		{
			this.SendPropertyChanging();
			entity.OlympicSubject = null;
		}
		
		private void attach_OlympicToFbsSubjectMaps(OlympicToFbsSubjectMap entity)
		{
			this.SendPropertyChanging();
			entity.OlympicSubject = this;
		}
		
		private void detach_OlympicToFbsSubjectMaps(OlympicToFbsSubjectMap entity)
		{
			this.SendPropertyChanging();
			entity.OlympicSubject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OlympicThemeSubjects")]
	public partial class OlympicThemeSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _olympics_id;
		
		private long _olympic_subject_id;
		
		private EntityRef<Olympic> _Olympic;
		
		private EntityRef<OlympicSubject> _OlympicSubject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onolympics_idChanging(long value);
    partial void Onolympics_idChanged();
    partial void Onolympic_subject_idChanging(long value);
    partial void Onolympic_subject_idChanged();
    #endregion
		
		public OlympicThemeSubject()
		{
			this._Olympic = default(EntityRef<Olympic>);
			this._OlympicSubject = default(EntityRef<OlympicSubject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_olympics_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long olympics_id
		{
			get
			{
				return this._olympics_id;
			}
			set
			{
				if ((this._olympics_id != value))
				{
					if (this._Olympic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onolympics_idChanging(value);
					this.SendPropertyChanging();
					this._olympics_id = value;
					this.SendPropertyChanged("olympics_id");
					this.Onolympics_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_olympic_subject_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long olympic_subject_id
		{
			get
			{
				return this._olympic_subject_id;
			}
			set
			{
				if ((this._olympic_subject_id != value))
				{
					if (this._OlympicSubject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onolympic_subject_idChanging(value);
					this.SendPropertyChanging();
					this._olympic_subject_id = value;
					this.SendPropertyChanged("olympic_subject_id");
					this.Onolympic_subject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Olympic_OlympicThemeSubject", Storage="_Olympic", ThisKey="olympics_id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Olympic Olympic
		{
			get
			{
				return this._Olympic.Entity;
			}
			set
			{
				Olympic previousValue = this._Olympic.Entity;
				if (((previousValue != value) 
							|| (this._Olympic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Olympic.Entity = null;
						previousValue.OlympicThemeSubjects.Remove(this);
					}
					this._Olympic.Entity = value;
					if ((value != null))
					{
						value.OlympicThemeSubjects.Add(this);
						this._olympics_id = value.id;
					}
					else
					{
						this._olympics_id = default(long);
					}
					this.SendPropertyChanged("Olympic");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicSubject_OlympicThemeSubject", Storage="_OlympicSubject", ThisKey="olympic_subject_id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OlympicSubject OlympicSubject
		{
			get
			{
				return this._OlympicSubject.Entity;
			}
			set
			{
				OlympicSubject previousValue = this._OlympicSubject.Entity;
				if (((previousValue != value) 
							|| (this._OlympicSubject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OlympicSubject.Entity = null;
						previousValue.OlympicThemeSubjects.Remove(this);
					}
					this._OlympicSubject.Entity = value;
					if ((value != null))
					{
						value.OlympicThemeSubjects.Add(this);
						this._olympic_subject_id = value.id;
					}
					else
					{
						this._olympic_subject_id = default(long);
					}
					this.SendPropertyChanged("OlympicSubject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OlympicToFbsSubjectMap")]
	public partial class OlympicToFbsSubjectMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _olympic_subject_id;
		
		private long _ege_subject_id;
		
		private EntityRef<OlympicSubject> _OlympicSubject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onolympic_subject_idChanging(long value);
    partial void Onolympic_subject_idChanged();
    partial void Onege_subject_idChanging(long value);
    partial void Onege_subject_idChanged();
    #endregion
		
		public OlympicToFbsSubjectMap()
		{
			this._OlympicSubject = default(EntityRef<OlympicSubject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_olympic_subject_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long olympic_subject_id
		{
			get
			{
				return this._olympic_subject_id;
			}
			set
			{
				if ((this._olympic_subject_id != value))
				{
					if (this._OlympicSubject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onolympic_subject_idChanging(value);
					this.SendPropertyChanging();
					this._olympic_subject_id = value;
					this.SendPropertyChanged("olympic_subject_id");
					this.Onolympic_subject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ege_subject_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long ege_subject_id
		{
			get
			{
				return this._ege_subject_id;
			}
			set
			{
				if ((this._ege_subject_id != value))
				{
					this.Onege_subject_idChanging(value);
					this.SendPropertyChanging();
					this._ege_subject_id = value;
					this.SendPropertyChanged("ege_subject_id");
					this.Onege_subject_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicSubject_OlympicToFbsSubjectMap", Storage="_OlympicSubject", ThisKey="olympic_subject_id", OtherKey="id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OlympicSubject OlympicSubject
		{
			get
			{
				return this._OlympicSubject.Entity;
			}
			set
			{
				OlympicSubject previousValue = this._OlympicSubject.Entity;
				if (((previousValue != value) 
							|| (this._OlympicSubject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OlympicSubject.Entity = null;
						previousValue.OlympicToFbsSubjectMaps.Remove(this);
					}
					this._OlympicSubject.Entity = value;
					if ((value != null))
					{
						value.OlympicToFbsSubjectMaps.Add(this);
						this._olympic_subject_id = value.id;
					}
					else
					{
						this._olympic_subject_id = default(long);
					}
					this.SendPropertyChanged("OlympicSubject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OperatorLog")]
	public partial class OperatorLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CheckedUserID;
		
		private int _OperatorID;
		
		private string _Comments;
		
		private System.DateTime _DTCreate;
		
		private System.DateTime _DTLastChange;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCheckedUserIDChanging(int value);
    partial void OnCheckedUserIDChanged();
    partial void OnOperatorIDChanging(int value);
    partial void OnOperatorIDChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnDTCreateChanging(System.DateTime value);
    partial void OnDTCreateChanged();
    partial void OnDTLastChangeChanging(System.DateTime value);
    partial void OnDTLastChangeChanged();
    #endregion
		
		public OperatorLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckedUserID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CheckedUserID
		{
			get
			{
				return this._CheckedUserID;
			}
			set
			{
				if ((this._CheckedUserID != value))
				{
					this.OnCheckedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CheckedUserID = value;
					this.SendPropertyChanged("CheckedUserID");
					this.OnCheckedUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatorID", DbType="Int NOT NULL")]
		public int OperatorID
		{
			get
			{
				return this._OperatorID;
			}
			set
			{
				if ((this._OperatorID != value))
				{
					this.OnOperatorIDChanging(value);
					this.SendPropertyChanging();
					this._OperatorID = value;
					this.SendPropertyChanged("OperatorID");
					this.OnOperatorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(1024)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTCreate", DbType="DateTime NOT NULL")]
		public System.DateTime DTCreate
		{
			get
			{
				return this._DTCreate;
			}
			set
			{
				if ((this._DTCreate != value))
				{
					this.OnDTCreateChanging(value);
					this.SendPropertyChanging();
					this._DTCreate = value;
					this.SendPropertyChanged("DTCreate");
					this.OnDTCreateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTLastChange", DbType="DateTime NOT NULL")]
		public System.DateTime DTLastChange
		{
			get
			{
				return this._DTLastChange;
			}
			set
			{
				if ((this._DTLastChange != value))
				{
					this.OnDTLastChangeChanging(value);
					this.SendPropertyChanging();
					this._DTLastChange = value;
					this.SendPropertyChanged("DTLastChange");
					this.OnDTLastChangeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organization2010")]
	public partial class Organization2010 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _FullName;
		
		private string _ShortName;
		
		private int _RegionId;
		
		private int _TypeId;
		
		private int _KindId;
		
		private string _INN;
		
		private string _OGRN;
		
		private string _OwnerDepartment;
		
		private bool _IsPrivate;
		
		private bool _IsFilial;
		
		private string _DirectorPosition;
		
		private string _DirectorFullName;
		
		private System.Nullable<bool> _IsAccredited;
		
		private string _AccreditationSertificate;
		
		private string _LawAddress;
		
		private string _FactAddress;
		
		private string _PhoneCityCode;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _EMail;
		
		private string _Site;
		
		private bool _WasImportedAtStart;
		
		private System.Nullable<int> _RCModel;
		
		private string _RCDescription;
		
		private System.Nullable<int> _MainId;
		
		private System.Nullable<int> _DepartmentId;
		
		private int _CNFBFullTime;
		
		private int _CNFBEvening;
		
		private int _CNFBPostal;
		
		private int _CNPayFullTime;
		
		private int _CNPayEvening;
		
		private int _CNPayPostal;
		
		private System.Nullable<int> _CNFederalBudget;
		
		private System.Nullable<int> _CNTargeted;
		
		private System.Nullable<int> _CNLocalBudget;
		
		private System.Nullable<int> _CNPaying;
		
		private System.Nullable<int> _CNFullTime;
		
		private System.Nullable<int> _CNEvening;
		
		private System.Nullable<int> _CNPostal;
		
		private int _StatusId;
		
		private System.Nullable<int> _NewOrgId;
		
		private int _Version;
		
		private bool _DisableLog;
		
		private EntitySet<Organization2010> _Organization2010s;
		
		private EntitySet<Organization2010> _Organization2010s1;
		
		private EntitySet<Organization2010> _Organization2010s2;
		
		private EntitySet<OrganizationRequest2010> _OrganizationRequest2010s;
		
		private EntitySet<OrganizationUpdateHistory> _OrganizationUpdateHistories;
		
		private EntitySet<OrganizationUpdateHistory> _OrganizationUpdateHistories1;
		
		private EntitySet<OrganizationUpdateHistory> _OrganizationUpdateHistories2;
		
		private EntityRef<Organization2010> _Organization20101;
		
		private EntityRef<Organization2010> _Organization20102;
		
		private EntityRef<Organization2010> _Organization20103;
		
		private EntityRef<OrganizationKind> _OrganizationKind;
		
		private EntityRef<OrganizationOperatingStatus> _OrganizationOperatingStatus;
		
		private EntityRef<OrganizationType2010> _OrganizationType2010;
		
		private EntityRef<RecruitmentCampaign> _RecruitmentCampaign;
		
		private EntityRef<Region> _Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnRegionIdChanging(int value);
    partial void OnRegionIdChanged();
    partial void OnTypeIdChanging(int value);
    partial void OnTypeIdChanged();
    partial void OnKindIdChanging(int value);
    partial void OnKindIdChanged();
    partial void OnINNChanging(string value);
    partial void OnINNChanged();
    partial void OnOGRNChanging(string value);
    partial void OnOGRNChanged();
    partial void OnOwnerDepartmentChanging(string value);
    partial void OnOwnerDepartmentChanged();
    partial void OnIsPrivateChanging(bool value);
    partial void OnIsPrivateChanged();
    partial void OnIsFilialChanging(bool value);
    partial void OnIsFilialChanged();
    partial void OnDirectorPositionChanging(string value);
    partial void OnDirectorPositionChanged();
    partial void OnDirectorFullNameChanging(string value);
    partial void OnDirectorFullNameChanged();
    partial void OnIsAccreditedChanging(System.Nullable<bool> value);
    partial void OnIsAccreditedChanged();
    partial void OnAccreditationSertificateChanging(string value);
    partial void OnAccreditationSertificateChanged();
    partial void OnLawAddressChanging(string value);
    partial void OnLawAddressChanged();
    partial void OnFactAddressChanging(string value);
    partial void OnFactAddressChanged();
    partial void OnPhoneCityCodeChanging(string value);
    partial void OnPhoneCityCodeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnSiteChanging(string value);
    partial void OnSiteChanged();
    partial void OnWasImportedAtStartChanging(bool value);
    partial void OnWasImportedAtStartChanged();
    partial void OnRCModelChanging(System.Nullable<int> value);
    partial void OnRCModelChanged();
    partial void OnRCDescriptionChanging(string value);
    partial void OnRCDescriptionChanged();
    partial void OnMainIdChanging(System.Nullable<int> value);
    partial void OnMainIdChanged();
    partial void OnDepartmentIdChanging(System.Nullable<int> value);
    partial void OnDepartmentIdChanged();
    partial void OnCNFBFullTimeChanging(int value);
    partial void OnCNFBFullTimeChanged();
    partial void OnCNFBEveningChanging(int value);
    partial void OnCNFBEveningChanged();
    partial void OnCNFBPostalChanging(int value);
    partial void OnCNFBPostalChanged();
    partial void OnCNPayFullTimeChanging(int value);
    partial void OnCNPayFullTimeChanged();
    partial void OnCNPayEveningChanging(int value);
    partial void OnCNPayEveningChanged();
    partial void OnCNPayPostalChanging(int value);
    partial void OnCNPayPostalChanged();
    partial void OnCNFederalBudgetChanging(System.Nullable<int> value);
    partial void OnCNFederalBudgetChanged();
    partial void OnCNTargetedChanging(System.Nullable<int> value);
    partial void OnCNTargetedChanged();
    partial void OnCNLocalBudgetChanging(System.Nullable<int> value);
    partial void OnCNLocalBudgetChanged();
    partial void OnCNPayingChanging(System.Nullable<int> value);
    partial void OnCNPayingChanged();
    partial void OnCNFullTimeChanging(System.Nullable<int> value);
    partial void OnCNFullTimeChanged();
    partial void OnCNEveningChanging(System.Nullable<int> value);
    partial void OnCNEveningChanged();
    partial void OnCNPostalChanging(System.Nullable<int> value);
    partial void OnCNPostalChanged();
    partial void OnStatusIdChanging(int value);
    partial void OnStatusIdChanged();
    partial void OnNewOrgIdChanging(System.Nullable<int> value);
    partial void OnNewOrgIdChanged();
    partial void OnVersionChanging(int value);
    partial void OnVersionChanged();
    partial void OnDisableLogChanging(bool value);
    partial void OnDisableLogChanged();
    #endregion
		
		public Organization2010()
		{
			this._Organization2010s = new EntitySet<Organization2010>(new Action<Organization2010>(this.attach_Organization2010s), new Action<Organization2010>(this.detach_Organization2010s));
			this._Organization2010s1 = new EntitySet<Organization2010>(new Action<Organization2010>(this.attach_Organization2010s1), new Action<Organization2010>(this.detach_Organization2010s1));
			this._Organization2010s2 = new EntitySet<Organization2010>(new Action<Organization2010>(this.attach_Organization2010s2), new Action<Organization2010>(this.detach_Organization2010s2));
			this._OrganizationRequest2010s = new EntitySet<OrganizationRequest2010>(new Action<OrganizationRequest2010>(this.attach_OrganizationRequest2010s), new Action<OrganizationRequest2010>(this.detach_OrganizationRequest2010s));
			this._OrganizationUpdateHistories = new EntitySet<OrganizationUpdateHistory>(new Action<OrganizationUpdateHistory>(this.attach_OrganizationUpdateHistories), new Action<OrganizationUpdateHistory>(this.detach_OrganizationUpdateHistories));
			this._OrganizationUpdateHistories1 = new EntitySet<OrganizationUpdateHistory>(new Action<OrganizationUpdateHistory>(this.attach_OrganizationUpdateHistories1), new Action<OrganizationUpdateHistory>(this.detach_OrganizationUpdateHistories1));
			this._OrganizationUpdateHistories2 = new EntitySet<OrganizationUpdateHistory>(new Action<OrganizationUpdateHistory>(this.attach_OrganizationUpdateHistories2), new Action<OrganizationUpdateHistory>(this.detach_OrganizationUpdateHistories2));
			this._Organization20101 = default(EntityRef<Organization2010>);
			this._Organization20102 = default(EntityRef<Organization2010>);
			this._Organization20103 = default(EntityRef<Organization2010>);
			this._OrganizationKind = default(EntityRef<OrganizationKind>);
			this._OrganizationOperatingStatus = default(EntityRef<OrganizationOperatingStatus>);
			this._OrganizationType2010 = default(EntityRef<OrganizationType2010>);
			this._RecruitmentCampaign = default(EntityRef<RecruitmentCampaign>);
			this._Region = default(EntityRef<Region>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(500)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int NOT NULL")]
		public int RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					if (this._Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int NOT NULL")]
		public int TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					if (this._OrganizationType2010.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KindId", DbType="Int NOT NULL")]
		public int KindId
		{
			get
			{
				return this._KindId;
			}
			set
			{
				if ((this._KindId != value))
				{
					if (this._OrganizationKind.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKindIdChanging(value);
					this.SendPropertyChanging();
					this._KindId = value;
					this.SendPropertyChanged("KindId");
					this.OnKindIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INN", DbType="NVarChar(10)")]
		public string INN
		{
			get
			{
				return this._INN;
			}
			set
			{
				if ((this._INN != value))
				{
					this.OnINNChanging(value);
					this.SendPropertyChanging();
					this._INN = value;
					this.SendPropertyChanged("INN");
					this.OnINNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OGRN", DbType="NVarChar(13)")]
		public string OGRN
		{
			get
			{
				return this._OGRN;
			}
			set
			{
				if ((this._OGRN != value))
				{
					this.OnOGRNChanging(value);
					this.SendPropertyChanging();
					this._OGRN = value;
					this.SendPropertyChanged("OGRN");
					this.OnOGRNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerDepartment", DbType="NVarChar(500)")]
		public string OwnerDepartment
		{
			get
			{
				return this._OwnerDepartment;
			}
			set
			{
				if ((this._OwnerDepartment != value))
				{
					this.OnOwnerDepartmentChanging(value);
					this.SendPropertyChanging();
					this._OwnerDepartment = value;
					this.SendPropertyChanged("OwnerDepartment");
					this.OnOwnerDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrivate", DbType="Bit NOT NULL")]
		public bool IsPrivate
		{
			get
			{
				return this._IsPrivate;
			}
			set
			{
				if ((this._IsPrivate != value))
				{
					this.OnIsPrivateChanging(value);
					this.SendPropertyChanging();
					this._IsPrivate = value;
					this.SendPropertyChanged("IsPrivate");
					this.OnIsPrivateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFilial", DbType="Bit NOT NULL")]
		public bool IsFilial
		{
			get
			{
				return this._IsFilial;
			}
			set
			{
				if ((this._IsFilial != value))
				{
					this.OnIsFilialChanging(value);
					this.SendPropertyChanging();
					this._IsFilial = value;
					this.SendPropertyChanged("IsFilial");
					this.OnIsFilialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectorPosition", DbType="NVarChar(255)")]
		public string DirectorPosition
		{
			get
			{
				return this._DirectorPosition;
			}
			set
			{
				if ((this._DirectorPosition != value))
				{
					this.OnDirectorPositionChanging(value);
					this.SendPropertyChanging();
					this._DirectorPosition = value;
					this.SendPropertyChanged("DirectorPosition");
					this.OnDirectorPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectorFullName", DbType="NVarChar(255)")]
		public string DirectorFullName
		{
			get
			{
				return this._DirectorFullName;
			}
			set
			{
				if ((this._DirectorFullName != value))
				{
					this.OnDirectorFullNameChanging(value);
					this.SendPropertyChanging();
					this._DirectorFullName = value;
					this.SendPropertyChanged("DirectorFullName");
					this.OnDirectorFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAccredited", DbType="Bit")]
		public System.Nullable<bool> IsAccredited
		{
			get
			{
				return this._IsAccredited;
			}
			set
			{
				if ((this._IsAccredited != value))
				{
					this.OnIsAccreditedChanging(value);
					this.SendPropertyChanging();
					this._IsAccredited = value;
					this.SendPropertyChanged("IsAccredited");
					this.OnIsAccreditedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccreditationSertificate", DbType="NVarChar(255)")]
		public string AccreditationSertificate
		{
			get
			{
				return this._AccreditationSertificate;
			}
			set
			{
				if ((this._AccreditationSertificate != value))
				{
					this.OnAccreditationSertificateChanging(value);
					this.SendPropertyChanging();
					this._AccreditationSertificate = value;
					this.SendPropertyChanged("AccreditationSertificate");
					this.OnAccreditationSertificateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawAddress", DbType="NVarChar(255)")]
		public string LawAddress
		{
			get
			{
				return this._LawAddress;
			}
			set
			{
				if ((this._LawAddress != value))
				{
					this.OnLawAddressChanging(value);
					this.SendPropertyChanging();
					this._LawAddress = value;
					this.SendPropertyChanged("LawAddress");
					this.OnLawAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string FactAddress
		{
			get
			{
				return this._FactAddress;
			}
			set
			{
				if ((this._FactAddress != value))
				{
					this.OnFactAddressChanging(value);
					this.SendPropertyChanging();
					this._FactAddress = value;
					this.SendPropertyChanged("FactAddress");
					this.OnFactAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneCityCode", DbType="NVarChar(10)")]
		public string PhoneCityCode
		{
			get
			{
				return this._PhoneCityCode;
			}
			set
			{
				if ((this._PhoneCityCode != value))
				{
					this.OnPhoneCityCodeChanging(value);
					this.SendPropertyChanging();
					this._PhoneCityCode = value;
					this.SendPropertyChanged("PhoneCityCode");
					this.OnPhoneCityCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(100)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(100)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(100)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="NVarChar(40)")]
		public string Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WasImportedAtStart", DbType="Bit NOT NULL")]
		public bool WasImportedAtStart
		{
			get
			{
				return this._WasImportedAtStart;
			}
			set
			{
				if ((this._WasImportedAtStart != value))
				{
					this.OnWasImportedAtStartChanging(value);
					this.SendPropertyChanging();
					this._WasImportedAtStart = value;
					this.SendPropertyChanged("WasImportedAtStart");
					this.OnWasImportedAtStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCModel", DbType="Int")]
		public System.Nullable<int> RCModel
		{
			get
			{
				return this._RCModel;
			}
			set
			{
				if ((this._RCModel != value))
				{
					if (this._RecruitmentCampaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRCModelChanging(value);
					this.SendPropertyChanging();
					this._RCModel = value;
					this.SendPropertyChanged("RCModel");
					this.OnRCModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCDescription", DbType="NVarChar(400)")]
		public string RCDescription
		{
			get
			{
				return this._RCDescription;
			}
			set
			{
				if ((this._RCDescription != value))
				{
					this.OnRCDescriptionChanging(value);
					this.SendPropertyChanging();
					this._RCDescription = value;
					this.SendPropertyChanged("RCDescription");
					this.OnRCDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainId", DbType="Int")]
		public System.Nullable<int> MainId
		{
			get
			{
				return this._MainId;
			}
			set
			{
				if ((this._MainId != value))
				{
					if (this._Organization20103.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMainIdChanging(value);
					this.SendPropertyChanging();
					this._MainId = value;
					this.SendPropertyChanged("MainId");
					this.OnMainIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int")]
		public System.Nullable<int> DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._Organization20102.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNFBFullTime", DbType="Int NOT NULL")]
		public int CNFBFullTime
		{
			get
			{
				return this._CNFBFullTime;
			}
			set
			{
				if ((this._CNFBFullTime != value))
				{
					this.OnCNFBFullTimeChanging(value);
					this.SendPropertyChanging();
					this._CNFBFullTime = value;
					this.SendPropertyChanged("CNFBFullTime");
					this.OnCNFBFullTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNFBEvening", DbType="Int NOT NULL")]
		public int CNFBEvening
		{
			get
			{
				return this._CNFBEvening;
			}
			set
			{
				if ((this._CNFBEvening != value))
				{
					this.OnCNFBEveningChanging(value);
					this.SendPropertyChanging();
					this._CNFBEvening = value;
					this.SendPropertyChanged("CNFBEvening");
					this.OnCNFBEveningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNFBPostal", DbType="Int NOT NULL")]
		public int CNFBPostal
		{
			get
			{
				return this._CNFBPostal;
			}
			set
			{
				if ((this._CNFBPostal != value))
				{
					this.OnCNFBPostalChanging(value);
					this.SendPropertyChanging();
					this._CNFBPostal = value;
					this.SendPropertyChanged("CNFBPostal");
					this.OnCNFBPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNPayFullTime", DbType="Int NOT NULL")]
		public int CNPayFullTime
		{
			get
			{
				return this._CNPayFullTime;
			}
			set
			{
				if ((this._CNPayFullTime != value))
				{
					this.OnCNPayFullTimeChanging(value);
					this.SendPropertyChanging();
					this._CNPayFullTime = value;
					this.SendPropertyChanged("CNPayFullTime");
					this.OnCNPayFullTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNPayEvening", DbType="Int NOT NULL")]
		public int CNPayEvening
		{
			get
			{
				return this._CNPayEvening;
			}
			set
			{
				if ((this._CNPayEvening != value))
				{
					this.OnCNPayEveningChanging(value);
					this.SendPropertyChanging();
					this._CNPayEvening = value;
					this.SendPropertyChanged("CNPayEvening");
					this.OnCNPayEveningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNPayPostal", DbType="Int NOT NULL")]
		public int CNPayPostal
		{
			get
			{
				return this._CNPayPostal;
			}
			set
			{
				if ((this._CNPayPostal != value))
				{
					this.OnCNPayPostalChanging(value);
					this.SendPropertyChanging();
					this._CNPayPostal = value;
					this.SendPropertyChanged("CNPayPostal");
					this.OnCNPayPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNFederalBudget", DbType="Int")]
		public System.Nullable<int> CNFederalBudget
		{
			get
			{
				return this._CNFederalBudget;
			}
			set
			{
				if ((this._CNFederalBudget != value))
				{
					this.OnCNFederalBudgetChanging(value);
					this.SendPropertyChanging();
					this._CNFederalBudget = value;
					this.SendPropertyChanged("CNFederalBudget");
					this.OnCNFederalBudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNTargeted", DbType="Int")]
		public System.Nullable<int> CNTargeted
		{
			get
			{
				return this._CNTargeted;
			}
			set
			{
				if ((this._CNTargeted != value))
				{
					this.OnCNTargetedChanging(value);
					this.SendPropertyChanging();
					this._CNTargeted = value;
					this.SendPropertyChanged("CNTargeted");
					this.OnCNTargetedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNLocalBudget", DbType="Int")]
		public System.Nullable<int> CNLocalBudget
		{
			get
			{
				return this._CNLocalBudget;
			}
			set
			{
				if ((this._CNLocalBudget != value))
				{
					this.OnCNLocalBudgetChanging(value);
					this.SendPropertyChanging();
					this._CNLocalBudget = value;
					this.SendPropertyChanged("CNLocalBudget");
					this.OnCNLocalBudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNPaying", DbType="Int")]
		public System.Nullable<int> CNPaying
		{
			get
			{
				return this._CNPaying;
			}
			set
			{
				if ((this._CNPaying != value))
				{
					this.OnCNPayingChanging(value);
					this.SendPropertyChanging();
					this._CNPaying = value;
					this.SendPropertyChanged("CNPaying");
					this.OnCNPayingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNFullTime", DbType="Int")]
		public System.Nullable<int> CNFullTime
		{
			get
			{
				return this._CNFullTime;
			}
			set
			{
				if ((this._CNFullTime != value))
				{
					this.OnCNFullTimeChanging(value);
					this.SendPropertyChanging();
					this._CNFullTime = value;
					this.SendPropertyChanged("CNFullTime");
					this.OnCNFullTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNEvening", DbType="Int")]
		public System.Nullable<int> CNEvening
		{
			get
			{
				return this._CNEvening;
			}
			set
			{
				if ((this._CNEvening != value))
				{
					this.OnCNEveningChanging(value);
					this.SendPropertyChanging();
					this._CNEvening = value;
					this.SendPropertyChanged("CNEvening");
					this.OnCNEveningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNPostal", DbType="Int")]
		public System.Nullable<int> CNPostal
		{
			get
			{
				return this._CNPostal;
			}
			set
			{
				if ((this._CNPostal != value))
				{
					this.OnCNPostalChanging(value);
					this.SendPropertyChanging();
					this._CNPostal = value;
					this.SendPropertyChanged("CNPostal");
					this.OnCNPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int NOT NULL")]
		public int StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					if (this._OrganizationOperatingStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewOrgId", DbType="Int")]
		public System.Nullable<int> NewOrgId
		{
			get
			{
				return this._NewOrgId;
			}
			set
			{
				if ((this._NewOrgId != value))
				{
					if (this._Organization20101.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewOrgIdChanging(value);
					this.SendPropertyChanging();
					this._NewOrgId = value;
					this.SendPropertyChanged("NewOrgId");
					this.OnNewOrgIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int NOT NULL")]
		public int Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisableLog", DbType="Bit NOT NULL")]
		public bool DisableLog
		{
			get
			{
				return this._DisableLog;
			}
			set
			{
				if ((this._DisableLog != value))
				{
					this.OnDisableLogChanging(value);
					this.SendPropertyChanging();
					this._DisableLog = value;
					this.SendPropertyChanged("DisableLog");
					this.OnDisableLogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization2010_Organization2010", Storage="_Organization2010s", ThisKey="Id", OtherKey="NewOrgId")]
		public EntitySet<Organization2010> Organization2010s
		{
			get
			{
				return this._Organization2010s;
			}
			set
			{
				this._Organization2010s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization2010_Organization20101", Storage="_Organization2010s1", ThisKey="Id", OtherKey="DepartmentId")]
		public EntitySet<Organization2010> Organization2010s1
		{
			get
			{
				return this._Organization2010s1;
			}
			set
			{
				this._Organization2010s1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization2010_Organization20102", Storage="_Organization2010s2", ThisKey="Id", OtherKey="MainId")]
		public EntitySet<Organization2010> Organization2010s2
		{
			get
			{
				return this._Organization2010s2;
			}
			set
			{
				this._Organization2010s2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization2010_OrganizationRequest2010", Storage="_OrganizationRequest2010s", ThisKey="Id", OtherKey="OrganizationId")]
		public EntitySet<OrganizationRequest2010> OrganizationRequest2010s
		{
			get
			{
				return this._OrganizationRequest2010s;
			}
			set
			{
				this._OrganizationRequest2010s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization2010_OrganizationUpdateHistory", Storage="_OrganizationUpdateHistories", ThisKey="Id", OtherKey="MainId")]
		public EntitySet<OrganizationUpdateHistory> OrganizationUpdateHistories
		{
			get
			{
				return this._OrganizationUpdateHistories;
			}
			set
			{
				this._OrganizationUpdateHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization2010_OrganizationUpdateHistory1", Storage="_OrganizationUpdateHistories1", ThisKey="Id", OtherKey="NewOrgId")]
		public EntitySet<OrganizationUpdateHistory> OrganizationUpdateHistories1
		{
			get
			{
				return this._OrganizationUpdateHistories1;
			}
			set
			{
				this._OrganizationUpdateHistories1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization2010_OrganizationUpdateHistory2", Storage="_OrganizationUpdateHistories2", ThisKey="Id", OtherKey="DepartmentId")]
		public EntitySet<OrganizationUpdateHistory> OrganizationUpdateHistories2
		{
			get
			{
				return this._OrganizationUpdateHistories2;
			}
			set
			{
				this._OrganizationUpdateHistories2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization2010_Organization2010", Storage="_Organization20101", ThisKey="NewOrgId", OtherKey="Id", IsForeignKey=true)]
		public Organization2010 Organization20101
		{
			get
			{
				return this._Organization20101.Entity;
			}
			set
			{
				Organization2010 previousValue = this._Organization20101.Entity;
				if (((previousValue != value) 
							|| (this._Organization20101.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization20101.Entity = null;
						previousValue.Organization2010s.Remove(this);
					}
					this._Organization20101.Entity = value;
					if ((value != null))
					{
						value.Organization2010s.Add(this);
						this._NewOrgId = value.Id;
					}
					else
					{
						this._NewOrgId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organization20101");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization2010_Organization20101", Storage="_Organization20102", ThisKey="DepartmentId", OtherKey="Id", IsForeignKey=true)]
		public Organization2010 Organization20102
		{
			get
			{
				return this._Organization20102.Entity;
			}
			set
			{
				Organization2010 previousValue = this._Organization20102.Entity;
				if (((previousValue != value) 
							|| (this._Organization20102.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization20102.Entity = null;
						previousValue.Organization2010s1.Remove(this);
					}
					this._Organization20102.Entity = value;
					if ((value != null))
					{
						value.Organization2010s1.Add(this);
						this._DepartmentId = value.Id;
					}
					else
					{
						this._DepartmentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organization20102");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization2010_Organization20102", Storage="_Organization20103", ThisKey="MainId", OtherKey="Id", IsForeignKey=true)]
		public Organization2010 Organization20103
		{
			get
			{
				return this._Organization20103.Entity;
			}
			set
			{
				Organization2010 previousValue = this._Organization20103.Entity;
				if (((previousValue != value) 
							|| (this._Organization20103.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization20103.Entity = null;
						previousValue.Organization2010s2.Remove(this);
					}
					this._Organization20103.Entity = value;
					if ((value != null))
					{
						value.Organization2010s2.Add(this);
						this._MainId = value.Id;
					}
					else
					{
						this._MainId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organization20103");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationKind_Organization2010", Storage="_OrganizationKind", ThisKey="KindId", OtherKey="Id", IsForeignKey=true)]
		public OrganizationKind OrganizationKind
		{
			get
			{
				return this._OrganizationKind.Entity;
			}
			set
			{
				OrganizationKind previousValue = this._OrganizationKind.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationKind.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationKind.Entity = null;
						previousValue.Organization2010s.Remove(this);
					}
					this._OrganizationKind.Entity = value;
					if ((value != null))
					{
						value.Organization2010s.Add(this);
						this._KindId = value.Id;
					}
					else
					{
						this._KindId = default(int);
					}
					this.SendPropertyChanged("OrganizationKind");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationOperatingStatus_Organization2010", Storage="_OrganizationOperatingStatus", ThisKey="StatusId", OtherKey="Id", IsForeignKey=true)]
		public OrganizationOperatingStatus OrganizationOperatingStatus
		{
			get
			{
				return this._OrganizationOperatingStatus.Entity;
			}
			set
			{
				OrganizationOperatingStatus previousValue = this._OrganizationOperatingStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationOperatingStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationOperatingStatus.Entity = null;
						previousValue.Organization2010s.Remove(this);
					}
					this._OrganizationOperatingStatus.Entity = value;
					if ((value != null))
					{
						value.Organization2010s.Add(this);
						this._StatusId = value.Id;
					}
					else
					{
						this._StatusId = default(int);
					}
					this.SendPropertyChanged("OrganizationOperatingStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationType2010_Organization2010", Storage="_OrganizationType2010", ThisKey="TypeId", OtherKey="Id", IsForeignKey=true)]
		public OrganizationType2010 OrganizationType2010
		{
			get
			{
				return this._OrganizationType2010.Entity;
			}
			set
			{
				OrganizationType2010 previousValue = this._OrganizationType2010.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationType2010.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationType2010.Entity = null;
						previousValue.Organization2010s.Remove(this);
					}
					this._OrganizationType2010.Entity = value;
					if ((value != null))
					{
						value.Organization2010s.Add(this);
						this._TypeId = value.Id;
					}
					else
					{
						this._TypeId = default(int);
					}
					this.SendPropertyChanged("OrganizationType2010");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecruitmentCampaign_Organization2010", Storage="_RecruitmentCampaign", ThisKey="RCModel", OtherKey="Id", IsForeignKey=true)]
		public RecruitmentCampaign RecruitmentCampaign
		{
			get
			{
				return this._RecruitmentCampaign.Entity;
			}
			set
			{
				RecruitmentCampaign previousValue = this._RecruitmentCampaign.Entity;
				if (((previousValue != value) 
							|| (this._RecruitmentCampaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RecruitmentCampaign.Entity = null;
						previousValue.Organization2010s.Remove(this);
					}
					this._RecruitmentCampaign.Entity = value;
					if ((value != null))
					{
						value.Organization2010s.Add(this);
						this._RCModel = value.Id;
					}
					else
					{
						this._RCModel = default(Nullable<int>);
					}
					this.SendPropertyChanged("RecruitmentCampaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Organization2010", Storage="_Region", ThisKey="RegionId", OtherKey="Id", IsForeignKey=true)]
		public Region Region
		{
			get
			{
				return this._Region.Entity;
			}
			set
			{
				Region previousValue = this._Region.Entity;
				if (((previousValue != value) 
							|| (this._Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Region.Entity = null;
						previousValue.Organization2010s.Remove(this);
					}
					this._Region.Entity = value;
					if ((value != null))
					{
						value.Organization2010s.Add(this);
						this._RegionId = value.Id;
					}
					else
					{
						this._RegionId = default(int);
					}
					this.SendPropertyChanged("Region");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Organization2010s(Organization2010 entity)
		{
			this.SendPropertyChanging();
			entity.Organization20101 = this;
		}
		
		private void detach_Organization2010s(Organization2010 entity)
		{
			this.SendPropertyChanging();
			entity.Organization20101 = null;
		}
		
		private void attach_Organization2010s1(Organization2010 entity)
		{
			this.SendPropertyChanging();
			entity.Organization20102 = this;
		}
		
		private void detach_Organization2010s1(Organization2010 entity)
		{
			this.SendPropertyChanging();
			entity.Organization20102 = null;
		}
		
		private void attach_Organization2010s2(Organization2010 entity)
		{
			this.SendPropertyChanging();
			entity.Organization20103 = this;
		}
		
		private void detach_Organization2010s2(Organization2010 entity)
		{
			this.SendPropertyChanging();
			entity.Organization20103 = null;
		}
		
		private void attach_OrganizationRequest2010s(OrganizationRequest2010 entity)
		{
			this.SendPropertyChanging();
			entity.Organization2010 = this;
		}
		
		private void detach_OrganizationRequest2010s(OrganizationRequest2010 entity)
		{
			this.SendPropertyChanging();
			entity.Organization2010 = null;
		}
		
		private void attach_OrganizationUpdateHistories(OrganizationUpdateHistory entity)
		{
			this.SendPropertyChanging();
			entity.Organization2010 = this;
		}
		
		private void detach_OrganizationUpdateHistories(OrganizationUpdateHistory entity)
		{
			this.SendPropertyChanging();
			entity.Organization2010 = null;
		}
		
		private void attach_OrganizationUpdateHistories1(OrganizationUpdateHistory entity)
		{
			this.SendPropertyChanging();
			entity.Organization20101 = this;
		}
		
		private void detach_OrganizationUpdateHistories1(OrganizationUpdateHistory entity)
		{
			this.SendPropertyChanging();
			entity.Organization20101 = null;
		}
		
		private void attach_OrganizationUpdateHistories2(OrganizationUpdateHistory entity)
		{
			this.SendPropertyChanging();
			entity.Organization20102 = this;
		}
		
		private void detach_OrganizationUpdateHistories2(OrganizationUpdateHistory entity)
		{
			this.SendPropertyChanging();
			entity.Organization20102 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganizationCertificateChecks")]
	public partial class OrganizationCertificateCheck : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<long> _CertificateId;
		
		private int _OrganizationId;
		
		private System.Nullable<System.Guid> _CertificateIdGuid;
		
		private long _id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCertificateIdChanging(System.Nullable<long> value);
    partial void OnCertificateIdChanged();
    partial void OnOrganizationIdChanging(int value);
    partial void OnOrganizationIdChanged();
    partial void OnCertificateIdGuidChanging(System.Nullable<System.Guid> value);
    partial void OnCertificateIdGuidChanged();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    #endregion
		
		public OrganizationCertificateCheck()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateId", DbType="BigInt")]
		public System.Nullable<long> CertificateId
		{
			get
			{
				return this._CertificateId;
			}
			set
			{
				if ((this._CertificateId != value))
				{
					this.OnCertificateIdChanging(value);
					this.SendPropertyChanging();
					this._CertificateId = value;
					this.SendPropertyChanged("CertificateId");
					this.OnCertificateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="Int NOT NULL")]
		public int OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateIdGuid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CertificateIdGuid
		{
			get
			{
				return this._CertificateIdGuid;
			}
			set
			{
				if ((this._CertificateIdGuid != value))
				{
					this.OnCertificateIdGuidChanging(value);
					this.SendPropertyChanging();
					this._CertificateIdGuid = value;
					this.SendPropertyChanged("CertificateIdGuid");
					this.OnCertificateIdGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganizationKind")]
	public partial class OrganizationKind : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _SortOrder;
		
		private EntitySet<Organization2010> _Organization2010s;
		
		private EntitySet<OrganizationRequest2010> _OrganizationRequest2010s;
		
		private EntitySet<OrganizationUpdateHistory> _OrganizationUpdateHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    #endregion
		
		public OrganizationKind()
		{
			this._Organization2010s = new EntitySet<Organization2010>(new Action<Organization2010>(this.attach_Organization2010s), new Action<Organization2010>(this.detach_Organization2010s));
			this._OrganizationRequest2010s = new EntitySet<OrganizationRequest2010>(new Action<OrganizationRequest2010>(this.attach_OrganizationRequest2010s), new Action<OrganizationRequest2010>(this.detach_OrganizationRequest2010s));
			this._OrganizationUpdateHistories = new EntitySet<OrganizationUpdateHistory>(new Action<OrganizationUpdateHistory>(this.attach_OrganizationUpdateHistories), new Action<OrganizationUpdateHistory>(this.detach_OrganizationUpdateHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationKind_Organization2010", Storage="_Organization2010s", ThisKey="Id", OtherKey="KindId")]
		public EntitySet<Organization2010> Organization2010s
		{
			get
			{
				return this._Organization2010s;
			}
			set
			{
				this._Organization2010s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationKind_OrganizationRequest2010", Storage="_OrganizationRequest2010s", ThisKey="Id", OtherKey="KindId")]
		public EntitySet<OrganizationRequest2010> OrganizationRequest2010s
		{
			get
			{
				return this._OrganizationRequest2010s;
			}
			set
			{
				this._OrganizationRequest2010s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationKind_OrganizationUpdateHistory", Storage="_OrganizationUpdateHistories", ThisKey="Id", OtherKey="KindId")]
		public EntitySet<OrganizationUpdateHistory> OrganizationUpdateHistories
		{
			get
			{
				return this._OrganizationUpdateHistories;
			}
			set
			{
				this._OrganizationUpdateHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Organization2010s(Organization2010 entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationKind = this;
		}
		
		private void detach_Organization2010s(Organization2010 entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationKind = null;
		}
		
		private void attach_OrganizationRequest2010s(OrganizationRequest2010 entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationKind = this;
		}
		
		private void detach_OrganizationRequest2010s(OrganizationRequest2010 entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationKind = null;
		}
		
		private void attach_OrganizationUpdateHistories(OrganizationUpdateHistory entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationKind = this;
		}
		
		private void detach_OrganizationUpdateHistories(OrganizationUpdateHistory entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationKind = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganizationLog")]
	public partial class OrganizationLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OrganizationId;
		
		private int _VersionId;
		
		private System.DateTime _UpdateDate;
		
		private System.Guid _UpdateId;
		
		private System.Nullable<long> _EditorAccountId;
		
		private string _EditorIp;
		
		private long _RegionId;
		
		private string _DepartmentOwnershipCode;
		
		private string _Name;
		
		private string _FounderName;
		
		private string _Address;
		
		private string _ChiefName;
		
		private string _Fax;
		
		private string _Phone;
		
		private System.Nullable<int> _EducationInstitutionTypeId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrganizationIdChanging(long value);
    partial void OnOrganizationIdChanged();
    partial void OnVersionIdChanging(int value);
    partial void OnVersionIdChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateIdChanging(System.Guid value);
    partial void OnUpdateIdChanged();
    partial void OnEditorAccountIdChanging(System.Nullable<long> value);
    partial void OnEditorAccountIdChanged();
    partial void OnEditorIpChanging(string value);
    partial void OnEditorIpChanged();
    partial void OnRegionIdChanging(long value);
    partial void OnRegionIdChanged();
    partial void OnDepartmentOwnershipCodeChanging(string value);
    partial void OnDepartmentOwnershipCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnFounderNameChanging(string value);
    partial void OnFounderNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnChiefNameChanging(string value);
    partial void OnChiefNameChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEducationInstitutionTypeIdChanging(System.Nullable<int> value);
    partial void OnEducationInstitutionTypeIdChanged();
    #endregion
		
		public OrganizationLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int VersionId
		{
			get
			{
				return this._VersionId;
			}
			set
			{
				if ((this._VersionId != value))
				{
					this.OnVersionIdChanging(value);
					this.SendPropertyChanging();
					this._VersionId = value;
					this.SendPropertyChanged("VersionId");
					this.OnVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorAccountId", DbType="BigInt")]
		public System.Nullable<long> EditorAccountId
		{
			get
			{
				return this._EditorAccountId;
			}
			set
			{
				if ((this._EditorAccountId != value))
				{
					this.OnEditorAccountIdChanging(value);
					this.SendPropertyChanging();
					this._EditorAccountId = value;
					this.SendPropertyChanged("EditorAccountId");
					this.OnEditorAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorIp", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EditorIp
		{
			get
			{
				return this._EditorIp;
			}
			set
			{
				if ((this._EditorIp != value))
				{
					this.OnEditorIpChanging(value);
					this.SendPropertyChanging();
					this._EditorIp = value;
					this.SendPropertyChanged("EditorIp");
					this.OnEditorIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="BigInt NOT NULL")]
		public long RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentOwnershipCode", DbType="NVarChar(255)")]
		public string DepartmentOwnershipCode
		{
			get
			{
				return this._DepartmentOwnershipCode;
			}
			set
			{
				if ((this._DepartmentOwnershipCode != value))
				{
					this.OnDepartmentOwnershipCodeChanging(value);
					this.SendPropertyChanging();
					this._DepartmentOwnershipCode = value;
					this.SendPropertyChanged("DepartmentOwnershipCode");
					this.OnDepartmentOwnershipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FounderName", DbType="NVarChar(2000) NOT NULL", CanBeNull=false)]
		public string FounderName
		{
			get
			{
				return this._FounderName;
			}
			set
			{
				if ((this._FounderName != value))
				{
					this.OnFounderNameChanging(value);
					this.SendPropertyChanging();
					this._FounderName = value;
					this.SendPropertyChanged("FounderName");
					this.OnFounderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiefName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ChiefName
		{
			get
			{
				return this._ChiefName;
			}
			set
			{
				if ((this._ChiefName != value))
				{
					this.OnChiefNameChanging(value);
					this.SendPropertyChanging();
					this._ChiefName = value;
					this.SendPropertyChanged("ChiefName");
					this.OnChiefNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(255)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(255)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationInstitutionTypeId", DbType="Int")]
		public System.Nullable<int> EducationInstitutionTypeId
		{
			get
			{
				return this._EducationInstitutionTypeId;
			}
			set
			{
				if ((this._EducationInstitutionTypeId != value))
				{
					this.OnEducationInstitutionTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EducationInstitutionTypeId = value;
					this.SendPropertyChanged("EducationInstitutionTypeId");
					this.OnEducationInstitutionTypeIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganizationOperatingStatus")]
	public partial class OrganizationOperatingStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private EntitySet<Organization2010> _Organization2010s;
		
		private EntitySet<OrganizationUpdateHistory> _OrganizationUpdateHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public OrganizationOperatingStatus()
		{
			this._Organization2010s = new EntitySet<Organization2010>(new Action<Organization2010>(this.attach_Organization2010s), new Action<Organization2010>(this.detach_Organization2010s));
			this._OrganizationUpdateHistories = new EntitySet<OrganizationUpdateHistory>(new Action<OrganizationUpdateHistory>(this.attach_OrganizationUpdateHistories), new Action<OrganizationUpdateHistory>(this.detach_OrganizationUpdateHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationOperatingStatus_Organization2010", Storage="_Organization2010s", ThisKey="Id", OtherKey="StatusId")]
		public EntitySet<Organization2010> Organization2010s
		{
			get
			{
				return this._Organization2010s;
			}
			set
			{
				this._Organization2010s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationOperatingStatus_OrganizationUpdateHistory", Storage="_OrganizationUpdateHistories", ThisKey="Id", OtherKey="StatusId")]
		public EntitySet<OrganizationUpdateHistory> OrganizationUpdateHistories
		{
			get
			{
				return this._OrganizationUpdateHistories;
			}
			set
			{
				this._OrganizationUpdateHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Organization2010s(Organization2010 entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationOperatingStatus = this;
		}
		
		private void detach_Organization2010s(Organization2010 entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationOperatingStatus = null;
		}
		
		private void attach_OrganizationUpdateHistories(OrganizationUpdateHistory entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationOperatingStatus = this;
		}
		
		private void detach_OrganizationUpdateHistories(OrganizationUpdateHistory entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationOperatingStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganizationRequest2010")]
	public partial class OrganizationRequest2010 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private string _FullName;
		
		private string _ShortName;
		
		private int _RegionId;
		
		private int _TypeId;
		
		private System.Nullable<int> _KindId;
		
		private string _INN;
		
		private string _OGRN;
		
		private string _OwnerDepartment;
		
		private System.Nullable<bool> _IsPrivate;
		
		private System.Nullable<bool> _IsFilial;
		
		private string _DirectorPosition;
		
		private string _DirectorFullName;
		
		private System.Nullable<bool> _IsAccredited;
		
		private string _AccreditationSertificate;
		
		private string _LawAddress;
		
		private string _FactAddress;
		
		private string _PhoneCityCode;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _EMail;
		
		private string _Site;
		
		private System.Nullable<int> _OrganizationId;
		
		private EntityRef<OrganizationKind> _OrganizationKind;
		
		private EntityRef<Organization2010> _Organization2010;
		
		private EntityRef<OrganizationType2010> _OrganizationType2010;
		
		private EntityRef<Region> _Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnRegionIdChanging(int value);
    partial void OnRegionIdChanged();
    partial void OnTypeIdChanging(int value);
    partial void OnTypeIdChanged();
    partial void OnKindIdChanging(System.Nullable<int> value);
    partial void OnKindIdChanged();
    partial void OnINNChanging(string value);
    partial void OnINNChanged();
    partial void OnOGRNChanging(string value);
    partial void OnOGRNChanged();
    partial void OnOwnerDepartmentChanging(string value);
    partial void OnOwnerDepartmentChanged();
    partial void OnIsPrivateChanging(System.Nullable<bool> value);
    partial void OnIsPrivateChanged();
    partial void OnIsFilialChanging(System.Nullable<bool> value);
    partial void OnIsFilialChanged();
    partial void OnDirectorPositionChanging(string value);
    partial void OnDirectorPositionChanged();
    partial void OnDirectorFullNameChanging(string value);
    partial void OnDirectorFullNameChanged();
    partial void OnIsAccreditedChanging(System.Nullable<bool> value);
    partial void OnIsAccreditedChanged();
    partial void OnAccreditationSertificateChanging(string value);
    partial void OnAccreditationSertificateChanged();
    partial void OnLawAddressChanging(string value);
    partial void OnLawAddressChanged();
    partial void OnFactAddressChanging(string value);
    partial void OnFactAddressChanged();
    partial void OnPhoneCityCodeChanging(string value);
    partial void OnPhoneCityCodeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnSiteChanging(string value);
    partial void OnSiteChanged();
    partial void OnOrganizationIdChanging(System.Nullable<int> value);
    partial void OnOrganizationIdChanged();
    #endregion
		
		public OrganizationRequest2010()
		{
			this._OrganizationKind = default(EntityRef<OrganizationKind>);
			this._Organization2010 = default(EntityRef<Organization2010>);
			this._OrganizationType2010 = default(EntityRef<OrganizationType2010>);
			this._Region = default(EntityRef<Region>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(500)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int NOT NULL")]
		public int RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					if (this._Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int NOT NULL")]
		public int TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					if (this._OrganizationType2010.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KindId", DbType="Int")]
		public System.Nullable<int> KindId
		{
			get
			{
				return this._KindId;
			}
			set
			{
				if ((this._KindId != value))
				{
					if (this._OrganizationKind.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKindIdChanging(value);
					this.SendPropertyChanging();
					this._KindId = value;
					this.SendPropertyChanged("KindId");
					this.OnKindIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INN", DbType="NVarChar(10)")]
		public string INN
		{
			get
			{
				return this._INN;
			}
			set
			{
				if ((this._INN != value))
				{
					this.OnINNChanging(value);
					this.SendPropertyChanging();
					this._INN = value;
					this.SendPropertyChanged("INN");
					this.OnINNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OGRN", DbType="NVarChar(13)")]
		public string OGRN
		{
			get
			{
				return this._OGRN;
			}
			set
			{
				if ((this._OGRN != value))
				{
					this.OnOGRNChanging(value);
					this.SendPropertyChanging();
					this._OGRN = value;
					this.SendPropertyChanged("OGRN");
					this.OnOGRNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerDepartment", DbType="NVarChar(500)")]
		public string OwnerDepartment
		{
			get
			{
				return this._OwnerDepartment;
			}
			set
			{
				if ((this._OwnerDepartment != value))
				{
					this.OnOwnerDepartmentChanging(value);
					this.SendPropertyChanging();
					this._OwnerDepartment = value;
					this.SendPropertyChanged("OwnerDepartment");
					this.OnOwnerDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrivate", DbType="Bit")]
		public System.Nullable<bool> IsPrivate
		{
			get
			{
				return this._IsPrivate;
			}
			set
			{
				if ((this._IsPrivate != value))
				{
					this.OnIsPrivateChanging(value);
					this.SendPropertyChanging();
					this._IsPrivate = value;
					this.SendPropertyChanged("IsPrivate");
					this.OnIsPrivateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFilial", DbType="Bit")]
		public System.Nullable<bool> IsFilial
		{
			get
			{
				return this._IsFilial;
			}
			set
			{
				if ((this._IsFilial != value))
				{
					this.OnIsFilialChanging(value);
					this.SendPropertyChanging();
					this._IsFilial = value;
					this.SendPropertyChanged("IsFilial");
					this.OnIsFilialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectorPosition", DbType="NVarChar(255)")]
		public string DirectorPosition
		{
			get
			{
				return this._DirectorPosition;
			}
			set
			{
				if ((this._DirectorPosition != value))
				{
					this.OnDirectorPositionChanging(value);
					this.SendPropertyChanging();
					this._DirectorPosition = value;
					this.SendPropertyChanged("DirectorPosition");
					this.OnDirectorPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectorFullName", DbType="NVarChar(255)")]
		public string DirectorFullName
		{
			get
			{
				return this._DirectorFullName;
			}
			set
			{
				if ((this._DirectorFullName != value))
				{
					this.OnDirectorFullNameChanging(value);
					this.SendPropertyChanging();
					this._DirectorFullName = value;
					this.SendPropertyChanged("DirectorFullName");
					this.OnDirectorFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAccredited", DbType="Bit")]
		public System.Nullable<bool> IsAccredited
		{
			get
			{
				return this._IsAccredited;
			}
			set
			{
				if ((this._IsAccredited != value))
				{
					this.OnIsAccreditedChanging(value);
					this.SendPropertyChanging();
					this._IsAccredited = value;
					this.SendPropertyChanged("IsAccredited");
					this.OnIsAccreditedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccreditationSertificate", DbType="NVarChar(255)")]
		public string AccreditationSertificate
		{
			get
			{
				return this._AccreditationSertificate;
			}
			set
			{
				if ((this._AccreditationSertificate != value))
				{
					this.OnAccreditationSertificateChanging(value);
					this.SendPropertyChanging();
					this._AccreditationSertificate = value;
					this.SendPropertyChanged("AccreditationSertificate");
					this.OnAccreditationSertificateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawAddress", DbType="NVarChar(255)")]
		public string LawAddress
		{
			get
			{
				return this._LawAddress;
			}
			set
			{
				if ((this._LawAddress != value))
				{
					this.OnLawAddressChanging(value);
					this.SendPropertyChanging();
					this._LawAddress = value;
					this.SendPropertyChanged("LawAddress");
					this.OnLawAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactAddress", DbType="NVarChar(255)")]
		public string FactAddress
		{
			get
			{
				return this._FactAddress;
			}
			set
			{
				if ((this._FactAddress != value))
				{
					this.OnFactAddressChanging(value);
					this.SendPropertyChanging();
					this._FactAddress = value;
					this.SendPropertyChanged("FactAddress");
					this.OnFactAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneCityCode", DbType="NVarChar(10)")]
		public string PhoneCityCode
		{
			get
			{
				return this._PhoneCityCode;
			}
			set
			{
				if ((this._PhoneCityCode != value))
				{
					this.OnPhoneCityCodeChanging(value);
					this.SendPropertyChanging();
					this._PhoneCityCode = value;
					this.SendPropertyChanged("PhoneCityCode");
					this.OnPhoneCityCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(100)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(100)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(100)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="NVarChar(40)")]
		public string Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationId", DbType="Int")]
		public System.Nullable<int> OrganizationId
		{
			get
			{
				return this._OrganizationId;
			}
			set
			{
				if ((this._OrganizationId != value))
				{
					if (this._Organization2010.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizationIdChanging(value);
					this.SendPropertyChanging();
					this._OrganizationId = value;
					this.SendPropertyChanged("OrganizationId");
					this.OnOrganizationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationKind_OrganizationRequest2010", Storage="_OrganizationKind", ThisKey="KindId", OtherKey="Id", IsForeignKey=true)]
		public OrganizationKind OrganizationKind
		{
			get
			{
				return this._OrganizationKind.Entity;
			}
			set
			{
				OrganizationKind previousValue = this._OrganizationKind.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationKind.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationKind.Entity = null;
						previousValue.OrganizationRequest2010s.Remove(this);
					}
					this._OrganizationKind.Entity = value;
					if ((value != null))
					{
						value.OrganizationRequest2010s.Add(this);
						this._KindId = value.Id;
					}
					else
					{
						this._KindId = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrganizationKind");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization2010_OrganizationRequest2010", Storage="_Organization2010", ThisKey="OrganizationId", OtherKey="Id", IsForeignKey=true)]
		public Organization2010 Organization2010
		{
			get
			{
				return this._Organization2010.Entity;
			}
			set
			{
				Organization2010 previousValue = this._Organization2010.Entity;
				if (((previousValue != value) 
							|| (this._Organization2010.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization2010.Entity = null;
						previousValue.OrganizationRequest2010s.Remove(this);
					}
					this._Organization2010.Entity = value;
					if ((value != null))
					{
						value.OrganizationRequest2010s.Add(this);
						this._OrganizationId = value.Id;
					}
					else
					{
						this._OrganizationId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organization2010");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationType2010_OrganizationRequest2010", Storage="_OrganizationType2010", ThisKey="TypeId", OtherKey="Id", IsForeignKey=true)]
		public OrganizationType2010 OrganizationType2010
		{
			get
			{
				return this._OrganizationType2010.Entity;
			}
			set
			{
				OrganizationType2010 previousValue = this._OrganizationType2010.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationType2010.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationType2010.Entity = null;
						previousValue.OrganizationRequest2010s.Remove(this);
					}
					this._OrganizationType2010.Entity = value;
					if ((value != null))
					{
						value.OrganizationRequest2010s.Add(this);
						this._TypeId = value.Id;
					}
					else
					{
						this._TypeId = default(int);
					}
					this.SendPropertyChanged("OrganizationType2010");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_OrganizationRequest2010", Storage="_Region", ThisKey="RegionId", OtherKey="Id", IsForeignKey=true)]
		public Region Region
		{
			get
			{
				return this._Region.Entity;
			}
			set
			{
				Region previousValue = this._Region.Entity;
				if (((previousValue != value) 
							|| (this._Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Region.Entity = null;
						previousValue.OrganizationRequest2010s.Remove(this);
					}
					this._Region.Entity = value;
					if ((value != null))
					{
						value.OrganizationRequest2010s.Add(this);
						this._RegionId = value.Id;
					}
					else
					{
						this._RegionId = default(int);
					}
					this.SendPropertyChanged("Region");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganizationType2010")]
	public partial class OrganizationType2010 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _SortOrder;
		
		private EntitySet<Organization2010> _Organization2010s;
		
		private EntitySet<OrganizationRequest2010> _OrganizationRequest2010s;
		
		private EntitySet<OrganizationUpdateHistory> _OrganizationUpdateHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    #endregion
		
		public OrganizationType2010()
		{
			this._Organization2010s = new EntitySet<Organization2010>(new Action<Organization2010>(this.attach_Organization2010s), new Action<Organization2010>(this.detach_Organization2010s));
			this._OrganizationRequest2010s = new EntitySet<OrganizationRequest2010>(new Action<OrganizationRequest2010>(this.attach_OrganizationRequest2010s), new Action<OrganizationRequest2010>(this.detach_OrganizationRequest2010s));
			this._OrganizationUpdateHistories = new EntitySet<OrganizationUpdateHistory>(new Action<OrganizationUpdateHistory>(this.attach_OrganizationUpdateHistories), new Action<OrganizationUpdateHistory>(this.detach_OrganizationUpdateHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationType2010_Organization2010", Storage="_Organization2010s", ThisKey="Id", OtherKey="TypeId")]
		public EntitySet<Organization2010> Organization2010s
		{
			get
			{
				return this._Organization2010s;
			}
			set
			{
				this._Organization2010s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationType2010_OrganizationRequest2010", Storage="_OrganizationRequest2010s", ThisKey="Id", OtherKey="TypeId")]
		public EntitySet<OrganizationRequest2010> OrganizationRequest2010s
		{
			get
			{
				return this._OrganizationRequest2010s;
			}
			set
			{
				this._OrganizationRequest2010s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationType2010_OrganizationUpdateHistory", Storage="_OrganizationUpdateHistories", ThisKey="Id", OtherKey="TypeId")]
		public EntitySet<OrganizationUpdateHistory> OrganizationUpdateHistories
		{
			get
			{
				return this._OrganizationUpdateHistories;
			}
			set
			{
				this._OrganizationUpdateHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Organization2010s(Organization2010 entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationType2010 = this;
		}
		
		private void detach_Organization2010s(Organization2010 entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationType2010 = null;
		}
		
		private void attach_OrganizationRequest2010s(OrganizationRequest2010 entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationType2010 = this;
		}
		
		private void detach_OrganizationRequest2010s(OrganizationRequest2010 entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationType2010 = null;
		}
		
		private void attach_OrganizationUpdateHistories(OrganizationUpdateHistory entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationType2010 = this;
		}
		
		private void detach_OrganizationUpdateHistories(OrganizationUpdateHistory entity)
		{
			this.SendPropertyChanging();
			entity.OrganizationType2010 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrganizationUpdateHistory")]
	public partial class OrganizationUpdateHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _OriginalOrgId;
		
		private string _UpdateDescription;
		
		private System.Nullable<int> _Version;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _FullName;
		
		private string _ShortName;
		
		private System.Nullable<int> _RegionId;
		
		private System.Nullable<int> _TypeId;
		
		private System.Nullable<int> _KindId;
		
		private string _INN;
		
		private string _OGRN;
		
		private string _OwnerDepartment;
		
		private bool _IsPrivate;
		
		private bool _IsFilial;
		
		private string _DirectorPosition;
		
		private string _DirectorFullName;
		
		private System.Nullable<bool> _IsAccredited;
		
		private string _AccreditationSertificate;
		
		private string _LawAddress;
		
		private string _FactAddress;
		
		private string _PhoneCityCode;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _EMail;
		
		private string _Site;
		
		private System.Nullable<int> _RCModel;
		
		private string _RCDescription;
		
		private System.Nullable<int> _MainId;
		
		private System.Nullable<int> _DepartmentId;
		
		private System.Nullable<int> _CNFBFullTime;
		
		private System.Nullable<int> _CNFBEvening;
		
		private System.Nullable<int> _CNFBPostal;
		
		private System.Nullable<int> _CNPayFullTime;
		
		private System.Nullable<int> _CNPayEvening;
		
		private System.Nullable<int> _CNPayPostal;
		
		private System.Nullable<int> _CNFederalBudget;
		
		private System.Nullable<int> _CNTargeted;
		
		private System.Nullable<int> _CNLocalBudget;
		
		private System.Nullable<int> _CNPaying;
		
		private System.Nullable<int> _CNFullTime;
		
		private System.Nullable<int> _CNEvening;
		
		private System.Nullable<int> _CNPostal;
		
		private System.Nullable<int> _NewOrgId;
		
		private System.Nullable<int> _StatusId;
		
		private string _EditorUserName;
		
		private bool _DisableLog;
		
		private EntityRef<OrganizationKind> _OrganizationKind;
		
		private EntityRef<Organization2010> _Organization2010;
		
		private EntityRef<Organization2010> _Organization20101;
		
		private EntityRef<OrganizationOperatingStatus> _OrganizationOperatingStatus;
		
		private EntityRef<Organization2010> _Organization20102;
		
		private EntityRef<OrganizationType2010> _OrganizationType2010;
		
		private EntityRef<RecruitmentCampaign> _RecruitmentCampaign;
		
		private EntityRef<Region> _Region;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOriginalOrgIdChanging(System.Nullable<int> value);
    partial void OnOriginalOrgIdChanged();
    partial void OnUpdateDescriptionChanging(string value);
    partial void OnUpdateDescriptionChanged();
    partial void OnVersionChanging(System.Nullable<int> value);
    partial void OnVersionChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnRegionIdChanging(System.Nullable<int> value);
    partial void OnRegionIdChanged();
    partial void OnTypeIdChanging(System.Nullable<int> value);
    partial void OnTypeIdChanged();
    partial void OnKindIdChanging(System.Nullable<int> value);
    partial void OnKindIdChanged();
    partial void OnINNChanging(string value);
    partial void OnINNChanged();
    partial void OnOGRNChanging(string value);
    partial void OnOGRNChanged();
    partial void OnOwnerDepartmentChanging(string value);
    partial void OnOwnerDepartmentChanged();
    partial void OnIsPrivateChanging(bool value);
    partial void OnIsPrivateChanged();
    partial void OnIsFilialChanging(bool value);
    partial void OnIsFilialChanged();
    partial void OnDirectorPositionChanging(string value);
    partial void OnDirectorPositionChanged();
    partial void OnDirectorFullNameChanging(string value);
    partial void OnDirectorFullNameChanged();
    partial void OnIsAccreditedChanging(System.Nullable<bool> value);
    partial void OnIsAccreditedChanged();
    partial void OnAccreditationSertificateChanging(string value);
    partial void OnAccreditationSertificateChanged();
    partial void OnLawAddressChanging(string value);
    partial void OnLawAddressChanged();
    partial void OnFactAddressChanging(string value);
    partial void OnFactAddressChanged();
    partial void OnPhoneCityCodeChanging(string value);
    partial void OnPhoneCityCodeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnEMailChanging(string value);
    partial void OnEMailChanged();
    partial void OnSiteChanging(string value);
    partial void OnSiteChanged();
    partial void OnRCModelChanging(System.Nullable<int> value);
    partial void OnRCModelChanged();
    partial void OnRCDescriptionChanging(string value);
    partial void OnRCDescriptionChanged();
    partial void OnMainIdChanging(System.Nullable<int> value);
    partial void OnMainIdChanged();
    partial void OnDepartmentIdChanging(System.Nullable<int> value);
    partial void OnDepartmentIdChanged();
    partial void OnCNFBFullTimeChanging(System.Nullable<int> value);
    partial void OnCNFBFullTimeChanged();
    partial void OnCNFBEveningChanging(System.Nullable<int> value);
    partial void OnCNFBEveningChanged();
    partial void OnCNFBPostalChanging(System.Nullable<int> value);
    partial void OnCNFBPostalChanged();
    partial void OnCNPayFullTimeChanging(System.Nullable<int> value);
    partial void OnCNPayFullTimeChanged();
    partial void OnCNPayEveningChanging(System.Nullable<int> value);
    partial void OnCNPayEveningChanged();
    partial void OnCNPayPostalChanging(System.Nullable<int> value);
    partial void OnCNPayPostalChanged();
    partial void OnCNFederalBudgetChanging(System.Nullable<int> value);
    partial void OnCNFederalBudgetChanged();
    partial void OnCNTargetedChanging(System.Nullable<int> value);
    partial void OnCNTargetedChanged();
    partial void OnCNLocalBudgetChanging(System.Nullable<int> value);
    partial void OnCNLocalBudgetChanged();
    partial void OnCNPayingChanging(System.Nullable<int> value);
    partial void OnCNPayingChanged();
    partial void OnCNFullTimeChanging(System.Nullable<int> value);
    partial void OnCNFullTimeChanged();
    partial void OnCNEveningChanging(System.Nullable<int> value);
    partial void OnCNEveningChanged();
    partial void OnCNPostalChanging(System.Nullable<int> value);
    partial void OnCNPostalChanged();
    partial void OnNewOrgIdChanging(System.Nullable<int> value);
    partial void OnNewOrgIdChanged();
    partial void OnStatusIdChanging(System.Nullable<int> value);
    partial void OnStatusIdChanged();
    partial void OnEditorUserNameChanging(string value);
    partial void OnEditorUserNameChanged();
    partial void OnDisableLogChanging(bool value);
    partial void OnDisableLogChanged();
    #endregion
		
		public OrganizationUpdateHistory()
		{
			this._OrganizationKind = default(EntityRef<OrganizationKind>);
			this._Organization2010 = default(EntityRef<Organization2010>);
			this._Organization20101 = default(EntityRef<Organization2010>);
			this._OrganizationOperatingStatus = default(EntityRef<OrganizationOperatingStatus>);
			this._Organization20102 = default(EntityRef<Organization2010>);
			this._OrganizationType2010 = default(EntityRef<OrganizationType2010>);
			this._RecruitmentCampaign = default(EntityRef<RecruitmentCampaign>);
			this._Region = default(EntityRef<Region>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalOrgId", DbType="Int")]
		public System.Nullable<int> OriginalOrgId
		{
			get
			{
				return this._OriginalOrgId;
			}
			set
			{
				if ((this._OriginalOrgId != value))
				{
					this.OnOriginalOrgIdChanging(value);
					this.SendPropertyChanging();
					this._OriginalOrgId = value;
					this.SendPropertyChanged("OriginalOrgId");
					this.OnOriginalOrgIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDescription", DbType="NVarChar(MAX)")]
		public string UpdateDescription
		{
			get
			{
				return this._UpdateDescription;
			}
			set
			{
				if ((this._UpdateDescription != value))
				{
					this.OnUpdateDescriptionChanging(value);
					this.SendPropertyChanging();
					this._UpdateDescription = value;
					this.SendPropertyChanged("UpdateDescription");
					this.OnUpdateDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="Int")]
		public System.Nullable<int> Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(1000)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="NVarChar(500)")]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int")]
		public System.Nullable<int> RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					if (this._Region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int")]
		public System.Nullable<int> TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					if (this._OrganizationType2010.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KindId", DbType="Int")]
		public System.Nullable<int> KindId
		{
			get
			{
				return this._KindId;
			}
			set
			{
				if ((this._KindId != value))
				{
					if (this._OrganizationKind.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnKindIdChanging(value);
					this.SendPropertyChanging();
					this._KindId = value;
					this.SendPropertyChanged("KindId");
					this.OnKindIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INN", DbType="NVarChar(10)")]
		public string INN
		{
			get
			{
				return this._INN;
			}
			set
			{
				if ((this._INN != value))
				{
					this.OnINNChanging(value);
					this.SendPropertyChanging();
					this._INN = value;
					this.SendPropertyChanged("INN");
					this.OnINNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OGRN", DbType="NVarChar(13)")]
		public string OGRN
		{
			get
			{
				return this._OGRN;
			}
			set
			{
				if ((this._OGRN != value))
				{
					this.OnOGRNChanging(value);
					this.SendPropertyChanging();
					this._OGRN = value;
					this.SendPropertyChanged("OGRN");
					this.OnOGRNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerDepartment", DbType="NVarChar(500)")]
		public string OwnerDepartment
		{
			get
			{
				return this._OwnerDepartment;
			}
			set
			{
				if ((this._OwnerDepartment != value))
				{
					this.OnOwnerDepartmentChanging(value);
					this.SendPropertyChanging();
					this._OwnerDepartment = value;
					this.SendPropertyChanged("OwnerDepartment");
					this.OnOwnerDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrivate", DbType="Bit NOT NULL")]
		public bool IsPrivate
		{
			get
			{
				return this._IsPrivate;
			}
			set
			{
				if ((this._IsPrivate != value))
				{
					this.OnIsPrivateChanging(value);
					this.SendPropertyChanging();
					this._IsPrivate = value;
					this.SendPropertyChanged("IsPrivate");
					this.OnIsPrivateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFilial", DbType="Bit NOT NULL")]
		public bool IsFilial
		{
			get
			{
				return this._IsFilial;
			}
			set
			{
				if ((this._IsFilial != value))
				{
					this.OnIsFilialChanging(value);
					this.SendPropertyChanging();
					this._IsFilial = value;
					this.SendPropertyChanged("IsFilial");
					this.OnIsFilialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectorPosition", DbType="NVarChar(255)")]
		public string DirectorPosition
		{
			get
			{
				return this._DirectorPosition;
			}
			set
			{
				if ((this._DirectorPosition != value))
				{
					this.OnDirectorPositionChanging(value);
					this.SendPropertyChanging();
					this._DirectorPosition = value;
					this.SendPropertyChanged("DirectorPosition");
					this.OnDirectorPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectorFullName", DbType="NVarChar(255)")]
		public string DirectorFullName
		{
			get
			{
				return this._DirectorFullName;
			}
			set
			{
				if ((this._DirectorFullName != value))
				{
					this.OnDirectorFullNameChanging(value);
					this.SendPropertyChanging();
					this._DirectorFullName = value;
					this.SendPropertyChanged("DirectorFullName");
					this.OnDirectorFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAccredited", DbType="Bit")]
		public System.Nullable<bool> IsAccredited
		{
			get
			{
				return this._IsAccredited;
			}
			set
			{
				if ((this._IsAccredited != value))
				{
					this.OnIsAccreditedChanging(value);
					this.SendPropertyChanging();
					this._IsAccredited = value;
					this.SendPropertyChanged("IsAccredited");
					this.OnIsAccreditedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccreditationSertificate", DbType="NVarChar(255)")]
		public string AccreditationSertificate
		{
			get
			{
				return this._AccreditationSertificate;
			}
			set
			{
				if ((this._AccreditationSertificate != value))
				{
					this.OnAccreditationSertificateChanging(value);
					this.SendPropertyChanging();
					this._AccreditationSertificate = value;
					this.SendPropertyChanged("AccreditationSertificate");
					this.OnAccreditationSertificateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawAddress", DbType="NVarChar(255)")]
		public string LawAddress
		{
			get
			{
				return this._LawAddress;
			}
			set
			{
				if ((this._LawAddress != value))
				{
					this.OnLawAddressChanging(value);
					this.SendPropertyChanging();
					this._LawAddress = value;
					this.SendPropertyChanged("LawAddress");
					this.OnLawAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactAddress", DbType="NVarChar(255)")]
		public string FactAddress
		{
			get
			{
				return this._FactAddress;
			}
			set
			{
				if ((this._FactAddress != value))
				{
					this.OnFactAddressChanging(value);
					this.SendPropertyChanging();
					this._FactAddress = value;
					this.SendPropertyChanged("FactAddress");
					this.OnFactAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneCityCode", DbType="NVarChar(10)")]
		public string PhoneCityCode
		{
			get
			{
				return this._PhoneCityCode;
			}
			set
			{
				if ((this._PhoneCityCode != value))
				{
					this.OnPhoneCityCodeChanging(value);
					this.SendPropertyChanging();
					this._PhoneCityCode = value;
					this.SendPropertyChanged("PhoneCityCode");
					this.OnPhoneCityCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(100)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(100)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMail", DbType="NVarChar(100)")]
		public string EMail
		{
			get
			{
				return this._EMail;
			}
			set
			{
				if ((this._EMail != value))
				{
					this.OnEMailChanging(value);
					this.SendPropertyChanging();
					this._EMail = value;
					this.SendPropertyChanged("EMail");
					this.OnEMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="NVarChar(40)")]
		public string Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCModel", DbType="Int")]
		public System.Nullable<int> RCModel
		{
			get
			{
				return this._RCModel;
			}
			set
			{
				if ((this._RCModel != value))
				{
					if (this._RecruitmentCampaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRCModelChanging(value);
					this.SendPropertyChanging();
					this._RCModel = value;
					this.SendPropertyChanged("RCModel");
					this.OnRCModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RCDescription", DbType="NVarChar(400)")]
		public string RCDescription
		{
			get
			{
				return this._RCDescription;
			}
			set
			{
				if ((this._RCDescription != value))
				{
					this.OnRCDescriptionChanging(value);
					this.SendPropertyChanging();
					this._RCDescription = value;
					this.SendPropertyChanged("RCDescription");
					this.OnRCDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainId", DbType="Int")]
		public System.Nullable<int> MainId
		{
			get
			{
				return this._MainId;
			}
			set
			{
				if ((this._MainId != value))
				{
					if (this._Organization2010.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMainIdChanging(value);
					this.SendPropertyChanging();
					this._MainId = value;
					this.SendPropertyChanged("MainId");
					this.OnMainIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="Int")]
		public System.Nullable<int> DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._Organization20102.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNFBFullTime", DbType="Int")]
		public System.Nullable<int> CNFBFullTime
		{
			get
			{
				return this._CNFBFullTime;
			}
			set
			{
				if ((this._CNFBFullTime != value))
				{
					this.OnCNFBFullTimeChanging(value);
					this.SendPropertyChanging();
					this._CNFBFullTime = value;
					this.SendPropertyChanged("CNFBFullTime");
					this.OnCNFBFullTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNFBEvening", DbType="Int")]
		public System.Nullable<int> CNFBEvening
		{
			get
			{
				return this._CNFBEvening;
			}
			set
			{
				if ((this._CNFBEvening != value))
				{
					this.OnCNFBEveningChanging(value);
					this.SendPropertyChanging();
					this._CNFBEvening = value;
					this.SendPropertyChanged("CNFBEvening");
					this.OnCNFBEveningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNFBPostal", DbType="Int")]
		public System.Nullable<int> CNFBPostal
		{
			get
			{
				return this._CNFBPostal;
			}
			set
			{
				if ((this._CNFBPostal != value))
				{
					this.OnCNFBPostalChanging(value);
					this.SendPropertyChanging();
					this._CNFBPostal = value;
					this.SendPropertyChanged("CNFBPostal");
					this.OnCNFBPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNPayFullTime", DbType="Int")]
		public System.Nullable<int> CNPayFullTime
		{
			get
			{
				return this._CNPayFullTime;
			}
			set
			{
				if ((this._CNPayFullTime != value))
				{
					this.OnCNPayFullTimeChanging(value);
					this.SendPropertyChanging();
					this._CNPayFullTime = value;
					this.SendPropertyChanged("CNPayFullTime");
					this.OnCNPayFullTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNPayEvening", DbType="Int")]
		public System.Nullable<int> CNPayEvening
		{
			get
			{
				return this._CNPayEvening;
			}
			set
			{
				if ((this._CNPayEvening != value))
				{
					this.OnCNPayEveningChanging(value);
					this.SendPropertyChanging();
					this._CNPayEvening = value;
					this.SendPropertyChanged("CNPayEvening");
					this.OnCNPayEveningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNPayPostal", DbType="Int")]
		public System.Nullable<int> CNPayPostal
		{
			get
			{
				return this._CNPayPostal;
			}
			set
			{
				if ((this._CNPayPostal != value))
				{
					this.OnCNPayPostalChanging(value);
					this.SendPropertyChanging();
					this._CNPayPostal = value;
					this.SendPropertyChanged("CNPayPostal");
					this.OnCNPayPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNFederalBudget", DbType="Int")]
		public System.Nullable<int> CNFederalBudget
		{
			get
			{
				return this._CNFederalBudget;
			}
			set
			{
				if ((this._CNFederalBudget != value))
				{
					this.OnCNFederalBudgetChanging(value);
					this.SendPropertyChanging();
					this._CNFederalBudget = value;
					this.SendPropertyChanged("CNFederalBudget");
					this.OnCNFederalBudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNTargeted", DbType="Int")]
		public System.Nullable<int> CNTargeted
		{
			get
			{
				return this._CNTargeted;
			}
			set
			{
				if ((this._CNTargeted != value))
				{
					this.OnCNTargetedChanging(value);
					this.SendPropertyChanging();
					this._CNTargeted = value;
					this.SendPropertyChanged("CNTargeted");
					this.OnCNTargetedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNLocalBudget", DbType="Int")]
		public System.Nullable<int> CNLocalBudget
		{
			get
			{
				return this._CNLocalBudget;
			}
			set
			{
				if ((this._CNLocalBudget != value))
				{
					this.OnCNLocalBudgetChanging(value);
					this.SendPropertyChanging();
					this._CNLocalBudget = value;
					this.SendPropertyChanged("CNLocalBudget");
					this.OnCNLocalBudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNPaying", DbType="Int")]
		public System.Nullable<int> CNPaying
		{
			get
			{
				return this._CNPaying;
			}
			set
			{
				if ((this._CNPaying != value))
				{
					this.OnCNPayingChanging(value);
					this.SendPropertyChanging();
					this._CNPaying = value;
					this.SendPropertyChanged("CNPaying");
					this.OnCNPayingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNFullTime", DbType="Int")]
		public System.Nullable<int> CNFullTime
		{
			get
			{
				return this._CNFullTime;
			}
			set
			{
				if ((this._CNFullTime != value))
				{
					this.OnCNFullTimeChanging(value);
					this.SendPropertyChanging();
					this._CNFullTime = value;
					this.SendPropertyChanged("CNFullTime");
					this.OnCNFullTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNEvening", DbType="Int")]
		public System.Nullable<int> CNEvening
		{
			get
			{
				return this._CNEvening;
			}
			set
			{
				if ((this._CNEvening != value))
				{
					this.OnCNEveningChanging(value);
					this.SendPropertyChanging();
					this._CNEvening = value;
					this.SendPropertyChanged("CNEvening");
					this.OnCNEveningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CNPostal", DbType="Int")]
		public System.Nullable<int> CNPostal
		{
			get
			{
				return this._CNPostal;
			}
			set
			{
				if ((this._CNPostal != value))
				{
					this.OnCNPostalChanging(value);
					this.SendPropertyChanging();
					this._CNPostal = value;
					this.SendPropertyChanged("CNPostal");
					this.OnCNPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewOrgId", DbType="Int")]
		public System.Nullable<int> NewOrgId
		{
			get
			{
				return this._NewOrgId;
			}
			set
			{
				if ((this._NewOrgId != value))
				{
					if (this._Organization20101.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNewOrgIdChanging(value);
					this.SendPropertyChanging();
					this._NewOrgId = value;
					this.SendPropertyChanged("NewOrgId");
					this.OnNewOrgIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int")]
		public System.Nullable<int> StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					if (this._OrganizationOperatingStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorUserName", DbType="NVarChar(50)")]
		public string EditorUserName
		{
			get
			{
				return this._EditorUserName;
			}
			set
			{
				if ((this._EditorUserName != value))
				{
					this.OnEditorUserNameChanging(value);
					this.SendPropertyChanging();
					this._EditorUserName = value;
					this.SendPropertyChanged("EditorUserName");
					this.OnEditorUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisableLog", DbType="Bit NOT NULL")]
		public bool DisableLog
		{
			get
			{
				return this._DisableLog;
			}
			set
			{
				if ((this._DisableLog != value))
				{
					this.OnDisableLogChanging(value);
					this.SendPropertyChanging();
					this._DisableLog = value;
					this.SendPropertyChanged("DisableLog");
					this.OnDisableLogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationKind_OrganizationUpdateHistory", Storage="_OrganizationKind", ThisKey="KindId", OtherKey="Id", IsForeignKey=true)]
		public OrganizationKind OrganizationKind
		{
			get
			{
				return this._OrganizationKind.Entity;
			}
			set
			{
				OrganizationKind previousValue = this._OrganizationKind.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationKind.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationKind.Entity = null;
						previousValue.OrganizationUpdateHistories.Remove(this);
					}
					this._OrganizationKind.Entity = value;
					if ((value != null))
					{
						value.OrganizationUpdateHistories.Add(this);
						this._KindId = value.Id;
					}
					else
					{
						this._KindId = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrganizationKind");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization2010_OrganizationUpdateHistory", Storage="_Organization2010", ThisKey="MainId", OtherKey="Id", IsForeignKey=true)]
		public Organization2010 Organization2010
		{
			get
			{
				return this._Organization2010.Entity;
			}
			set
			{
				Organization2010 previousValue = this._Organization2010.Entity;
				if (((previousValue != value) 
							|| (this._Organization2010.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization2010.Entity = null;
						previousValue.OrganizationUpdateHistories.Remove(this);
					}
					this._Organization2010.Entity = value;
					if ((value != null))
					{
						value.OrganizationUpdateHistories.Add(this);
						this._MainId = value.Id;
					}
					else
					{
						this._MainId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organization2010");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization2010_OrganizationUpdateHistory1", Storage="_Organization20101", ThisKey="NewOrgId", OtherKey="Id", IsForeignKey=true)]
		public Organization2010 Organization20101
		{
			get
			{
				return this._Organization20101.Entity;
			}
			set
			{
				Organization2010 previousValue = this._Organization20101.Entity;
				if (((previousValue != value) 
							|| (this._Organization20101.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization20101.Entity = null;
						previousValue.OrganizationUpdateHistories1.Remove(this);
					}
					this._Organization20101.Entity = value;
					if ((value != null))
					{
						value.OrganizationUpdateHistories1.Add(this);
						this._NewOrgId = value.Id;
					}
					else
					{
						this._NewOrgId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organization20101");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationOperatingStatus_OrganizationUpdateHistory", Storage="_OrganizationOperatingStatus", ThisKey="StatusId", OtherKey="Id", IsForeignKey=true)]
		public OrganizationOperatingStatus OrganizationOperatingStatus
		{
			get
			{
				return this._OrganizationOperatingStatus.Entity;
			}
			set
			{
				OrganizationOperatingStatus previousValue = this._OrganizationOperatingStatus.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationOperatingStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationOperatingStatus.Entity = null;
						previousValue.OrganizationUpdateHistories.Remove(this);
					}
					this._OrganizationOperatingStatus.Entity = value;
					if ((value != null))
					{
						value.OrganizationUpdateHistories.Add(this);
						this._StatusId = value.Id;
					}
					else
					{
						this._StatusId = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrganizationOperatingStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organization2010_OrganizationUpdateHistory2", Storage="_Organization20102", ThisKey="DepartmentId", OtherKey="Id", IsForeignKey=true)]
		public Organization2010 Organization20102
		{
			get
			{
				return this._Organization20102.Entity;
			}
			set
			{
				Organization2010 previousValue = this._Organization20102.Entity;
				if (((previousValue != value) 
							|| (this._Organization20102.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organization20102.Entity = null;
						previousValue.OrganizationUpdateHistories2.Remove(this);
					}
					this._Organization20102.Entity = value;
					if ((value != null))
					{
						value.OrganizationUpdateHistories2.Add(this);
						this._DepartmentId = value.Id;
					}
					else
					{
						this._DepartmentId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Organization20102");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrganizationType2010_OrganizationUpdateHistory", Storage="_OrganizationType2010", ThisKey="TypeId", OtherKey="Id", IsForeignKey=true)]
		public OrganizationType2010 OrganizationType2010
		{
			get
			{
				return this._OrganizationType2010.Entity;
			}
			set
			{
				OrganizationType2010 previousValue = this._OrganizationType2010.Entity;
				if (((previousValue != value) 
							|| (this._OrganizationType2010.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrganizationType2010.Entity = null;
						previousValue.OrganizationUpdateHistories.Remove(this);
					}
					this._OrganizationType2010.Entity = value;
					if ((value != null))
					{
						value.OrganizationUpdateHistories.Add(this);
						this._TypeId = value.Id;
					}
					else
					{
						this._TypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrganizationType2010");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecruitmentCampaign_OrganizationUpdateHistory", Storage="_RecruitmentCampaign", ThisKey="RCModel", OtherKey="Id", IsForeignKey=true)]
		public RecruitmentCampaign RecruitmentCampaign
		{
			get
			{
				return this._RecruitmentCampaign.Entity;
			}
			set
			{
				RecruitmentCampaign previousValue = this._RecruitmentCampaign.Entity;
				if (((previousValue != value) 
							|| (this._RecruitmentCampaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RecruitmentCampaign.Entity = null;
						previousValue.OrganizationUpdateHistories.Remove(this);
					}
					this._RecruitmentCampaign.Entity = value;
					if ((value != null))
					{
						value.OrganizationUpdateHistories.Add(this);
						this._RCModel = value.Id;
					}
					else
					{
						this._RCModel = default(Nullable<int>);
					}
					this.SendPropertyChanged("RecruitmentCampaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_OrganizationUpdateHistory", Storage="_Region", ThisKey="RegionId", OtherKey="Id", IsForeignKey=true)]
		public Region Region
		{
			get
			{
				return this._Region.Entity;
			}
			set
			{
				Region previousValue = this._Region.Entity;
				if (((previousValue != value) 
							|| (this._Region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Region.Entity = null;
						previousValue.OrganizationUpdateHistories.Remove(this);
					}
					this._Region.Entity = value;
					if ((value != null))
					{
						value.OrganizationUpdateHistories.Add(this);
						this._RegionId = value.Id;
					}
					else
					{
						this._RegionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Region");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecruitmentCampaigns")]
	public partial class RecruitmentCampaign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ModelName;
		
		private EntitySet<Organization2010> _Organization2010s;
		
		private EntitySet<OrganizationUpdateHistory> _OrganizationUpdateHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnModelNameChanging(string value);
    partial void OnModelNameChanged();
    #endregion
		
		public RecruitmentCampaign()
		{
			this._Organization2010s = new EntitySet<Organization2010>(new Action<Organization2010>(this.attach_Organization2010s), new Action<Organization2010>(this.detach_Organization2010s));
			this._OrganizationUpdateHistories = new EntitySet<OrganizationUpdateHistory>(new Action<OrganizationUpdateHistory>(this.attach_OrganizationUpdateHistories), new Action<OrganizationUpdateHistory>(this.detach_OrganizationUpdateHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelName", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string ModelName
		{
			get
			{
				return this._ModelName;
			}
			set
			{
				if ((this._ModelName != value))
				{
					this.OnModelNameChanging(value);
					this.SendPropertyChanging();
					this._ModelName = value;
					this.SendPropertyChanged("ModelName");
					this.OnModelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecruitmentCampaign_Organization2010", Storage="_Organization2010s", ThisKey="Id", OtherKey="RCModel")]
		public EntitySet<Organization2010> Organization2010s
		{
			get
			{
				return this._Organization2010s;
			}
			set
			{
				this._Organization2010s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecruitmentCampaign_OrganizationUpdateHistory", Storage="_OrganizationUpdateHistories", ThisKey="Id", OtherKey="RCModel")]
		public EntitySet<OrganizationUpdateHistory> OrganizationUpdateHistories
		{
			get
			{
				return this._OrganizationUpdateHistories;
			}
			set
			{
				this._OrganizationUpdateHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Organization2010s(Organization2010 entity)
		{
			this.SendPropertyChanging();
			entity.RecruitmentCampaign = this;
		}
		
		private void detach_Organization2010s(Organization2010 entity)
		{
			this.SendPropertyChanging();
			entity.RecruitmentCampaign = null;
		}
		
		private void attach_OrganizationUpdateHistories(OrganizationUpdateHistory entity)
		{
			this.SendPropertyChanging();
			entity.RecruitmentCampaign = this;
		}
		
		private void detach_OrganizationUpdateHistories(OrganizationUpdateHistory entity)
		{
			this.SendPropertyChanging();
			entity.RecruitmentCampaign = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Region")]
	public partial class Region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private bool _InOrganization;
		
		private bool _InCertificate;
		
		private byte _SortIndex;
		
		private bool _InOrganizationEtalon;
		
		private int _FederalDistrictId;
		
		private EntitySet<CheckResultsHistory> _CheckResultsHistories;
		
		private EntitySet<Organization2010> _Organization2010s;
		
		private EntitySet<OrganizationRequest2010> _OrganizationRequest2010s;
		
		private EntitySet<OrganizationUpdateHistory> _OrganizationUpdateHistories;
		
		private EntityRef<FederalDistrict> _FederalDistrict;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnInOrganizationChanging(bool value);
    partial void OnInOrganizationChanged();
    partial void OnInCertificateChanging(bool value);
    partial void OnInCertificateChanged();
    partial void OnSortIndexChanging(byte value);
    partial void OnSortIndexChanged();
    partial void OnInOrganizationEtalonChanging(bool value);
    partial void OnInOrganizationEtalonChanged();
    partial void OnFederalDistrictIdChanging(int value);
    partial void OnFederalDistrictIdChanged();
    #endregion
		
		public Region()
		{
			this._CheckResultsHistories = new EntitySet<CheckResultsHistory>(new Action<CheckResultsHistory>(this.attach_CheckResultsHistories), new Action<CheckResultsHistory>(this.detach_CheckResultsHistories));
			this._Organization2010s = new EntitySet<Organization2010>(new Action<Organization2010>(this.attach_Organization2010s), new Action<Organization2010>(this.detach_Organization2010s));
			this._OrganizationRequest2010s = new EntitySet<OrganizationRequest2010>(new Action<OrganizationRequest2010>(this.attach_OrganizationRequest2010s), new Action<OrganizationRequest2010>(this.detach_OrganizationRequest2010s));
			this._OrganizationUpdateHistories = new EntitySet<OrganizationUpdateHistory>(new Action<OrganizationUpdateHistory>(this.attach_OrganizationUpdateHistories), new Action<OrganizationUpdateHistory>(this.detach_OrganizationUpdateHistories));
			this._FederalDistrict = default(EntityRef<FederalDistrict>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InOrganization", DbType="Bit NOT NULL")]
		public bool InOrganization
		{
			get
			{
				return this._InOrganization;
			}
			set
			{
				if ((this._InOrganization != value))
				{
					this.OnInOrganizationChanging(value);
					this.SendPropertyChanging();
					this._InOrganization = value;
					this.SendPropertyChanged("InOrganization");
					this.OnInOrganizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InCertificate", DbType="Bit NOT NULL")]
		public bool InCertificate
		{
			get
			{
				return this._InCertificate;
			}
			set
			{
				if ((this._InCertificate != value))
				{
					this.OnInCertificateChanging(value);
					this.SendPropertyChanging();
					this._InCertificate = value;
					this.SendPropertyChanged("InCertificate");
					this.OnInCertificateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="TinyInt NOT NULL")]
		public byte SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InOrganizationEtalon", DbType="Bit NOT NULL")]
		public bool InOrganizationEtalon
		{
			get
			{
				return this._InOrganizationEtalon;
			}
			set
			{
				if ((this._InOrganizationEtalon != value))
				{
					this.OnInOrganizationEtalonChanging(value);
					this.SendPropertyChanging();
					this._InOrganizationEtalon = value;
					this.SendPropertyChanged("InOrganizationEtalon");
					this.OnInOrganizationEtalonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FederalDistrictId", DbType="Int NOT NULL")]
		public int FederalDistrictId
		{
			get
			{
				return this._FederalDistrictId;
			}
			set
			{
				if ((this._FederalDistrictId != value))
				{
					if (this._FederalDistrict.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFederalDistrictIdChanging(value);
					this.SendPropertyChanging();
					this._FederalDistrictId = value;
					this.SendPropertyChanged("FederalDistrictId");
					this.OnFederalDistrictIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_CheckResultsHistory", Storage="_CheckResultsHistories", ThisKey="Id", OtherKey="RegionId")]
		public EntitySet<CheckResultsHistory> CheckResultsHistories
		{
			get
			{
				return this._CheckResultsHistories;
			}
			set
			{
				this._CheckResultsHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_Organization2010", Storage="_Organization2010s", ThisKey="Id", OtherKey="RegionId")]
		public EntitySet<Organization2010> Organization2010s
		{
			get
			{
				return this._Organization2010s;
			}
			set
			{
				this._Organization2010s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_OrganizationRequest2010", Storage="_OrganizationRequest2010s", ThisKey="Id", OtherKey="RegionId")]
		public EntitySet<OrganizationRequest2010> OrganizationRequest2010s
		{
			get
			{
				return this._OrganizationRequest2010s;
			}
			set
			{
				this._OrganizationRequest2010s.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Region_OrganizationUpdateHistory", Storage="_OrganizationUpdateHistories", ThisKey="Id", OtherKey="RegionId")]
		public EntitySet<OrganizationUpdateHistory> OrganizationUpdateHistories
		{
			get
			{
				return this._OrganizationUpdateHistories;
			}
			set
			{
				this._OrganizationUpdateHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FederalDistrict_Region", Storage="_FederalDistrict", ThisKey="FederalDistrictId", OtherKey="Id", IsForeignKey=true)]
		public FederalDistrict FederalDistrict
		{
			get
			{
				return this._FederalDistrict.Entity;
			}
			set
			{
				FederalDistrict previousValue = this._FederalDistrict.Entity;
				if (((previousValue != value) 
							|| (this._FederalDistrict.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FederalDistrict.Entity = null;
						previousValue.Regions.Remove(this);
					}
					this._FederalDistrict.Entity = value;
					if ((value != null))
					{
						value.Regions.Add(this);
						this._FederalDistrictId = value.Id;
					}
					else
					{
						this._FederalDistrictId = default(int);
					}
					this.SendPropertyChanged("FederalDistrict");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CheckResultsHistories(CheckResultsHistory entity)
		{
			this.SendPropertyChanging();
			entity.Region = this;
		}
		
		private void detach_CheckResultsHistories(CheckResultsHistory entity)
		{
			this.SendPropertyChanging();
			entity.Region = null;
		}
		
		private void attach_Organization2010s(Organization2010 entity)
		{
			this.SendPropertyChanging();
			entity.Region = this;
		}
		
		private void detach_Organization2010s(Organization2010 entity)
		{
			this.SendPropertyChanging();
			entity.Region = null;
		}
		
		private void attach_OrganizationRequest2010s(OrganizationRequest2010 entity)
		{
			this.SendPropertyChanging();
			entity.Region = this;
		}
		
		private void detach_OrganizationRequest2010s(OrganizationRequest2010 entity)
		{
			this.SendPropertyChanging();
			entity.Region = null;
		}
		
		private void attach_OrganizationUpdateHistories(OrganizationUpdateHistory entity)
		{
			this.SendPropertyChanging();
			entity.Region = this;
		}
		
		private void detach_OrganizationUpdateHistories(OrganizationUpdateHistory entity)
		{
			this.SendPropertyChanging();
			entity.Region = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Report")]
	public partial class Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.DateTime _created;
		
		private System.Xml.Linq.XElement _xml;
		
		private System.Nullable<System.DateTime> _dateFrom;
		
		private System.Nullable<System.DateTime> _dateTo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnxmlChanging(System.Xml.Linq.XElement value);
    partial void OnxmlChanged();
    partial void OndateFromChanging(System.Nullable<System.DateTime> value);
    partial void OndateFromChanged();
    partial void OndateToChanging(System.Nullable<System.DateTime> value);
    partial void OndateToChanged();
    #endregion
		
		public Report()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xml", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement xml
		{
			get
			{
				return this._xml;
			}
			set
			{
				if ((this._xml != value))
				{
					this.OnxmlChanging(value);
					this.SendPropertyChanging();
					this._xml = value;
					this.SendPropertyChanged("xml");
					this.OnxmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateFrom
		{
			get
			{
				return this._dateFrom;
			}
			set
			{
				if ((this._dateFrom != value))
				{
					this.OndateFromChanging(value);
					this.SendPropertyChanging();
					this._dateFrom = value;
					this.SendPropertyChanged("dateFrom");
					this.OndateFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateTo", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateTo
		{
			get
			{
				return this._dateTo;
			}
			set
			{
				if ((this._dateTo != value))
				{
					this.OndateToChanging(value);
					this.SendPropertyChanging();
					this._dateTo = value;
					this.SendPropertyChanged("dateTo");
					this.OndateToChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResultGlobalStatuses")]
	public partial class ResultGlobalStatuse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GlobalStatusID;
		
		private string _StatusName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGlobalStatusIDChanging(int value);
    partial void OnGlobalStatusIDChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    #endregion
		
		public ResultGlobalStatuse()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlobalStatusID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GlobalStatusID
		{
			get
			{
				return this._GlobalStatusID;
			}
			set
			{
				if ((this._GlobalStatusID != value))
				{
					this.OnGlobalStatusIDChanging(value);
					this.SendPropertyChanging();
					this._GlobalStatusID = value;
					this.SendPropertyChanged("GlobalStatusID");
					this.OnGlobalStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResultStatuses")]
	public partial class ResultStatuse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProcessCondition;
		
		private string _StatusName;
		
		private int _UseYear;
		
		private int _GlobalStatusID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProcessConditionChanging(int value);
    partial void OnProcessConditionChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    partial void OnUseYearChanging(int value);
    partial void OnUseYearChanged();
    partial void OnGlobalStatusIDChanging(int value);
    partial void OnGlobalStatusIDChanged();
    #endregion
		
		public ResultStatuse()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessCondition", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProcessCondition
		{
			get
			{
				return this._ProcessCondition;
			}
			set
			{
				if ((this._ProcessCondition != value))
				{
					this.OnProcessConditionChanging(value);
					this.SendPropertyChanging();
					this._ProcessCondition = value;
					this.SendPropertyChanged("ProcessCondition");
					this.OnProcessConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseYear", DbType="Int NOT NULL")]
		public int UseYear
		{
			get
			{
				return this._UseYear;
			}
			set
			{
				if ((this._UseYear != value))
				{
					this.OnUseYearChanging(value);
					this.SendPropertyChanging();
					this._UseYear = value;
					this.SendPropertyChanged("UseYear");
					this.OnUseYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlobalStatusID", DbType="Int NOT NULL")]
		public int GlobalStatusID
		{
			get
			{
				return this._GlobalStatusID;
			}
			set
			{
				if ((this._GlobalStatusID != value))
				{
					this.OnGlobalStatusIDChanging(value);
					this.SendPropertyChanging();
					this._GlobalStatusID = value;
					this.SendPropertyChanged("GlobalStatusID");
					this.OnGlobalStatusIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Role()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolLeavingCertificateCheck")]
	public partial class SchoolLeavingCertificateCheck : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private long _BatchId;
		
		private string _CertificateNumber;
		
		private bool _IsCorrect;
		
		private System.Nullable<long> _SourceCertificateDenyId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnBatchIdChanging(long value);
    partial void OnBatchIdChanged();
    partial void OnCertificateNumberChanging(string value);
    partial void OnCertificateNumberChanged();
    partial void OnIsCorrectChanging(bool value);
    partial void OnIsCorrectChanged();
    partial void OnSourceCertificateDenyIdChanging(System.Nullable<long> value);
    partial void OnSourceCertificateDenyIdChanged();
    #endregion
		
		public SchoolLeavingCertificateCheck()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatchId", DbType="BigInt NOT NULL")]
		public long BatchId
		{
			get
			{
				return this._BatchId;
			}
			set
			{
				if ((this._BatchId != value))
				{
					this.OnBatchIdChanging(value);
					this.SendPropertyChanging();
					this._BatchId = value;
					this.SendPropertyChanged("BatchId");
					this.OnBatchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNumber", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CertificateNumber
		{
			get
			{
				return this._CertificateNumber;
			}
			set
			{
				if ((this._CertificateNumber != value))
				{
					this.OnCertificateNumberChanging(value);
					this.SendPropertyChanging();
					this._CertificateNumber = value;
					this.SendPropertyChanged("CertificateNumber");
					this.OnCertificateNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCorrect", DbType="Bit NOT NULL")]
		public bool IsCorrect
		{
			get
			{
				return this._IsCorrect;
			}
			set
			{
				if ((this._IsCorrect != value))
				{
					this.OnIsCorrectChanging(value);
					this.SendPropertyChanging();
					this._IsCorrect = value;
					this.SendPropertyChanged("IsCorrect");
					this.OnIsCorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceCertificateDenyId", DbType="BigInt")]
		public System.Nullable<long> SourceCertificateDenyId
		{
			get
			{
				return this._SourceCertificateDenyId;
			}
			set
			{
				if ((this._SourceCertificateDenyId != value))
				{
					this.OnSourceCertificateDenyIdChanging(value);
					this.SendPropertyChanging();
					this._SourceCertificateDenyId = value;
					this.SendPropertyChanged("SourceCertificateDenyId");
					this.OnSourceCertificateDenyIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolLeavingCertificateCheckBatch")]
	public partial class SchoolLeavingCertificateCheckBatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private long _OwnerAccountId;
		
		private bool _IsProcess;
		
		private System.Nullable<bool> _IsCorrect;
		
		private string _Batch;
		
		private System.Nullable<bool> _Executing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnOwnerAccountIdChanging(long value);
    partial void OnOwnerAccountIdChanged();
    partial void OnIsProcessChanging(bool value);
    partial void OnIsProcessChanged();
    partial void OnIsCorrectChanging(System.Nullable<bool> value);
    partial void OnIsCorrectChanged();
    partial void OnBatchChanging(string value);
    partial void OnBatchChanged();
    partial void OnExecutingChanging(System.Nullable<bool> value);
    partial void OnExecutingChanged();
    #endregion
		
		public SchoolLeavingCertificateCheckBatch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerAccountId", DbType="BigInt NOT NULL")]
		public long OwnerAccountId
		{
			get
			{
				return this._OwnerAccountId;
			}
			set
			{
				if ((this._OwnerAccountId != value))
				{
					this.OnOwnerAccountIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerAccountId = value;
					this.SendPropertyChanged("OwnerAccountId");
					this.OnOwnerAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProcess", DbType="Bit NOT NULL")]
		public bool IsProcess
		{
			get
			{
				return this._IsProcess;
			}
			set
			{
				if ((this._IsProcess != value))
				{
					this.OnIsProcessChanging(value);
					this.SendPropertyChanging();
					this._IsProcess = value;
					this.SendPropertyChanged("IsProcess");
					this.OnIsProcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCorrect", DbType="Bit")]
		public System.Nullable<bool> IsCorrect
		{
			get
			{
				return this._IsCorrect;
			}
			set
			{
				if ((this._IsCorrect != value))
				{
					this.OnIsCorrectChanging(value);
					this.SendPropertyChanging();
					this._IsCorrect = value;
					this.SendPropertyChanged("IsCorrect");
					this.OnIsCorrectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Batch", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Batch
		{
			get
			{
				return this._Batch;
			}
			set
			{
				if ((this._Batch != value))
				{
					this.OnBatchChanging(value);
					this.SendPropertyChanging();
					this._Batch = value;
					this.SendPropertyChanged("Batch");
					this.OnBatchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Executing", DbType="Bit")]
		public System.Nullable<bool> Executing
		{
			get
			{
				return this._Executing;
			}
			set
			{
				if ((this._Executing != value))
				{
					this.OnExecutingChanging(value);
					this.SendPropertyChanging();
					this._Executing = value;
					this.SendPropertyChanged("Executing");
					this.OnExecutingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SchoolLeavingCertificateDeny")]
	public partial class SchoolLeavingCertificateDeny : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Guid _UpdateId;
		
		private long _EditorAccountId;
		
		private string _EditorIp;
		
		private string _CertificateNumberFrom;
		
		private string _CertificateNumberTo;
		
		private string _OrganizationName;
		
		private string _Comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnUpdateIdChanging(System.Guid value);
    partial void OnUpdateIdChanged();
    partial void OnEditorAccountIdChanging(long value);
    partial void OnEditorAccountIdChanged();
    partial void OnEditorIpChanging(string value);
    partial void OnEditorIpChanged();
    partial void OnCertificateNumberFromChanging(string value);
    partial void OnCertificateNumberFromChanged();
    partial void OnCertificateNumberToChanging(string value);
    partial void OnCertificateNumberToChanged();
    partial void OnOrganizationNameChanging(string value);
    partial void OnOrganizationNameChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public SchoolLeavingCertificateDeny()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UpdateId
		{
			get
			{
				return this._UpdateId;
			}
			set
			{
				if ((this._UpdateId != value))
				{
					this.OnUpdateIdChanging(value);
					this.SendPropertyChanging();
					this._UpdateId = value;
					this.SendPropertyChanged("UpdateId");
					this.OnUpdateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorAccountId", DbType="BigInt NOT NULL")]
		public long EditorAccountId
		{
			get
			{
				return this._EditorAccountId;
			}
			set
			{
				if ((this._EditorAccountId != value))
				{
					this.OnEditorAccountIdChanging(value);
					this.SendPropertyChanging();
					this._EditorAccountId = value;
					this.SendPropertyChanged("EditorAccountId");
					this.OnEditorAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EditorIp", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string EditorIp
		{
			get
			{
				return this._EditorIp;
			}
			set
			{
				if ((this._EditorIp != value))
				{
					this.OnEditorIpChanging(value);
					this.SendPropertyChanging();
					this._EditorIp = value;
					this.SendPropertyChanged("EditorIp");
					this.OnEditorIpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNumberFrom", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CertificateNumberFrom
		{
			get
			{
				return this._CertificateNumberFrom;
			}
			set
			{
				if ((this._CertificateNumberFrom != value))
				{
					this.OnCertificateNumberFromChanging(value);
					this.SendPropertyChanging();
					this._CertificateNumberFrom = value;
					this.SendPropertyChanged("CertificateNumberFrom");
					this.OnCertificateNumberFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateNumberTo", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string CertificateNumberTo
		{
			get
			{
				return this._CertificateNumberTo;
			}
			set
			{
				if ((this._CertificateNumberTo != value))
				{
					this.OnCertificateNumberToChanging(value);
					this.SendPropertyChanging();
					this._CertificateNumberTo = value;
					this.SendPropertyChanged("CertificateNumberTo");
					this.OnCertificateNumberToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationName", DbType="NVarChar(255)")]
		public string OrganizationName
		{
			get
			{
				return this._OrganizationName;
			}
			set
			{
				if ((this._OrganizationName != value))
				{
					this.OnOrganizationNameChanging(value);
					this.SendPropertyChanging();
					this._OrganizationName = value;
					this.SendPropertyChanged("OrganizationName");
					this.OnOrganizationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subject1")]
	public partial class Subject1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Name;
		
		private int _SortIndex;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortIndexChanging(int value);
    partial void OnSortIndexChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Subject1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortIndex", DbType="Int NOT NULL")]
		public int SortIndex
		{
			get
			{
				return this._SortIndex;
			}
			set
			{
				if ((this._SortIndex != value))
				{
					this.OnSortIndexChanging(value);
					this.SendPropertyChanging();
					this._SortIndex = value;
					this.SendPropertyChanged("SortIndex");
					this.OnSortIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubjectMapping")]
	public partial class SubjectMapping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<int> _id_subject_new;
		
		private string _code;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onid_subject_newChanging(System.Nullable<int> value);
    partial void Onid_subject_newChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    #endregion
		
		public SubjectMapping()
		{
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(250)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_subject_new", DbType="Int")]
		public System.Nullable<int> id_subject_new
		{
			get
			{
				return this._id_subject_new;
			}
			set
			{
				if ((this._id_subject_new != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_subject_newChanging(value);
					this.SendPropertyChanging();
					this._id_subject_new = value;
					this.SendPropertyChanged("id_subject_new");
					this.Onid_subject_newChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(250)")]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_SubjectMapping", Storage="_Subject", ThisKey="id_subject_new", OtherKey="SubjectCode", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.SubjectMappings.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.SubjectMappings.Add(this);
						this._id_subject_new = value.SubjectCode;
					}
					else
					{
						this._id_subject_new = default(Nullable<int>);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserAccountPassword")]
	public partial class UserAccountPassword : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _AccountId;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIdChanging(long value);
    partial void OnAccountIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public UserAccountPassword()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UsingTables")]
	public partial class UsingTable
	{
		
		private System.Nullable<char> _TableGroup;
		
		public UsingTable()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableGroup", DbType="NChar(1)")]
		public System.Nullable<char> TableGroup
		{
			get
			{
				return this._TableGroup;
			}
			set
			{
				if ((this._TableGroup != value))
				{
					this._TableGroup = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VpnIp")]
	public partial class VpnIp
	{
		
		private string _Ip;
		
		private bool _IsActive;
		
		public VpnIp()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ip", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Ip
		{
			get
			{
				return this._Ip;
			}
			set
			{
				if ((this._Ip != value))
				{
					this._Ip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="prn.CancelledCertificatesA")]
	public partial class CancelledCertificatesA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UseYear;
		
		private int _REGION;
		
		private System.Guid _CertificateFK;
		
		private string _Reason;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUseYearChanging(int value);
    partial void OnUseYearChanged();
    partial void OnREGIONChanging(int value);
    partial void OnREGIONChanged();
    partial void OnCertificateFKChanging(System.Guid value);
    partial void OnCertificateFKChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    #endregion
		
		public CancelledCertificatesA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseYear", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UseYear
		{
			get
			{
				return this._UseYear;
			}
			set
			{
				if ((this._UseYear != value))
				{
					this.OnUseYearChanging(value);
					this.SendPropertyChanging();
					this._UseYear = value;
					this.SendPropertyChanged("UseYear");
					this.OnUseYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGION", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int REGION
		{
			get
			{
				return this._REGION;
			}
			set
			{
				if ((this._REGION != value))
				{
					this.OnREGIONChanging(value);
					this.SendPropertyChanging();
					this._REGION = value;
					this.SendPropertyChanged("REGION");
					this.OnREGIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateFK", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CertificateFK
		{
			get
			{
				return this._CertificateFK;
			}
			set
			{
				if ((this._CertificateFK != value))
				{
					this.OnCertificateFKChanging(value);
					this.SendPropertyChanging();
					this._CertificateFK = value;
					this.SendPropertyChanged("CertificateFK");
					this.OnCertificateFKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(255)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="prn.CancelledCertificatesB")]
	public partial class CancelledCertificatesB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UseYear;
		
		private int _REGION;
		
		private System.Guid _CertificateFK;
		
		private string _Reason;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUseYearChanging(int value);
    partial void OnUseYearChanged();
    partial void OnREGIONChanging(int value);
    partial void OnREGIONChanged();
    partial void OnCertificateFKChanging(System.Guid value);
    partial void OnCertificateFKChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    #endregion
		
		public CancelledCertificatesB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseYear", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UseYear
		{
			get
			{
				return this._UseYear;
			}
			set
			{
				if ((this._UseYear != value))
				{
					this.OnUseYearChanging(value);
					this.SendPropertyChanging();
					this._UseYear = value;
					this.SendPropertyChanged("UseYear");
					this.OnUseYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGION", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int REGION
		{
			get
			{
				return this._REGION;
			}
			set
			{
				if ((this._REGION != value))
				{
					this.OnREGIONChanging(value);
					this.SendPropertyChanging();
					this._REGION = value;
					this.SendPropertyChanged("REGION");
					this.OnREGIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateFK", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CertificateFK
		{
			get
			{
				return this._CertificateFK;
			}
			set
			{
				if ((this._CertificateFK != value))
				{
					this.OnCertificateFKChanging(value);
					this.SendPropertyChanging();
					this._CertificateFK = value;
					this.SendPropertyChanged("CertificateFK");
					this.OnCertificateFKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(255)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="prn.CertificatesA")]
	public partial class CertificatesA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CertificateID;
		
		private int _UseYear;
		
		private int _REGION;
		
		private int _Wave;
		
		private string _LicenseNumber;
		
		private string _TypographicNumber;
		
		private System.Nullable<System.Guid> _ParticipantFK;
		
		private bool _Cancelled;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<System.DateTime> _ImportCreateDate;
		
		private System.Nullable<System.DateTime> _ImportUpdateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCertificateIDChanging(System.Guid value);
    partial void OnCertificateIDChanged();
    partial void OnUseYearChanging(int value);
    partial void OnUseYearChanged();
    partial void OnREGIONChanging(int value);
    partial void OnREGIONChanged();
    partial void OnWaveChanging(int value);
    partial void OnWaveChanged();
    partial void OnLicenseNumberChanging(string value);
    partial void OnLicenseNumberChanged();
    partial void OnTypographicNumberChanging(string value);
    partial void OnTypographicNumberChanged();
    partial void OnParticipantFKChanging(System.Nullable<System.Guid> value);
    partial void OnParticipantFKChanged();
    partial void OnCancelledChanging(bool value);
    partial void OnCancelledChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnImportCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnImportCreateDateChanged();
    partial void OnImportUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnImportUpdateDateChanged();
    #endregion
		
		public CertificatesA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CertificateID
		{
			get
			{
				return this._CertificateID;
			}
			set
			{
				if ((this._CertificateID != value))
				{
					this.OnCertificateIDChanging(value);
					this.SendPropertyChanging();
					this._CertificateID = value;
					this.SendPropertyChanged("CertificateID");
					this.OnCertificateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseYear", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UseYear
		{
			get
			{
				return this._UseYear;
			}
			set
			{
				if ((this._UseYear != value))
				{
					this.OnUseYearChanging(value);
					this.SendPropertyChanging();
					this._UseYear = value;
					this.SendPropertyChanged("UseYear");
					this.OnUseYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGION", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int REGION
		{
			get
			{
				return this._REGION;
			}
			set
			{
				if ((this._REGION != value))
				{
					this.OnREGIONChanging(value);
					this.SendPropertyChanging();
					this._REGION = value;
					this.SendPropertyChanged("REGION");
					this.OnREGIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wave", DbType="Int NOT NULL")]
		public int Wave
		{
			get
			{
				return this._Wave;
			}
			set
			{
				if ((this._Wave != value))
				{
					this.OnWaveChanging(value);
					this.SendPropertyChanging();
					this._Wave = value;
					this.SendPropertyChanged("Wave");
					this.OnWaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseNumber", DbType="NVarChar(18) NOT NULL", CanBeNull=false)]
		public string LicenseNumber
		{
			get
			{
				return this._LicenseNumber;
			}
			set
			{
				if ((this._LicenseNumber != value))
				{
					this.OnLicenseNumberChanging(value);
					this.SendPropertyChanging();
					this._LicenseNumber = value;
					this.SendPropertyChanged("LicenseNumber");
					this.OnLicenseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypographicNumber", DbType="NVarChar(12)")]
		public string TypographicNumber
		{
			get
			{
				return this._TypographicNumber;
			}
			set
			{
				if ((this._TypographicNumber != value))
				{
					this.OnTypographicNumberChanging(value);
					this.SendPropertyChanging();
					this._TypographicNumber = value;
					this.SendPropertyChanged("TypographicNumber");
					this.OnTypographicNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantFK", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParticipantFK
		{
			get
			{
				return this._ParticipantFK;
			}
			set
			{
				if ((this._ParticipantFK != value))
				{
					this.OnParticipantFKChanging(value);
					this.SendPropertyChanging();
					this._ParticipantFK = value;
					this.SendPropertyChanged("ParticipantFK");
					this.OnParticipantFKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cancelled", DbType="Bit NOT NULL")]
		public bool Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this.OnCancelledChanging(value);
					this.SendPropertyChanging();
					this._Cancelled = value;
					this.SendPropertyChanged("Cancelled");
					this.OnCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImportCreateDate
		{
			get
			{
				return this._ImportCreateDate;
			}
			set
			{
				if ((this._ImportCreateDate != value))
				{
					this.OnImportCreateDateChanging(value);
					this.SendPropertyChanging();
					this._ImportCreateDate = value;
					this.SendPropertyChanged("ImportCreateDate");
					this.OnImportCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImportUpdateDate
		{
			get
			{
				return this._ImportUpdateDate;
			}
			set
			{
				if ((this._ImportUpdateDate != value))
				{
					this.OnImportUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._ImportUpdateDate = value;
					this.SendPropertyChanged("ImportUpdateDate");
					this.OnImportUpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="prn.CertificatesB")]
	public partial class CertificatesB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CertificateID;
		
		private int _UseYear;
		
		private int _REGION;
		
		private int _Wave;
		
		private string _LicenseNumber;
		
		private string _TypographicNumber;
		
		private System.Nullable<System.Guid> _ParticipantFK;
		
		private bool _Cancelled;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<System.DateTime> _ImportCreateDate;
		
		private System.Nullable<System.DateTime> _ImportUpdateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCertificateIDChanging(System.Guid value);
    partial void OnCertificateIDChanged();
    partial void OnUseYearChanging(int value);
    partial void OnUseYearChanged();
    partial void OnREGIONChanging(int value);
    partial void OnREGIONChanged();
    partial void OnWaveChanging(int value);
    partial void OnWaveChanged();
    partial void OnLicenseNumberChanging(string value);
    partial void OnLicenseNumberChanged();
    partial void OnTypographicNumberChanging(string value);
    partial void OnTypographicNumberChanged();
    partial void OnParticipantFKChanging(System.Nullable<System.Guid> value);
    partial void OnParticipantFKChanged();
    partial void OnCancelledChanging(bool value);
    partial void OnCancelledChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnImportCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnImportCreateDateChanged();
    partial void OnImportUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnImportUpdateDateChanged();
    #endregion
		
		public CertificatesB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CertificateID
		{
			get
			{
				return this._CertificateID;
			}
			set
			{
				if ((this._CertificateID != value))
				{
					this.OnCertificateIDChanging(value);
					this.SendPropertyChanging();
					this._CertificateID = value;
					this.SendPropertyChanged("CertificateID");
					this.OnCertificateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseYear", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UseYear
		{
			get
			{
				return this._UseYear;
			}
			set
			{
				if ((this._UseYear != value))
				{
					this.OnUseYearChanging(value);
					this.SendPropertyChanging();
					this._UseYear = value;
					this.SendPropertyChanged("UseYear");
					this.OnUseYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGION", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int REGION
		{
			get
			{
				return this._REGION;
			}
			set
			{
				if ((this._REGION != value))
				{
					this.OnREGIONChanging(value);
					this.SendPropertyChanging();
					this._REGION = value;
					this.SendPropertyChanged("REGION");
					this.OnREGIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wave", DbType="Int NOT NULL")]
		public int Wave
		{
			get
			{
				return this._Wave;
			}
			set
			{
				if ((this._Wave != value))
				{
					this.OnWaveChanging(value);
					this.SendPropertyChanging();
					this._Wave = value;
					this.SendPropertyChanged("Wave");
					this.OnWaveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseNumber", DbType="NVarChar(18) NOT NULL", CanBeNull=false)]
		public string LicenseNumber
		{
			get
			{
				return this._LicenseNumber;
			}
			set
			{
				if ((this._LicenseNumber != value))
				{
					this.OnLicenseNumberChanging(value);
					this.SendPropertyChanging();
					this._LicenseNumber = value;
					this.SendPropertyChanged("LicenseNumber");
					this.OnLicenseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypographicNumber", DbType="NVarChar(12)")]
		public string TypographicNumber
		{
			get
			{
				return this._TypographicNumber;
			}
			set
			{
				if ((this._TypographicNumber != value))
				{
					this.OnTypographicNumberChanging(value);
					this.SendPropertyChanging();
					this._TypographicNumber = value;
					this.SendPropertyChanged("TypographicNumber");
					this.OnTypographicNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantFK", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParticipantFK
		{
			get
			{
				return this._ParticipantFK;
			}
			set
			{
				if ((this._ParticipantFK != value))
				{
					this.OnParticipantFKChanging(value);
					this.SendPropertyChanging();
					this._ParticipantFK = value;
					this.SendPropertyChanged("ParticipantFK");
					this.OnParticipantFKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cancelled", DbType="Bit NOT NULL")]
		public bool Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this.OnCancelledChanging(value);
					this.SendPropertyChanging();
					this._Cancelled = value;
					this.SendPropertyChanged("Cancelled");
					this.OnCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImportCreateDate
		{
			get
			{
				return this._ImportCreateDate;
			}
			set
			{
				if ((this._ImportCreateDate != value))
				{
					this.OnImportCreateDateChanging(value);
					this.SendPropertyChanging();
					this._ImportCreateDate = value;
					this.SendPropertyChanged("ImportCreateDate");
					this.OnImportCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImportUpdateDate
		{
			get
			{
				return this._ImportUpdateDate;
			}
			set
			{
				if ((this._ImportUpdateDate != value))
				{
					this.OnImportUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._ImportUpdateDate = value;
					this.SendPropertyChanged("ImportUpdateDate");
					this.OnImportUpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="prn.CertificatesMarksA")]
	public partial class CertificatesMarksA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CertificateMarkID;
		
		private int _UseYear;
		
		private int _REGION;
		
		private System.Guid _CertificateFK;
		
		private System.Guid _ParticipantFK;
		
		private int _SubjectCode;
		
		private int _Mark;
		
		private bool _HasAppeal;
		
		private System.Nullable<System.Guid> _PrintedMarkID;
		
		private int _TestTypeID;
		
		private int _ProcessCondition;
		
		private System.Nullable<int> _VariantCode;
		
		private System.Nullable<int> _AppealStatusID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCertificateMarkIDChanging(System.Guid value);
    partial void OnCertificateMarkIDChanged();
    partial void OnUseYearChanging(int value);
    partial void OnUseYearChanged();
    partial void OnREGIONChanging(int value);
    partial void OnREGIONChanged();
    partial void OnCertificateFKChanging(System.Guid value);
    partial void OnCertificateFKChanged();
    partial void OnParticipantFKChanging(System.Guid value);
    partial void OnParticipantFKChanged();
    partial void OnSubjectCodeChanging(int value);
    partial void OnSubjectCodeChanged();
    partial void OnMarkChanging(int value);
    partial void OnMarkChanged();
    partial void OnHasAppealChanging(bool value);
    partial void OnHasAppealChanged();
    partial void OnPrintedMarkIDChanging(System.Nullable<System.Guid> value);
    partial void OnPrintedMarkIDChanged();
    partial void OnTestTypeIDChanging(int value);
    partial void OnTestTypeIDChanged();
    partial void OnProcessConditionChanging(int value);
    partial void OnProcessConditionChanged();
    partial void OnVariantCodeChanging(System.Nullable<int> value);
    partial void OnVariantCodeChanged();
    partial void OnAppealStatusIDChanging(System.Nullable<int> value);
    partial void OnAppealStatusIDChanged();
    #endregion
		
		public CertificatesMarksA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateMarkID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CertificateMarkID
		{
			get
			{
				return this._CertificateMarkID;
			}
			set
			{
				if ((this._CertificateMarkID != value))
				{
					this.OnCertificateMarkIDChanging(value);
					this.SendPropertyChanging();
					this._CertificateMarkID = value;
					this.SendPropertyChanged("CertificateMarkID");
					this.OnCertificateMarkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseYear", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UseYear
		{
			get
			{
				return this._UseYear;
			}
			set
			{
				if ((this._UseYear != value))
				{
					this.OnUseYearChanging(value);
					this.SendPropertyChanging();
					this._UseYear = value;
					this.SendPropertyChanged("UseYear");
					this.OnUseYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGION", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int REGION
		{
			get
			{
				return this._REGION;
			}
			set
			{
				if ((this._REGION != value))
				{
					this.OnREGIONChanging(value);
					this.SendPropertyChanging();
					this._REGION = value;
					this.SendPropertyChanged("REGION");
					this.OnREGIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateFK", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CertificateFK
		{
			get
			{
				return this._CertificateFK;
			}
			set
			{
				if ((this._CertificateFK != value))
				{
					this.OnCertificateFKChanging(value);
					this.SendPropertyChanging();
					this._CertificateFK = value;
					this.SendPropertyChanged("CertificateFK");
					this.OnCertificateFKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantFK", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParticipantFK
		{
			get
			{
				return this._ParticipantFK;
			}
			set
			{
				if ((this._ParticipantFK != value))
				{
					this.OnParticipantFKChanging(value);
					this.SendPropertyChanging();
					this._ParticipantFK = value;
					this.SendPropertyChanged("ParticipantFK");
					this.OnParticipantFKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectCode", DbType="Int NOT NULL")]
		public int SubjectCode
		{
			get
			{
				return this._SubjectCode;
			}
			set
			{
				if ((this._SubjectCode != value))
				{
					this.OnSubjectCodeChanging(value);
					this.SendPropertyChanging();
					this._SubjectCode = value;
					this.SendPropertyChanged("SubjectCode");
					this.OnSubjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int NOT NULL")]
		public int Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAppeal", DbType="Bit NOT NULL")]
		public bool HasAppeal
		{
			get
			{
				return this._HasAppeal;
			}
			set
			{
				if ((this._HasAppeal != value))
				{
					this.OnHasAppealChanging(value);
					this.SendPropertyChanging();
					this._HasAppeal = value;
					this.SendPropertyChanged("HasAppeal");
					this.OnHasAppealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintedMarkID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PrintedMarkID
		{
			get
			{
				return this._PrintedMarkID;
			}
			set
			{
				if ((this._PrintedMarkID != value))
				{
					this.OnPrintedMarkIDChanging(value);
					this.SendPropertyChanging();
					this._PrintedMarkID = value;
					this.SendPropertyChanged("PrintedMarkID");
					this.OnPrintedMarkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestTypeID", DbType="Int NOT NULL")]
		public int TestTypeID
		{
			get
			{
				return this._TestTypeID;
			}
			set
			{
				if ((this._TestTypeID != value))
				{
					this.OnTestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TestTypeID = value;
					this.SendPropertyChanged("TestTypeID");
					this.OnTestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessCondition", DbType="Int NOT NULL")]
		public int ProcessCondition
		{
			get
			{
				return this._ProcessCondition;
			}
			set
			{
				if ((this._ProcessCondition != value))
				{
					this.OnProcessConditionChanging(value);
					this.SendPropertyChanging();
					this._ProcessCondition = value;
					this.SendPropertyChanged("ProcessCondition");
					this.OnProcessConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariantCode", DbType="Int")]
		public System.Nullable<int> VariantCode
		{
			get
			{
				return this._VariantCode;
			}
			set
			{
				if ((this._VariantCode != value))
				{
					this.OnVariantCodeChanging(value);
					this.SendPropertyChanging();
					this._VariantCode = value;
					this.SendPropertyChanged("VariantCode");
					this.OnVariantCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppealStatusID", DbType="Int")]
		public System.Nullable<int> AppealStatusID
		{
			get
			{
				return this._AppealStatusID;
			}
			set
			{
				if ((this._AppealStatusID != value))
				{
					this.OnAppealStatusIDChanging(value);
					this.SendPropertyChanging();
					this._AppealStatusID = value;
					this.SendPropertyChanged("AppealStatusID");
					this.OnAppealStatusIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="prn.CertificatesMarksB")]
	public partial class CertificatesMarksB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CertificateMarkID;
		
		private int _UseYear;
		
		private int _REGION;
		
		private System.Guid _CertificateFK;
		
		private System.Guid _ParticipantFK;
		
		private int _SubjectCode;
		
		private int _Mark;
		
		private bool _HasAppeal;
		
		private System.Nullable<System.Guid> _PrintedMarkID;
		
		private int _TestTypeID;
		
		private int _ProcessCondition;
		
		private System.Nullable<int> _AppealStatusID;
		
		private System.Nullable<int> _VariantCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCertificateMarkIDChanging(System.Guid value);
    partial void OnCertificateMarkIDChanged();
    partial void OnUseYearChanging(int value);
    partial void OnUseYearChanged();
    partial void OnREGIONChanging(int value);
    partial void OnREGIONChanged();
    partial void OnCertificateFKChanging(System.Guid value);
    partial void OnCertificateFKChanged();
    partial void OnParticipantFKChanging(System.Guid value);
    partial void OnParticipantFKChanged();
    partial void OnSubjectCodeChanging(int value);
    partial void OnSubjectCodeChanged();
    partial void OnMarkChanging(int value);
    partial void OnMarkChanged();
    partial void OnHasAppealChanging(bool value);
    partial void OnHasAppealChanged();
    partial void OnPrintedMarkIDChanging(System.Nullable<System.Guid> value);
    partial void OnPrintedMarkIDChanged();
    partial void OnTestTypeIDChanging(int value);
    partial void OnTestTypeIDChanged();
    partial void OnProcessConditionChanging(int value);
    partial void OnProcessConditionChanged();
    partial void OnAppealStatusIDChanging(System.Nullable<int> value);
    partial void OnAppealStatusIDChanged();
    partial void OnVariantCodeChanging(System.Nullable<int> value);
    partial void OnVariantCodeChanged();
    #endregion
		
		public CertificatesMarksB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateMarkID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CertificateMarkID
		{
			get
			{
				return this._CertificateMarkID;
			}
			set
			{
				if ((this._CertificateMarkID != value))
				{
					this.OnCertificateMarkIDChanging(value);
					this.SendPropertyChanging();
					this._CertificateMarkID = value;
					this.SendPropertyChanged("CertificateMarkID");
					this.OnCertificateMarkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseYear", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UseYear
		{
			get
			{
				return this._UseYear;
			}
			set
			{
				if ((this._UseYear != value))
				{
					this.OnUseYearChanging(value);
					this.SendPropertyChanging();
					this._UseYear = value;
					this.SendPropertyChanged("UseYear");
					this.OnUseYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGION", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int REGION
		{
			get
			{
				return this._REGION;
			}
			set
			{
				if ((this._REGION != value))
				{
					this.OnREGIONChanging(value);
					this.SendPropertyChanging();
					this._REGION = value;
					this.SendPropertyChanged("REGION");
					this.OnREGIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateFK", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CertificateFK
		{
			get
			{
				return this._CertificateFK;
			}
			set
			{
				if ((this._CertificateFK != value))
				{
					this.OnCertificateFKChanging(value);
					this.SendPropertyChanging();
					this._CertificateFK = value;
					this.SendPropertyChanged("CertificateFK");
					this.OnCertificateFKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantFK", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParticipantFK
		{
			get
			{
				return this._ParticipantFK;
			}
			set
			{
				if ((this._ParticipantFK != value))
				{
					this.OnParticipantFKChanging(value);
					this.SendPropertyChanging();
					this._ParticipantFK = value;
					this.SendPropertyChanged("ParticipantFK");
					this.OnParticipantFKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectCode", DbType="Int NOT NULL")]
		public int SubjectCode
		{
			get
			{
				return this._SubjectCode;
			}
			set
			{
				if ((this._SubjectCode != value))
				{
					this.OnSubjectCodeChanging(value);
					this.SendPropertyChanging();
					this._SubjectCode = value;
					this.SendPropertyChanged("SubjectCode");
					this.OnSubjectCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int NOT NULL")]
		public int Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAppeal", DbType="Bit NOT NULL")]
		public bool HasAppeal
		{
			get
			{
				return this._HasAppeal;
			}
			set
			{
				if ((this._HasAppeal != value))
				{
					this.OnHasAppealChanging(value);
					this.SendPropertyChanging();
					this._HasAppeal = value;
					this.SendPropertyChanged("HasAppeal");
					this.OnHasAppealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintedMarkID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PrintedMarkID
		{
			get
			{
				return this._PrintedMarkID;
			}
			set
			{
				if ((this._PrintedMarkID != value))
				{
					this.OnPrintedMarkIDChanging(value);
					this.SendPropertyChanging();
					this._PrintedMarkID = value;
					this.SendPropertyChanged("PrintedMarkID");
					this.OnPrintedMarkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestTypeID", DbType="Int NOT NULL")]
		public int TestTypeID
		{
			get
			{
				return this._TestTypeID;
			}
			set
			{
				if ((this._TestTypeID != value))
				{
					this.OnTestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TestTypeID = value;
					this.SendPropertyChanged("TestTypeID");
					this.OnTestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessCondition", DbType="Int NOT NULL")]
		public int ProcessCondition
		{
			get
			{
				return this._ProcessCondition;
			}
			set
			{
				if ((this._ProcessCondition != value))
				{
					this.OnProcessConditionChanging(value);
					this.SendPropertyChanging();
					this._ProcessCondition = value;
					this.SendPropertyChanged("ProcessCondition");
					this.OnProcessConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppealStatusID", DbType="Int")]
		public System.Nullable<int> AppealStatusID
		{
			get
			{
				return this._AppealStatusID;
			}
			set
			{
				if ((this._AppealStatusID != value))
				{
					this.OnAppealStatusIDChanging(value);
					this.SendPropertyChanging();
					this._AppealStatusID = value;
					this.SendPropertyChanged("AppealStatusID");
					this.OnAppealStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariantCode", DbType="Int")]
		public System.Nullable<int> VariantCode
		{
			get
			{
				return this._VariantCode;
			}
			set
			{
				if ((this._VariantCode != value))
				{
					this.OnVariantCodeChanging(value);
					this.SendPropertyChanging();
					this._VariantCode = value;
					this.SendPropertyChanged("VariantCode");
					this.OnVariantCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="rbd.ParticipantsA")]
	public partial class ParticipantsA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ParticipantID;
		
		private int _UseYear;
		
		private int _REGION;
		
		private string _ParticipantCode;
		
		private string _Surname;
		
		private string _Name;
		
		private string _SecondName;
		
		private string _DocumentSeries;
		
		private string _DocumentNumber;
		
		private int _DocumentTypeCode;
		
		private bool _Sex;
		
		private System.DateTime _BirthDay;
		
		private System.Nullable<int> _FinishRegion;
		
		private int _ParticipantCategoryFK;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Nullable<System.DateTime> _ImportCreateDate;
		
		private System.Nullable<System.DateTime> _ImportUpdateDate;
		
		private int _TestTypeID;
		
		private string _SurnameTrimmed;
		
		private string _NameTrimmed;
		
		private string _SecondNameTrimmed;
		
		private System.Nullable<int> _PersonId;
		
		private System.Nullable<System.DateTime> _PersonLinkDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParticipantIDChanging(System.Guid value);
    partial void OnParticipantIDChanged();
    partial void OnUseYearChanging(int value);
    partial void OnUseYearChanged();
    partial void OnREGIONChanging(int value);
    partial void OnREGIONChanged();
    partial void OnParticipantCodeChanging(string value);
    partial void OnParticipantCodeChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSecondNameChanging(string value);
    partial void OnSecondNameChanged();
    partial void OnDocumentSeriesChanging(string value);
    partial void OnDocumentSeriesChanged();
    partial void OnDocumentNumberChanging(string value);
    partial void OnDocumentNumberChanged();
    partial void OnDocumentTypeCodeChanging(int value);
    partial void OnDocumentTypeCodeChanged();
    partial void OnSexChanging(bool value);
    partial void OnSexChanged();
    partial void OnBirthDayChanging(System.DateTime value);
    partial void OnBirthDayChanged();
    partial void OnFinishRegionChanging(System.Nullable<int> value);
    partial void OnFinishRegionChanged();
    partial void OnParticipantCategoryFKChanging(int value);
    partial void OnParticipantCategoryFKChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnImportCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnImportCreateDateChanged();
    partial void OnImportUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnImportUpdateDateChanged();
    partial void OnTestTypeIDChanging(int value);
    partial void OnTestTypeIDChanged();
    partial void OnSurnameTrimmedChanging(string value);
    partial void OnSurnameTrimmedChanged();
    partial void OnNameTrimmedChanging(string value);
    partial void OnNameTrimmedChanged();
    partial void OnSecondNameTrimmedChanging(string value);
    partial void OnSecondNameTrimmedChanged();
    partial void OnPersonIdChanging(System.Nullable<int> value);
    partial void OnPersonIdChanged();
    partial void OnPersonLinkDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPersonLinkDateChanged();
    #endregion
		
		public ParticipantsA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ParticipantID
		{
			get
			{
				return this._ParticipantID;
			}
			set
			{
				if ((this._ParticipantID != value))
				{
					this.OnParticipantIDChanging(value);
					this.SendPropertyChanging();
					this._ParticipantID = value;
					this.SendPropertyChanged("ParticipantID");
					this.OnParticipantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseYear", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UseYear
		{
			get
			{
				return this._UseYear;
			}
			set
			{
				if ((this._UseYear != value))
				{
					this.OnUseYearChanging(value);
					this.SendPropertyChanging();
					this._UseYear = value;
					this.SendPropertyChanged("UseYear");
					this.OnUseYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGION", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int REGION
		{
			get
			{
				return this._REGION;
			}
			set
			{
				if ((this._REGION != value))
				{
					this.OnREGIONChanging(value);
					this.SendPropertyChanging();
					this._REGION = value;
					this.SendPropertyChanged("REGION");
					this.OnREGIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantCode", DbType="VarChar(16)")]
		public string ParticipantCode
		{
			get
			{
				return this._ParticipantCode;
			}
			set
			{
				if ((this._ParticipantCode != value))
				{
					this.OnParticipantCodeChanging(value);
					this.SendPropertyChanging();
					this._ParticipantCode = value;
					this.SendPropertyChanged("ParticipantCode");
					this.OnParticipantCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondName", DbType="VarChar(80)")]
		public string SecondName
		{
			get
			{
				return this._SecondName;
			}
			set
			{
				if ((this._SecondName != value))
				{
					this.OnSecondNameChanging(value);
					this.SendPropertyChanging();
					this._SecondName = value;
					this.SendPropertyChanged("SecondName");
					this.OnSecondNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentSeries", DbType="VarChar(9)")]
		public string DocumentSeries
		{
			get
			{
				return this._DocumentSeries;
			}
			set
			{
				if ((this._DocumentSeries != value))
				{
					this.OnDocumentSeriesChanging(value);
					this.SendPropertyChanging();
					this._DocumentSeries = value;
					this.SendPropertyChanged("DocumentSeries");
					this.OnDocumentSeriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this.OnDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._DocumentNumber = value;
					this.SendPropertyChanged("DocumentNumber");
					this.OnDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeCode", DbType="Int NOT NULL")]
		public int DocumentTypeCode
		{
			get
			{
				return this._DocumentTypeCode;
			}
			set
			{
				if ((this._DocumentTypeCode != value))
				{
					this.OnDocumentTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeCode = value;
					this.SendPropertyChanged("DocumentTypeCode");
					this.OnDocumentTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit NOT NULL")]
		public bool Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDay", DbType="DateTime NOT NULL")]
		public System.DateTime BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this.OnBirthDayChanging(value);
					this.SendPropertyChanging();
					this._BirthDay = value;
					this.SendPropertyChanged("BirthDay");
					this.OnBirthDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishRegion", DbType="Int")]
		public System.Nullable<int> FinishRegion
		{
			get
			{
				return this._FinishRegion;
			}
			set
			{
				if ((this._FinishRegion != value))
				{
					this.OnFinishRegionChanging(value);
					this.SendPropertyChanging();
					this._FinishRegion = value;
					this.SendPropertyChanged("FinishRegion");
					this.OnFinishRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantCategoryFK", DbType="Int NOT NULL")]
		public int ParticipantCategoryFK
		{
			get
			{
				return this._ParticipantCategoryFK;
			}
			set
			{
				if ((this._ParticipantCategoryFK != value))
				{
					this.OnParticipantCategoryFKChanging(value);
					this.SendPropertyChanging();
					this._ParticipantCategoryFK = value;
					this.SendPropertyChanged("ParticipantCategoryFK");
					this.OnParticipantCategoryFKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImportCreateDate
		{
			get
			{
				return this._ImportCreateDate;
			}
			set
			{
				if ((this._ImportCreateDate != value))
				{
					this.OnImportCreateDateChanging(value);
					this.SendPropertyChanging();
					this._ImportCreateDate = value;
					this.SendPropertyChanged("ImportCreateDate");
					this.OnImportCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImportUpdateDate
		{
			get
			{
				return this._ImportUpdateDate;
			}
			set
			{
				if ((this._ImportUpdateDate != value))
				{
					this.OnImportUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._ImportUpdateDate = value;
					this.SendPropertyChanged("ImportUpdateDate");
					this.OnImportUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestTypeID", DbType="Int NOT NULL")]
		public int TestTypeID
		{
			get
			{
				return this._TestTypeID;
			}
			set
			{
				if ((this._TestTypeID != value))
				{
					this.OnTestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TestTypeID = value;
					this.SendPropertyChanged("TestTypeID");
					this.OnTestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurnameTrimmed", DbType="VarChar(80)")]
		public string SurnameTrimmed
		{
			get
			{
				return this._SurnameTrimmed;
			}
			set
			{
				if ((this._SurnameTrimmed != value))
				{
					this.OnSurnameTrimmedChanging(value);
					this.SendPropertyChanging();
					this._SurnameTrimmed = value;
					this.SendPropertyChanged("SurnameTrimmed");
					this.OnSurnameTrimmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameTrimmed", DbType="VarChar(80)")]
		public string NameTrimmed
		{
			get
			{
				return this._NameTrimmed;
			}
			set
			{
				if ((this._NameTrimmed != value))
				{
					this.OnNameTrimmedChanging(value);
					this.SendPropertyChanging();
					this._NameTrimmed = value;
					this.SendPropertyChanged("NameTrimmed");
					this.OnNameTrimmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondNameTrimmed", DbType="VarChar(80)")]
		public string SecondNameTrimmed
		{
			get
			{
				return this._SecondNameTrimmed;
			}
			set
			{
				if ((this._SecondNameTrimmed != value))
				{
					this.OnSecondNameTrimmedChanging(value);
					this.SendPropertyChanging();
					this._SecondNameTrimmed = value;
					this.SendPropertyChanged("SecondNameTrimmed");
					this.OnSecondNameTrimmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="Int")]
		public System.Nullable<int> PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonLinkDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PersonLinkDate
		{
			get
			{
				return this._PersonLinkDate;
			}
			set
			{
				if ((this._PersonLinkDate != value))
				{
					this.OnPersonLinkDateChanging(value);
					this.SendPropertyChanging();
					this._PersonLinkDate = value;
					this.SendPropertyChanged("PersonLinkDate");
					this.OnPersonLinkDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="rbd.ParticipantsB")]
	public partial class ParticipantsB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ParticipantID;
		
		private int _UseYear;
		
		private int _REGION;
		
		private string _ParticipantCode;
		
		private string _Surname;
		
		private string _Name;
		
		private string _SecondName;
		
		private string _DocumentSeries;
		
		private string _DocumentNumber;
		
		private int _DocumentTypeCode;
		
		private bool _Sex;
		
		private System.DateTime _BirthDay;
		
		private System.Nullable<int> _FinishRegion;
		
		private int _ParticipantCategoryFK;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Nullable<System.DateTime> _ImportCreateDate;
		
		private System.Nullable<System.DateTime> _ImportUpdateDate;
		
		private int _TestTypeID;
		
		private string _SurnameTrimmed;
		
		private string _NameTrimmed;
		
		private string _SecondNameTrimmed;
		
		private System.Nullable<int> _PersonId;
		
		private System.Nullable<System.DateTime> _PersonLinkDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParticipantIDChanging(System.Guid value);
    partial void OnParticipantIDChanged();
    partial void OnUseYearChanging(int value);
    partial void OnUseYearChanged();
    partial void OnREGIONChanging(int value);
    partial void OnREGIONChanged();
    partial void OnParticipantCodeChanging(string value);
    partial void OnParticipantCodeChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSecondNameChanging(string value);
    partial void OnSecondNameChanged();
    partial void OnDocumentSeriesChanging(string value);
    partial void OnDocumentSeriesChanged();
    partial void OnDocumentNumberChanging(string value);
    partial void OnDocumentNumberChanged();
    partial void OnDocumentTypeCodeChanging(int value);
    partial void OnDocumentTypeCodeChanged();
    partial void OnSexChanging(bool value);
    partial void OnSexChanged();
    partial void OnBirthDayChanging(System.DateTime value);
    partial void OnBirthDayChanged();
    partial void OnFinishRegionChanging(System.Nullable<int> value);
    partial void OnFinishRegionChanged();
    partial void OnParticipantCategoryFKChanging(int value);
    partial void OnParticipantCategoryFKChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnImportCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnImportCreateDateChanged();
    partial void OnImportUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnImportUpdateDateChanged();
    partial void OnTestTypeIDChanging(int value);
    partial void OnTestTypeIDChanged();
    partial void OnSurnameTrimmedChanging(string value);
    partial void OnSurnameTrimmedChanged();
    partial void OnNameTrimmedChanging(string value);
    partial void OnNameTrimmedChanged();
    partial void OnSecondNameTrimmedChanging(string value);
    partial void OnSecondNameTrimmedChanged();
    partial void OnPersonIdChanging(System.Nullable<int> value);
    partial void OnPersonIdChanged();
    partial void OnPersonLinkDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPersonLinkDateChanged();
    #endregion
		
		public ParticipantsB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ParticipantID
		{
			get
			{
				return this._ParticipantID;
			}
			set
			{
				if ((this._ParticipantID != value))
				{
					this.OnParticipantIDChanging(value);
					this.SendPropertyChanging();
					this._ParticipantID = value;
					this.SendPropertyChanged("ParticipantID");
					this.OnParticipantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseYear", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UseYear
		{
			get
			{
				return this._UseYear;
			}
			set
			{
				if ((this._UseYear != value))
				{
					this.OnUseYearChanging(value);
					this.SendPropertyChanging();
					this._UseYear = value;
					this.SendPropertyChanged("UseYear");
					this.OnUseYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGION", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int REGION
		{
			get
			{
				return this._REGION;
			}
			set
			{
				if ((this._REGION != value))
				{
					this.OnREGIONChanging(value);
					this.SendPropertyChanging();
					this._REGION = value;
					this.SendPropertyChanged("REGION");
					this.OnREGIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantCode", DbType="VarChar(16)")]
		public string ParticipantCode
		{
			get
			{
				return this._ParticipantCode;
			}
			set
			{
				if ((this._ParticipantCode != value))
				{
					this.OnParticipantCodeChanging(value);
					this.SendPropertyChanging();
					this._ParticipantCode = value;
					this.SendPropertyChanged("ParticipantCode");
					this.OnParticipantCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondName", DbType="VarChar(80)")]
		public string SecondName
		{
			get
			{
				return this._SecondName;
			}
			set
			{
				if ((this._SecondName != value))
				{
					this.OnSecondNameChanging(value);
					this.SendPropertyChanging();
					this._SecondName = value;
					this.SendPropertyChanged("SecondName");
					this.OnSecondNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentSeries", DbType="VarChar(9)")]
		public string DocumentSeries
		{
			get
			{
				return this._DocumentSeries;
			}
			set
			{
				if ((this._DocumentSeries != value))
				{
					this.OnDocumentSeriesChanging(value);
					this.SendPropertyChanging();
					this._DocumentSeries = value;
					this.SendPropertyChanged("DocumentSeries");
					this.OnDocumentSeriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this.OnDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._DocumentNumber = value;
					this.SendPropertyChanged("DocumentNumber");
					this.OnDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeCode", DbType="Int NOT NULL")]
		public int DocumentTypeCode
		{
			get
			{
				return this._DocumentTypeCode;
			}
			set
			{
				if ((this._DocumentTypeCode != value))
				{
					this.OnDocumentTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeCode = value;
					this.SendPropertyChanged("DocumentTypeCode");
					this.OnDocumentTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit NOT NULL")]
		public bool Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDay", DbType="DateTime NOT NULL")]
		public System.DateTime BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this.OnBirthDayChanging(value);
					this.SendPropertyChanging();
					this._BirthDay = value;
					this.SendPropertyChanged("BirthDay");
					this.OnBirthDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishRegion", DbType="Int")]
		public System.Nullable<int> FinishRegion
		{
			get
			{
				return this._FinishRegion;
			}
			set
			{
				if ((this._FinishRegion != value))
				{
					this.OnFinishRegionChanging(value);
					this.SendPropertyChanging();
					this._FinishRegion = value;
					this.SendPropertyChanged("FinishRegion");
					this.OnFinishRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantCategoryFK", DbType="Int NOT NULL")]
		public int ParticipantCategoryFK
		{
			get
			{
				return this._ParticipantCategoryFK;
			}
			set
			{
				if ((this._ParticipantCategoryFK != value))
				{
					this.OnParticipantCategoryFKChanging(value);
					this.SendPropertyChanging();
					this._ParticipantCategoryFK = value;
					this.SendPropertyChanged("ParticipantCategoryFK");
					this.OnParticipantCategoryFKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImportCreateDate
		{
			get
			{
				return this._ImportCreateDate;
			}
			set
			{
				if ((this._ImportCreateDate != value))
				{
					this.OnImportCreateDateChanging(value);
					this.SendPropertyChanging();
					this._ImportCreateDate = value;
					this.SendPropertyChanged("ImportCreateDate");
					this.OnImportCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImportUpdateDate
		{
			get
			{
				return this._ImportUpdateDate;
			}
			set
			{
				if ((this._ImportUpdateDate != value))
				{
					this.OnImportUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._ImportUpdateDate = value;
					this.SendPropertyChanged("ImportUpdateDate");
					this.OnImportUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestTypeID", DbType="Int NOT NULL")]
		public int TestTypeID
		{
			get
			{
				return this._TestTypeID;
			}
			set
			{
				if ((this._TestTypeID != value))
				{
					this.OnTestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TestTypeID = value;
					this.SendPropertyChanged("TestTypeID");
					this.OnTestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurnameTrimmed", DbType="VarChar(80)")]
		public string SurnameTrimmed
		{
			get
			{
				return this._SurnameTrimmed;
			}
			set
			{
				if ((this._SurnameTrimmed != value))
				{
					this.OnSurnameTrimmedChanging(value);
					this.SendPropertyChanging();
					this._SurnameTrimmed = value;
					this.SendPropertyChanged("SurnameTrimmed");
					this.OnSurnameTrimmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameTrimmed", DbType="VarChar(80)")]
		public string NameTrimmed
		{
			get
			{
				return this._NameTrimmed;
			}
			set
			{
				if ((this._NameTrimmed != value))
				{
					this.OnNameTrimmedChanging(value);
					this.SendPropertyChanging();
					this._NameTrimmed = value;
					this.SendPropertyChanged("NameTrimmed");
					this.OnNameTrimmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondNameTrimmed", DbType="VarChar(80)")]
		public string SecondNameTrimmed
		{
			get
			{
				return this._SecondNameTrimmed;
			}
			set
			{
				if ((this._SecondNameTrimmed != value))
				{
					this.OnSecondNameTrimmedChanging(value);
					this.SendPropertyChanging();
					this._SecondNameTrimmed = value;
					this.SendPropertyChanged("SecondNameTrimmed");
					this.OnSecondNameTrimmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="Int")]
		public System.Nullable<int> PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonLinkDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PersonLinkDate
		{
			get
			{
				return this._PersonLinkDate;
			}
			set
			{
				if ((this._PersonLinkDate != value))
				{
					this.OnPersonLinkDateChanging(value);
					this.SendPropertyChanging();
					this._PersonLinkDate = value;
					this.SendPropertyChanged("PersonLinkDate");
					this.OnPersonLinkDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="rbdc.DocumentTypes")]
	public partial class DocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentTypeCode;
		
		private string _DocumentTypeName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentTypeCodeChanging(int value);
    partial void OnDocumentTypeCodeChanged();
    partial void OnDocumentTypeNameChanging(string value);
    partial void OnDocumentTypeNameChanged();
    #endregion
		
		public DocumentType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeCode", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DocumentTypeCode
		{
			get
			{
				return this._DocumentTypeCode;
			}
			set
			{
				if ((this._DocumentTypeCode != value))
				{
					this.OnDocumentTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeCode = value;
					this.SendPropertyChanged("DocumentTypeCode");
					this.OnDocumentTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeName", DbType="VarChar(255)")]
		public string DocumentTypeName
		{
			get
			{
				return this._DocumentTypeName;
			}
			set
			{
				if ((this._DocumentTypeName != value))
				{
					this.OnDocumentTypeNameChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeName = value;
					this.SendPropertyChanged("DocumentTypeName");
					this.OnDocumentTypeNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="rbdc.ParticipantCategories")]
	public partial class ParticipantCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryID;
		
		private int _CategoryCode;
		
		private string _CategoryName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnCategoryCodeChanging(int value);
    partial void OnCategoryCodeChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    #endregion
		
		public ParticipantCategory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryCode", DbType="Int NOT NULL")]
		public int CategoryCode
		{
			get
			{
				return this._CategoryCode;
			}
			set
			{
				if ((this._CategoryCode != value))
				{
					this.OnCategoryCodeChanging(value);
					this.SendPropertyChanging();
					this._CategoryCode = value;
					this.SendPropertyChanged("CategoryCode");
					this.OnCategoryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="rbdc.Regions")]
	public partial class Region1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _REGION;
		
		private string _RegionName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnREGIONChanging(int value);
    partial void OnREGIONChanged();
    partial void OnRegionNameChanging(string value);
    partial void OnRegionNameChanged();
    #endregion
		
		public Region1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGION", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int REGION
		{
			get
			{
				return this._REGION;
			}
			set
			{
				if ((this._REGION != value))
				{
					this.OnREGIONChanging(value);
					this.SendPropertyChanging();
					this._REGION = value;
					this.SendPropertyChanged("REGION");
					this.OnREGIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this.OnRegionNameChanging(value);
					this.SendPropertyChanging();
					this._RegionName = value;
					this.SendPropertyChanged("RegionName");
					this.OnRegionNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="rbdc.ResultStatuses")]
	public partial class ResultStatuse1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusID;
		
		private int _GlobalStatusID;
		
		private string _StatusName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnGlobalStatusIDChanging(int value);
    partial void OnGlobalStatusIDChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    #endregion
		
		public ResultStatuse1()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GlobalStatusID", DbType="Int NOT NULL")]
		public int GlobalStatusID
		{
			get
			{
				return this._GlobalStatusID;
			}
			set
			{
				if ((this._GlobalStatusID != value))
				{
					this.OnGlobalStatusIDChanging(value);
					this.SendPropertyChanging();
					this._GlobalStatusID = value;
					this.SendPropertyChanged("GlobalStatusID");
					this.OnGlobalStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="VarChar(100)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="rbdc.Translation_RVIDT_ParticipantDT")]
	public partial class Translation_RVIDT_ParticipantDT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RVIDocumentTypeCode;
		
		private int _ParticipantDocumentTypeCode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRVIDocumentTypeCodeChanging(int value);
    partial void OnRVIDocumentTypeCodeChanged();
    partial void OnParticipantDocumentTypeCodeChanging(int value);
    partial void OnParticipantDocumentTypeCodeChanged();
    #endregion
		
		public Translation_RVIDT_ParticipantDT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RVIDocumentTypeCode", DbType="Int NOT NULL")]
		public int RVIDocumentTypeCode
		{
			get
			{
				return this._RVIDocumentTypeCode;
			}
			set
			{
				if ((this._RVIDocumentTypeCode != value))
				{
					this.OnRVIDocumentTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._RVIDocumentTypeCode = value;
					this.SendPropertyChanged("RVIDocumentTypeCode");
					this.OnRVIDocumentTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantDocumentTypeCode", DbType="Int NOT NULL")]
		public int ParticipantDocumentTypeCode
		{
			get
			{
				return this._ParticipantDocumentTypeCode;
			}
			set
			{
				if ((this._ParticipantDocumentTypeCode != value))
				{
					this.OnParticipantDocumentTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._ParticipantDocumentTypeCode = value;
					this.SendPropertyChanged("ParticipantDocumentTypeCode");
					this.OnParticipantDocumentTypeCodeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="rbd.Participants")]
	public partial class Participant
	{
		
		private System.Guid _ParticipantID;
		
		private int _UseYear;
		
		private int _REGION;
		
		private string _ParticipantCode;
		
		private string _Surname;
		
		private string _Name;
		
		private string _SecondName;
		
		private string _DocumentSeries;
		
		private string _DocumentNumber;
		
		private int _DocumentTypeCode;
		
		private bool _Sex;
		
		private System.DateTime _BirthDay;
		
		private System.Nullable<int> _FinishRegion;
		
		private int _ParticipantCategoryFK;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.Nullable<System.DateTime> _ImportCreateDate;
		
		private System.Nullable<System.DateTime> _ImportUpdateDate;
		
		private int _TestTypeID;
		
		private string _SurnameTrimmed;
		
		private string _NameTrimmed;
		
		private string _SecondNameTrimmed;
		
		private System.Nullable<int> _PersonId;
		
		private System.Nullable<System.DateTime> _PersonLinkDate;
		
		public Participant()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParticipantID
		{
			get
			{
				return this._ParticipantID;
			}
			set
			{
				if ((this._ParticipantID != value))
				{
					this._ParticipantID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseYear", DbType="Int NOT NULL")]
		public int UseYear
		{
			get
			{
				return this._UseYear;
			}
			set
			{
				if ((this._UseYear != value))
				{
					this._UseYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGION", DbType="Int NOT NULL")]
		public int REGION
		{
			get
			{
				return this._REGION;
			}
			set
			{
				if ((this._REGION != value))
				{
					this._REGION = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantCode", DbType="VarChar(16)")]
		public string ParticipantCode
		{
			get
			{
				return this._ParticipantCode;
			}
			set
			{
				if ((this._ParticipantCode != value))
				{
					this._ParticipantCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this._Surname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondName", DbType="VarChar(80)")]
		public string SecondName
		{
			get
			{
				return this._SecondName;
			}
			set
			{
				if ((this._SecondName != value))
				{
					this._SecondName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentSeries", DbType="VarChar(9)")]
		public string DocumentSeries
		{
			get
			{
				return this._DocumentSeries;
			}
			set
			{
				if ((this._DocumentSeries != value))
				{
					this._DocumentSeries = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this._DocumentNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeCode", DbType="Int NOT NULL")]
		public int DocumentTypeCode
		{
			get
			{
				return this._DocumentTypeCode;
			}
			set
			{
				if ((this._DocumentTypeCode != value))
				{
					this._DocumentTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit NOT NULL")]
		public bool Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this._Sex = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDay", DbType="DateTime NOT NULL")]
		public System.DateTime BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this._BirthDay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinishRegion", DbType="Int")]
		public System.Nullable<int> FinishRegion
		{
			get
			{
				return this._FinishRegion;
			}
			set
			{
				if ((this._FinishRegion != value))
				{
					this._FinishRegion = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantCategoryFK", DbType="Int NOT NULL")]
		public int ParticipantCategoryFK
		{
			get
			{
				return this._ParticipantCategoryFK;
			}
			set
			{
				if ((this._ParticipantCategoryFK != value))
				{
					this._ParticipantCategoryFK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImportCreateDate
		{
			get
			{
				return this._ImportCreateDate;
			}
			set
			{
				if ((this._ImportCreateDate != value))
				{
					this._ImportCreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImportUpdateDate
		{
			get
			{
				return this._ImportUpdateDate;
			}
			set
			{
				if ((this._ImportUpdateDate != value))
				{
					this._ImportUpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestTypeID", DbType="Int NOT NULL")]
		public int TestTypeID
		{
			get
			{
				return this._TestTypeID;
			}
			set
			{
				if ((this._TestTypeID != value))
				{
					this._TestTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurnameTrimmed", DbType="VarChar(80)")]
		public string SurnameTrimmed
		{
			get
			{
				return this._SurnameTrimmed;
			}
			set
			{
				if ((this._SurnameTrimmed != value))
				{
					this._SurnameTrimmed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameTrimmed", DbType="VarChar(80)")]
		public string NameTrimmed
		{
			get
			{
				return this._NameTrimmed;
			}
			set
			{
				if ((this._NameTrimmed != value))
				{
					this._NameTrimmed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondNameTrimmed", DbType="VarChar(80)")]
		public string SecondNameTrimmed
		{
			get
			{
				return this._SecondNameTrimmed;
			}
			set
			{
				if ((this._SecondNameTrimmed != value))
				{
					this._SecondNameTrimmed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="Int")]
		public System.Nullable<int> PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this._PersonId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonLinkDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PersonLinkDate
		{
			get
			{
				return this._PersonLinkDate;
			}
			set
			{
				if ((this._PersonLinkDate != value))
				{
					this._PersonLinkDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="prn.CancelledCertificates")]
	public partial class CancelledCertificate1
	{
		
		private int _UseYear;
		
		private int _REGION;
		
		private System.Guid _CertificateFK;
		
		private string _Reason;
		
		public CancelledCertificate1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseYear", DbType="Int NOT NULL")]
		public int UseYear
		{
			get
			{
				return this._UseYear;
			}
			set
			{
				if ((this._UseYear != value))
				{
					this._UseYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGION", DbType="Int NOT NULL")]
		public int REGION
		{
			get
			{
				return this._REGION;
			}
			set
			{
				if ((this._REGION != value))
				{
					this._REGION = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateFK", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CertificateFK
		{
			get
			{
				return this._CertificateFK;
			}
			set
			{
				if ((this._CertificateFK != value))
				{
					this._CertificateFK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(255)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this._Reason = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="prn.Certificates")]
	public partial class Certificate
	{
		
		private System.Guid _CertificateID;
		
		private int _UseYear;
		
		private int _REGION;
		
		private int _Wave;
		
		private string _LicenseNumber;
		
		private string _TypographicNumber;
		
		private System.Nullable<System.Guid> _ParticipantFK;
		
		private bool _Cancelled;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private System.Nullable<System.DateTime> _ImportCreateDate;
		
		private System.Nullable<System.DateTime> _ImportUpdateDate;
		
		public Certificate()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CertificateID
		{
			get
			{
				return this._CertificateID;
			}
			set
			{
				if ((this._CertificateID != value))
				{
					this._CertificateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseYear", DbType="Int NOT NULL")]
		public int UseYear
		{
			get
			{
				return this._UseYear;
			}
			set
			{
				if ((this._UseYear != value))
				{
					this._UseYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGION", DbType="Int NOT NULL")]
		public int REGION
		{
			get
			{
				return this._REGION;
			}
			set
			{
				if ((this._REGION != value))
				{
					this._REGION = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wave", DbType="Int NOT NULL")]
		public int Wave
		{
			get
			{
				return this._Wave;
			}
			set
			{
				if ((this._Wave != value))
				{
					this._Wave = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseNumber", DbType="NVarChar(18) NOT NULL", CanBeNull=false)]
		public string LicenseNumber
		{
			get
			{
				return this._LicenseNumber;
			}
			set
			{
				if ((this._LicenseNumber != value))
				{
					this._LicenseNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypographicNumber", DbType="NVarChar(12)")]
		public string TypographicNumber
		{
			get
			{
				return this._TypographicNumber;
			}
			set
			{
				if ((this._TypographicNumber != value))
				{
					this._TypographicNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantFK", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParticipantFK
		{
			get
			{
				return this._ParticipantFK;
			}
			set
			{
				if ((this._ParticipantFK != value))
				{
					this._ParticipantFK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cancelled", DbType="Bit NOT NULL")]
		public bool Cancelled
		{
			get
			{
				return this._Cancelled;
			}
			set
			{
				if ((this._Cancelled != value))
				{
					this._Cancelled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImportCreateDate
		{
			get
			{
				return this._ImportCreateDate;
			}
			set
			{
				if ((this._ImportCreateDate != value))
				{
					this._ImportCreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ImportUpdateDate
		{
			get
			{
				return this._ImportUpdateDate;
			}
			set
			{
				if ((this._ImportUpdateDate != value))
				{
					this._ImportUpdateDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="prn.CertificatesMarks")]
	public partial class CertificatesMark
	{
		
		private System.Guid _CertificateMarkID;
		
		private int _UseYear;
		
		private int _REGION;
		
		private System.Guid _CertificateFK;
		
		private System.Guid _ParticipantFK;
		
		private int _SubjectCode;
		
		private int _Mark;
		
		private bool _HasAppeal;
		
		private System.Nullable<System.Guid> _PrintedMarkID;
		
		private int _TestTypeID;
		
		private int _ProcessCondition;
		
		private System.Nullable<int> _VariantCode;
		
		private System.Nullable<int> _AppealStatusID;
		
		public CertificatesMark()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateMarkID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CertificateMarkID
		{
			get
			{
				return this._CertificateMarkID;
			}
			set
			{
				if ((this._CertificateMarkID != value))
				{
					this._CertificateMarkID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseYear", DbType="Int NOT NULL")]
		public int UseYear
		{
			get
			{
				return this._UseYear;
			}
			set
			{
				if ((this._UseYear != value))
				{
					this._UseYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGION", DbType="Int NOT NULL")]
		public int REGION
		{
			get
			{
				return this._REGION;
			}
			set
			{
				if ((this._REGION != value))
				{
					this._REGION = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CertificateFK", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CertificateFK
		{
			get
			{
				return this._CertificateFK;
			}
			set
			{
				if ((this._CertificateFK != value))
				{
					this._CertificateFK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantFK", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParticipantFK
		{
			get
			{
				return this._ParticipantFK;
			}
			set
			{
				if ((this._ParticipantFK != value))
				{
					this._ParticipantFK = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectCode", DbType="Int NOT NULL")]
		public int SubjectCode
		{
			get
			{
				return this._SubjectCode;
			}
			set
			{
				if ((this._SubjectCode != value))
				{
					this._SubjectCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int NOT NULL")]
		public int Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this._Mark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasAppeal", DbType="Bit NOT NULL")]
		public bool HasAppeal
		{
			get
			{
				return this._HasAppeal;
			}
			set
			{
				if ((this._HasAppeal != value))
				{
					this._HasAppeal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintedMarkID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PrintedMarkID
		{
			get
			{
				return this._PrintedMarkID;
			}
			set
			{
				if ((this._PrintedMarkID != value))
				{
					this._PrintedMarkID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestTypeID", DbType="Int NOT NULL")]
		public int TestTypeID
		{
			get
			{
				return this._TestTypeID;
			}
			set
			{
				if ((this._TestTypeID != value))
				{
					this._TestTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessCondition", DbType="Int NOT NULL")]
		public int ProcessCondition
		{
			get
			{
				return this._ProcessCondition;
			}
			set
			{
				if ((this._ProcessCondition != value))
				{
					this._ProcessCondition = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VariantCode", DbType="Int")]
		public System.Nullable<int> VariantCode
		{
			get
			{
				return this._VariantCode;
			}
			set
			{
				if ((this._VariantCode != value))
				{
					this._VariantCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppealStatusID", DbType="Int")]
		public System.Nullable<int> AppealStatusID
		{
			get
			{
				return this._AppealStatusID;
			}
			set
			{
				if ((this._AppealStatusID != value))
				{
					this._AppealStatusID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
