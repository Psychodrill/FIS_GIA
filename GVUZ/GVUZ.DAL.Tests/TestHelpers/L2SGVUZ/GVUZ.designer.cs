#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GVUZ.DAL.Tests.TestHelpers.L2SGVUZ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GVUZ_Develop")]
	public partial class GVUZDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insert__MigrationHistory(__MigrationHistory instance);
    partial void Update__MigrationHistory(__MigrationHistory instance);
    partial void Delete__MigrationHistory(__MigrationHistory instance);
    partial void InsertViolationType(ViolationType instance);
    partial void UpdateViolationType(ViolationType instance);
    partial void DeleteViolationType(ViolationType instance);
    partial void Insert_A(_A instance);
    partial void Update_A(_A instance);
    partial void Delete_A(_A instance);
    partial void Insert_C(_C instance);
    partial void Update_C(_C instance);
    partial void Delete_C(_C instance);
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    partial void InsertAdmissionData(AdmissionData instance);
    partial void UpdateAdmissionData(AdmissionData instance);
    partial void DeleteAdmissionData(AdmissionData instance);
    partial void InsertAdmissionItemType(AdmissionItemType instance);
    partial void UpdateAdmissionItemType(AdmissionItemType instance);
    partial void DeleteAdmissionItemType(AdmissionItemType instance);
    partial void InsertAdmissionRule(AdmissionRule instance);
    partial void UpdateAdmissionRule(AdmissionRule instance);
    partial void DeleteAdmissionRule(AdmissionRule instance);
    partial void InsertAdmissionVolume(AdmissionVolume instance);
    partial void UpdateAdmissionVolume(AdmissionVolume instance);
    partial void DeleteAdmissionVolume(AdmissionVolume instance);
    partial void InsertAllowedDirection(AllowedDirection instance);
    partial void UpdateAllowedDirection(AllowedDirection instance);
    partial void DeleteAllowedDirection(AllowedDirection instance);
    partial void InsertAllowedDirectionStatus(AllowedDirectionStatus instance);
    partial void UpdateAllowedDirectionStatus(AllowedDirectionStatus instance);
    partial void DeleteAllowedDirectionStatus(AllowedDirectionStatus instance);
    partial void InsertAppealStatus(AppealStatus instance);
    partial void UpdateAppealStatus(AppealStatus instance);
    partial void DeleteAppealStatus(AppealStatus instance);
    partial void InsertApplication(Application instance);
    partial void UpdateApplication(Application instance);
    partial void DeleteApplication(Application instance);
    partial void InsertApplicationCheckStatus(ApplicationCheckStatus instance);
    partial void UpdateApplicationCheckStatus(ApplicationCheckStatus instance);
    partial void DeleteApplicationCheckStatus(ApplicationCheckStatus instance);
    partial void InsertApplicationCompetitiveGroupItem(ApplicationCompetitiveGroupItem instance);
    partial void UpdateApplicationCompetitiveGroupItem(ApplicationCompetitiveGroupItem instance);
    partial void DeleteApplicationCompetitiveGroupItem(ApplicationCompetitiveGroupItem instance);
    partial void InsertApplicationCompositionResult(ApplicationCompositionResult instance);
    partial void UpdateApplicationCompositionResult(ApplicationCompositionResult instance);
    partial void DeleteApplicationCompositionResult(ApplicationCompositionResult instance);
    partial void InsertApplicationCompositionResults_Approb(ApplicationCompositionResults_Approb instance);
    partial void UpdateApplicationCompositionResults_Approb(ApplicationCompositionResults_Approb instance);
    partial void DeleteApplicationCompositionResults_Approb(ApplicationCompositionResults_Approb instance);
    partial void InsertApplicationConsidered(ApplicationConsidered instance);
    partial void UpdateApplicationConsidered(ApplicationConsidered instance);
    partial void DeleteApplicationConsidered(ApplicationConsidered instance);
    partial void InsertApplicationEntranceTestDocument(ApplicationEntranceTestDocument instance);
    partial void UpdateApplicationEntranceTestDocument(ApplicationEntranceTestDocument instance);
    partial void DeleteApplicationEntranceTestDocument(ApplicationEntranceTestDocument instance);
    partial void InsertApplicationEntrantDocument(ApplicationEntrantDocument instance);
    partial void UpdateApplicationEntrantDocument(ApplicationEntrantDocument instance);
    partial void DeleteApplicationEntrantDocument(ApplicationEntrantDocument instance);
    partial void InsertApplicationExportRequest(ApplicationExportRequest instance);
    partial void UpdateApplicationExportRequest(ApplicationExportRequest instance);
    partial void DeleteApplicationExportRequest(ApplicationExportRequest instance);
    partial void InsertApplicationExtra(ApplicationExtra instance);
    partial void UpdateApplicationExtra(ApplicationExtra instance);
    partial void DeleteApplicationExtra(ApplicationExtra instance);
    partial void InsertApplicationExtraDefinition(ApplicationExtraDefinition instance);
    partial void UpdateApplicationExtraDefinition(ApplicationExtraDefinition instance);
    partial void DeleteApplicationExtraDefinition(ApplicationExtraDefinition instance);
    partial void InsertApplicationSelectedCompetitiveGroup(ApplicationSelectedCompetitiveGroup instance);
    partial void UpdateApplicationSelectedCompetitiveGroup(ApplicationSelectedCompetitiveGroup instance);
    partial void DeleteApplicationSelectedCompetitiveGroup(ApplicationSelectedCompetitiveGroup instance);
    partial void InsertApplicationSelectedCompetitiveGroupItem(ApplicationSelectedCompetitiveGroupItem instance);
    partial void UpdateApplicationSelectedCompetitiveGroupItem(ApplicationSelectedCompetitiveGroupItem instance);
    partial void DeleteApplicationSelectedCompetitiveGroupItem(ApplicationSelectedCompetitiveGroupItem instance);
    partial void InsertApplicationSelectedCompetitiveGroupTarget(ApplicationSelectedCompetitiveGroupTarget instance);
    partial void UpdateApplicationSelectedCompetitiveGroupTarget(ApplicationSelectedCompetitiveGroupTarget instance);
    partial void DeleteApplicationSelectedCompetitiveGroupTarget(ApplicationSelectedCompetitiveGroupTarget instance);
    partial void InsertApplicationStatusType(ApplicationStatusType instance);
    partial void UpdateApplicationStatusType(ApplicationStatusType instance);
    partial void DeleteApplicationStatusType(ApplicationStatusType instance);
    partial void Insertaspnet_Application(aspnet_Application instance);
    partial void Updateaspnet_Application(aspnet_Application instance);
    partial void Deleteaspnet_Application(aspnet_Application instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void Insertaspnet_Path(aspnet_Path instance);
    partial void Updateaspnet_Path(aspnet_Path instance);
    partial void Deleteaspnet_Path(aspnet_Path instance);
    partial void Insertaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Updateaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Deleteaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
    partial void Insertaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Updateaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Deleteaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
    partial void Insertaspnet_Profile(aspnet_Profile instance);
    partial void Updateaspnet_Profile(aspnet_Profile instance);
    partial void Deleteaspnet_Profile(aspnet_Profile instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void Insertaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Updateaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Deleteaspnet_SchemaVersion(aspnet_SchemaVersion instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
    partial void Insertaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Updateaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void Deleteaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
    partial void InsertAttachment(Attachment instance);
    partial void UpdateAttachment(Attachment instance);
    partial void DeleteAttachment(Attachment instance);
    partial void InsertBenefit(Benefit instance);
    partial void UpdateBenefit(Benefit instance);
    partial void DeleteBenefit(Benefit instance);
    partial void InsertBenefitItemC(BenefitItemC instance);
    partial void UpdateBenefitItemC(BenefitItemC instance);
    partial void DeleteBenefitItemC(BenefitItemC instance);
    partial void InsertBenefitItemCOlympicType(BenefitItemCOlympicType instance);
    partial void UpdateBenefitItemCOlympicType(BenefitItemCOlympicType instance);
    partial void DeleteBenefitItemCOlympicType(BenefitItemCOlympicType instance);
    partial void InsertBenefitItemCOlympicTypeProfile(BenefitItemCOlympicTypeProfile instance);
    partial void UpdateBenefitItemCOlympicTypeProfile(BenefitItemCOlympicTypeProfile instance);
    partial void DeleteBenefitItemCOlympicTypeProfile(BenefitItemCOlympicTypeProfile instance);
    partial void InsertBenefitItemCProfile(BenefitItemCProfile instance);
    partial void UpdateBenefitItemCProfile(BenefitItemCProfile instance);
    partial void DeleteBenefitItemCProfile(BenefitItemCProfile instance);
    partial void InsertBenefitItemSubject(BenefitItemSubject instance);
    partial void UpdateBenefitItemSubject(BenefitItemSubject instance);
    partial void DeleteBenefitItemSubject(BenefitItemSubject instance);
    partial void Insertbulk_Application(bulk_Application instance);
    partial void Updatebulk_Application(bulk_Application instance);
    partial void Deletebulk_Application(bulk_Application instance);
    partial void Insertbulk_Entrant(bulk_Entrant instance);
    partial void Updatebulk_Entrant(bulk_Entrant instance);
    partial void Deletebulk_Entrant(bulk_Entrant instance);
    partial void InsertCampaign(Campaign instance);
    partial void UpdateCampaign(Campaign instance);
    partial void DeleteCampaign(Campaign instance);
    partial void InsertCampaignEducationLevel(CampaignEducationLevel instance);
    partial void UpdateCampaignEducationLevel(CampaignEducationLevel instance);
    partial void DeleteCampaignEducationLevel(CampaignEducationLevel instance);
    partial void InsertCampaignOrderDateCatalog(CampaignOrderDateCatalog instance);
    partial void UpdateCampaignOrderDateCatalog(CampaignOrderDateCatalog instance);
    partial void DeleteCampaignOrderDateCatalog(CampaignOrderDateCatalog instance);
    partial void InsertCampaignStatus(CampaignStatus instance);
    partial void UpdateCampaignStatus(CampaignStatus instance);
    partial void DeleteCampaignStatus(CampaignStatus instance);
    partial void InsertCampaignType(CampaignType instance);
    partial void UpdateCampaignType(CampaignType instance);
    partial void DeleteCampaignType(CampaignType instance);
    partial void InsertCityType(CityType instance);
    partial void UpdateCityType(CityType instance);
    partial void DeleteCityType(CityType instance);
    partial void InsertCompetitiveGroup(CompetitiveGroup instance);
    partial void UpdateCompetitiveGroup(CompetitiveGroup instance);
    partial void DeleteCompetitiveGroup(CompetitiveGroup instance);
    partial void InsertCompetitiveGroupItem(CompetitiveGroupItem instance);
    partial void UpdateCompetitiveGroupItem(CompetitiveGroupItem instance);
    partial void DeleteCompetitiveGroupItem(CompetitiveGroupItem instance);
    partial void InsertCompetitiveGroupProgram(CompetitiveGroupProgram instance);
    partial void UpdateCompetitiveGroupProgram(CompetitiveGroupProgram instance);
    partial void DeleteCompetitiveGroupProgram(CompetitiveGroupProgram instance);
    partial void InsertCompetitiveGroupTarget(CompetitiveGroupTarget instance);
    partial void UpdateCompetitiveGroupTarget(CompetitiveGroupTarget instance);
    partial void DeleteCompetitiveGroupTarget(CompetitiveGroupTarget instance);
    partial void InsertCompetitiveGroupTargetItem(CompetitiveGroupTargetItem instance);
    partial void UpdateCompetitiveGroupTargetItem(CompetitiveGroupTargetItem instance);
    partial void DeleteCompetitiveGroupTargetItem(CompetitiveGroupTargetItem instance);
    partial void InsertCompositionTheme(CompositionTheme instance);
    partial void UpdateCompositionTheme(CompositionTheme instance);
    partial void DeleteCompositionTheme(CompositionTheme instance);
    partial void InsertCompositionThemes_Approb(CompositionThemes_Approb instance);
    partial void UpdateCompositionThemes_Approb(CompositionThemes_Approb instance);
    partial void DeleteCompositionThemes_Approb(CompositionThemes_Approb instance);
    partial void InsertCountryType(CountryType instance);
    partial void UpdateCountryType(CountryType instance);
    partial void DeleteCountryType(CountryType instance);
    partial void InsertCourseSubject(CourseSubject instance);
    partial void UpdateCourseSubject(CourseSubject instance);
    partial void DeleteCourseSubject(CourseSubject instance);
    partial void InsertCourseType(CourseType instance);
    partial void UpdateCourseType(CourseType instance);
    partial void DeleteCourseType(CourseType instance);
    partial void Insertdba_indexDefragLog(dba_indexDefragLog instance);
    partial void Updatedba_indexDefragLog(dba_indexDefragLog instance);
    partial void Deletedba_indexDefragLog(dba_indexDefragLog instance);
    partial void InsertDirection(Direction instance);
    partial void UpdateDirection(Direction instance);
    partial void DeleteDirection(Direction instance);
    partial void InsertDirectionSubjectLink(DirectionSubjectLink instance);
    partial void UpdateDirectionSubjectLink(DirectionSubjectLink instance);
    partial void DeleteDirectionSubjectLink(DirectionSubjectLink instance);
    partial void InsertDirectionSubjectLinkDirection(DirectionSubjectLinkDirection instance);
    partial void UpdateDirectionSubjectLinkDirection(DirectionSubjectLinkDirection instance);
    partial void DeleteDirectionSubjectLinkDirection(DirectionSubjectLinkDirection instance);
    partial void InsertDirectionSubjectLinkSubject(DirectionSubjectLinkSubject instance);
    partial void UpdateDirectionSubjectLinkSubject(DirectionSubjectLinkSubject instance);
    partial void DeleteDirectionSubjectLinkSubject(DirectionSubjectLinkSubject instance);
    partial void InsertDisabilityType(DisabilityType instance);
    partial void UpdateDisabilityType(DisabilityType instance);
    partial void DeleteDisabilityType(DisabilityType instance);
    partial void InsertDistributedAdmissionVolume(DistributedAdmissionVolume instance);
    partial void UpdateDistributedAdmissionVolume(DistributedAdmissionVolume instance);
    partial void DeleteDistributedAdmissionVolume(DistributedAdmissionVolume instance);
    partial void InsertDocumentCategory(DocumentCategory instance);
    partial void UpdateDocumentCategory(DocumentCategory instance);
    partial void DeleteDocumentCategory(DocumentCategory instance);
    partial void InsertDocumentCheckStatus(DocumentCheckStatus instance);
    partial void UpdateDocumentCheckStatus(DocumentCheckStatus instance);
    partial void DeleteDocumentCheckStatus(DocumentCheckStatus instance);
    partial void InsertDocumentType(DocumentType instance);
    partial void UpdateDocumentType(DocumentType instance);
    partial void DeleteDocumentType(DocumentType instance);
    partial void InsertEDU_PROGRAM_TYPE(EDU_PROGRAM_TYPE instance);
    partial void UpdateEDU_PROGRAM_TYPE(EDU_PROGRAM_TYPE instance);
    partial void DeleteEDU_PROGRAM_TYPE(EDU_PROGRAM_TYPE instance);
    partial void InsertEduLevelDocumentType(EduLevelDocumentType instance);
    partial void UpdateEduLevelDocumentType(EduLevelDocumentType instance);
    partial void DeleteEduLevelDocumentType(EduLevelDocumentType instance);
    partial void InsertEduLevel(EduLevel instance);
    partial void UpdateEduLevel(EduLevel instance);
    partial void DeleteEduLevel(EduLevel instance);
    partial void InsertEduLevelsToCampaignType(EduLevelsToCampaignType instance);
    partial void UpdateEduLevelsToCampaignType(EduLevelsToCampaignType instance);
    partial void DeleteEduLevelsToCampaignType(EduLevelsToCampaignType instance);
    partial void InsertEduLevelsToUgsCode(EduLevelsToUgsCode instance);
    partial void UpdateEduLevelsToUgsCode(EduLevelsToUgsCode instance);
    partial void DeleteEduLevelsToUgsCode(EduLevelsToUgsCode instance);
    partial void InsertEntranceTestCreativeDirection(EntranceTestCreativeDirection instance);
    partial void UpdateEntranceTestCreativeDirection(EntranceTestCreativeDirection instance);
    partial void DeleteEntranceTestCreativeDirection(EntranceTestCreativeDirection instance);
    partial void InsertEntranceTestItemC(EntranceTestItemC instance);
    partial void UpdateEntranceTestItemC(EntranceTestItemC instance);
    partial void DeleteEntranceTestItemC(EntranceTestItemC instance);
    partial void InsertEntranceTestProfileDirection(EntranceTestProfileDirection instance);
    partial void UpdateEntranceTestProfileDirection(EntranceTestProfileDirection instance);
    partial void DeleteEntranceTestProfileDirection(EntranceTestProfileDirection instance);
    partial void InsertEntranceTestResultSource(EntranceTestResultSource instance);
    partial void UpdateEntranceTestResultSource(EntranceTestResultSource instance);
    partial void DeleteEntranceTestResultSource(EntranceTestResultSource instance);
    partial void InsertEntranceTestType(EntranceTestType instance);
    partial void UpdateEntranceTestType(EntranceTestType instance);
    partial void DeleteEntranceTestType(EntranceTestType instance);
    partial void InsertEntrant(Entrant instance);
    partial void UpdateEntrant(Entrant instance);
    partial void DeleteEntrant(Entrant instance);
    partial void InsertEntrantDocument(EntrantDocument instance);
    partial void UpdateEntrantDocument(EntrantDocument instance);
    partial void DeleteEntrantDocument(EntrantDocument instance);
    partial void InsertEntrantDocumentMark(EntrantDocumentMark instance);
    partial void UpdateEntrantDocumentMark(EntrantDocumentMark instance);
    partial void DeleteEntrantDocumentMark(EntrantDocumentMark instance);
    partial void InsertEntrantLanguage(EntrantLanguage instance);
    partial void UpdateEntrantLanguage(EntrantLanguage instance);
    partial void DeleteEntrantLanguage(EntrantLanguage instance);
    partial void InsertFbsToFisMap(FbsToFisMap instance);
    partial void UpdateFbsToFisMap(FbsToFisMap instance);
    partial void DeleteFbsToFisMap(FbsToFisMap instance);
    partial void InsertfindPathTable(findPathTable instance);
    partial void UpdatefindPathTable(findPathTable instance);
    partial void DeletefindPathTable(findPathTable instance);
    partial void InsertForeignLanguageType(ForeignLanguageType instance);
    partial void UpdateForeignLanguageType(ForeignLanguageType instance);
    partial void DeleteForeignLanguageType(ForeignLanguageType instance);
    partial void InsertFormOfLaw(FormOfLaw instance);
    partial void UpdateFormOfLaw(FormOfLaw instance);
    partial void DeleteFormOfLaw(FormOfLaw instance);
    partial void InsertGenderType(GenderType instance);
    partial void UpdateGenderType(GenderType instance);
    partial void DeleteGenderType(GenderType instance);
    partial void InsertGlobalMinEge(GlobalMinEge instance);
    partial void UpdateGlobalMinEge(GlobalMinEge instance);
    partial void DeleteGlobalMinEge(GlobalMinEge instance);
    partial void InsertIdentityDocumentType(IdentityDocumentType instance);
    partial void UpdateIdentityDocumentType(IdentityDocumentType instance);
    partial void DeleteIdentityDocumentType(IdentityDocumentType instance);
    partial void InsertImportPackage(ImportPackage instance);
    partial void UpdateImportPackage(ImportPackage instance);
    partial void DeleteImportPackage(ImportPackage instance);
    partial void InsertImportPackageParsed(ImportPackageParsed instance);
    partial void UpdateImportPackageParsed(ImportPackageParsed instance);
    partial void DeleteImportPackageParsed(ImportPackageParsed instance);
    partial void InsertImportPackageParsed_back(ImportPackageParsed_back instance);
    partial void UpdateImportPackageParsed_back(ImportPackageParsed_back instance);
    partial void DeleteImportPackageParsed_back(ImportPackageParsed_back instance);
    partial void InsertImportPackageStatus(ImportPackageStatus instance);
    partial void UpdateImportPackageStatus(ImportPackageStatus instance);
    partial void DeleteImportPackageStatus(ImportPackageStatus instance);
    partial void InsertImportPackageType(ImportPackageType instance);
    partial void UpdateImportPackageType(ImportPackageType instance);
    partial void DeleteImportPackageType(ImportPackageType instance);
    partial void InsertIndividualAchievementsCategory(IndividualAchievementsCategory instance);
    partial void UpdateIndividualAchievementsCategory(IndividualAchievementsCategory instance);
    partial void DeleteIndividualAchievementsCategory(IndividualAchievementsCategory instance);
    partial void InsertIndividualAchivement(IndividualAchivement instance);
    partial void UpdateIndividualAchivement(IndividualAchivement instance);
    partial void DeleteIndividualAchivement(IndividualAchivement instance);
    partial void InsertInstitution(Institution instance);
    partial void UpdateInstitution(Institution instance);
    partial void DeleteInstitution(Institution instance);
    partial void InsertInstitutionAccreditation(InstitutionAccreditation instance);
    partial void UpdateInstitutionAccreditation(InstitutionAccreditation instance);
    partial void DeleteInstitutionAccreditation(InstitutionAccreditation instance);
    partial void InsertInstitutionAchievement(InstitutionAchievement instance);
    partial void UpdateInstitutionAchievement(InstitutionAchievement instance);
    partial void DeleteInstitutionAchievement(InstitutionAchievement instance);
    partial void InsertInstitutionDirectionRequest(InstitutionDirectionRequest instance);
    partial void UpdateInstitutionDirectionRequest(InstitutionDirectionRequest instance);
    partial void DeleteInstitutionDirectionRequest(InstitutionDirectionRequest instance);
    partial void InsertInstitutionDocument(InstitutionDocument instance);
    partial void UpdateInstitutionDocument(InstitutionDocument instance);
    partial void DeleteInstitutionDocument(InstitutionDocument instance);
    partial void InsertInstitutionDocumentType(InstitutionDocumentType instance);
    partial void UpdateInstitutionDocumentType(InstitutionDocumentType instance);
    partial void DeleteInstitutionDocumentType(InstitutionDocumentType instance);
    partial void InsertInstitutionHistory(InstitutionHistory instance);
    partial void UpdateInstitutionHistory(InstitutionHistory instance);
    partial void DeleteInstitutionHistory(InstitutionHistory instance);
    partial void InsertInstitutionItem(InstitutionItem instance);
    partial void UpdateInstitutionItem(InstitutionItem instance);
    partial void DeleteInstitutionItem(InstitutionItem instance);
    partial void InsertInstitutionItemType(InstitutionItemType instance);
    partial void UpdateInstitutionItemType(InstitutionItemType instance);
    partial void DeleteInstitutionItemType(InstitutionItemType instance);
    partial void InsertInstitutionLicense(InstitutionLicense instance);
    partial void UpdateInstitutionLicense(InstitutionLicense instance);
    partial void DeleteInstitutionLicense(InstitutionLicense instance);
    partial void InsertInstitutionStructure(InstitutionStructure instance);
    partial void UpdateInstitutionStructure(InstitutionStructure instance);
    partial void DeleteInstitutionStructure(InstitutionStructure instance);
    partial void InsertInstitutionType(InstitutionType instance);
    partial void UpdateInstitutionType(InstitutionType instance);
    partial void DeleteInstitutionType(InstitutionType instance);
    partial void InsertLevelBudget(LevelBudget instance);
    partial void UpdateLevelBudget(LevelBudget instance);
    partial void DeleteLevelBudget(LevelBudget instance);
    partial void InsertMinScoreByRON(MinScoreByRON instance);
    partial void UpdateMinScoreByRON(MinScoreByRON instance);
    partial void DeleteMinScoreByRON(MinScoreByRON instance);
    partial void InsertNationalityType(NationalityType instance);
    partial void UpdateNationalityType(NationalityType instance);
    partial void DeleteNationalityType(NationalityType instance);
    partial void InsertNormativeDictionary(NormativeDictionary instance);
    partial void UpdateNormativeDictionary(NormativeDictionary instance);
    partial void DeleteNormativeDictionary(NormativeDictionary instance);
    partial void InsertNormativeVersionState(NormativeVersionState instance);
    partial void UpdateNormativeVersionState(NormativeVersionState instance);
    partial void DeleteNormativeVersionState(NormativeVersionState instance);
    partial void InsertOlympicDiplomant(OlympicDiplomant instance);
    partial void UpdateOlympicDiplomant(OlympicDiplomant instance);
    partial void DeleteOlympicDiplomant(OlympicDiplomant instance);
    partial void InsertOlympicDiplomantDocument(OlympicDiplomantDocument instance);
    partial void UpdateOlympicDiplomantDocument(OlympicDiplomantDocument instance);
    partial void DeleteOlympicDiplomantDocument(OlympicDiplomantDocument instance);
    partial void InsertOlympicDiplomantStatus(OlympicDiplomantStatus instance);
    partial void UpdateOlympicDiplomantStatus(OlympicDiplomantStatus instance);
    partial void DeleteOlympicDiplomantStatus(OlympicDiplomantStatus instance);
    partial void InsertOlympicDiplomType(OlympicDiplomType instance);
    partial void UpdateOlympicDiplomType(OlympicDiplomType instance);
    partial void DeleteOlympicDiplomType(OlympicDiplomType instance);
    partial void InsertOlympicLevel(OlympicLevel instance);
    partial void UpdateOlympicLevel(OlympicLevel instance);
    partial void DeleteOlympicLevel(OlympicLevel instance);
    partial void InsertOlympicProfile(OlympicProfile instance);
    partial void UpdateOlympicProfile(OlympicProfile instance);
    partial void DeleteOlympicProfile(OlympicProfile instance);
    partial void InsertOlympicSubject(OlympicSubject instance);
    partial void UpdateOlympicSubject(OlympicSubject instance);
    partial void DeleteOlympicSubject(OlympicSubject instance);
    partial void InsertOlympicType(OlympicType instance);
    partial void UpdateOlympicType(OlympicType instance);
    partial void DeleteOlympicType(OlympicType instance);
    partial void InsertOlympicTypeProfile(OlympicTypeProfile instance);
    partial void UpdateOlympicTypeProfile(OlympicTypeProfile instance);
    partial void DeleteOlympicTypeProfile(OlympicTypeProfile instance);
    partial void InsertOrderOfAdmission(OrderOfAdmission instance);
    partial void UpdateOrderOfAdmission(OrderOfAdmission instance);
    partial void DeleteOrderOfAdmission(OrderOfAdmission instance);
    partial void InsertOrderOfAdmissionHistory(OrderOfAdmissionHistory instance);
    partial void UpdateOrderOfAdmissionHistory(OrderOfAdmissionHistory instance);
    partial void DeleteOrderOfAdmissionHistory(OrderOfAdmissionHistory instance);
    partial void InsertOrderOfAdmissionType(OrderOfAdmissionType instance);
    partial void UpdateOrderOfAdmissionType(OrderOfAdmissionType instance);
    partial void DeleteOrderOfAdmissionType(OrderOfAdmissionType instance);
    partial void InsertParentDirection(ParentDirection instance);
    partial void UpdateParentDirection(ParentDirection instance);
    partial void DeleteParentDirection(ParentDirection instance);
    partial void InsertPersonalDataAccessLog(PersonalDataAccessLog instance);
    partial void UpdatePersonalDataAccessLog(PersonalDataAccessLog instance);
    partial void DeletePersonalDataAccessLog(PersonalDataAccessLog instance);
    partial void InsertPreparatoryCourse(PreparatoryCourse instance);
    partial void UpdatePreparatoryCourse(PreparatoryCourse instance);
    partial void DeletePreparatoryCourse(PreparatoryCourse instance);
    partial void InsertRecomendedList(RecomendedList instance);
    partial void UpdateRecomendedList(RecomendedList instance);
    partial void DeleteRecomendedList(RecomendedList instance);
    partial void InsertRecomendedListsHistory(RecomendedListsHistory instance);
    partial void UpdateRecomendedListsHistory(RecomendedListsHistory instance);
    partial void DeleteRecomendedListsHistory(RecomendedListsHistory instance);
    partial void InsertRegionType(RegionType instance);
    partial void UpdateRegionType(RegionType instance);
    partial void DeleteRegionType(RegionType instance);
    partial void InsertRequestComment(RequestComment instance);
    partial void UpdateRequestComment(RequestComment instance);
    partial void DeleteRequestComment(RequestComment instance);
    partial void InsertRequestDirection(RequestDirection instance);
    partial void UpdateRequestDirection(RequestDirection instance);
    partial void DeleteRequestDirection(RequestDirection instance);
    partial void InsertRVIDocumentType(RVIDocumentType instance);
    partial void UpdateRVIDocumentType(RVIDocumentType instance);
    partial void DeleteRVIDocumentType(RVIDocumentType instance);
    partial void InsertRVIPersonIdentDoc(RVIPersonIdentDoc instance);
    partial void UpdateRVIPersonIdentDoc(RVIPersonIdentDoc instance);
    partial void DeleteRVIPersonIdentDoc(RVIPersonIdentDoc instance);
    partial void InsertRVIPerson(RVIPerson instance);
    partial void UpdateRVIPerson(RVIPerson instance);
    partial void DeleteRVIPerson(RVIPerson instance);
    partial void InsertSubject(Subject instance);
    partial void UpdateSubject(Subject instance);
    partial void DeleteSubject(Subject instance);
    partial void InsertSubjectEgeMinValue(SubjectEgeMinValue instance);
    partial void UpdateSubjectEgeMinValue(SubjectEgeMinValue instance);
    partial void DeleteSubjectEgeMinValue(SubjectEgeMinValue instance);
    partial void InsertTEMP_HighMarks_2015(TEMP_HighMarks_2015 instance);
    partial void UpdateTEMP_HighMarks_2015(TEMP_HighMarks_2015 instance);
    partial void DeleteTEMP_HighMarks_2015(TEMP_HighMarks_2015 instance);
    partial void InsertTranslation_RVIDT_IdentityDT(Translation_RVIDT_IdentityDT instance);
    partial void UpdateTranslation_RVIDT_IdentityDT(Translation_RVIDT_IdentityDT instance);
    partial void DeleteTranslation_RVIDT_IdentityDT(Translation_RVIDT_IdentityDT instance);
    partial void InsertUserPolicy(UserPolicy instance);
    partial void UpdateUserPolicy(UserPolicy instance);
    partial void DeleteUserPolicy(UserPolicy instance);
    #endregion
		
		public GVUZDataContext() : 
				base(global::GVUZ.DAL.Tests.Properties.Settings.Default.GVUZ_DevelopConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GVUZDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GVUZDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GVUZDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GVUZDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<@__MigrationHistory> @__MigrationHistories
		{
			get
			{
				return this.GetTable<@__MigrationHistory>();
			}
		}
		
		public System.Data.Linq.Table<ViolationType> ViolationTypes
		{
			get
			{
				return this.GetTable<ViolationType>();
			}
		}
		
		public System.Data.Linq.Table<@__ORD_A> @__ORD_As
		{
			get
			{
				return this.GetTable<@__ORD_A>();
			}
		}
		
		public System.Data.Linq.Table<@__ORD_C> @__ORD_Cs
		{
			get
			{
				return this.GetTable<@__ORD_C>();
			}
		}
		
		public System.Data.Linq.Table<_A> _As
		{
			get
			{
				return this.GetTable<_A>();
			}
		}
		
		public System.Data.Linq.Table<_C> _Cs
		{
			get
			{
				return this.GetTable<_C>();
			}
		}
		
		public System.Data.Linq.Table<_Entrant> _Entrants
		{
			get
			{
				return this.GetTable<_Entrant>();
			}
		}
		
		public System.Data.Linq.Table<Address> Addresses
		{
			get
			{
				return this.GetTable<Address>();
			}
		}
		
		public System.Data.Linq.Table<AdmissionData> AdmissionDatas
		{
			get
			{
				return this.GetTable<AdmissionData>();
			}
		}
		
		public System.Data.Linq.Table<AdmissionItemType> AdmissionItemTypes
		{
			get
			{
				return this.GetTable<AdmissionItemType>();
			}
		}
		
		public System.Data.Linq.Table<AdmissionRule> AdmissionRules
		{
			get
			{
				return this.GetTable<AdmissionRule>();
			}
		}
		
		public System.Data.Linq.Table<AdmissionVolume> AdmissionVolumes
		{
			get
			{
				return this.GetTable<AdmissionVolume>();
			}
		}
		
		public System.Data.Linq.Table<AdmissionVolumeKCP> AdmissionVolumeKCPs
		{
			get
			{
				return this.GetTable<AdmissionVolumeKCP>();
			}
		}
		
		public System.Data.Linq.Table<AllowedDirection> AllowedDirections
		{
			get
			{
				return this.GetTable<AllowedDirection>();
			}
		}
		
		public System.Data.Linq.Table<AllowedDirectionStatus> AllowedDirectionStatus
		{
			get
			{
				return this.GetTable<AllowedDirectionStatus>();
			}
		}
		
		public System.Data.Linq.Table<AppealStatus> AppealStatus
		{
			get
			{
				return this.GetTable<AppealStatus>();
			}
		}
		
		public System.Data.Linq.Table<Application> Applications
		{
			get
			{
				return this.GetTable<Application>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationCheckStatus> ApplicationCheckStatus
		{
			get
			{
				return this.GetTable<ApplicationCheckStatus>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationCompetitiveGroupItem> ApplicationCompetitiveGroupItems
		{
			get
			{
				return this.GetTable<ApplicationCompetitiveGroupItem>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationCompositionResult> ApplicationCompositionResults
		{
			get
			{
				return this.GetTable<ApplicationCompositionResult>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationCompositionResults_Approb> ApplicationCompositionResults_Approbs
		{
			get
			{
				return this.GetTable<ApplicationCompositionResults_Approb>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationConsidered> ApplicationConsidereds
		{
			get
			{
				return this.GetTable<ApplicationConsidered>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationEntranceTestDocument> ApplicationEntranceTestDocuments
		{
			get
			{
				return this.GetTable<ApplicationEntranceTestDocument>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationEntrantDocument> ApplicationEntrantDocuments
		{
			get
			{
				return this.GetTable<ApplicationEntrantDocument>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationExportRequest> ApplicationExportRequests
		{
			get
			{
				return this.GetTable<ApplicationExportRequest>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationExtra> ApplicationExtras
		{
			get
			{
				return this.GetTable<ApplicationExtra>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationExtraDefinition> ApplicationExtraDefinitions
		{
			get
			{
				return this.GetTable<ApplicationExtraDefinition>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationSelectedCompetitiveGroup> ApplicationSelectedCompetitiveGroups
		{
			get
			{
				return this.GetTable<ApplicationSelectedCompetitiveGroup>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationSelectedCompetitiveGroupItem> ApplicationSelectedCompetitiveGroupItems
		{
			get
			{
				return this.GetTable<ApplicationSelectedCompetitiveGroupItem>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationSelectedCompetitiveGroupTarget> ApplicationSelectedCompetitiveGroupTargets
		{
			get
			{
				return this.GetTable<ApplicationSelectedCompetitiveGroupTarget>();
			}
		}
		
		public System.Data.Linq.Table<ApplicationStatusType> ApplicationStatusTypes
		{
			get
			{
				return this.GetTable<ApplicationStatusType>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Application> aspnet_Applications
		{
			get
			{
				return this.GetTable<aspnet_Application>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this.GetTable<aspnet_Path>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationAllUser> aspnet_PersonalizationAllUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationAllUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this.GetTable<aspnet_PersonalizationPerUser>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Profile> aspnet_Profiles
		{
			get
			{
				return this.GetTable<aspnet_Profile>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_SchemaVersion> aspnet_SchemaVersions
		{
			get
			{
				return this.GetTable<aspnet_SchemaVersion>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this.GetTable<aspnet_UsersInRole>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_WebEvent_Event> aspnet_WebEvent_Events
		{
			get
			{
				return this.GetTable<aspnet_WebEvent_Event>();
			}
		}
		
		public System.Data.Linq.Table<Attachment> Attachments
		{
			get
			{
				return this.GetTable<Attachment>();
			}
		}
		
		public System.Data.Linq.Table<Benefit> Benefits
		{
			get
			{
				return this.GetTable<Benefit>();
			}
		}
		
		public System.Data.Linq.Table<BenefitItemC> BenefitItemCs
		{
			get
			{
				return this.GetTable<BenefitItemC>();
			}
		}
		
		public System.Data.Linq.Table<BenefitItemCOlympicType> BenefitItemCOlympicTypes
		{
			get
			{
				return this.GetTable<BenefitItemCOlympicType>();
			}
		}
		
		public System.Data.Linq.Table<BenefitItemCOlympicTypeProfile> BenefitItemCOlympicTypeProfiles
		{
			get
			{
				return this.GetTable<BenefitItemCOlympicTypeProfile>();
			}
		}
		
		public System.Data.Linq.Table<BenefitItemCProfile> BenefitItemCProfiles
		{
			get
			{
				return this.GetTable<BenefitItemCProfile>();
			}
		}
		
		public System.Data.Linq.Table<BenefitItemSubject> BenefitItemSubjects
		{
			get
			{
				return this.GetTable<BenefitItemSubject>();
			}
		}
		
		public System.Data.Linq.Table<bulk_AdmissionVolume> bulk_AdmissionVolumes
		{
			get
			{
				return this.GetTable<bulk_AdmissionVolume>();
			}
		}
		
		public System.Data.Linq.Table<bulk_Application> bulk_Applications
		{
			get
			{
				return this.GetTable<bulk_Application>();
			}
		}
		
		public System.Data.Linq.Table<bulk_ApplicationCompetitiveGroupItem> bulk_ApplicationCompetitiveGroupItems
		{
			get
			{
				return this.GetTable<bulk_ApplicationCompetitiveGroupItem>();
			}
		}
		
		public System.Data.Linq.Table<bulk_ApplicationEntranceTestDocument> bulk_ApplicationEntranceTestDocuments
		{
			get
			{
				return this.GetTable<bulk_ApplicationEntranceTestDocument>();
			}
		}
		
		public System.Data.Linq.Table<bulk_ApplicationIndividualAchievement> bulk_ApplicationIndividualAchievements
		{
			get
			{
				return this.GetTable<bulk_ApplicationIndividualAchievement>();
			}
		}
		
		public System.Data.Linq.Table<bulk_ApplicationSelectedCompetitiveGroup> bulk_ApplicationSelectedCompetitiveGroups
		{
			get
			{
				return this.GetTable<bulk_ApplicationSelectedCompetitiveGroup>();
			}
		}
		
		public System.Data.Linq.Table<bulk_ApplicationSelectedCompetitiveGroupItem> bulk_ApplicationSelectedCompetitiveGroupItems
		{
			get
			{
				return this.GetTable<bulk_ApplicationSelectedCompetitiveGroupItem>();
			}
		}
		
		public System.Data.Linq.Table<bulk_ApplicationSelectedCompetitiveGroupTarget> bulk_ApplicationSelectedCompetitiveGroupTargets
		{
			get
			{
				return this.GetTable<bulk_ApplicationSelectedCompetitiveGroupTarget>();
			}
		}
		
		public System.Data.Linq.Table<bulk_BenefitItemC> bulk_BenefitItemCs
		{
			get
			{
				return this.GetTable<bulk_BenefitItemC>();
			}
		}
		
		public System.Data.Linq.Table<bulk_BenefitItemData> bulk_BenefitItemDatas
		{
			get
			{
				return this.GetTable<bulk_BenefitItemData>();
			}
		}
		
		public System.Data.Linq.Table<bulk_Campaign> bulk_Campaigns
		{
			get
			{
				return this.GetTable<bulk_Campaign>();
			}
		}
		
		public System.Data.Linq.Table<bulk_CampaignDate> bulk_CampaignDates
		{
			get
			{
				return this.GetTable<bulk_CampaignDate>();
			}
		}
		
		public System.Data.Linq.Table<bulk_CompetitiveGroup> bulk_CompetitiveGroups
		{
			get
			{
				return this.GetTable<bulk_CompetitiveGroup>();
			}
		}
		
		public System.Data.Linq.Table<bulk_CompetitiveGroupItem> bulk_CompetitiveGroupItems
		{
			get
			{
				return this.GetTable<bulk_CompetitiveGroupItem>();
			}
		}
		
		public System.Data.Linq.Table<bulk_CompetitiveGroupTarget> bulk_CompetitiveGroupTargets
		{
			get
			{
				return this.GetTable<bulk_CompetitiveGroupTarget>();
			}
		}
		
		public System.Data.Linq.Table<bulk_CompetitiveGroupTargetItem> bulk_CompetitiveGroupTargetItems
		{
			get
			{
				return this.GetTable<bulk_CompetitiveGroupTargetItem>();
			}
		}
		
		public System.Data.Linq.Table<bulk_Delete> bulk_Deletes
		{
			get
			{
				return this.GetTable<bulk_Delete>();
			}
		}
		
		public System.Data.Linq.Table<bulk_DistributedAdmissionVolume> bulk_DistributedAdmissionVolumes
		{
			get
			{
				return this.GetTable<bulk_DistributedAdmissionVolume>();
			}
		}
		
		public System.Data.Linq.Table<bulk_EntranceTestItemC> bulk_EntranceTestItemCs
		{
			get
			{
				return this.GetTable<bulk_EntranceTestItemC>();
			}
		}
		
		public System.Data.Linq.Table<bulk_Entrant> bulk_Entrants
		{
			get
			{
				return this.GetTable<bulk_Entrant>();
			}
		}
		
		public System.Data.Linq.Table<bulk_EntrantDocument> bulk_EntrantDocuments
		{
			get
			{
				return this.GetTable<bulk_EntrantDocument>();
			}
		}
		
		public System.Data.Linq.Table<bulk_EntrantDocumentSubject> bulk_EntrantDocumentSubjects
		{
			get
			{
				return this.GetTable<bulk_EntrantDocumentSubject>();
			}
		}
		
		public System.Data.Linq.Table<bulk_InstitutionAchievement> bulk_InstitutionAchievements
		{
			get
			{
				return this.GetTable<bulk_InstitutionAchievement>();
			}
		}
		
		public System.Data.Linq.Table<bulk_OrderOfAdmission> bulk_OrderOfAdmissions
		{
			get
			{
				return this.GetTable<bulk_OrderOfAdmission>();
			}
		}
		
		public System.Data.Linq.Table<Campaign> Campaigns
		{
			get
			{
				return this.GetTable<Campaign>();
			}
		}
		
		public System.Data.Linq.Table<CampaignEducationLevel> CampaignEducationLevels
		{
			get
			{
				return this.GetTable<CampaignEducationLevel>();
			}
		}
		
		public System.Data.Linq.Table<CampaignOrderDateCatalog> CampaignOrderDateCatalogs
		{
			get
			{
				return this.GetTable<CampaignOrderDateCatalog>();
			}
		}
		
		public System.Data.Linq.Table<CampaignStatus> CampaignStatus
		{
			get
			{
				return this.GetTable<CampaignStatus>();
			}
		}
		
		public System.Data.Linq.Table<CampaignType> CampaignTypes
		{
			get
			{
				return this.GetTable<CampaignType>();
			}
		}
		
		public System.Data.Linq.Table<CityType> CityTypes
		{
			get
			{
				return this.GetTable<CityType>();
			}
		}
		
		public System.Data.Linq.Table<CompetitiveGroup> CompetitiveGroups
		{
			get
			{
				return this.GetTable<CompetitiveGroup>();
			}
		}
		
		public System.Data.Linq.Table<CompetitiveGroupItem> CompetitiveGroupItems
		{
			get
			{
				return this.GetTable<CompetitiveGroupItem>();
			}
		}
		
		public System.Data.Linq.Table<CompetitiveGroupProgram> CompetitiveGroupPrograms
		{
			get
			{
				return this.GetTable<CompetitiveGroupProgram>();
			}
		}
		
		public System.Data.Linq.Table<CompetitiveGroupTarget> CompetitiveGroupTargets
		{
			get
			{
				return this.GetTable<CompetitiveGroupTarget>();
			}
		}
		
		public System.Data.Linq.Table<CompetitiveGroupTargetItem> CompetitiveGroupTargetItems
		{
			get
			{
				return this.GetTable<CompetitiveGroupTargetItem>();
			}
		}
		
		public System.Data.Linq.Table<CompositionTheme> CompositionThemes
		{
			get
			{
				return this.GetTable<CompositionTheme>();
			}
		}
		
		public System.Data.Linq.Table<CompositionThemes_Approb> CompositionThemes_Approbs
		{
			get
			{
				return this.GetTable<CompositionThemes_Approb>();
			}
		}
		
		public System.Data.Linq.Table<CountryType> CountryTypes
		{
			get
			{
				return this.GetTable<CountryType>();
			}
		}
		
		public System.Data.Linq.Table<CourseSubject> CourseSubjects
		{
			get
			{
				return this.GetTable<CourseSubject>();
			}
		}
		
		public System.Data.Linq.Table<CourseType> CourseTypes
		{
			get
			{
				return this.GetTable<CourseType>();
			}
		}
		
		public System.Data.Linq.Table<dba_indexDefragLog> dba_indexDefragLogs
		{
			get
			{
				return this.GetTable<dba_indexDefragLog>();
			}
		}
		
		public System.Data.Linq.Table<Direction> Directions
		{
			get
			{
				return this.GetTable<Direction>();
			}
		}
		
		public System.Data.Linq.Table<Direction_old> Direction_olds
		{
			get
			{
				return this.GetTable<Direction_old>();
			}
		}
		
		public System.Data.Linq.Table<Direction_tmp> Direction_tmps
		{
			get
			{
				return this.GetTable<Direction_tmp>();
			}
		}
		
		public System.Data.Linq.Table<DirectionSubjectLink> DirectionSubjectLinks
		{
			get
			{
				return this.GetTable<DirectionSubjectLink>();
			}
		}
		
		public System.Data.Linq.Table<DirectionSubjectLinkDirection> DirectionSubjectLinkDirections
		{
			get
			{
				return this.GetTable<DirectionSubjectLinkDirection>();
			}
		}
		
		public System.Data.Linq.Table<DirectionSubjectLinkSubject> DirectionSubjectLinkSubjects
		{
			get
			{
				return this.GetTable<DirectionSubjectLinkSubject>();
			}
		}
		
		public System.Data.Linq.Table<DisabilityType> DisabilityTypes
		{
			get
			{
				return this.GetTable<DisabilityType>();
			}
		}
		
		public System.Data.Linq.Table<DistributedAdmissionVolume> DistributedAdmissionVolumes
		{
			get
			{
				return this.GetTable<DistributedAdmissionVolume>();
			}
		}
		
		public System.Data.Linq.Table<DocumentCategory> DocumentCategories
		{
			get
			{
				return this.GetTable<DocumentCategory>();
			}
		}
		
		public System.Data.Linq.Table<DocumentCheckStatus> DocumentCheckStatus
		{
			get
			{
				return this.GetTable<DocumentCheckStatus>();
			}
		}
		
		public System.Data.Linq.Table<DocumentType> DocumentTypes
		{
			get
			{
				return this.GetTable<DocumentType>();
			}
		}
		
		public System.Data.Linq.Table<EDU_PROGRAM_TYPE> EDU_PROGRAM_TYPEs
		{
			get
			{
				return this.GetTable<EDU_PROGRAM_TYPE>();
			}
		}
		
		public System.Data.Linq.Table<EduLevelDocumentType> EduLevelDocumentTypes
		{
			get
			{
				return this.GetTable<EduLevelDocumentType>();
			}
		}
		
		public System.Data.Linq.Table<EduLevel> EduLevels
		{
			get
			{
				return this.GetTable<EduLevel>();
			}
		}
		
		public System.Data.Linq.Table<EduLevelsToCampaignType> EduLevelsToCampaignTypes
		{
			get
			{
				return this.GetTable<EduLevelsToCampaignType>();
			}
		}
		
		public System.Data.Linq.Table<EduLevelsToUgsCode> EduLevelsToUgsCodes
		{
			get
			{
				return this.GetTable<EduLevelsToUgsCode>();
			}
		}
		
		public System.Data.Linq.Table<EntranceTestCreativeDirection> EntranceTestCreativeDirections
		{
			get
			{
				return this.GetTable<EntranceTestCreativeDirection>();
			}
		}
		
		public System.Data.Linq.Table<EntranceTestItemC> EntranceTestItemCs
		{
			get
			{
				return this.GetTable<EntranceTestItemC>();
			}
		}
		
		public System.Data.Linq.Table<EntranceTestProfileDirection> EntranceTestProfileDirections
		{
			get
			{
				return this.GetTable<EntranceTestProfileDirection>();
			}
		}
		
		public System.Data.Linq.Table<EntranceTestResultSource> EntranceTestResultSources
		{
			get
			{
				return this.GetTable<EntranceTestResultSource>();
			}
		}
		
		public System.Data.Linq.Table<EntranceTestType> EntranceTestTypes
		{
			get
			{
				return this.GetTable<EntranceTestType>();
			}
		}
		
		public System.Data.Linq.Table<Entrant> Entrants
		{
			get
			{
				return this.GetTable<Entrant>();
			}
		}
		
		public System.Data.Linq.Table<EntrantDocument> EntrantDocuments
		{
			get
			{
				return this.GetTable<EntrantDocument>();
			}
		}
		
		public System.Data.Linq.Table<EntrantDocumentCustom> EntrantDocumentCustoms
		{
			get
			{
				return this.GetTable<EntrantDocumentCustom>();
			}
		}
		
		public System.Data.Linq.Table<EntrantDocumentDisability> EntrantDocumentDisabilities
		{
			get
			{
				return this.GetTable<EntrantDocumentDisability>();
			}
		}
		
		public System.Data.Linq.Table<EntrantDocumentEdu> EntrantDocumentEdus
		{
			get
			{
				return this.GetTable<EntrantDocumentEdu>();
			}
		}
		
		public System.Data.Linq.Table<EntrantDocumentEge> EntrantDocumentEges
		{
			get
			{
				return this.GetTable<EntrantDocumentEge>();
			}
		}
		
		public System.Data.Linq.Table<EntrantDocumentEgeAndOlympicSubject> EntrantDocumentEgeAndOlympicSubjects
		{
			get
			{
				return this.GetTable<EntrantDocumentEgeAndOlympicSubject>();
			}
		}
		
		public System.Data.Linq.Table<EntrantDocumentIdentity> EntrantDocumentIdentities
		{
			get
			{
				return this.GetTable<EntrantDocumentIdentity>();
			}
		}
		
		public System.Data.Linq.Table<EntrantDocumentIdentity_tmp> EntrantDocumentIdentity_tmps
		{
			get
			{
				return this.GetTable<EntrantDocumentIdentity_tmp>();
			}
		}
		
		public System.Data.Linq.Table<EntrantDocumentMark> EntrantDocumentMarks
		{
			get
			{
				return this.GetTable<EntrantDocumentMark>();
			}
		}
		
		public System.Data.Linq.Table<EntrantDocumentOlympic> EntrantDocumentOlympics
		{
			get
			{
				return this.GetTable<EntrantDocumentOlympic>();
			}
		}
		
		public System.Data.Linq.Table<EntrantLanguage> EntrantLanguages
		{
			get
			{
				return this.GetTable<EntrantLanguage>();
			}
		}
		
		public System.Data.Linq.Table<FbsToFisMap> FbsToFisMaps
		{
			get
			{
				return this.GetTable<FbsToFisMap>();
			}
		}
		
		public System.Data.Linq.Table<findPathTable> findPathTables
		{
			get
			{
				return this.GetTable<findPathTable>();
			}
		}
		
		public System.Data.Linq.Table<findPathTable_short> findPathTable_shorts
		{
			get
			{
				return this.GetTable<findPathTable_short>();
			}
		}
		
		public System.Data.Linq.Table<findPathTableEGE> findPathTableEGEs
		{
			get
			{
				return this.GetTable<findPathTableEGE>();
			}
		}
		
		public System.Data.Linq.Table<ForeignLanguageType> ForeignLanguageTypes
		{
			get
			{
				return this.GetTable<ForeignLanguageType>();
			}
		}
		
		public System.Data.Linq.Table<FormOfLaw> FormOfLaws
		{
			get
			{
				return this.GetTable<FormOfLaw>();
			}
		}
		
		public System.Data.Linq.Table<GenderType> GenderTypes
		{
			get
			{
				return this.GetTable<GenderType>();
			}
		}
		
		public System.Data.Linq.Table<GlobalMinEge> GlobalMinEges
		{
			get
			{
				return this.GetTable<GlobalMinEge>();
			}
		}
		
		public System.Data.Linq.Table<IdentityDocumentType> IdentityDocumentTypes
		{
			get
			{
				return this.GetTable<IdentityDocumentType>();
			}
		}
		
		public System.Data.Linq.Table<ImportPackage> ImportPackages
		{
			get
			{
				return this.GetTable<ImportPackage>();
			}
		}
		
		public System.Data.Linq.Table<ImportPackageParsed> ImportPackageParseds
		{
			get
			{
				return this.GetTable<ImportPackageParsed>();
			}
		}
		
		public System.Data.Linq.Table<ImportPackageParsed_back> ImportPackageParsed_backs
		{
			get
			{
				return this.GetTable<ImportPackageParsed_back>();
			}
		}
		
		public System.Data.Linq.Table<ImportPackageStatus> ImportPackageStatus
		{
			get
			{
				return this.GetTable<ImportPackageStatus>();
			}
		}
		
		public System.Data.Linq.Table<ImportPackageType> ImportPackageTypes
		{
			get
			{
				return this.GetTable<ImportPackageType>();
			}
		}
		
		public System.Data.Linq.Table<IndividualAchievementsCategory> IndividualAchievementsCategories
		{
			get
			{
				return this.GetTable<IndividualAchievementsCategory>();
			}
		}
		
		public System.Data.Linq.Table<IndividualAchivement> IndividualAchivements
		{
			get
			{
				return this.GetTable<IndividualAchivement>();
			}
		}
		
		public System.Data.Linq.Table<Institution> Institutions
		{
			get
			{
				return this.GetTable<Institution>();
			}
		}
		
		public System.Data.Linq.Table<InstitutionAccreditation> InstitutionAccreditations
		{
			get
			{
				return this.GetTable<InstitutionAccreditation>();
			}
		}
		
		public System.Data.Linq.Table<InstitutionAchievement> InstitutionAchievements
		{
			get
			{
				return this.GetTable<InstitutionAchievement>();
			}
		}
		
		public System.Data.Linq.Table<InstitutionDirectionRequest> InstitutionDirectionRequests
		{
			get
			{
				return this.GetTable<InstitutionDirectionRequest>();
			}
		}
		
		public System.Data.Linq.Table<InstitutionDocument> InstitutionDocuments
		{
			get
			{
				return this.GetTable<InstitutionDocument>();
			}
		}
		
		public System.Data.Linq.Table<InstitutionDocumentType> InstitutionDocumentTypes
		{
			get
			{
				return this.GetTable<InstitutionDocumentType>();
			}
		}
		
		public System.Data.Linq.Table<InstitutionHistory> InstitutionHistories
		{
			get
			{
				return this.GetTable<InstitutionHistory>();
			}
		}
		
		public System.Data.Linq.Table<InstitutionItem> InstitutionItems
		{
			get
			{
				return this.GetTable<InstitutionItem>();
			}
		}
		
		public System.Data.Linq.Table<InstitutionItemType> InstitutionItemTypes
		{
			get
			{
				return this.GetTable<InstitutionItemType>();
			}
		}
		
		public System.Data.Linq.Table<InstitutionLicense> InstitutionLicenses
		{
			get
			{
				return this.GetTable<InstitutionLicense>();
			}
		}
		
		public System.Data.Linq.Table<InstitutionStructure> InstitutionStructures
		{
			get
			{
				return this.GetTable<InstitutionStructure>();
			}
		}
		
		public System.Data.Linq.Table<InstitutionType> InstitutionTypes
		{
			get
			{
				return this.GetTable<InstitutionType>();
			}
		}
		
		public System.Data.Linq.Table<LevelBudget> LevelBudgets
		{
			get
			{
				return this.GetTable<LevelBudget>();
			}
		}
		
		public System.Data.Linq.Table<map_AdmissionData> map_AdmissionDatas
		{
			get
			{
				return this.GetTable<map_AdmissionData>();
			}
		}
		
		public System.Data.Linq.Table<map_AdmissionVolume> map_AdmissionVolumes
		{
			get
			{
				return this.GetTable<map_AdmissionVolume>();
			}
		}
		
		public System.Data.Linq.Table<map_Application> map_Applications
		{
			get
			{
				return this.GetTable<map_Application>();
			}
		}
		
		public System.Data.Linq.Table<map_ApplicationSelectedCompetitiveGroupItem> map_ApplicationSelectedCompetitiveGroupItems
		{
			get
			{
				return this.GetTable<map_ApplicationSelectedCompetitiveGroupItem>();
			}
		}
		
		public System.Data.Linq.Table<map_CompetitiveGroupItem> map_CompetitiveGroupItems
		{
			get
			{
				return this.GetTable<map_CompetitiveGroupItem>();
			}
		}
		
		public System.Data.Linq.Table<map_CompetitiveGroupTargetItem> map_CompetitiveGroupTargetItems
		{
			get
			{
				return this.GetTable<map_CompetitiveGroupTargetItem>();
			}
		}
		
		public System.Data.Linq.Table<map_Direction> map_Directions
		{
			get
			{
				return this.GetTable<map_Direction>();
			}
		}
		
		public System.Data.Linq.Table<map_EntranceTestProfileDirection> map_EntranceTestProfileDirections
		{
			get
			{
				return this.GetTable<map_EntranceTestProfileDirection>();
			}
		}
		
		public System.Data.Linq.Table<map_InstitutionItem> map_InstitutionItems
		{
			get
			{
				return this.GetTable<map_InstitutionItem>();
			}
		}
		
		public System.Data.Linq.Table<map_InstitutionStructure> map_InstitutionStructures
		{
			get
			{
				return this.GetTable<map_InstitutionStructure>();
			}
		}
		
		public System.Data.Linq.Table<Migration> Migrations
		{
			get
			{
				return this.GetTable<Migration>();
			}
		}
		
		public System.Data.Linq.Table<MinScoreByRON> MinScoreByRONs
		{
			get
			{
				return this.GetTable<MinScoreByRON>();
			}
		}
		
		public System.Data.Linq.Table<MonitoringPriem> MonitoringPriems
		{
			get
			{
				return this.GetTable<MonitoringPriem>();
			}
		}
		
		public System.Data.Linq.Table<MonitoringPriemV2> MonitoringPriemV2s
		{
			get
			{
				return this.GetTable<MonitoringPriemV2>();
			}
		}
		
		public System.Data.Linq.Table<MonitoringPriemV3> MonitoringPriemV3s
		{
			get
			{
				return this.GetTable<MonitoringPriemV3>();
			}
		}
		
		public System.Data.Linq.Table<NationalityType> NationalityTypes
		{
			get
			{
				return this.GetTable<NationalityType>();
			}
		}
		
		public System.Data.Linq.Table<NormativeDictionary> NormativeDictionaries
		{
			get
			{
				return this.GetTable<NormativeDictionary>();
			}
		}
		
		public System.Data.Linq.Table<NormativeVersionState> NormativeVersionStates
		{
			get
			{
				return this.GetTable<NormativeVersionState>();
			}
		}
		
		public System.Data.Linq.Table<OlympicDiplomant> OlympicDiplomants
		{
			get
			{
				return this.GetTable<OlympicDiplomant>();
			}
		}
		
		public System.Data.Linq.Table<OlympicDiplomantDocument> OlympicDiplomantDocuments
		{
			get
			{
				return this.GetTable<OlympicDiplomantDocument>();
			}
		}
		
		public System.Data.Linq.Table<OlympicDiplomantStatus> OlympicDiplomantStatus
		{
			get
			{
				return this.GetTable<OlympicDiplomantStatus>();
			}
		}
		
		public System.Data.Linq.Table<OlympicDiplomType> OlympicDiplomTypes
		{
			get
			{
				return this.GetTable<OlympicDiplomType>();
			}
		}
		
		public System.Data.Linq.Table<OlympicLevel> OlympicLevels
		{
			get
			{
				return this.GetTable<OlympicLevel>();
			}
		}
		
		public System.Data.Linq.Table<OlympicProfile> OlympicProfiles
		{
			get
			{
				return this.GetTable<OlympicProfile>();
			}
		}
		
		public System.Data.Linq.Table<OlympicSubject> OlympicSubjects
		{
			get
			{
				return this.GetTable<OlympicSubject>();
			}
		}
		
		public System.Data.Linq.Table<OlympicType> OlympicTypes
		{
			get
			{
				return this.GetTable<OlympicType>();
			}
		}
		
		public System.Data.Linq.Table<OlympicType_copy> OlympicType_copies
		{
			get
			{
				return this.GetTable<OlympicType_copy>();
			}
		}
		
		public System.Data.Linq.Table<OlympicTypeProfile> OlympicTypeProfiles
		{
			get
			{
				return this.GetTable<OlympicTypeProfile>();
			}
		}
		
		public System.Data.Linq.Table<OrderOfAdmission> OrderOfAdmissions
		{
			get
			{
				return this.GetTable<OrderOfAdmission>();
			}
		}
		
		public System.Data.Linq.Table<OrderOfAdmissionHistory> OrderOfAdmissionHistories
		{
			get
			{
				return this.GetTable<OrderOfAdmissionHistory>();
			}
		}
		
		public System.Data.Linq.Table<OrderOfAdmissionType> OrderOfAdmissionTypes
		{
			get
			{
				return this.GetTable<OrderOfAdmissionType>();
			}
		}
		
		public System.Data.Linq.Table<Pack> Packs
		{
			get
			{
				return this.GetTable<Pack>();
			}
		}
		
		public System.Data.Linq.Table<ParentDirection> ParentDirections
		{
			get
			{
				return this.GetTable<ParentDirection>();
			}
		}
		
		public System.Data.Linq.Table<ParentDirection_old> ParentDirection_olds
		{
			get
			{
				return this.GetTable<ParentDirection_old>();
			}
		}
		
		public System.Data.Linq.Table<PersonalDataAccessLog> PersonalDataAccessLogs
		{
			get
			{
				return this.GetTable<PersonalDataAccessLog>();
			}
		}
		
		public System.Data.Linq.Table<PreparatoryCourse> PreparatoryCourses
		{
			get
			{
				return this.GetTable<PreparatoryCourse>();
			}
		}
		
		public System.Data.Linq.Table<RecomendedList> RecomendedLists
		{
			get
			{
				return this.GetTable<RecomendedList>();
			}
		}
		
		public System.Data.Linq.Table<RecomendedListsHistory> RecomendedListsHistories
		{
			get
			{
				return this.GetTable<RecomendedListsHistory>();
			}
		}
		
		public System.Data.Linq.Table<RegionType> RegionTypes
		{
			get
			{
				return this.GetTable<RegionType>();
			}
		}
		
		public System.Data.Linq.Table<RequestComment> RequestComments
		{
			get
			{
				return this.GetTable<RequestComment>();
			}
		}
		
		public System.Data.Linq.Table<RequestDirection> RequestDirections
		{
			get
			{
				return this.GetTable<RequestDirection>();
			}
		}
		
		public System.Data.Linq.Table<RVI_PersonID_new> RVI_PersonID_news
		{
			get
			{
				return this.GetTable<RVI_PersonID_new>();
			}
		}
		
		public System.Data.Linq.Table<RVI_PersonID_old> RVI_PersonID_olds
		{
			get
			{
				return this.GetTable<RVI_PersonID_old>();
			}
		}
		
		public System.Data.Linq.Table<RVIDocumentType> RVIDocumentTypes
		{
			get
			{
				return this.GetTable<RVIDocumentType>();
			}
		}
		
		public System.Data.Linq.Table<RVIPersonIdentDoc> RVIPersonIdentDocs
		{
			get
			{
				return this.GetTable<RVIPersonIdentDoc>();
			}
		}
		
		public System.Data.Linq.Table<RVIPerson> RVIPersons
		{
			get
			{
				return this.GetTable<RVIPerson>();
			}
		}
		
		public System.Data.Linq.Table<SearchTMP> SearchTMPs
		{
			get
			{
				return this.GetTable<SearchTMP>();
			}
		}
		
		public System.Data.Linq.Table<Subject> Subjects
		{
			get
			{
				return this.GetTable<Subject>();
			}
		}
		
		public System.Data.Linq.Table<SubjectEgeMinValue> SubjectEgeMinValues
		{
			get
			{
				return this.GetTable<SubjectEgeMinValue>();
			}
		}
		
		public System.Data.Linq.Table<SubjectEgeMinValue_copy> SubjectEgeMinValue_copies
		{
			get
			{
				return this.GetTable<SubjectEgeMinValue_copy>();
			}
		}
		
		public System.Data.Linq.Table<temp_app> temp_apps
		{
			get
			{
				return this.GetTable<temp_app>();
			}
		}
		
		public System.Data.Linq.Table<Temp_GGV> Temp_GGVs
		{
			get
			{
				return this.GetTable<Temp_GGV>();
			}
		}
		
		public System.Data.Linq.Table<TEMP_HighMarks_2015> TEMP_HighMarks_2015s
		{
			get
			{
				return this.GetTable<TEMP_HighMarks_2015>();
			}
		}
		
		public System.Data.Linq.Table<TEMP_HSE_0> TEMP_HSE_0s
		{
			get
			{
				return this.GetTable<TEMP_HSE_0>();
			}
		}
		
		public System.Data.Linq.Table<TEMP_HSE_11> TEMP_HSE_11s
		{
			get
			{
				return this.GetTable<TEMP_HSE_11>();
			}
		}
		
		public System.Data.Linq.Table<TEMP_HSE_11_2> TEMP_HSE_11_2s
		{
			get
			{
				return this.GetTable<TEMP_HSE_11_2>();
			}
		}
		
		public System.Data.Linq.Table<TEMP_HSE_12> TEMP_HSE_12s
		{
			get
			{
				return this.GetTable<TEMP_HSE_12>();
			}
		}
		
		public System.Data.Linq.Table<TEMP_HSE_12_2> TEMP_HSE_12_2s
		{
			get
			{
				return this.GetTable<TEMP_HSE_12_2>();
			}
		}
		
		public System.Data.Linq.Table<TEMP_ISLOD_ESRP> TEMP_ISLOD_ESRPs
		{
			get
			{
				return this.GetTable<TEMP_ISLOD_ESRP>();
			}
		}
		
		public System.Data.Linq.Table<TEMP1> TEMP1s
		{
			get
			{
				return this.GetTable<TEMP1>();
			}
		}
		
		public System.Data.Linq.Table<TEMP2> TEMP2s
		{
			get
			{
				return this.GetTable<TEMP2>();
			}
		}
		
		public System.Data.Linq.Table<Translation_RVIDT_IdentityDT> Translation_RVIDT_IdentityDTs
		{
			get
			{
				return this.GetTable<Translation_RVIDT_IdentityDT>();
			}
		}
		
		public System.Data.Linq.Table<UserPolicy> UserPolicies
		{
			get
			{
				return this.GetTable<UserPolicy>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[__MigrationHistory]")]
	public partial class @__MigrationHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MigrationId;
		
		private string _ContextKey;
		
		private System.Data.Linq.Binary _Model;
		
		private string _ProductVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMigrationIdChanging(string value);
    partial void OnMigrationIdChanged();
    partial void OnContextKeyChanging(string value);
    partial void OnContextKeyChanged();
    partial void OnModelChanging(System.Data.Linq.Binary value);
    partial void OnModelChanged();
    partial void OnProductVersionChanging(string value);
    partial void OnProductVersionChanged();
    #endregion
		
		public @__MigrationHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MigrationId", DbType="NVarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MigrationId
		{
			get
			{
				return this._MigrationId;
			}
			set
			{
				if ((this._MigrationId != value))
				{
					this.OnMigrationIdChanging(value);
					this.SendPropertyChanging();
					this._MigrationId = value;
					this.SendPropertyChanged("MigrationId");
					this.OnMigrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContextKey", DbType="NVarChar(300) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ContextKey
		{
			get
			{
				return this._ContextKey;
			}
			set
			{
				if ((this._ContextKey != value))
				{
					this.OnContextKeyChanging(value);
					this.SendPropertyChanging();
					this._ContextKey = value;
					this.SendPropertyChanged("ContextKey");
					this.OnContextKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductVersion", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string ProductVersion
		{
			get
			{
				return this._ProductVersion;
			}
			set
			{
				if ((this._ProductVersion != value))
				{
					this.OnProductVersionChanging(value);
					this.SendPropertyChanging();
					this._ProductVersion = value;
					this.SendPropertyChanged("ProductVersion");
					this.OnProductVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ViolationType")]
	public partial class ViolationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ViolationID;
		
		private string _BriefName;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<Application> _Applications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnViolationIDChanging(int value);
    partial void OnViolationIDChanged();
    partial void OnBriefNameChanging(string value);
    partial void OnBriefNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ViolationType()
		{
			this._Applications = new EntitySet<Application>(new Action<Application>(this.attach_Applications), new Action<Application>(this.detach_Applications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolationID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ViolationID
		{
			get
			{
				return this._ViolationID;
			}
			set
			{
				if ((this._ViolationID != value))
				{
					this.OnViolationIDChanging(value);
					this.SendPropertyChanging();
					this._ViolationID = value;
					this.SendPropertyChanged("ViolationID");
					this.OnViolationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BriefName", DbType="VarChar(255)")]
		public string BriefName
		{
			get
			{
				return this._BriefName;
			}
			set
			{
				if ((this._BriefName != value))
				{
					this.OnBriefNameChanging(value);
					this.SendPropertyChanging();
					this._BriefName = value;
					this.SendPropertyChanged("BriefName");
					this.OnBriefNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ViolationType_Application", Storage="_Applications", ThisKey="ViolationID", OtherKey="ViolationID")]
		public EntitySet<Application> Applications
		{
			get
			{
				return this._Applications;
			}
			set
			{
				this._Applications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.ViolationType = this;
		}
		
		private void detach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.ViolationType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[__ORD_A]")]
	public partial class @__ORD_A
	{
		
		private System.Nullable<int> _InstitutionID;
		
		private System.Nullable<int> _YearStart;
		
		private System.Nullable<int> _CampaignID;
		
		private string _CampaignName;
		
		private System.Nullable<int> _CompetitiveGroupID;
		
		private string _CompetitiveGroupName;
		
		private System.Nullable<int> _Course;
		
		private System.Nullable<int> _CompetitiveGroupItemID;
		
		private System.Nullable<int> _CompetitiveGroupTargetID;
		
		private string _CompetitiveGroupTargetName;
		
		private System.Nullable<int> _DirectionID;
		
		private string _DirectionCode;
		
		private string _DirectionName;
		
		private System.Nullable<int> _EducationLevelID;
		
		private string _EducationLevelName;
		
		private System.Nullable<int> _EducationFormID;
		
		private string _EducationFormName;
		
		private System.Nullable<int> _EducationSourceID;
		
		private string _EducationSourceName;
		
		private System.Nullable<int> _Places;
		
		private System.Nullable<int> _acgiID;
		
		private System.Nullable<int> _ApplicationID;
		
		private System.Nullable<int> _EntrantID;
		
		private string _FIO;
		
		private System.Nullable<bool> _OriginalDocumentsReceived;
		
		private string _ConditionCode;
		
		private System.Nullable<int> _ApplicationPriority;
		
		private System.Nullable<int> _ACGI_Priority;
		
		private System.Nullable<int> _CalcPriority;
		
		private System.Nullable<int> _Mark;
		
		private System.Nullable<int> _MarkIA;
		
		private System.Nullable<bool> _bezVI;
		
		private System.Nullable<bool> _OsoboePravo;
		
		private System.Nullable<bool> _PreimPravo;
		
		private System.Nullable<int> _aRank;
		
		private string _sRank;
		
		private string _IncludeTo;
		
		private System.Nullable<int> _Excluded;
		
		public @__ORD_A()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int")]
		public System.Nullable<int> InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this._InstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearStart", DbType="Int")]
		public System.Nullable<int> YearStart
		{
			get
			{
				return this._YearStart;
			}
			set
			{
				if ((this._YearStart != value))
				{
					this._YearStart = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int")]
		public System.Nullable<int> CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					this._CampaignID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignName", DbType="VarChar(250)")]
		public string CampaignName
		{
			get
			{
				return this._CampaignName;
			}
			set
			{
				if ((this._CampaignName != value))
				{
					this._CampaignName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupID", DbType="Int")]
		public System.Nullable<int> CompetitiveGroupID
		{
			get
			{
				return this._CompetitiveGroupID;
			}
			set
			{
				if ((this._CompetitiveGroupID != value))
				{
					this._CompetitiveGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupName", DbType="VarChar(250)")]
		public string CompetitiveGroupName
		{
			get
			{
				return this._CompetitiveGroupName;
			}
			set
			{
				if ((this._CompetitiveGroupName != value))
				{
					this._CompetitiveGroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="Int")]
		public System.Nullable<int> Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this._Course = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupItemID", DbType="Int")]
		public System.Nullable<int> CompetitiveGroupItemID
		{
			get
			{
				return this._CompetitiveGroupItemID;
			}
			set
			{
				if ((this._CompetitiveGroupItemID != value))
				{
					this._CompetitiveGroupItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupTargetID", DbType="Int")]
		public System.Nullable<int> CompetitiveGroupTargetID
		{
			get
			{
				return this._CompetitiveGroupTargetID;
			}
			set
			{
				if ((this._CompetitiveGroupTargetID != value))
				{
					this._CompetitiveGroupTargetID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupTargetName", DbType="VarChar(500)")]
		public string CompetitiveGroupTargetName
		{
			get
			{
				return this._CompetitiveGroupTargetName;
			}
			set
			{
				if ((this._CompetitiveGroupTargetName != value))
				{
					this._CompetitiveGroupTargetName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int")]
		public System.Nullable<int> DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					this._DirectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionCode", DbType="VarChar(50)")]
		public string DirectionCode
		{
			get
			{
				return this._DirectionCode;
			}
			set
			{
				if ((this._DirectionCode != value))
				{
					this._DirectionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionName", DbType="VarChar(250)")]
		public string DirectionName
		{
			get
			{
				return this._DirectionName;
			}
			set
			{
				if ((this._DirectionName != value))
				{
					this._DirectionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelID", DbType="Int")]
		public System.Nullable<int> EducationLevelID
		{
			get
			{
				return this._EducationLevelID;
			}
			set
			{
				if ((this._EducationLevelID != value))
				{
					this._EducationLevelID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelName", DbType="VarChar(250)")]
		public string EducationLevelName
		{
			get
			{
				return this._EducationLevelName;
			}
			set
			{
				if ((this._EducationLevelName != value))
				{
					this._EducationLevelName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationFormID", DbType="Int")]
		public System.Nullable<int> EducationFormID
		{
			get
			{
				return this._EducationFormID;
			}
			set
			{
				if ((this._EducationFormID != value))
				{
					this._EducationFormID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationFormName", DbType="VarChar(250)")]
		public string EducationFormName
		{
			get
			{
				return this._EducationFormName;
			}
			set
			{
				if ((this._EducationFormName != value))
				{
					this._EducationFormName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationSourceID", DbType="Int")]
		public System.Nullable<int> EducationSourceID
		{
			get
			{
				return this._EducationSourceID;
			}
			set
			{
				if ((this._EducationSourceID != value))
				{
					this._EducationSourceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationSourceName", DbType="VarChar(250)")]
		public string EducationSourceName
		{
			get
			{
				return this._EducationSourceName;
			}
			set
			{
				if ((this._EducationSourceName != value))
				{
					this._EducationSourceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Places", DbType="Int")]
		public System.Nullable<int> Places
		{
			get
			{
				return this._Places;
			}
			set
			{
				if ((this._Places != value))
				{
					this._Places = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_acgiID", DbType="Int")]
		public System.Nullable<int> acgiID
		{
			get
			{
				return this._acgiID;
			}
			set
			{
				if ((this._acgiID != value))
				{
					this._acgiID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int")]
		public System.Nullable<int> ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this._ApplicationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantID", DbType="Int")]
		public System.Nullable<int> EntrantID
		{
			get
			{
				return this._EntrantID;
			}
			set
			{
				if ((this._EntrantID != value))
				{
					this._EntrantID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIO", DbType="VarChar(250)")]
		public string FIO
		{
			get
			{
				return this._FIO;
			}
			set
			{
				if ((this._FIO != value))
				{
					this._FIO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalDocumentsReceived", DbType="Bit")]
		public System.Nullable<bool> OriginalDocumentsReceived
		{
			get
			{
				return this._OriginalDocumentsReceived;
			}
			set
			{
				if ((this._OriginalDocumentsReceived != value))
				{
					this._OriginalDocumentsReceived = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionCode", DbType="VarChar(200)")]
		public string ConditionCode
		{
			get
			{
				return this._ConditionCode;
			}
			set
			{
				if ((this._ConditionCode != value))
				{
					this._ConditionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationPriority", DbType="Int")]
		public System.Nullable<int> ApplicationPriority
		{
			get
			{
				return this._ApplicationPriority;
			}
			set
			{
				if ((this._ApplicationPriority != value))
				{
					this._ApplicationPriority = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACGI_Priority", DbType="Int")]
		public System.Nullable<int> ACGI_Priority
		{
			get
			{
				return this._ACGI_Priority;
			}
			set
			{
				if ((this._ACGI_Priority != value))
				{
					this._ACGI_Priority = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcPriority", DbType="Int")]
		public System.Nullable<int> CalcPriority
		{
			get
			{
				return this._CalcPriority;
			}
			set
			{
				if ((this._CalcPriority != value))
				{
					this._CalcPriority = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int")]
		public System.Nullable<int> Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this._Mark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkIA", DbType="Int")]
		public System.Nullable<int> MarkIA
		{
			get
			{
				return this._MarkIA;
			}
			set
			{
				if ((this._MarkIA != value))
				{
					this._MarkIA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bezVI", DbType="Bit")]
		public System.Nullable<bool> bezVI
		{
			get
			{
				return this._bezVI;
			}
			set
			{
				if ((this._bezVI != value))
				{
					this._bezVI = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OsoboePravo", DbType="Bit")]
		public System.Nullable<bool> OsoboePravo
		{
			get
			{
				return this._OsoboePravo;
			}
			set
			{
				if ((this._OsoboePravo != value))
				{
					this._OsoboePravo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreimPravo", DbType="Bit")]
		public System.Nullable<bool> PreimPravo
		{
			get
			{
				return this._PreimPravo;
			}
			set
			{
				if ((this._PreimPravo != value))
				{
					this._PreimPravo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aRank", DbType="Int")]
		public System.Nullable<int> aRank
		{
			get
			{
				return this._aRank;
			}
			set
			{
				if ((this._aRank != value))
				{
					this._aRank = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sRank", DbType="VarChar(100)")]
		public string sRank
		{
			get
			{
				return this._sRank;
			}
			set
			{
				if ((this._sRank != value))
				{
					this._sRank = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeTo", DbType="VarChar(200)")]
		public string IncludeTo
		{
			get
			{
				return this._IncludeTo;
			}
			set
			{
				if ((this._IncludeTo != value))
				{
					this._IncludeTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Excluded", DbType="Int")]
		public System.Nullable<int> Excluded
		{
			get
			{
				return this._Excluded;
			}
			set
			{
				if ((this._Excluded != value))
				{
					this._Excluded = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[__ORD_C]")]
	public partial class @__ORD_C
	{
		
		private System.Nullable<int> _InstitutionID;
		
		private System.Nullable<int> _YearStart;
		
		private System.Nullable<int> _CampaignID;
		
		private string _CampaignName;
		
		private System.Nullable<int> _CompetitiveGroupID;
		
		private string _CompetitiveGroupName;
		
		private System.Nullable<int> _Course;
		
		private System.Nullable<int> _CompetitiveGroupItemID;
		
		private System.Nullable<int> _CompetitiveGroupTargetID;
		
		private string _CompetitiveGroupTargetName;
		
		private System.Nullable<int> _DirectionID;
		
		private string _DirectionCode;
		
		private string _DirectionName;
		
		private System.Nullable<int> _EducationLevelID;
		
		private string _EducationLevelName;
		
		private System.Nullable<int> _EducationFormID;
		
		private string _EducationFormName;
		
		private System.Nullable<int> _EducationSourceID;
		
		private string _EducationSourceName;
		
		private string _ConditionCode;
		
		private System.Nullable<int> _Places;
		
		private System.Nullable<int> _PlacesBase;
		
		public @__ORD_C()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int")]
		public System.Nullable<int> InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this._InstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearStart", DbType="Int")]
		public System.Nullable<int> YearStart
		{
			get
			{
				return this._YearStart;
			}
			set
			{
				if ((this._YearStart != value))
				{
					this._YearStart = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int")]
		public System.Nullable<int> CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					this._CampaignID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignName", DbType="VarChar(250)")]
		public string CampaignName
		{
			get
			{
				return this._CampaignName;
			}
			set
			{
				if ((this._CampaignName != value))
				{
					this._CampaignName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupID", DbType="Int")]
		public System.Nullable<int> CompetitiveGroupID
		{
			get
			{
				return this._CompetitiveGroupID;
			}
			set
			{
				if ((this._CompetitiveGroupID != value))
				{
					this._CompetitiveGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupName", DbType="VarChar(250)")]
		public string CompetitiveGroupName
		{
			get
			{
				return this._CompetitiveGroupName;
			}
			set
			{
				if ((this._CompetitiveGroupName != value))
				{
					this._CompetitiveGroupName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="Int")]
		public System.Nullable<int> Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this._Course = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupItemID", DbType="Int")]
		public System.Nullable<int> CompetitiveGroupItemID
		{
			get
			{
				return this._CompetitiveGroupItemID;
			}
			set
			{
				if ((this._CompetitiveGroupItemID != value))
				{
					this._CompetitiveGroupItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupTargetID", DbType="Int")]
		public System.Nullable<int> CompetitiveGroupTargetID
		{
			get
			{
				return this._CompetitiveGroupTargetID;
			}
			set
			{
				if ((this._CompetitiveGroupTargetID != value))
				{
					this._CompetitiveGroupTargetID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupTargetName", DbType="VarChar(500)")]
		public string CompetitiveGroupTargetName
		{
			get
			{
				return this._CompetitiveGroupTargetName;
			}
			set
			{
				if ((this._CompetitiveGroupTargetName != value))
				{
					this._CompetitiveGroupTargetName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int")]
		public System.Nullable<int> DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					this._DirectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionCode", DbType="VarChar(50)")]
		public string DirectionCode
		{
			get
			{
				return this._DirectionCode;
			}
			set
			{
				if ((this._DirectionCode != value))
				{
					this._DirectionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionName", DbType="VarChar(250)")]
		public string DirectionName
		{
			get
			{
				return this._DirectionName;
			}
			set
			{
				if ((this._DirectionName != value))
				{
					this._DirectionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelID", DbType="Int")]
		public System.Nullable<int> EducationLevelID
		{
			get
			{
				return this._EducationLevelID;
			}
			set
			{
				if ((this._EducationLevelID != value))
				{
					this._EducationLevelID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelName", DbType="VarChar(250)")]
		public string EducationLevelName
		{
			get
			{
				return this._EducationLevelName;
			}
			set
			{
				if ((this._EducationLevelName != value))
				{
					this._EducationLevelName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationFormID", DbType="Int")]
		public System.Nullable<int> EducationFormID
		{
			get
			{
				return this._EducationFormID;
			}
			set
			{
				if ((this._EducationFormID != value))
				{
					this._EducationFormID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationFormName", DbType="VarChar(250)")]
		public string EducationFormName
		{
			get
			{
				return this._EducationFormName;
			}
			set
			{
				if ((this._EducationFormName != value))
				{
					this._EducationFormName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationSourceID", DbType="Int")]
		public System.Nullable<int> EducationSourceID
		{
			get
			{
				return this._EducationSourceID;
			}
			set
			{
				if ((this._EducationSourceID != value))
				{
					this._EducationSourceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationSourceName", DbType="VarChar(250)")]
		public string EducationSourceName
		{
			get
			{
				return this._EducationSourceName;
			}
			set
			{
				if ((this._EducationSourceName != value))
				{
					this._EducationSourceName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionCode", DbType="VarChar(200)")]
		public string ConditionCode
		{
			get
			{
				return this._ConditionCode;
			}
			set
			{
				if ((this._ConditionCode != value))
				{
					this._ConditionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Places", DbType="Int")]
		public System.Nullable<int> Places
		{
			get
			{
				return this._Places;
			}
			set
			{
				if ((this._Places != value))
				{
					this._Places = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlacesBase", DbType="Int")]
		public System.Nullable<int> PlacesBase
		{
			get
			{
				return this._PlacesBase;
			}
			set
			{
				if ((this._PlacesBase != value))
				{
					this._PlacesBase = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_A]")]
	public partial class _A : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _InstitutionID;
		
		private System.Nullable<int> _YearStart;
		
		private System.Nullable<int> _CampaignID;
		
		private string _CampaignName;
		
		private System.Nullable<int> _CompetitiveGroupID;
		
		private string _CompetitiveGroupName;
		
		private System.Nullable<int> _Course;
		
		private System.Nullable<int> _CompetitiveGroupItemID;
		
		private System.Nullable<int> _CompetitiveGroupTargetID;
		
		private string _CompetitiveGroupTargetName;
		
		private System.Nullable<int> _DirectionID;
		
		private string _DirectionCode;
		
		private string _DirectionName;
		
		private System.Nullable<int> _EducationLevelID;
		
		private string _EducationLevelName;
		
		private System.Nullable<int> _EducationFormID;
		
		private string _EducationFormName;
		
		private System.Nullable<int> _EducationSourceID;
		
		private string _EducationSourceName;
		
		private System.Nullable<int> _Places;
		
		private int _acgiID;
		
		private System.Nullable<int> _ApplicationID;
		
		private System.Nullable<int> _EntrantID;
		
		private string _FIO;
		
		private System.Nullable<bool> _OriginalDocumentsReceived;
		
		private string _ConditionCode;
		
		private System.Nullable<int> _ApplicationPriority;
		
		private System.Nullable<int> _ACGI_Priority;
		
		private System.Nullable<int> _CalcPriority;
		
		private System.Nullable<int> _Mark;
		
		private System.Nullable<int> _MarkIA;
		
		private System.Nullable<bool> _bezVI;
		
		private System.Nullable<bool> _OsoboePravo;
		
		private System.Nullable<bool> _PreimPravo;
		
		private System.Nullable<int> _aRank;
		
		private string _sRank;
		
		private string _IncludeTo;
		
		private System.Nullable<int> _Excluded;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstitutionIDChanging(System.Nullable<int> value);
    partial void OnInstitutionIDChanged();
    partial void OnYearStartChanging(System.Nullable<int> value);
    partial void OnYearStartChanged();
    partial void OnCampaignIDChanging(System.Nullable<int> value);
    partial void OnCampaignIDChanged();
    partial void OnCampaignNameChanging(string value);
    partial void OnCampaignNameChanged();
    partial void OnCompetitiveGroupIDChanging(System.Nullable<int> value);
    partial void OnCompetitiveGroupIDChanged();
    partial void OnCompetitiveGroupNameChanging(string value);
    partial void OnCompetitiveGroupNameChanged();
    partial void OnCourseChanging(System.Nullable<int> value);
    partial void OnCourseChanged();
    partial void OnCompetitiveGroupItemIDChanging(System.Nullable<int> value);
    partial void OnCompetitiveGroupItemIDChanged();
    partial void OnCompetitiveGroupTargetIDChanging(System.Nullable<int> value);
    partial void OnCompetitiveGroupTargetIDChanged();
    partial void OnCompetitiveGroupTargetNameChanging(string value);
    partial void OnCompetitiveGroupTargetNameChanged();
    partial void OnDirectionIDChanging(System.Nullable<int> value);
    partial void OnDirectionIDChanged();
    partial void OnDirectionCodeChanging(string value);
    partial void OnDirectionCodeChanged();
    partial void OnDirectionNameChanging(string value);
    partial void OnDirectionNameChanged();
    partial void OnEducationLevelIDChanging(System.Nullable<int> value);
    partial void OnEducationLevelIDChanged();
    partial void OnEducationLevelNameChanging(string value);
    partial void OnEducationLevelNameChanged();
    partial void OnEducationFormIDChanging(System.Nullable<int> value);
    partial void OnEducationFormIDChanged();
    partial void OnEducationFormNameChanging(string value);
    partial void OnEducationFormNameChanged();
    partial void OnEducationSourceIDChanging(System.Nullable<int> value);
    partial void OnEducationSourceIDChanged();
    partial void OnEducationSourceNameChanging(string value);
    partial void OnEducationSourceNameChanged();
    partial void OnPlacesChanging(System.Nullable<int> value);
    partial void OnPlacesChanged();
    partial void OnacgiIDChanging(int value);
    partial void OnacgiIDChanged();
    partial void OnApplicationIDChanging(System.Nullable<int> value);
    partial void OnApplicationIDChanged();
    partial void OnEntrantIDChanging(System.Nullable<int> value);
    partial void OnEntrantIDChanged();
    partial void OnFIOChanging(string value);
    partial void OnFIOChanged();
    partial void OnOriginalDocumentsReceivedChanging(System.Nullable<bool> value);
    partial void OnOriginalDocumentsReceivedChanged();
    partial void OnConditionCodeChanging(string value);
    partial void OnConditionCodeChanged();
    partial void OnApplicationPriorityChanging(System.Nullable<int> value);
    partial void OnApplicationPriorityChanged();
    partial void OnACGI_PriorityChanging(System.Nullable<int> value);
    partial void OnACGI_PriorityChanged();
    partial void OnCalcPriorityChanging(System.Nullable<int> value);
    partial void OnCalcPriorityChanged();
    partial void OnMarkChanging(System.Nullable<int> value);
    partial void OnMarkChanged();
    partial void OnMarkIAChanging(System.Nullable<int> value);
    partial void OnMarkIAChanged();
    partial void OnbezVIChanging(System.Nullable<bool> value);
    partial void OnbezVIChanged();
    partial void OnOsoboePravoChanging(System.Nullable<bool> value);
    partial void OnOsoboePravoChanged();
    partial void OnPreimPravoChanging(System.Nullable<bool> value);
    partial void OnPreimPravoChanged();
    partial void OnaRankChanging(System.Nullable<int> value);
    partial void OnaRankChanged();
    partial void OnsRankChanging(string value);
    partial void OnsRankChanged();
    partial void OnIncludeToChanging(string value);
    partial void OnIncludeToChanged();
    partial void OnExcludedChanging(System.Nullable<int> value);
    partial void OnExcludedChanged();
    #endregion
		
		public _A()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int")]
		public System.Nullable<int> InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearStart", DbType="Int")]
		public System.Nullable<int> YearStart
		{
			get
			{
				return this._YearStart;
			}
			set
			{
				if ((this._YearStart != value))
				{
					this.OnYearStartChanging(value);
					this.SendPropertyChanging();
					this._YearStart = value;
					this.SendPropertyChanged("YearStart");
					this.OnYearStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int")]
		public System.Nullable<int> CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignName", DbType="VarChar(250)")]
		public string CampaignName
		{
			get
			{
				return this._CampaignName;
			}
			set
			{
				if ((this._CampaignName != value))
				{
					this.OnCampaignNameChanging(value);
					this.SendPropertyChanging();
					this._CampaignName = value;
					this.SendPropertyChanged("CampaignName");
					this.OnCampaignNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupID", DbType="Int")]
		public System.Nullable<int> CompetitiveGroupID
		{
			get
			{
				return this._CompetitiveGroupID;
			}
			set
			{
				if ((this._CompetitiveGroupID != value))
				{
					this.OnCompetitiveGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupID = value;
					this.SendPropertyChanged("CompetitiveGroupID");
					this.OnCompetitiveGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupName", DbType="VarChar(250)")]
		public string CompetitiveGroupName
		{
			get
			{
				return this._CompetitiveGroupName;
			}
			set
			{
				if ((this._CompetitiveGroupName != value))
				{
					this.OnCompetitiveGroupNameChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupName = value;
					this.SendPropertyChanged("CompetitiveGroupName");
					this.OnCompetitiveGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="Int")]
		public System.Nullable<int> Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this.OnCourseChanging(value);
					this.SendPropertyChanging();
					this._Course = value;
					this.SendPropertyChanged("Course");
					this.OnCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupItemID", DbType="Int")]
		public System.Nullable<int> CompetitiveGroupItemID
		{
			get
			{
				return this._CompetitiveGroupItemID;
			}
			set
			{
				if ((this._CompetitiveGroupItemID != value))
				{
					this.OnCompetitiveGroupItemIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupItemID = value;
					this.SendPropertyChanged("CompetitiveGroupItemID");
					this.OnCompetitiveGroupItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupTargetID", DbType="Int")]
		public System.Nullable<int> CompetitiveGroupTargetID
		{
			get
			{
				return this._CompetitiveGroupTargetID;
			}
			set
			{
				if ((this._CompetitiveGroupTargetID != value))
				{
					this.OnCompetitiveGroupTargetIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupTargetID = value;
					this.SendPropertyChanged("CompetitiveGroupTargetID");
					this.OnCompetitiveGroupTargetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupTargetName", DbType="VarChar(250)")]
		public string CompetitiveGroupTargetName
		{
			get
			{
				return this._CompetitiveGroupTargetName;
			}
			set
			{
				if ((this._CompetitiveGroupTargetName != value))
				{
					this.OnCompetitiveGroupTargetNameChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupTargetName = value;
					this.SendPropertyChanged("CompetitiveGroupTargetName");
					this.OnCompetitiveGroupTargetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int")]
		public System.Nullable<int> DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionCode", DbType="VarChar(50)")]
		public string DirectionCode
		{
			get
			{
				return this._DirectionCode;
			}
			set
			{
				if ((this._DirectionCode != value))
				{
					this.OnDirectionCodeChanging(value);
					this.SendPropertyChanging();
					this._DirectionCode = value;
					this.SendPropertyChanged("DirectionCode");
					this.OnDirectionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionName", DbType="VarChar(250)")]
		public string DirectionName
		{
			get
			{
				return this._DirectionName;
			}
			set
			{
				if ((this._DirectionName != value))
				{
					this.OnDirectionNameChanging(value);
					this.SendPropertyChanging();
					this._DirectionName = value;
					this.SendPropertyChanged("DirectionName");
					this.OnDirectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelID", DbType="Int")]
		public System.Nullable<int> EducationLevelID
		{
			get
			{
				return this._EducationLevelID;
			}
			set
			{
				if ((this._EducationLevelID != value))
				{
					this.OnEducationLevelIDChanging(value);
					this.SendPropertyChanging();
					this._EducationLevelID = value;
					this.SendPropertyChanged("EducationLevelID");
					this.OnEducationLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelName", DbType="VarChar(250)")]
		public string EducationLevelName
		{
			get
			{
				return this._EducationLevelName;
			}
			set
			{
				if ((this._EducationLevelName != value))
				{
					this.OnEducationLevelNameChanging(value);
					this.SendPropertyChanging();
					this._EducationLevelName = value;
					this.SendPropertyChanged("EducationLevelName");
					this.OnEducationLevelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationFormID", DbType="Int")]
		public System.Nullable<int> EducationFormID
		{
			get
			{
				return this._EducationFormID;
			}
			set
			{
				if ((this._EducationFormID != value))
				{
					this.OnEducationFormIDChanging(value);
					this.SendPropertyChanging();
					this._EducationFormID = value;
					this.SendPropertyChanged("EducationFormID");
					this.OnEducationFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationFormName", DbType="VarChar(250)")]
		public string EducationFormName
		{
			get
			{
				return this._EducationFormName;
			}
			set
			{
				if ((this._EducationFormName != value))
				{
					this.OnEducationFormNameChanging(value);
					this.SendPropertyChanging();
					this._EducationFormName = value;
					this.SendPropertyChanged("EducationFormName");
					this.OnEducationFormNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationSourceID", DbType="Int")]
		public System.Nullable<int> EducationSourceID
		{
			get
			{
				return this._EducationSourceID;
			}
			set
			{
				if ((this._EducationSourceID != value))
				{
					this.OnEducationSourceIDChanging(value);
					this.SendPropertyChanging();
					this._EducationSourceID = value;
					this.SendPropertyChanged("EducationSourceID");
					this.OnEducationSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationSourceName", DbType="VarChar(250)")]
		public string EducationSourceName
		{
			get
			{
				return this._EducationSourceName;
			}
			set
			{
				if ((this._EducationSourceName != value))
				{
					this.OnEducationSourceNameChanging(value);
					this.SendPropertyChanging();
					this._EducationSourceName = value;
					this.SendPropertyChanged("EducationSourceName");
					this.OnEducationSourceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Places", DbType="Int")]
		public System.Nullable<int> Places
		{
			get
			{
				return this._Places;
			}
			set
			{
				if ((this._Places != value))
				{
					this.OnPlacesChanging(value);
					this.SendPropertyChanging();
					this._Places = value;
					this.SendPropertyChanged("Places");
					this.OnPlacesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_acgiID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int acgiID
		{
			get
			{
				return this._acgiID;
			}
			set
			{
				if ((this._acgiID != value))
				{
					this.OnacgiIDChanging(value);
					this.SendPropertyChanging();
					this._acgiID = value;
					this.SendPropertyChanged("acgiID");
					this.OnacgiIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int")]
		public System.Nullable<int> ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantID", DbType="Int")]
		public System.Nullable<int> EntrantID
		{
			get
			{
				return this._EntrantID;
			}
			set
			{
				if ((this._EntrantID != value))
				{
					this.OnEntrantIDChanging(value);
					this.SendPropertyChanging();
					this._EntrantID = value;
					this.SendPropertyChanged("EntrantID");
					this.OnEntrantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIO", DbType="VarChar(250)")]
		public string FIO
		{
			get
			{
				return this._FIO;
			}
			set
			{
				if ((this._FIO != value))
				{
					this.OnFIOChanging(value);
					this.SendPropertyChanging();
					this._FIO = value;
					this.SendPropertyChanged("FIO");
					this.OnFIOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalDocumentsReceived", DbType="Bit")]
		public System.Nullable<bool> OriginalDocumentsReceived
		{
			get
			{
				return this._OriginalDocumentsReceived;
			}
			set
			{
				if ((this._OriginalDocumentsReceived != value))
				{
					this.OnOriginalDocumentsReceivedChanging(value);
					this.SendPropertyChanging();
					this._OriginalDocumentsReceived = value;
					this.SendPropertyChanged("OriginalDocumentsReceived");
					this.OnOriginalDocumentsReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionCode", DbType="VarChar(200)")]
		public string ConditionCode
		{
			get
			{
				return this._ConditionCode;
			}
			set
			{
				if ((this._ConditionCode != value))
				{
					this.OnConditionCodeChanging(value);
					this.SendPropertyChanging();
					this._ConditionCode = value;
					this.SendPropertyChanged("ConditionCode");
					this.OnConditionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationPriority", DbType="Int")]
		public System.Nullable<int> ApplicationPriority
		{
			get
			{
				return this._ApplicationPriority;
			}
			set
			{
				if ((this._ApplicationPriority != value))
				{
					this.OnApplicationPriorityChanging(value);
					this.SendPropertyChanging();
					this._ApplicationPriority = value;
					this.SendPropertyChanged("ApplicationPriority");
					this.OnApplicationPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACGI_Priority", DbType="Int")]
		public System.Nullable<int> ACGI_Priority
		{
			get
			{
				return this._ACGI_Priority;
			}
			set
			{
				if ((this._ACGI_Priority != value))
				{
					this.OnACGI_PriorityChanging(value);
					this.SendPropertyChanging();
					this._ACGI_Priority = value;
					this.SendPropertyChanged("ACGI_Priority");
					this.OnACGI_PriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalcPriority", DbType="Int")]
		public System.Nullable<int> CalcPriority
		{
			get
			{
				return this._CalcPriority;
			}
			set
			{
				if ((this._CalcPriority != value))
				{
					this.OnCalcPriorityChanging(value);
					this.SendPropertyChanging();
					this._CalcPriority = value;
					this.SendPropertyChanged("CalcPriority");
					this.OnCalcPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mark", DbType="Int")]
		public System.Nullable<int> Mark
		{
			get
			{
				return this._Mark;
			}
			set
			{
				if ((this._Mark != value))
				{
					this.OnMarkChanging(value);
					this.SendPropertyChanging();
					this._Mark = value;
					this.SendPropertyChanged("Mark");
					this.OnMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarkIA", DbType="Int")]
		public System.Nullable<int> MarkIA
		{
			get
			{
				return this._MarkIA;
			}
			set
			{
				if ((this._MarkIA != value))
				{
					this.OnMarkIAChanging(value);
					this.SendPropertyChanging();
					this._MarkIA = value;
					this.SendPropertyChanged("MarkIA");
					this.OnMarkIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bezVI", DbType="Bit")]
		public System.Nullable<bool> bezVI
		{
			get
			{
				return this._bezVI;
			}
			set
			{
				if ((this._bezVI != value))
				{
					this.OnbezVIChanging(value);
					this.SendPropertyChanging();
					this._bezVI = value;
					this.SendPropertyChanged("bezVI");
					this.OnbezVIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OsoboePravo", DbType="Bit")]
		public System.Nullable<bool> OsoboePravo
		{
			get
			{
				return this._OsoboePravo;
			}
			set
			{
				if ((this._OsoboePravo != value))
				{
					this.OnOsoboePravoChanging(value);
					this.SendPropertyChanging();
					this._OsoboePravo = value;
					this.SendPropertyChanged("OsoboePravo");
					this.OnOsoboePravoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreimPravo", DbType="Bit")]
		public System.Nullable<bool> PreimPravo
		{
			get
			{
				return this._PreimPravo;
			}
			set
			{
				if ((this._PreimPravo != value))
				{
					this.OnPreimPravoChanging(value);
					this.SendPropertyChanging();
					this._PreimPravo = value;
					this.SendPropertyChanged("PreimPravo");
					this.OnPreimPravoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aRank", DbType="Int")]
		public System.Nullable<int> aRank
		{
			get
			{
				return this._aRank;
			}
			set
			{
				if ((this._aRank != value))
				{
					this.OnaRankChanging(value);
					this.SendPropertyChanging();
					this._aRank = value;
					this.SendPropertyChanged("aRank");
					this.OnaRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sRank", DbType="VarChar(100)")]
		public string sRank
		{
			get
			{
				return this._sRank;
			}
			set
			{
				if ((this._sRank != value))
				{
					this.OnsRankChanging(value);
					this.SendPropertyChanging();
					this._sRank = value;
					this.SendPropertyChanged("sRank");
					this.OnsRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncludeTo", DbType="VarChar(200)")]
		public string IncludeTo
		{
			get
			{
				return this._IncludeTo;
			}
			set
			{
				if ((this._IncludeTo != value))
				{
					this.OnIncludeToChanging(value);
					this.SendPropertyChanging();
					this._IncludeTo = value;
					this.SendPropertyChanged("IncludeTo");
					this.OnIncludeToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Excluded", DbType="Int")]
		public System.Nullable<int> Excluded
		{
			get
			{
				return this._Excluded;
			}
			set
			{
				if ((this._Excluded != value))
				{
					this.OnExcludedChanging(value);
					this.SendPropertyChanging();
					this._Excluded = value;
					this.SendPropertyChanged("Excluded");
					this.OnExcludedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_C]")]
	public partial class _C : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _InstitutionID;
		
		private System.Nullable<int> _YearStart;
		
		private System.Nullable<int> _CampaignID;
		
		private string _CampaignName;
		
		private System.Nullable<int> _CompetitiveGroupID;
		
		private string _CompetitiveGroupName;
		
		private System.Nullable<int> _Course;
		
		private System.Nullable<int> _CompetitiveGroupItemID;
		
		private System.Nullable<int> _CompetitiveGroupTargetID;
		
		private string _CompetitiveGroupTargetName;
		
		private System.Nullable<int> _DirectionID;
		
		private string _DirectionCode;
		
		private string _DirectionName;
		
		private System.Nullable<int> _EducationLevelID;
		
		private string _EducationLevelName;
		
		private System.Nullable<int> _EducationFormID;
		
		private string _EducationFormName;
		
		private System.Nullable<int> _EducationSourceID;
		
		private string _EducationSourceName;
		
		private string _ConditionCode;
		
		private System.Nullable<int> _Places;
		
		private System.Nullable<int> _PlacesBase;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstitutionIDChanging(System.Nullable<int> value);
    partial void OnInstitutionIDChanged();
    partial void OnYearStartChanging(System.Nullable<int> value);
    partial void OnYearStartChanged();
    partial void OnCampaignIDChanging(System.Nullable<int> value);
    partial void OnCampaignIDChanged();
    partial void OnCampaignNameChanging(string value);
    partial void OnCampaignNameChanged();
    partial void OnCompetitiveGroupIDChanging(System.Nullable<int> value);
    partial void OnCompetitiveGroupIDChanged();
    partial void OnCompetitiveGroupNameChanging(string value);
    partial void OnCompetitiveGroupNameChanged();
    partial void OnCourseChanging(System.Nullable<int> value);
    partial void OnCourseChanged();
    partial void OnCompetitiveGroupItemIDChanging(System.Nullable<int> value);
    partial void OnCompetitiveGroupItemIDChanged();
    partial void OnCompetitiveGroupTargetIDChanging(System.Nullable<int> value);
    partial void OnCompetitiveGroupTargetIDChanged();
    partial void OnCompetitiveGroupTargetNameChanging(string value);
    partial void OnCompetitiveGroupTargetNameChanged();
    partial void OnDirectionIDChanging(System.Nullable<int> value);
    partial void OnDirectionIDChanged();
    partial void OnDirectionCodeChanging(string value);
    partial void OnDirectionCodeChanged();
    partial void OnDirectionNameChanging(string value);
    partial void OnDirectionNameChanged();
    partial void OnEducationLevelIDChanging(System.Nullable<int> value);
    partial void OnEducationLevelIDChanged();
    partial void OnEducationLevelNameChanging(string value);
    partial void OnEducationLevelNameChanged();
    partial void OnEducationFormIDChanging(System.Nullable<int> value);
    partial void OnEducationFormIDChanged();
    partial void OnEducationFormNameChanging(string value);
    partial void OnEducationFormNameChanged();
    partial void OnEducationSourceIDChanging(System.Nullable<int> value);
    partial void OnEducationSourceIDChanged();
    partial void OnEducationSourceNameChanging(string value);
    partial void OnEducationSourceNameChanged();
    partial void OnConditionCodeChanging(string value);
    partial void OnConditionCodeChanged();
    partial void OnPlacesChanging(System.Nullable<int> value);
    partial void OnPlacesChanged();
    partial void OnPlacesBaseChanging(System.Nullable<int> value);
    partial void OnPlacesBaseChanged();
    #endregion
		
		public _C()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int")]
		public System.Nullable<int> InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearStart", DbType="Int")]
		public System.Nullable<int> YearStart
		{
			get
			{
				return this._YearStart;
			}
			set
			{
				if ((this._YearStart != value))
				{
					this.OnYearStartChanging(value);
					this.SendPropertyChanging();
					this._YearStart = value;
					this.SendPropertyChanged("YearStart");
					this.OnYearStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int")]
		public System.Nullable<int> CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignName", DbType="VarChar(250)")]
		public string CampaignName
		{
			get
			{
				return this._CampaignName;
			}
			set
			{
				if ((this._CampaignName != value))
				{
					this.OnCampaignNameChanging(value);
					this.SendPropertyChanging();
					this._CampaignName = value;
					this.SendPropertyChanged("CampaignName");
					this.OnCampaignNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupID", DbType="Int")]
		public System.Nullable<int> CompetitiveGroupID
		{
			get
			{
				return this._CompetitiveGroupID;
			}
			set
			{
				if ((this._CompetitiveGroupID != value))
				{
					this.OnCompetitiveGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupID = value;
					this.SendPropertyChanged("CompetitiveGroupID");
					this.OnCompetitiveGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupName", DbType="VarChar(250)")]
		public string CompetitiveGroupName
		{
			get
			{
				return this._CompetitiveGroupName;
			}
			set
			{
				if ((this._CompetitiveGroupName != value))
				{
					this.OnCompetitiveGroupNameChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupName = value;
					this.SendPropertyChanged("CompetitiveGroupName");
					this.OnCompetitiveGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="Int")]
		public System.Nullable<int> Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this.OnCourseChanging(value);
					this.SendPropertyChanging();
					this._Course = value;
					this.SendPropertyChanged("Course");
					this.OnCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupItemID", DbType="Int")]
		public System.Nullable<int> CompetitiveGroupItemID
		{
			get
			{
				return this._CompetitiveGroupItemID;
			}
			set
			{
				if ((this._CompetitiveGroupItemID != value))
				{
					this.OnCompetitiveGroupItemIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupItemID = value;
					this.SendPropertyChanged("CompetitiveGroupItemID");
					this.OnCompetitiveGroupItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupTargetID", DbType="Int")]
		public System.Nullable<int> CompetitiveGroupTargetID
		{
			get
			{
				return this._CompetitiveGroupTargetID;
			}
			set
			{
				if ((this._CompetitiveGroupTargetID != value))
				{
					this.OnCompetitiveGroupTargetIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupTargetID = value;
					this.SendPropertyChanged("CompetitiveGroupTargetID");
					this.OnCompetitiveGroupTargetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupTargetName", DbType="VarChar(250)")]
		public string CompetitiveGroupTargetName
		{
			get
			{
				return this._CompetitiveGroupTargetName;
			}
			set
			{
				if ((this._CompetitiveGroupTargetName != value))
				{
					this.OnCompetitiveGroupTargetNameChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupTargetName = value;
					this.SendPropertyChanged("CompetitiveGroupTargetName");
					this.OnCompetitiveGroupTargetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int")]
		public System.Nullable<int> DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionCode", DbType="VarChar(50)")]
		public string DirectionCode
		{
			get
			{
				return this._DirectionCode;
			}
			set
			{
				if ((this._DirectionCode != value))
				{
					this.OnDirectionCodeChanging(value);
					this.SendPropertyChanging();
					this._DirectionCode = value;
					this.SendPropertyChanged("DirectionCode");
					this.OnDirectionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionName", DbType="VarChar(250)")]
		public string DirectionName
		{
			get
			{
				return this._DirectionName;
			}
			set
			{
				if ((this._DirectionName != value))
				{
					this.OnDirectionNameChanging(value);
					this.SendPropertyChanging();
					this._DirectionName = value;
					this.SendPropertyChanged("DirectionName");
					this.OnDirectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelID", DbType="Int")]
		public System.Nullable<int> EducationLevelID
		{
			get
			{
				return this._EducationLevelID;
			}
			set
			{
				if ((this._EducationLevelID != value))
				{
					this.OnEducationLevelIDChanging(value);
					this.SendPropertyChanging();
					this._EducationLevelID = value;
					this.SendPropertyChanged("EducationLevelID");
					this.OnEducationLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelName", DbType="VarChar(250)")]
		public string EducationLevelName
		{
			get
			{
				return this._EducationLevelName;
			}
			set
			{
				if ((this._EducationLevelName != value))
				{
					this.OnEducationLevelNameChanging(value);
					this.SendPropertyChanging();
					this._EducationLevelName = value;
					this.SendPropertyChanged("EducationLevelName");
					this.OnEducationLevelNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationFormID", DbType="Int")]
		public System.Nullable<int> EducationFormID
		{
			get
			{
				return this._EducationFormID;
			}
			set
			{
				if ((this._EducationFormID != value))
				{
					this.OnEducationFormIDChanging(value);
					this.SendPropertyChanging();
					this._EducationFormID = value;
					this.SendPropertyChanged("EducationFormID");
					this.OnEducationFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationFormName", DbType="VarChar(250)")]
		public string EducationFormName
		{
			get
			{
				return this._EducationFormName;
			}
			set
			{
				if ((this._EducationFormName != value))
				{
					this.OnEducationFormNameChanging(value);
					this.SendPropertyChanging();
					this._EducationFormName = value;
					this.SendPropertyChanged("EducationFormName");
					this.OnEducationFormNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationSourceID", DbType="Int")]
		public System.Nullable<int> EducationSourceID
		{
			get
			{
				return this._EducationSourceID;
			}
			set
			{
				if ((this._EducationSourceID != value))
				{
					this.OnEducationSourceIDChanging(value);
					this.SendPropertyChanging();
					this._EducationSourceID = value;
					this.SendPropertyChanged("EducationSourceID");
					this.OnEducationSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationSourceName", DbType="VarChar(250)")]
		public string EducationSourceName
		{
			get
			{
				return this._EducationSourceName;
			}
			set
			{
				if ((this._EducationSourceName != value))
				{
					this.OnEducationSourceNameChanging(value);
					this.SendPropertyChanging();
					this._EducationSourceName = value;
					this.SendPropertyChanged("EducationSourceName");
					this.OnEducationSourceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionCode", DbType="VarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ConditionCode
		{
			get
			{
				return this._ConditionCode;
			}
			set
			{
				if ((this._ConditionCode != value))
				{
					this.OnConditionCodeChanging(value);
					this.SendPropertyChanging();
					this._ConditionCode = value;
					this.SendPropertyChanged("ConditionCode");
					this.OnConditionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Places", DbType="Int")]
		public System.Nullable<int> Places
		{
			get
			{
				return this._Places;
			}
			set
			{
				if ((this._Places != value))
				{
					this.OnPlacesChanging(value);
					this.SendPropertyChanging();
					this._Places = value;
					this.SendPropertyChanged("Places");
					this.OnPlacesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlacesBase", DbType="Int")]
		public System.Nullable<int> PlacesBase
		{
			get
			{
				return this._PlacesBase;
			}
			set
			{
				if ((this._PlacesBase != value))
				{
					this.OnPlacesBaseChanging(value);
					this.SendPropertyChanging();
					this._PlacesBase = value;
					this.SendPropertyChanged("PlacesBase");
					this.OnPlacesBaseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_Entrant]")]
	public partial class _Entrant
	{
		
		private System.Nullable<int> _EntrantID;
		
		private System.Nullable<int> _PersonId;
		
		private System.Nullable<int> _InstitutionID;
		
		public _Entrant()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantID", DbType="Int")]
		public System.Nullable<int> EntrantID
		{
			get
			{
				return this._EntrantID;
			}
			set
			{
				if ((this._EntrantID != value))
				{
					this._EntrantID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="Int")]
		public System.Nullable<int> PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this._PersonId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int")]
		public System.Nullable<int> InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this._InstitutionID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Address")]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AddressID;
		
		private System.Nullable<int> _CountryID;
		
		private System.Nullable<int> _RegionID;
		
		private string _CityName;
		
		private string _PostalCode;
		
		private string _Street;
		
		private string _Building;
		
		private string _BuildingPart;
		
		private string _Room;
		
		private string _Phone;
		
		private string _RegionName;
		
		private string _CountryName;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<Entrant> _Entrants;
		
		private EntitySet<Entrant> _Entrants1;
		
		private EntityRef<CountryType> _CountryType;
		
		private EntityRef<RegionType> _RegionType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressIDChanging(int value);
    partial void OnAddressIDChanged();
    partial void OnCountryIDChanging(System.Nullable<int> value);
    partial void OnCountryIDChanged();
    partial void OnRegionIDChanging(System.Nullable<int> value);
    partial void OnRegionIDChanged();
    partial void OnCityNameChanging(string value);
    partial void OnCityNameChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnBuildingChanging(string value);
    partial void OnBuildingChanged();
    partial void OnBuildingPartChanging(string value);
    partial void OnBuildingPartChanged();
    partial void OnRoomChanging(string value);
    partial void OnRoomChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnRegionNameChanging(string value);
    partial void OnRegionNameChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Address()
		{
			this._Entrants = new EntitySet<Entrant>(new Action<Entrant>(this.attach_Entrants), new Action<Entrant>(this.detach_Entrants));
			this._Entrants1 = new EntitySet<Entrant>(new Action<Entrant>(this.attach_Entrants1), new Action<Entrant>(this.detach_Entrants1));
			this._CountryType = default(EntityRef<CountryType>);
			this._RegionType = default(EntityRef<RegionType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AddressID
		{
			get
			{
				return this._AddressID;
			}
			set
			{
				if ((this._AddressID != value))
				{
					this.OnAddressIDChanging(value);
					this.SendPropertyChanging();
					this._AddressID = value;
					this.SendPropertyChanged("AddressID");
					this.OnAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int")]
		public System.Nullable<int> CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._CountryType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int")]
		public System.Nullable<int> RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					if (this._RegionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityName", DbType="VarChar(255)")]
		public string CityName
		{
			get
			{
				return this._CityName;
			}
			set
			{
				if ((this._CityName != value))
				{
					this.OnCityNameChanging(value);
					this.SendPropertyChanging();
					this._CityName = value;
					this.SendPropertyChanged("CityName");
					this.OnCityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="VarChar(6)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="VarChar(255)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Building", DbType="VarChar(10)")]
		public string Building
		{
			get
			{
				return this._Building;
			}
			set
			{
				if ((this._Building != value))
				{
					this.OnBuildingChanging(value);
					this.SendPropertyChanging();
					this._Building = value;
					this.SendPropertyChanged("Building");
					this.OnBuildingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuildingPart", DbType="VarChar(10)")]
		public string BuildingPart
		{
			get
			{
				return this._BuildingPart;
			}
			set
			{
				if ((this._BuildingPart != value))
				{
					this.OnBuildingPartChanging(value);
					this.SendPropertyChanging();
					this._BuildingPart = value;
					this.SendPropertyChanged("BuildingPart");
					this.OnBuildingPartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room", DbType="VarChar(10)")]
		public string Room
		{
			get
			{
				return this._Room;
			}
			set
			{
				if ((this._Room != value))
				{
					this.OnRoomChanging(value);
					this.SendPropertyChanging();
					this._Room = value;
					this.SendPropertyChanged("Room");
					this.OnRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="VarChar(255)")]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this.OnRegionNameChanging(value);
					this.SendPropertyChanging();
					this._RegionName = value;
					this.SendPropertyChanged("RegionName");
					this.OnRegionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="VarChar(255)")]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Entrant", Storage="_Entrants", ThisKey="AddressID", OtherKey="FactAddressID")]
		public EntitySet<Entrant> Entrants
		{
			get
			{
				return this._Entrants;
			}
			set
			{
				this._Entrants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Entrant1", Storage="_Entrants1", ThisKey="AddressID", OtherKey="RegistrationAddressID")]
		public EntitySet<Entrant> Entrants1
		{
			get
			{
				return this._Entrants1;
			}
			set
			{
				this._Entrants1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryType_Address", Storage="_CountryType", ThisKey="CountryID", OtherKey="CountryID", IsForeignKey=true, DeleteRule="SET NULL")]
		public CountryType CountryType
		{
			get
			{
				return this._CountryType.Entity;
			}
			set
			{
				CountryType previousValue = this._CountryType.Entity;
				if (((previousValue != value) 
							|| (this._CountryType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CountryType.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._CountryType.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._CountryID = value.CountryID;
					}
					else
					{
						this._CountryID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CountryType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegionType_Address", Storage="_RegionType", ThisKey="RegionID", OtherKey="RegionId", IsForeignKey=true)]
		public RegionType RegionType
		{
			get
			{
				return this._RegionType.Entity;
			}
			set
			{
				RegionType previousValue = this._RegionType.Entity;
				if (((previousValue != value) 
							|| (this._RegionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegionType.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._RegionType.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._RegionID = value.RegionId;
					}
					else
					{
						this._RegionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RegionType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Entrants(Entrant entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_Entrants(Entrant entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_Entrants1(Entrant entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = this;
		}
		
		private void detach_Entrants1(Entrant entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdmissionData")]
	public partial class AdmissionData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdmissionStructureID;
		
		private int _AdmissionItemID;
		
		private int _InstitutionID;
		
		private System.Nullable<int> _ParentID;
		
		private short _Depth;
		
		private string _Lineage;
		
		private short _ItemTypeID;
		
		private short _ItemLevel;
		
		private System.Nullable<int> _PlaceCount;
		
		private System.Nullable<int> _TotalDirectionPlaceCount;
		
		private string _Name;
		
		private System.Nullable<bool> _HasMilitaryDepartment;
		
		private System.Nullable<bool> _HasPreparatoryCourses;
		
		private System.Nullable<bool> _HasOlympics;
		
		private System.Nullable<short> _EducationLevelID;
		
		private System.Nullable<int> _DirectionID;
		
		private System.Nullable<short> _StudyID;
		
		private System.Nullable<short> _AdmissionTypeID;
		
		private bool _IsLeaf;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdmissionStructureIDChanging(int value);
    partial void OnAdmissionStructureIDChanged();
    partial void OnAdmissionItemIDChanging(int value);
    partial void OnAdmissionItemIDChanged();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnDepthChanging(short value);
    partial void OnDepthChanged();
    partial void OnLineageChanging(string value);
    partial void OnLineageChanged();
    partial void OnItemTypeIDChanging(short value);
    partial void OnItemTypeIDChanged();
    partial void OnItemLevelChanging(short value);
    partial void OnItemLevelChanged();
    partial void OnPlaceCountChanging(System.Nullable<int> value);
    partial void OnPlaceCountChanged();
    partial void OnTotalDirectionPlaceCountChanging(System.Nullable<int> value);
    partial void OnTotalDirectionPlaceCountChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHasMilitaryDepartmentChanging(System.Nullable<bool> value);
    partial void OnHasMilitaryDepartmentChanged();
    partial void OnHasPreparatoryCoursesChanging(System.Nullable<bool> value);
    partial void OnHasPreparatoryCoursesChanged();
    partial void OnHasOlympicsChanging(System.Nullable<bool> value);
    partial void OnHasOlympicsChanged();
    partial void OnEducationLevelIDChanging(System.Nullable<short> value);
    partial void OnEducationLevelIDChanged();
    partial void OnDirectionIDChanging(System.Nullable<int> value);
    partial void OnDirectionIDChanged();
    partial void OnStudyIDChanging(System.Nullable<short> value);
    partial void OnStudyIDChanged();
    partial void OnAdmissionTypeIDChanging(System.Nullable<short> value);
    partial void OnAdmissionTypeIDChanged();
    partial void OnIsLeafChanging(bool value);
    partial void OnIsLeafChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public AdmissionData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionStructureID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AdmissionStructureID
		{
			get
			{
				return this._AdmissionStructureID;
			}
			set
			{
				if ((this._AdmissionStructureID != value))
				{
					this.OnAdmissionStructureIDChanging(value);
					this.SendPropertyChanging();
					this._AdmissionStructureID = value;
					this.SendPropertyChanged("AdmissionStructureID");
					this.OnAdmissionStructureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionItemID", DbType="Int NOT NULL")]
		public int AdmissionItemID
		{
			get
			{
				return this._AdmissionItemID;
			}
			set
			{
				if ((this._AdmissionItemID != value))
				{
					this.OnAdmissionItemIDChanging(value);
					this.SendPropertyChanging();
					this._AdmissionItemID = value;
					this.SendPropertyChanged("AdmissionItemID");
					this.OnAdmissionItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Depth", DbType="SmallInt NOT NULL")]
		public short Depth
		{
			get
			{
				return this._Depth;
			}
			set
			{
				if ((this._Depth != value))
				{
					this.OnDepthChanging(value);
					this.SendPropertyChanging();
					this._Depth = value;
					this.SendPropertyChanged("Depth");
					this.OnDepthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lineage", DbType="VarChar(146) NOT NULL", CanBeNull=false)]
		public string Lineage
		{
			get
			{
				return this._Lineage;
			}
			set
			{
				if ((this._Lineage != value))
				{
					this.OnLineageChanging(value);
					this.SendPropertyChanging();
					this._Lineage = value;
					this.SendPropertyChanged("Lineage");
					this.OnLineageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTypeID", DbType="SmallInt NOT NULL")]
		public short ItemTypeID
		{
			get
			{
				return this._ItemTypeID;
			}
			set
			{
				if ((this._ItemTypeID != value))
				{
					this.OnItemTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ItemTypeID = value;
					this.SendPropertyChanged("ItemTypeID");
					this.OnItemTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemLevel", DbType="SmallInt NOT NULL")]
		public short ItemLevel
		{
			get
			{
				return this._ItemLevel;
			}
			set
			{
				if ((this._ItemLevel != value))
				{
					this.OnItemLevelChanging(value);
					this.SendPropertyChanging();
					this._ItemLevel = value;
					this.SendPropertyChanged("ItemLevel");
					this.OnItemLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlaceCount", DbType="Int")]
		public System.Nullable<int> PlaceCount
		{
			get
			{
				return this._PlaceCount;
			}
			set
			{
				if ((this._PlaceCount != value))
				{
					this.OnPlaceCountChanging(value);
					this.SendPropertyChanging();
					this._PlaceCount = value;
					this.SendPropertyChanged("PlaceCount");
					this.OnPlaceCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDirectionPlaceCount", DbType="Int")]
		public System.Nullable<int> TotalDirectionPlaceCount
		{
			get
			{
				return this._TotalDirectionPlaceCount;
			}
			set
			{
				if ((this._TotalDirectionPlaceCount != value))
				{
					this.OnTotalDirectionPlaceCountChanging(value);
					this.SendPropertyChanging();
					this._TotalDirectionPlaceCount = value;
					this.SendPropertyChanged("TotalDirectionPlaceCount");
					this.OnTotalDirectionPlaceCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasMilitaryDepartment", DbType="Bit")]
		public System.Nullable<bool> HasMilitaryDepartment
		{
			get
			{
				return this._HasMilitaryDepartment;
			}
			set
			{
				if ((this._HasMilitaryDepartment != value))
				{
					this.OnHasMilitaryDepartmentChanging(value);
					this.SendPropertyChanging();
					this._HasMilitaryDepartment = value;
					this.SendPropertyChanged("HasMilitaryDepartment");
					this.OnHasMilitaryDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasPreparatoryCourses", DbType="Bit")]
		public System.Nullable<bool> HasPreparatoryCourses
		{
			get
			{
				return this._HasPreparatoryCourses;
			}
			set
			{
				if ((this._HasPreparatoryCourses != value))
				{
					this.OnHasPreparatoryCoursesChanging(value);
					this.SendPropertyChanging();
					this._HasPreparatoryCourses = value;
					this.SendPropertyChanged("HasPreparatoryCourses");
					this.OnHasPreparatoryCoursesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasOlympics", DbType="Bit")]
		public System.Nullable<bool> HasOlympics
		{
			get
			{
				return this._HasOlympics;
			}
			set
			{
				if ((this._HasOlympics != value))
				{
					this.OnHasOlympicsChanging(value);
					this.SendPropertyChanging();
					this._HasOlympics = value;
					this.SendPropertyChanged("HasOlympics");
					this.OnHasOlympicsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelID", DbType="SmallInt")]
		public System.Nullable<short> EducationLevelID
		{
			get
			{
				return this._EducationLevelID;
			}
			set
			{
				if ((this._EducationLevelID != value))
				{
					this.OnEducationLevelIDChanging(value);
					this.SendPropertyChanging();
					this._EducationLevelID = value;
					this.SendPropertyChanged("EducationLevelID");
					this.OnEducationLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int")]
		public System.Nullable<int> DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyID", DbType="SmallInt")]
		public System.Nullable<short> StudyID
		{
			get
			{
				return this._StudyID;
			}
			set
			{
				if ((this._StudyID != value))
				{
					this.OnStudyIDChanging(value);
					this.SendPropertyChanging();
					this._StudyID = value;
					this.SendPropertyChanged("StudyID");
					this.OnStudyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionTypeID", DbType="SmallInt")]
		public System.Nullable<short> AdmissionTypeID
		{
			get
			{
				return this._AdmissionTypeID;
			}
			set
			{
				if ((this._AdmissionTypeID != value))
				{
					this.OnAdmissionTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AdmissionTypeID = value;
					this.SendPropertyChanged("AdmissionTypeID");
					this.OnAdmissionTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLeaf", DbType="Bit NOT NULL")]
		public bool IsLeaf
		{
			get
			{
				return this._IsLeaf;
			}
			set
			{
				if ((this._IsLeaf != value))
				{
					this.OnIsLeafChanging(value);
					this.SendPropertyChanging();
					this._IsLeaf = value;
					this.SendPropertyChanged("IsLeaf");
					this.OnIsLeafChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdmissionItemType")]
	public partial class AdmissionItemType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ItemTypeID;
		
		private string _Name;
		
		private short _ItemLevel;
		
		private bool _CanBeSkipped;
		
		private bool _AutoCopyName;
		
		private int _DisplayOrder;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<AdmissionVolume> _AdmissionVolumes;
		
		private EntitySet<AllowedDirection> _AllowedDirections;
		
		private EntitySet<Application> _Applications;
		
		private EntitySet<Application> _Applications1;
		
		private EntitySet<ApplicationConsidered> _ApplicationConsidereds;
		
		private EntitySet<CampaignEducationLevel> _CampaignEducationLevels;
		
		private EntitySet<CompetitiveGroup> _CompetitiveGroups;
		
		private EntitySet<CompetitiveGroup> _CompetitiveGroups1;
		
		private EntitySet<CompetitiveGroup> _CompetitiveGroups2;
		
		private EntitySet<Direction> _Directions;
		
		private EntitySet<EduLevel> _EduLevels;
		
		private EntitySet<EduLevelsToCampaignType> _EduLevelsToCampaignTypes;
		
		private EntitySet<EduLevelsToUgsCode> _EduLevelsToUgsCodes;
		
		private EntitySet<InstitutionDirectionRequest> _InstitutionDirectionRequests;
		
		private EntitySet<OrderOfAdmission> _OrderOfAdmissions;
		
		private EntitySet<OrderOfAdmission> _OrderOfAdmissions1;
		
		private EntitySet<OrderOfAdmission> _OrderOfAdmissions2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemTypeIDChanging(short value);
    partial void OnItemTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnItemLevelChanging(short value);
    partial void OnItemLevelChanged();
    partial void OnCanBeSkippedChanging(bool value);
    partial void OnCanBeSkippedChanged();
    partial void OnAutoCopyNameChanging(bool value);
    partial void OnAutoCopyNameChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public AdmissionItemType()
		{
			this._AdmissionVolumes = new EntitySet<AdmissionVolume>(new Action<AdmissionVolume>(this.attach_AdmissionVolumes), new Action<AdmissionVolume>(this.detach_AdmissionVolumes));
			this._AllowedDirections = new EntitySet<AllowedDirection>(new Action<AllowedDirection>(this.attach_AllowedDirections), new Action<AllowedDirection>(this.detach_AllowedDirections));
			this._Applications = new EntitySet<Application>(new Action<Application>(this.attach_Applications), new Action<Application>(this.detach_Applications));
			this._Applications1 = new EntitySet<Application>(new Action<Application>(this.attach_Applications1), new Action<Application>(this.detach_Applications1));
			this._ApplicationConsidereds = new EntitySet<ApplicationConsidered>(new Action<ApplicationConsidered>(this.attach_ApplicationConsidereds), new Action<ApplicationConsidered>(this.detach_ApplicationConsidereds));
			this._CampaignEducationLevels = new EntitySet<CampaignEducationLevel>(new Action<CampaignEducationLevel>(this.attach_CampaignEducationLevels), new Action<CampaignEducationLevel>(this.detach_CampaignEducationLevels));
			this._CompetitiveGroups = new EntitySet<CompetitiveGroup>(new Action<CompetitiveGroup>(this.attach_CompetitiveGroups), new Action<CompetitiveGroup>(this.detach_CompetitiveGroups));
			this._CompetitiveGroups1 = new EntitySet<CompetitiveGroup>(new Action<CompetitiveGroup>(this.attach_CompetitiveGroups1), new Action<CompetitiveGroup>(this.detach_CompetitiveGroups1));
			this._CompetitiveGroups2 = new EntitySet<CompetitiveGroup>(new Action<CompetitiveGroup>(this.attach_CompetitiveGroups2), new Action<CompetitiveGroup>(this.detach_CompetitiveGroups2));
			this._Directions = new EntitySet<Direction>(new Action<Direction>(this.attach_Directions), new Action<Direction>(this.detach_Directions));
			this._EduLevels = new EntitySet<EduLevel>(new Action<EduLevel>(this.attach_EduLevels), new Action<EduLevel>(this.detach_EduLevels));
			this._EduLevelsToCampaignTypes = new EntitySet<EduLevelsToCampaignType>(new Action<EduLevelsToCampaignType>(this.attach_EduLevelsToCampaignTypes), new Action<EduLevelsToCampaignType>(this.detach_EduLevelsToCampaignTypes));
			this._EduLevelsToUgsCodes = new EntitySet<EduLevelsToUgsCode>(new Action<EduLevelsToUgsCode>(this.attach_EduLevelsToUgsCodes), new Action<EduLevelsToUgsCode>(this.detach_EduLevelsToUgsCodes));
			this._InstitutionDirectionRequests = new EntitySet<InstitutionDirectionRequest>(new Action<InstitutionDirectionRequest>(this.attach_InstitutionDirectionRequests), new Action<InstitutionDirectionRequest>(this.detach_InstitutionDirectionRequests));
			this._OrderOfAdmissions = new EntitySet<OrderOfAdmission>(new Action<OrderOfAdmission>(this.attach_OrderOfAdmissions), new Action<OrderOfAdmission>(this.detach_OrderOfAdmissions));
			this._OrderOfAdmissions1 = new EntitySet<OrderOfAdmission>(new Action<OrderOfAdmission>(this.attach_OrderOfAdmissions1), new Action<OrderOfAdmission>(this.detach_OrderOfAdmissions1));
			this._OrderOfAdmissions2 = new EntitySet<OrderOfAdmission>(new Action<OrderOfAdmission>(this.attach_OrderOfAdmissions2), new Action<OrderOfAdmission>(this.detach_OrderOfAdmissions2));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTypeID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short ItemTypeID
		{
			get
			{
				return this._ItemTypeID;
			}
			set
			{
				if ((this._ItemTypeID != value))
				{
					this.OnItemTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ItemTypeID = value;
					this.SendPropertyChanged("ItemTypeID");
					this.OnItemTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemLevel", DbType="SmallInt NOT NULL")]
		public short ItemLevel
		{
			get
			{
				return this._ItemLevel;
			}
			set
			{
				if ((this._ItemLevel != value))
				{
					this.OnItemLevelChanging(value);
					this.SendPropertyChanging();
					this._ItemLevel = value;
					this.SendPropertyChanged("ItemLevel");
					this.OnItemLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanBeSkipped", DbType="Bit NOT NULL")]
		public bool CanBeSkipped
		{
			get
			{
				return this._CanBeSkipped;
			}
			set
			{
				if ((this._CanBeSkipped != value))
				{
					this.OnCanBeSkippedChanging(value);
					this.SendPropertyChanging();
					this._CanBeSkipped = value;
					this.SendPropertyChanged("CanBeSkipped");
					this.OnCanBeSkippedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoCopyName", DbType="Bit NOT NULL")]
		public bool AutoCopyName
		{
			get
			{
				return this._AutoCopyName;
			}
			set
			{
				if ((this._AutoCopyName != value))
				{
					this.OnAutoCopyNameChanging(value);
					this.SendPropertyChanging();
					this._AutoCopyName = value;
					this.SendPropertyChanged("AutoCopyName");
					this.OnAutoCopyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_AdmissionVolume", Storage="_AdmissionVolumes", ThisKey="ItemTypeID", OtherKey="AdmissionItemTypeID")]
		public EntitySet<AdmissionVolume> AdmissionVolumes
		{
			get
			{
				return this._AdmissionVolumes;
			}
			set
			{
				this._AdmissionVolumes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_AllowedDirection", Storage="_AllowedDirections", ThisKey="ItemTypeID", OtherKey="AdmissionItemTypeID")]
		public EntitySet<AllowedDirection> AllowedDirections
		{
			get
			{
				return this._AllowedDirections;
			}
			set
			{
				this._AllowedDirections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_Application", Storage="_Applications", ThisKey="ItemTypeID", OtherKey="OrderEducationFormID")]
		public EntitySet<Application> Applications
		{
			get
			{
				return this._Applications;
			}
			set
			{
				this._Applications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_Application1", Storage="_Applications1", ThisKey="ItemTypeID", OtherKey="OrderEducationSourceID")]
		public EntitySet<Application> Applications1
		{
			get
			{
				return this._Applications1;
			}
			set
			{
				this._Applications1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_ApplicationConsidered", Storage="_ApplicationConsidereds", ThisKey="ItemTypeID", OtherKey="EducationLevelID")]
		public EntitySet<ApplicationConsidered> ApplicationConsidereds
		{
			get
			{
				return this._ApplicationConsidereds;
			}
			set
			{
				this._ApplicationConsidereds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_CampaignEducationLevel", Storage="_CampaignEducationLevels", ThisKey="ItemTypeID", OtherKey="EducationLevelID")]
		public EntitySet<CampaignEducationLevel> CampaignEducationLevels
		{
			get
			{
				return this._CampaignEducationLevels;
			}
			set
			{
				this._CampaignEducationLevels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_CompetitiveGroup", Storage="_CompetitiveGroups", ThisKey="ItemTypeID", OtherKey="EducationFormId")]
		public EntitySet<CompetitiveGroup> CompetitiveGroups
		{
			get
			{
				return this._CompetitiveGroups;
			}
			set
			{
				this._CompetitiveGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_CompetitiveGroup1", Storage="_CompetitiveGroups1", ThisKey="ItemTypeID", OtherKey="EducationLevelID")]
		public EntitySet<CompetitiveGroup> CompetitiveGroups1
		{
			get
			{
				return this._CompetitiveGroups1;
			}
			set
			{
				this._CompetitiveGroups1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_CompetitiveGroup2", Storage="_CompetitiveGroups2", ThisKey="ItemTypeID", OtherKey="EducationSourceId")]
		public EntitySet<CompetitiveGroup> CompetitiveGroups2
		{
			get
			{
				return this._CompetitiveGroups2;
			}
			set
			{
				this._CompetitiveGroups2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_Direction", Storage="_Directions", ThisKey="ItemTypeID", OtherKey="EducationLevelId")]
		public EntitySet<Direction> Directions
		{
			get
			{
				return this._Directions;
			}
			set
			{
				this._Directions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_EduLevel", Storage="_EduLevels", ThisKey="ItemTypeID", OtherKey="AdmissionItemTypeID")]
		public EntitySet<EduLevel> EduLevels
		{
			get
			{
				return this._EduLevels;
			}
			set
			{
				this._EduLevels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_EduLevelsToCampaignType", Storage="_EduLevelsToCampaignTypes", ThisKey="ItemTypeID", OtherKey="AdmissionItemTypeID")]
		public EntitySet<EduLevelsToCampaignType> EduLevelsToCampaignTypes
		{
			get
			{
				return this._EduLevelsToCampaignTypes;
			}
			set
			{
				this._EduLevelsToCampaignTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_EduLevelsToUgsCode", Storage="_EduLevelsToUgsCodes", ThisKey="ItemTypeID", OtherKey="EducationLevelId")]
		public EntitySet<EduLevelsToUgsCode> EduLevelsToUgsCodes
		{
			get
			{
				return this._EduLevelsToUgsCodes;
			}
			set
			{
				this._EduLevelsToUgsCodes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_InstitutionDirectionRequest", Storage="_InstitutionDirectionRequests", ThisKey="ItemTypeID", OtherKey="EducationLevelId")]
		public EntitySet<InstitutionDirectionRequest> InstitutionDirectionRequests
		{
			get
			{
				return this._InstitutionDirectionRequests;
			}
			set
			{
				this._InstitutionDirectionRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_OrderOfAdmission", Storage="_OrderOfAdmissions", ThisKey="ItemTypeID", OtherKey="EducationFormID")]
		public EntitySet<OrderOfAdmission> OrderOfAdmissions
		{
			get
			{
				return this._OrderOfAdmissions;
			}
			set
			{
				this._OrderOfAdmissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_OrderOfAdmission1", Storage="_OrderOfAdmissions1", ThisKey="ItemTypeID", OtherKey="EducationLevelID")]
		public EntitySet<OrderOfAdmission> OrderOfAdmissions1
		{
			get
			{
				return this._OrderOfAdmissions1;
			}
			set
			{
				this._OrderOfAdmissions1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_OrderOfAdmission2", Storage="_OrderOfAdmissions2", ThisKey="ItemTypeID", OtherKey="EducationSourceID")]
		public EntitySet<OrderOfAdmission> OrderOfAdmissions2
		{
			get
			{
				return this._OrderOfAdmissions2;
			}
			set
			{
				this._OrderOfAdmissions2.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdmissionVolumes(AdmissionVolume entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = this;
		}
		
		private void detach_AdmissionVolumes(AdmissionVolume entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = null;
		}
		
		private void attach_AllowedDirections(AllowedDirection entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = this;
		}
		
		private void detach_AllowedDirections(AllowedDirection entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = null;
		}
		
		private void attach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = this;
		}
		
		private void detach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = null;
		}
		
		private void attach_Applications1(Application entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType1 = this;
		}
		
		private void detach_Applications1(Application entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType1 = null;
		}
		
		private void attach_ApplicationConsidereds(ApplicationConsidered entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = this;
		}
		
		private void detach_ApplicationConsidereds(ApplicationConsidered entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = null;
		}
		
		private void attach_CampaignEducationLevels(CampaignEducationLevel entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = this;
		}
		
		private void detach_CampaignEducationLevels(CampaignEducationLevel entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = null;
		}
		
		private void attach_CompetitiveGroups(CompetitiveGroup entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = this;
		}
		
		private void detach_CompetitiveGroups(CompetitiveGroup entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = null;
		}
		
		private void attach_CompetitiveGroups1(CompetitiveGroup entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType1 = this;
		}
		
		private void detach_CompetitiveGroups1(CompetitiveGroup entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType1 = null;
		}
		
		private void attach_CompetitiveGroups2(CompetitiveGroup entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType2 = this;
		}
		
		private void detach_CompetitiveGroups2(CompetitiveGroup entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType2 = null;
		}
		
		private void attach_Directions(Direction entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = this;
		}
		
		private void detach_Directions(Direction entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = null;
		}
		
		private void attach_EduLevels(EduLevel entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = this;
		}
		
		private void detach_EduLevels(EduLevel entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = null;
		}
		
		private void attach_EduLevelsToCampaignTypes(EduLevelsToCampaignType entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = this;
		}
		
		private void detach_EduLevelsToCampaignTypes(EduLevelsToCampaignType entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = null;
		}
		
		private void attach_EduLevelsToUgsCodes(EduLevelsToUgsCode entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = this;
		}
		
		private void detach_EduLevelsToUgsCodes(EduLevelsToUgsCode entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = null;
		}
		
		private void attach_InstitutionDirectionRequests(InstitutionDirectionRequest entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = this;
		}
		
		private void detach_InstitutionDirectionRequests(InstitutionDirectionRequest entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = null;
		}
		
		private void attach_OrderOfAdmissions(OrderOfAdmission entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = this;
		}
		
		private void detach_OrderOfAdmissions(OrderOfAdmission entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType = null;
		}
		
		private void attach_OrderOfAdmissions1(OrderOfAdmission entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType1 = this;
		}
		
		private void detach_OrderOfAdmissions1(OrderOfAdmission entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType1 = null;
		}
		
		private void attach_OrderOfAdmissions2(OrderOfAdmission entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType2 = this;
		}
		
		private void detach_OrderOfAdmissions2(OrderOfAdmission entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionItemType2 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdmissionRules")]
	public partial class AdmissionRule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecordID;
		
		private int _InstitutionID;
		
		private int _Year;
		
		private string _FileName;
		
		private string _MimeType;
		
		private System.Data.Linq.Binary _File;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<System.DateTime> _ChangeDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecordIDChanging(int value);
    partial void OnRecordIDChanged();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnMimeTypeChanging(string value);
    partial void OnMimeTypeChanged();
    partial void OnFileChanging(System.Data.Linq.Binary value);
    partial void OnFileChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnChangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeDateChanged();
    #endregion
		
		public AdmissionRule()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecordID
		{
			get
			{
				return this._RecordID;
			}
			set
			{
				if ((this._RecordID != value))
				{
					this.OnRecordIDChanging(value);
					this.SendPropertyChanging();
					this._RecordID = value;
					this.SendPropertyChanged("RecordID");
					this.OnRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MimeType", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string MimeType
		{
			get
			{
				return this._MimeType;
			}
			set
			{
				if ((this._MimeType != value))
				{
					this.OnMimeTypeChanging(value);
					this.SendPropertyChanging();
					this._MimeType = value;
					this.SendPropertyChanged("MimeType");
					this.OnMimeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[File]", Storage="_File", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary File
		{
			get
			{
				return this._File;
			}
			set
			{
				if ((this._File != value))
				{
					this.OnFileChanging(value);
					this.SendPropertyChanging();
					this._File = value;
					this.SendPropertyChanged("File");
					this.OnFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdmissionVolume")]
	public partial class AdmissionVolume : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdmissionVolumeID;
		
		private int _InstitutionID;
		
		private short _AdmissionItemTypeID;
		
		private int _DirectionID;
		
		private int _NumberBudgetO;
		
		private int _NumberBudgetOZ;
		
		private int _NumberBudgetZ;
		
		private int _NumberPaidO;
		
		private int _NumberPaidOZ;
		
		private int _NumberPaidZ;
		
		private string _UID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _Course;
		
		private System.Nullable<int> _CampaignID;
		
		private int _NumberTargetO;
		
		private int _NumberTargetOZ;
		
		private int _NumberTargetZ;
		
		private System.Nullable<int> _NumberQuotaO;
		
		private System.Nullable<int> _NumberQuotaOZ;
		
		private System.Nullable<int> _NumberQuotaZ;
		
		private System.Nullable<System.Guid> _AdmissionVolumeGUID;
		
		private EntitySet<DistributedAdmissionVolume> _DistributedAdmissionVolumes;
		
		private EntityRef<AdmissionItemType> _AdmissionItemType;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<Direction> _Direction;
		
		private EntityRef<Institution> _Institution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdmissionVolumeIDChanging(int value);
    partial void OnAdmissionVolumeIDChanged();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnAdmissionItemTypeIDChanging(short value);
    partial void OnAdmissionItemTypeIDChanged();
    partial void OnDirectionIDChanging(int value);
    partial void OnDirectionIDChanged();
    partial void OnNumberBudgetOChanging(int value);
    partial void OnNumberBudgetOChanged();
    partial void OnNumberBudgetOZChanging(int value);
    partial void OnNumberBudgetOZChanged();
    partial void OnNumberBudgetZChanging(int value);
    partial void OnNumberBudgetZChanged();
    partial void OnNumberPaidOChanging(int value);
    partial void OnNumberPaidOChanged();
    partial void OnNumberPaidOZChanging(int value);
    partial void OnNumberPaidOZChanged();
    partial void OnNumberPaidZChanging(int value);
    partial void OnNumberPaidZChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnCourseChanging(System.Nullable<int> value);
    partial void OnCourseChanged();
    partial void OnCampaignIDChanging(System.Nullable<int> value);
    partial void OnCampaignIDChanged();
    partial void OnNumberTargetOChanging(int value);
    partial void OnNumberTargetOChanged();
    partial void OnNumberTargetOZChanging(int value);
    partial void OnNumberTargetOZChanged();
    partial void OnNumberTargetZChanging(int value);
    partial void OnNumberTargetZChanged();
    partial void OnNumberQuotaOChanging(System.Nullable<int> value);
    partial void OnNumberQuotaOChanged();
    partial void OnNumberQuotaOZChanging(System.Nullable<int> value);
    partial void OnNumberQuotaOZChanged();
    partial void OnNumberQuotaZChanging(System.Nullable<int> value);
    partial void OnNumberQuotaZChanged();
    partial void OnAdmissionVolumeGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnAdmissionVolumeGUIDChanged();
    #endregion
		
		public AdmissionVolume()
		{
			this._DistributedAdmissionVolumes = new EntitySet<DistributedAdmissionVolume>(new Action<DistributedAdmissionVolume>(this.attach_DistributedAdmissionVolumes), new Action<DistributedAdmissionVolume>(this.detach_DistributedAdmissionVolumes));
			this._AdmissionItemType = default(EntityRef<AdmissionItemType>);
			this._Campaign = default(EntityRef<Campaign>);
			this._Direction = default(EntityRef<Direction>);
			this._Institution = default(EntityRef<Institution>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionVolumeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdmissionVolumeID
		{
			get
			{
				return this._AdmissionVolumeID;
			}
			set
			{
				if ((this._AdmissionVolumeID != value))
				{
					this.OnAdmissionVolumeIDChanging(value);
					this.SendPropertyChanging();
					this._AdmissionVolumeID = value;
					this.SendPropertyChanged("AdmissionVolumeID");
					this.OnAdmissionVolumeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					if (this._Institution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionItemTypeID", DbType="SmallInt NOT NULL")]
		public short AdmissionItemTypeID
		{
			get
			{
				return this._AdmissionItemTypeID;
			}
			set
			{
				if ((this._AdmissionItemTypeID != value))
				{
					if (this._AdmissionItemType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdmissionItemTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AdmissionItemTypeID = value;
					this.SendPropertyChanged("AdmissionItemTypeID");
					this.OnAdmissionItemTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int NOT NULL")]
		public int DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					if (this._Direction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetO", DbType="Int NOT NULL")]
		public int NumberBudgetO
		{
			get
			{
				return this._NumberBudgetO;
			}
			set
			{
				if ((this._NumberBudgetO != value))
				{
					this.OnNumberBudgetOChanging(value);
					this.SendPropertyChanging();
					this._NumberBudgetO = value;
					this.SendPropertyChanged("NumberBudgetO");
					this.OnNumberBudgetOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetOZ", DbType="Int NOT NULL")]
		public int NumberBudgetOZ
		{
			get
			{
				return this._NumberBudgetOZ;
			}
			set
			{
				if ((this._NumberBudgetOZ != value))
				{
					this.OnNumberBudgetOZChanging(value);
					this.SendPropertyChanging();
					this._NumberBudgetOZ = value;
					this.SendPropertyChanged("NumberBudgetOZ");
					this.OnNumberBudgetOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetZ", DbType="Int NOT NULL")]
		public int NumberBudgetZ
		{
			get
			{
				return this._NumberBudgetZ;
			}
			set
			{
				if ((this._NumberBudgetZ != value))
				{
					this.OnNumberBudgetZChanging(value);
					this.SendPropertyChanging();
					this._NumberBudgetZ = value;
					this.SendPropertyChanged("NumberBudgetZ");
					this.OnNumberBudgetZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberPaidO", DbType="Int NOT NULL")]
		public int NumberPaidO
		{
			get
			{
				return this._NumberPaidO;
			}
			set
			{
				if ((this._NumberPaidO != value))
				{
					this.OnNumberPaidOChanging(value);
					this.SendPropertyChanging();
					this._NumberPaidO = value;
					this.SendPropertyChanged("NumberPaidO");
					this.OnNumberPaidOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberPaidOZ", DbType="Int NOT NULL")]
		public int NumberPaidOZ
		{
			get
			{
				return this._NumberPaidOZ;
			}
			set
			{
				if ((this._NumberPaidOZ != value))
				{
					this.OnNumberPaidOZChanging(value);
					this.SendPropertyChanging();
					this._NumberPaidOZ = value;
					this.SendPropertyChanged("NumberPaidOZ");
					this.OnNumberPaidOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberPaidZ", DbType="Int NOT NULL")]
		public int NumberPaidZ
		{
			get
			{
				return this._NumberPaidZ;
			}
			set
			{
				if ((this._NumberPaidZ != value))
				{
					this.OnNumberPaidZChanging(value);
					this.SendPropertyChanging();
					this._NumberPaidZ = value;
					this.SendPropertyChanged("NumberPaidZ");
					this.OnNumberPaidZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="Int")]
		public System.Nullable<int> Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this.OnCourseChanging(value);
					this.SendPropertyChanging();
					this._Course = value;
					this.SendPropertyChanged("Course");
					this.OnCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int")]
		public System.Nullable<int> CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTargetO", DbType="Int NOT NULL")]
		public int NumberTargetO
		{
			get
			{
				return this._NumberTargetO;
			}
			set
			{
				if ((this._NumberTargetO != value))
				{
					this.OnNumberTargetOChanging(value);
					this.SendPropertyChanging();
					this._NumberTargetO = value;
					this.SendPropertyChanged("NumberTargetO");
					this.OnNumberTargetOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTargetOZ", DbType="Int NOT NULL")]
		public int NumberTargetOZ
		{
			get
			{
				return this._NumberTargetOZ;
			}
			set
			{
				if ((this._NumberTargetOZ != value))
				{
					this.OnNumberTargetOZChanging(value);
					this.SendPropertyChanging();
					this._NumberTargetOZ = value;
					this.SendPropertyChanged("NumberTargetOZ");
					this.OnNumberTargetOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTargetZ", DbType="Int NOT NULL")]
		public int NumberTargetZ
		{
			get
			{
				return this._NumberTargetZ;
			}
			set
			{
				if ((this._NumberTargetZ != value))
				{
					this.OnNumberTargetZChanging(value);
					this.SendPropertyChanging();
					this._NumberTargetZ = value;
					this.SendPropertyChanged("NumberTargetZ");
					this.OnNumberTargetZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberQuotaO", DbType="Int")]
		public System.Nullable<int> NumberQuotaO
		{
			get
			{
				return this._NumberQuotaO;
			}
			set
			{
				if ((this._NumberQuotaO != value))
				{
					this.OnNumberQuotaOChanging(value);
					this.SendPropertyChanging();
					this._NumberQuotaO = value;
					this.SendPropertyChanged("NumberQuotaO");
					this.OnNumberQuotaOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberQuotaOZ", DbType="Int")]
		public System.Nullable<int> NumberQuotaOZ
		{
			get
			{
				return this._NumberQuotaOZ;
			}
			set
			{
				if ((this._NumberQuotaOZ != value))
				{
					this.OnNumberQuotaOZChanging(value);
					this.SendPropertyChanging();
					this._NumberQuotaOZ = value;
					this.SendPropertyChanged("NumberQuotaOZ");
					this.OnNumberQuotaOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberQuotaZ", DbType="Int")]
		public System.Nullable<int> NumberQuotaZ
		{
			get
			{
				return this._NumberQuotaZ;
			}
			set
			{
				if ((this._NumberQuotaZ != value))
				{
					this.OnNumberQuotaZChanging(value);
					this.SendPropertyChanging();
					this._NumberQuotaZ = value;
					this.SendPropertyChanged("NumberQuotaZ");
					this.OnNumberQuotaZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionVolumeGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AdmissionVolumeGUID
		{
			get
			{
				return this._AdmissionVolumeGUID;
			}
			set
			{
				if ((this._AdmissionVolumeGUID != value))
				{
					this.OnAdmissionVolumeGUIDChanging(value);
					this.SendPropertyChanging();
					this._AdmissionVolumeGUID = value;
					this.SendPropertyChanged("AdmissionVolumeGUID");
					this.OnAdmissionVolumeGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionVolume_DistributedAdmissionVolume", Storage="_DistributedAdmissionVolumes", ThisKey="AdmissionVolumeID", OtherKey="AdmissionVolumeID")]
		public EntitySet<DistributedAdmissionVolume> DistributedAdmissionVolumes
		{
			get
			{
				return this._DistributedAdmissionVolumes;
			}
			set
			{
				this._DistributedAdmissionVolumes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_AdmissionVolume", Storage="_AdmissionItemType", ThisKey="AdmissionItemTypeID", OtherKey="ItemTypeID", IsForeignKey=true)]
		public AdmissionItemType AdmissionItemType
		{
			get
			{
				return this._AdmissionItemType.Entity;
			}
			set
			{
				AdmissionItemType previousValue = this._AdmissionItemType.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionItemType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionItemType.Entity = null;
						previousValue.AdmissionVolumes.Remove(this);
					}
					this._AdmissionItemType.Entity = value;
					if ((value != null))
					{
						value.AdmissionVolumes.Add(this);
						this._AdmissionItemTypeID = value.ItemTypeID;
					}
					else
					{
						this._AdmissionItemTypeID = default(short);
					}
					this.SendPropertyChanged("AdmissionItemType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_AdmissionVolume", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.AdmissionVolumes.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.AdmissionVolumes.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_AdmissionVolume", Storage="_Direction", ThisKey="DirectionID", OtherKey="DirectionID", IsForeignKey=true)]
		public Direction Direction
		{
			get
			{
				return this._Direction.Entity;
			}
			set
			{
				Direction previousValue = this._Direction.Entity;
				if (((previousValue != value) 
							|| (this._Direction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direction.Entity = null;
						previousValue.AdmissionVolumes.Remove(this);
					}
					this._Direction.Entity = value;
					if ((value != null))
					{
						value.AdmissionVolumes.Add(this);
						this._DirectionID = value.DirectionID;
					}
					else
					{
						this._DirectionID = default(int);
					}
					this.SendPropertyChanged("Direction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_AdmissionVolume", Storage="_Institution", ThisKey="InstitutionID", OtherKey="InstitutionID", IsForeignKey=true)]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.AdmissionVolumes.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.AdmissionVolumes.Add(this);
						this._InstitutionID = value.InstitutionID;
					}
					else
					{
						this._InstitutionID = default(int);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DistributedAdmissionVolumes(DistributedAdmissionVolume entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionVolume = this;
		}
		
		private void detach_DistributedAdmissionVolumes(DistributedAdmissionVolume entity)
		{
			this.SendPropertyChanging();
			entity.AdmissionVolume = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdmissionVolumeKCP")]
	public partial class AdmissionVolumeKCP
	{
		
		private System.Nullable<double> _AdmissionVolumeID;
		
		private System.Nullable<double> _InstitutionID;
		
		private System.Nullable<double> _AdmissionItemTypeID;
		
		private string _DirectionID;
		
		private System.Nullable<double> _NumberBudgetO;
		
		private System.Nullable<double> _NumberBudgetOZ;
		
		private System.Nullable<double> _NumberBudgetZ;
		
		private System.Nullable<double> _Year;
		
		public AdmissionVolumeKCP()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionVolumeID", DbType="Float")]
		public System.Nullable<double> AdmissionVolumeID
		{
			get
			{
				return this._AdmissionVolumeID;
			}
			set
			{
				if ((this._AdmissionVolumeID != value))
				{
					this._AdmissionVolumeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Float")]
		public System.Nullable<double> InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this._InstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionItemTypeID", DbType="Float")]
		public System.Nullable<double> AdmissionItemTypeID
		{
			get
			{
				return this._AdmissionItemTypeID;
			}
			set
			{
				if ((this._AdmissionItemTypeID != value))
				{
					this._AdmissionItemTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="NVarChar(255)")]
		public string DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					this._DirectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetO", DbType="Float")]
		public System.Nullable<double> NumberBudgetO
		{
			get
			{
				return this._NumberBudgetO;
			}
			set
			{
				if ((this._NumberBudgetO != value))
				{
					this._NumberBudgetO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetOZ", DbType="Float")]
		public System.Nullable<double> NumberBudgetOZ
		{
			get
			{
				return this._NumberBudgetOZ;
			}
			set
			{
				if ((this._NumberBudgetOZ != value))
				{
					this._NumberBudgetOZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetZ", DbType="Float")]
		public System.Nullable<double> NumberBudgetZ
		{
			get
			{
				return this._NumberBudgetZ;
			}
			set
			{
				if ((this._NumberBudgetZ != value))
				{
					this._NumberBudgetZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Float")]
		public System.Nullable<double> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllowedDirections")]
	public partial class AllowedDirection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstitutionID;
		
		private int _DirectionID;
		
		private short _AdmissionItemTypeID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _Year;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private int _AllowedDirectionsId;
		
		private string _EIIS_ID;
		
		private System.Nullable<int> _Esrp_ID;
		
		private System.Nullable<int> _AllowedDirectionStatusID;
		
		private EntityRef<AdmissionItemType> _AdmissionItemType;
		
		private EntityRef<AllowedDirectionStatus> _AllowedDirectionStatus;
		
		private EntityRef<Direction> _Direction;
		
		private EntityRef<Institution> _Institution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnDirectionIDChanging(int value);
    partial void OnDirectionIDChanged();
    partial void OnAdmissionItemTypeIDChanging(short value);
    partial void OnAdmissionItemTypeIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnYearChanging(System.Nullable<int> value);
    partial void OnYearChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnAllowedDirectionsIdChanging(int value);
    partial void OnAllowedDirectionsIdChanged();
    partial void OnEIIS_IDChanging(string value);
    partial void OnEIIS_IDChanged();
    partial void OnEsrp_IDChanging(System.Nullable<int> value);
    partial void OnEsrp_IDChanged();
    partial void OnAllowedDirectionStatusIDChanging(System.Nullable<int> value);
    partial void OnAllowedDirectionStatusIDChanged();
    #endregion
		
		public AllowedDirection()
		{
			this._AdmissionItemType = default(EntityRef<AdmissionItemType>);
			this._AllowedDirectionStatus = default(EntityRef<AllowedDirectionStatus>);
			this._Direction = default(EntityRef<Direction>);
			this._Institution = default(EntityRef<Institution>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					if (this._Institution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int NOT NULL")]
		public int DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					if (this._Direction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionItemTypeID", DbType="SmallInt NOT NULL")]
		public short AdmissionItemTypeID
		{
			get
			{
				return this._AdmissionItemTypeID;
			}
			set
			{
				if ((this._AdmissionItemTypeID != value))
				{
					if (this._AdmissionItemType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdmissionItemTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AdmissionItemTypeID = value;
					this.SendPropertyChanged("AdmissionItemTypeID");
					this.OnAdmissionItemTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowedDirectionsId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AllowedDirectionsId
		{
			get
			{
				return this._AllowedDirectionsId;
			}
			set
			{
				if ((this._AllowedDirectionsId != value))
				{
					this.OnAllowedDirectionsIdChanging(value);
					this.SendPropertyChanging();
					this._AllowedDirectionsId = value;
					this.SendPropertyChanged("AllowedDirectionsId");
					this.OnAllowedDirectionsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIIS_ID", DbType="VarChar(50)")]
		public string EIIS_ID
		{
			get
			{
				return this._EIIS_ID;
			}
			set
			{
				if ((this._EIIS_ID != value))
				{
					this.OnEIIS_IDChanging(value);
					this.SendPropertyChanging();
					this._EIIS_ID = value;
					this.SendPropertyChanged("EIIS_ID");
					this.OnEIIS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Esrp_ID", DbType="Int")]
		public System.Nullable<int> Esrp_ID
		{
			get
			{
				return this._Esrp_ID;
			}
			set
			{
				if ((this._Esrp_ID != value))
				{
					this.OnEsrp_IDChanging(value);
					this.SendPropertyChanging();
					this._Esrp_ID = value;
					this.SendPropertyChanged("Esrp_ID");
					this.OnEsrp_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowedDirectionStatusID", DbType="Int")]
		public System.Nullable<int> AllowedDirectionStatusID
		{
			get
			{
				return this._AllowedDirectionStatusID;
			}
			set
			{
				if ((this._AllowedDirectionStatusID != value))
				{
					if (this._AllowedDirectionStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAllowedDirectionStatusIDChanging(value);
					this.SendPropertyChanging();
					this._AllowedDirectionStatusID = value;
					this.SendPropertyChanged("AllowedDirectionStatusID");
					this.OnAllowedDirectionStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_AllowedDirection", Storage="_AdmissionItemType", ThisKey="AdmissionItemTypeID", OtherKey="ItemTypeID", IsForeignKey=true)]
		public AdmissionItemType AdmissionItemType
		{
			get
			{
				return this._AdmissionItemType.Entity;
			}
			set
			{
				AdmissionItemType previousValue = this._AdmissionItemType.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionItemType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionItemType.Entity = null;
						previousValue.AllowedDirections.Remove(this);
					}
					this._AdmissionItemType.Entity = value;
					if ((value != null))
					{
						value.AllowedDirections.Add(this);
						this._AdmissionItemTypeID = value.ItemTypeID;
					}
					else
					{
						this._AdmissionItemTypeID = default(short);
					}
					this.SendPropertyChanged("AdmissionItemType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllowedDirectionStatus_AllowedDirection", Storage="_AllowedDirectionStatus", ThisKey="AllowedDirectionStatusID", OtherKey="AllowedDirectionStatusID", IsForeignKey=true)]
		public AllowedDirectionStatus AllowedDirectionStatus
		{
			get
			{
				return this._AllowedDirectionStatus.Entity;
			}
			set
			{
				AllowedDirectionStatus previousValue = this._AllowedDirectionStatus.Entity;
				if (((previousValue != value) 
							|| (this._AllowedDirectionStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AllowedDirectionStatus.Entity = null;
						previousValue.AllowedDirections.Remove(this);
					}
					this._AllowedDirectionStatus.Entity = value;
					if ((value != null))
					{
						value.AllowedDirections.Add(this);
						this._AllowedDirectionStatusID = value.AllowedDirectionStatusID;
					}
					else
					{
						this._AllowedDirectionStatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AllowedDirectionStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_AllowedDirection", Storage="_Direction", ThisKey="DirectionID", OtherKey="DirectionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Direction Direction
		{
			get
			{
				return this._Direction.Entity;
			}
			set
			{
				Direction previousValue = this._Direction.Entity;
				if (((previousValue != value) 
							|| (this._Direction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direction.Entity = null;
						previousValue.AllowedDirections.Remove(this);
					}
					this._Direction.Entity = value;
					if ((value != null))
					{
						value.AllowedDirections.Add(this);
						this._DirectionID = value.DirectionID;
					}
					else
					{
						this._DirectionID = default(int);
					}
					this.SendPropertyChanged("Direction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_AllowedDirection", Storage="_Institution", ThisKey="InstitutionID", OtherKey="InstitutionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.AllowedDirections.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.AllowedDirections.Add(this);
						this._InstitutionID = value.InstitutionID;
					}
					else
					{
						this._InstitutionID = default(int);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllowedDirectionStatus")]
	public partial class AllowedDirectionStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AllowedDirectionStatusID;
		
		private string _Name;
		
		private EntitySet<AllowedDirection> _AllowedDirections;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAllowedDirectionStatusIDChanging(int value);
    partial void OnAllowedDirectionStatusIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public AllowedDirectionStatus()
		{
			this._AllowedDirections = new EntitySet<AllowedDirection>(new Action<AllowedDirection>(this.attach_AllowedDirections), new Action<AllowedDirection>(this.detach_AllowedDirections));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowedDirectionStatusID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AllowedDirectionStatusID
		{
			get
			{
				return this._AllowedDirectionStatusID;
			}
			set
			{
				if ((this._AllowedDirectionStatusID != value))
				{
					this.OnAllowedDirectionStatusIDChanging(value);
					this.SendPropertyChanging();
					this._AllowedDirectionStatusID = value;
					this.SendPropertyChanged("AllowedDirectionStatusID");
					this.OnAllowedDirectionStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AllowedDirectionStatus_AllowedDirection", Storage="_AllowedDirections", ThisKey="AllowedDirectionStatusID", OtherKey="AllowedDirectionStatusID")]
		public EntitySet<AllowedDirection> AllowedDirections
		{
			get
			{
				return this._AllowedDirections;
			}
			set
			{
				this._AllowedDirections.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AllowedDirections(AllowedDirection entity)
		{
			this.SendPropertyChanging();
			entity.AllowedDirectionStatus = this;
		}
		
		private void detach_AllowedDirections(AllowedDirection entity)
		{
			this.SendPropertyChanging();
			entity.AllowedDirectionStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AppealStatus")]
	public partial class AppealStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AppealStatusID;
		
		private string _StatusName;
		
		private EntitySet<ApplicationEntranceTestDocument> _ApplicationEntranceTestDocuments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppealStatusIDChanging(int value);
    partial void OnAppealStatusIDChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    #endregion
		
		public AppealStatus()
		{
			this._ApplicationEntranceTestDocuments = new EntitySet<ApplicationEntranceTestDocument>(new Action<ApplicationEntranceTestDocument>(this.attach_ApplicationEntranceTestDocuments), new Action<ApplicationEntranceTestDocument>(this.detach_ApplicationEntranceTestDocuments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppealStatusID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AppealStatusID
		{
			get
			{
				return this._AppealStatusID;
			}
			set
			{
				if ((this._AppealStatusID != value))
				{
					this.OnAppealStatusIDChanging(value);
					this.SendPropertyChanging();
					this._AppealStatusID = value;
					this.SendPropertyChanged("AppealStatusID");
					this.OnAppealStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppealStatus_ApplicationEntranceTestDocument", Storage="_ApplicationEntranceTestDocuments", ThisKey="AppealStatusID", OtherKey="AppealStatusID")]
		public EntitySet<ApplicationEntranceTestDocument> ApplicationEntranceTestDocuments
		{
			get
			{
				return this._ApplicationEntranceTestDocuments;
			}
			set
			{
				this._ApplicationEntranceTestDocuments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApplicationEntranceTestDocuments(ApplicationEntranceTestDocument entity)
		{
			this.SendPropertyChanging();
			entity.AppealStatus = this;
		}
		
		private void detach_ApplicationEntranceTestDocuments(ApplicationEntranceTestDocument entity)
		{
			this.SendPropertyChanging();
			entity.AppealStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Application")]
	public partial class Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationID;
		
		private int _EntrantID;
		
		private System.DateTime _RegistrationDate;
		
		private int _InstitutionID;
		
		private System.Nullable<bool> _ApproveInstitutionCount;
		
		private System.Nullable<bool> _NeedHostel;
		
		private System.Nullable<bool> _FirstHigherEducation;
		
		private System.Nullable<bool> _ApprovePersonalData;
		
		private System.Nullable<bool> _FamiliarWithLicenseAndRules;
		
		private System.Nullable<bool> _FamiliarWithAdmissionType;
		
		private System.Nullable<bool> _FamiliarWithOriginalDocumentDeliveryDate;
		
		private int _StatusID;
		
		private int _WizardStepID;
		
		private int _ViolationID;
		
		private string _StatusDecision;
		
		private System.Nullable<System.DateTime> _LastCheckDate;
		
		private string _ViolationErrors;
		
		private System.Nullable<System.DateTime> _PublishDate;
		
		private byte _SourceID;
		
		private string _ApplicationNumber;
		
		private bool _OriginalDocumentsReceived;
		
		private System.Nullable<int> _OrderCompetitiveGroupID;
		
		private System.Nullable<int> _OrderOfAdmissionID;
		
		private System.Nullable<int> _OrderCompetitiveGroupItemID;
		
		private System.Nullable<decimal> _OrderCalculatedRating;
		
		private System.Nullable<short> _OrderCalculatedBenefitID;
		
		private System.Nullable<short> _OrderEducationFormID;
		
		private System.Nullable<short> _OrderEducationSourceID;
		
		private System.Nullable<System.DateTime> _LastDenyDate;
		
		private string _UID;
		
		private bool _IsRequiresBudgetO;
		
		private bool _IsRequiresBudgetOZ;
		
		private bool _IsRequiresBudgetZ;
		
		private bool _IsRequiresPaidO;
		
		private bool _IsRequiresPaidOZ;
		
		private bool _IsRequiresPaidZ;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<System.DateTime> _OriginalDocumentsReceivedDate;
		
		private System.Nullable<System.DateTime> _LastEgeDocumentsCheckDate;
		
		private System.Nullable<int> _OrderCompetitiveGroupTargetID;
		
		private bool _IsRequiresTargetO;
		
		private bool _IsRequiresTargetOZ;
		
		private bool _IsRequiresTargetZ;
		
		private System.Nullable<System.Guid> _ApplicationGUID;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<int> _OrderIdLevelBudget;
		
		private EntitySet<ApplicationCompetitiveGroupItem> _ApplicationCompetitiveGroupItems;
		
		private EntitySet<ApplicationCompositionResult> _ApplicationCompositionResults;
		
		private EntitySet<ApplicationCompositionResults_Approb> _ApplicationCompositionResults_Approbs;
		
		private EntitySet<ApplicationConsidered> _ApplicationConsidereds;
		
		private EntitySet<ApplicationEntranceTestDocument> _ApplicationEntranceTestDocuments;
		
		private EntitySet<ApplicationEntrantDocument> _ApplicationEntrantDocuments;
		
		private EntitySet<ApplicationExtra> _ApplicationExtras;
		
		private EntitySet<ApplicationSelectedCompetitiveGroup> _ApplicationSelectedCompetitiveGroups;
		
		private EntitySet<ApplicationSelectedCompetitiveGroupItem> _ApplicationSelectedCompetitiveGroupItems;
		
		private EntitySet<ApplicationSelectedCompetitiveGroupTarget> _ApplicationSelectedCompetitiveGroupTargets;
		
		private EntitySet<IndividualAchivement> _IndividualAchivements;
		
		private EntitySet<OrderOfAdmissionHistory> _OrderOfAdmissionHistories;
		
		private EntityRef<AdmissionItemType> _AdmissionItemType;
		
		private EntityRef<AdmissionItemType> _AdmissionItemType1;
		
		private EntityRef<ViolationType> _ViolationType;
		
		private EntityRef<ApplicationStatusType> _ApplicationStatusType;
		
		private EntityRef<Benefit> _Benefit;
		
		private EntityRef<CompetitiveGroup> _CompetitiveGroup;
		
		private EntityRef<CompetitiveGroupItem> _CompetitiveGroupItem;
		
		private EntityRef<CompetitiveGroupTarget> _CompetitiveGroupTarget;
		
		private EntityRef<Entrant> _Entrant;
		
		private EntityRef<Institution> _Institution;
		
		private EntityRef<LevelBudget> _LevelBudget;
		
		private EntityRef<OrderOfAdmission> _OrderOfAdmission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnEntrantIDChanging(int value);
    partial void OnEntrantIDChanged();
    partial void OnRegistrationDateChanging(System.DateTime value);
    partial void OnRegistrationDateChanged();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnApproveInstitutionCountChanging(System.Nullable<bool> value);
    partial void OnApproveInstitutionCountChanged();
    partial void OnNeedHostelChanging(System.Nullable<bool> value);
    partial void OnNeedHostelChanged();
    partial void OnFirstHigherEducationChanging(System.Nullable<bool> value);
    partial void OnFirstHigherEducationChanged();
    partial void OnApprovePersonalDataChanging(System.Nullable<bool> value);
    partial void OnApprovePersonalDataChanged();
    partial void OnFamiliarWithLicenseAndRulesChanging(System.Nullable<bool> value);
    partial void OnFamiliarWithLicenseAndRulesChanged();
    partial void OnFamiliarWithAdmissionTypeChanging(System.Nullable<bool> value);
    partial void OnFamiliarWithAdmissionTypeChanged();
    partial void OnFamiliarWithOriginalDocumentDeliveryDateChanging(System.Nullable<bool> value);
    partial void OnFamiliarWithOriginalDocumentDeliveryDateChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnWizardStepIDChanging(int value);
    partial void OnWizardStepIDChanged();
    partial void OnViolationIDChanging(int value);
    partial void OnViolationIDChanged();
    partial void OnStatusDecisionChanging(string value);
    partial void OnStatusDecisionChanged();
    partial void OnLastCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastCheckDateChanged();
    partial void OnViolationErrorsChanging(string value);
    partial void OnViolationErrorsChanged();
    partial void OnPublishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishDateChanged();
    partial void OnSourceIDChanging(byte value);
    partial void OnSourceIDChanged();
    partial void OnApplicationNumberChanging(string value);
    partial void OnApplicationNumberChanged();
    partial void OnOriginalDocumentsReceivedChanging(bool value);
    partial void OnOriginalDocumentsReceivedChanged();
    partial void OnOrderCompetitiveGroupIDChanging(System.Nullable<int> value);
    partial void OnOrderCompetitiveGroupIDChanged();
    partial void OnOrderOfAdmissionIDChanging(System.Nullable<int> value);
    partial void OnOrderOfAdmissionIDChanged();
    partial void OnOrderCompetitiveGroupItemIDChanging(System.Nullable<int> value);
    partial void OnOrderCompetitiveGroupItemIDChanged();
    partial void OnOrderCalculatedRatingChanging(System.Nullable<decimal> value);
    partial void OnOrderCalculatedRatingChanged();
    partial void OnOrderCalculatedBenefitIDChanging(System.Nullable<short> value);
    partial void OnOrderCalculatedBenefitIDChanged();
    partial void OnOrderEducationFormIDChanging(System.Nullable<short> value);
    partial void OnOrderEducationFormIDChanged();
    partial void OnOrderEducationSourceIDChanging(System.Nullable<short> value);
    partial void OnOrderEducationSourceIDChanged();
    partial void OnLastDenyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDenyDateChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnIsRequiresBudgetOChanging(bool value);
    partial void OnIsRequiresBudgetOChanged();
    partial void OnIsRequiresBudgetOZChanging(bool value);
    partial void OnIsRequiresBudgetOZChanged();
    partial void OnIsRequiresBudgetZChanging(bool value);
    partial void OnIsRequiresBudgetZChanged();
    partial void OnIsRequiresPaidOChanging(bool value);
    partial void OnIsRequiresPaidOChanged();
    partial void OnIsRequiresPaidOZChanging(bool value);
    partial void OnIsRequiresPaidOZChanged();
    partial void OnIsRequiresPaidZChanging(bool value);
    partial void OnIsRequiresPaidZChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnOriginalDocumentsReceivedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOriginalDocumentsReceivedDateChanged();
    partial void OnLastEgeDocumentsCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastEgeDocumentsCheckDateChanged();
    partial void OnOrderCompetitiveGroupTargetIDChanging(System.Nullable<int> value);
    partial void OnOrderCompetitiveGroupTargetIDChanged();
    partial void OnIsRequiresTargetOChanging(bool value);
    partial void OnIsRequiresTargetOChanged();
    partial void OnIsRequiresTargetOZChanging(bool value);
    partial void OnIsRequiresTargetOZChanged();
    partial void OnIsRequiresTargetZChanging(bool value);
    partial void OnIsRequiresTargetZChanged();
    partial void OnApplicationGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnApplicationGUIDChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnOrderIdLevelBudgetChanging(System.Nullable<int> value);
    partial void OnOrderIdLevelBudgetChanged();
    #endregion
		
		public Application()
		{
			this._ApplicationCompetitiveGroupItems = new EntitySet<ApplicationCompetitiveGroupItem>(new Action<ApplicationCompetitiveGroupItem>(this.attach_ApplicationCompetitiveGroupItems), new Action<ApplicationCompetitiveGroupItem>(this.detach_ApplicationCompetitiveGroupItems));
			this._ApplicationCompositionResults = new EntitySet<ApplicationCompositionResult>(new Action<ApplicationCompositionResult>(this.attach_ApplicationCompositionResults), new Action<ApplicationCompositionResult>(this.detach_ApplicationCompositionResults));
			this._ApplicationCompositionResults_Approbs = new EntitySet<ApplicationCompositionResults_Approb>(new Action<ApplicationCompositionResults_Approb>(this.attach_ApplicationCompositionResults_Approbs), new Action<ApplicationCompositionResults_Approb>(this.detach_ApplicationCompositionResults_Approbs));
			this._ApplicationConsidereds = new EntitySet<ApplicationConsidered>(new Action<ApplicationConsidered>(this.attach_ApplicationConsidereds), new Action<ApplicationConsidered>(this.detach_ApplicationConsidereds));
			this._ApplicationEntranceTestDocuments = new EntitySet<ApplicationEntranceTestDocument>(new Action<ApplicationEntranceTestDocument>(this.attach_ApplicationEntranceTestDocuments), new Action<ApplicationEntranceTestDocument>(this.detach_ApplicationEntranceTestDocuments));
			this._ApplicationEntrantDocuments = new EntitySet<ApplicationEntrantDocument>(new Action<ApplicationEntrantDocument>(this.attach_ApplicationEntrantDocuments), new Action<ApplicationEntrantDocument>(this.detach_ApplicationEntrantDocuments));
			this._ApplicationExtras = new EntitySet<ApplicationExtra>(new Action<ApplicationExtra>(this.attach_ApplicationExtras), new Action<ApplicationExtra>(this.detach_ApplicationExtras));
			this._ApplicationSelectedCompetitiveGroups = new EntitySet<ApplicationSelectedCompetitiveGroup>(new Action<ApplicationSelectedCompetitiveGroup>(this.attach_ApplicationSelectedCompetitiveGroups), new Action<ApplicationSelectedCompetitiveGroup>(this.detach_ApplicationSelectedCompetitiveGroups));
			this._ApplicationSelectedCompetitiveGroupItems = new EntitySet<ApplicationSelectedCompetitiveGroupItem>(new Action<ApplicationSelectedCompetitiveGroupItem>(this.attach_ApplicationSelectedCompetitiveGroupItems), new Action<ApplicationSelectedCompetitiveGroupItem>(this.detach_ApplicationSelectedCompetitiveGroupItems));
			this._ApplicationSelectedCompetitiveGroupTargets = new EntitySet<ApplicationSelectedCompetitiveGroupTarget>(new Action<ApplicationSelectedCompetitiveGroupTarget>(this.attach_ApplicationSelectedCompetitiveGroupTargets), new Action<ApplicationSelectedCompetitiveGroupTarget>(this.detach_ApplicationSelectedCompetitiveGroupTargets));
			this._IndividualAchivements = new EntitySet<IndividualAchivement>(new Action<IndividualAchivement>(this.attach_IndividualAchivements), new Action<IndividualAchivement>(this.detach_IndividualAchivements));
			this._OrderOfAdmissionHistories = new EntitySet<OrderOfAdmissionHistory>(new Action<OrderOfAdmissionHistory>(this.attach_OrderOfAdmissionHistories), new Action<OrderOfAdmissionHistory>(this.detach_OrderOfAdmissionHistories));
			this._AdmissionItemType = default(EntityRef<AdmissionItemType>);
			this._AdmissionItemType1 = default(EntityRef<AdmissionItemType>);
			this._ViolationType = default(EntityRef<ViolationType>);
			this._ApplicationStatusType = default(EntityRef<ApplicationStatusType>);
			this._Benefit = default(EntityRef<Benefit>);
			this._CompetitiveGroup = default(EntityRef<CompetitiveGroup>);
			this._CompetitiveGroupItem = default(EntityRef<CompetitiveGroupItem>);
			this._CompetitiveGroupTarget = default(EntityRef<CompetitiveGroupTarget>);
			this._Entrant = default(EntityRef<Entrant>);
			this._Institution = default(EntityRef<Institution>);
			this._LevelBudget = default(EntityRef<LevelBudget>);
			this._OrderOfAdmission = default(EntityRef<OrderOfAdmission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantID", DbType="Int NOT NULL")]
		public int EntrantID
		{
			get
			{
				return this._EntrantID;
			}
			set
			{
				if ((this._EntrantID != value))
				{
					if (this._Entrant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntrantIDChanging(value);
					this.SendPropertyChanging();
					this._EntrantID = value;
					this.SendPropertyChanged("EntrantID");
					this.OnEntrantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="DateTime NOT NULL")]
		public System.DateTime RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this.OnRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDate = value;
					this.SendPropertyChanged("RegistrationDate");
					this.OnRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					if (this._Institution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveInstitutionCount", DbType="Bit")]
		public System.Nullable<bool> ApproveInstitutionCount
		{
			get
			{
				return this._ApproveInstitutionCount;
			}
			set
			{
				if ((this._ApproveInstitutionCount != value))
				{
					this.OnApproveInstitutionCountChanging(value);
					this.SendPropertyChanging();
					this._ApproveInstitutionCount = value;
					this.SendPropertyChanged("ApproveInstitutionCount");
					this.OnApproveInstitutionCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedHostel", DbType="Bit")]
		public System.Nullable<bool> NeedHostel
		{
			get
			{
				return this._NeedHostel;
			}
			set
			{
				if ((this._NeedHostel != value))
				{
					this.OnNeedHostelChanging(value);
					this.SendPropertyChanging();
					this._NeedHostel = value;
					this.SendPropertyChanged("NeedHostel");
					this.OnNeedHostelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstHigherEducation", DbType="Bit")]
		public System.Nullable<bool> FirstHigherEducation
		{
			get
			{
				return this._FirstHigherEducation;
			}
			set
			{
				if ((this._FirstHigherEducation != value))
				{
					this.OnFirstHigherEducationChanging(value);
					this.SendPropertyChanging();
					this._FirstHigherEducation = value;
					this.SendPropertyChanged("FirstHigherEducation");
					this.OnFirstHigherEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovePersonalData", DbType="Bit")]
		public System.Nullable<bool> ApprovePersonalData
		{
			get
			{
				return this._ApprovePersonalData;
			}
			set
			{
				if ((this._ApprovePersonalData != value))
				{
					this.OnApprovePersonalDataChanging(value);
					this.SendPropertyChanging();
					this._ApprovePersonalData = value;
					this.SendPropertyChanged("ApprovePersonalData");
					this.OnApprovePersonalDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamiliarWithLicenseAndRules", DbType="Bit")]
		public System.Nullable<bool> FamiliarWithLicenseAndRules
		{
			get
			{
				return this._FamiliarWithLicenseAndRules;
			}
			set
			{
				if ((this._FamiliarWithLicenseAndRules != value))
				{
					this.OnFamiliarWithLicenseAndRulesChanging(value);
					this.SendPropertyChanging();
					this._FamiliarWithLicenseAndRules = value;
					this.SendPropertyChanged("FamiliarWithLicenseAndRules");
					this.OnFamiliarWithLicenseAndRulesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamiliarWithAdmissionType", DbType="Bit")]
		public System.Nullable<bool> FamiliarWithAdmissionType
		{
			get
			{
				return this._FamiliarWithAdmissionType;
			}
			set
			{
				if ((this._FamiliarWithAdmissionType != value))
				{
					this.OnFamiliarWithAdmissionTypeChanging(value);
					this.SendPropertyChanging();
					this._FamiliarWithAdmissionType = value;
					this.SendPropertyChanged("FamiliarWithAdmissionType");
					this.OnFamiliarWithAdmissionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamiliarWithOriginalDocumentDeliveryDate", DbType="Bit")]
		public System.Nullable<bool> FamiliarWithOriginalDocumentDeliveryDate
		{
			get
			{
				return this._FamiliarWithOriginalDocumentDeliveryDate;
			}
			set
			{
				if ((this._FamiliarWithOriginalDocumentDeliveryDate != value))
				{
					this.OnFamiliarWithOriginalDocumentDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._FamiliarWithOriginalDocumentDeliveryDate = value;
					this.SendPropertyChanged("FamiliarWithOriginalDocumentDeliveryDate");
					this.OnFamiliarWithOriginalDocumentDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._ApplicationStatusType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WizardStepID", DbType="Int NOT NULL")]
		public int WizardStepID
		{
			get
			{
				return this._WizardStepID;
			}
			set
			{
				if ((this._WizardStepID != value))
				{
					this.OnWizardStepIDChanging(value);
					this.SendPropertyChanging();
					this._WizardStepID = value;
					this.SendPropertyChanged("WizardStepID");
					this.OnWizardStepIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolationID", DbType="Int NOT NULL")]
		public int ViolationID
		{
			get
			{
				return this._ViolationID;
			}
			set
			{
				if ((this._ViolationID != value))
				{
					if (this._ViolationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnViolationIDChanging(value);
					this.SendPropertyChanging();
					this._ViolationID = value;
					this.SendPropertyChanged("ViolationID");
					this.OnViolationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusDecision", DbType="VarChar(MAX)")]
		public string StatusDecision
		{
			get
			{
				return this._StatusDecision;
			}
			set
			{
				if ((this._StatusDecision != value))
				{
					this.OnStatusDecisionChanging(value);
					this.SendPropertyChanging();
					this._StatusDecision = value;
					this.SendPropertyChanged("StatusDecision");
					this.OnStatusDecisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCheckDate
		{
			get
			{
				return this._LastCheckDate;
			}
			set
			{
				if ((this._LastCheckDate != value))
				{
					this.OnLastCheckDateChanging(value);
					this.SendPropertyChanging();
					this._LastCheckDate = value;
					this.SendPropertyChanged("LastCheckDate");
					this.OnLastCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolationErrors", DbType="VarChar(MAX)")]
		public string ViolationErrors
		{
			get
			{
				return this._ViolationErrors;
			}
			set
			{
				if ((this._ViolationErrors != value))
				{
					this.OnViolationErrorsChanging(value);
					this.SendPropertyChanging();
					this._ViolationErrors = value;
					this.SendPropertyChanged("ViolationErrors");
					this.OnViolationErrorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishDate
		{
			get
			{
				return this._PublishDate;
			}
			set
			{
				if ((this._PublishDate != value))
				{
					this.OnPublishDateChanging(value);
					this.SendPropertyChanging();
					this._PublishDate = value;
					this.SendPropertyChanged("PublishDate");
					this.OnPublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="TinyInt NOT NULL")]
		public byte SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationNumber", DbType="VarChar(50)")]
		public string ApplicationNumber
		{
			get
			{
				return this._ApplicationNumber;
			}
			set
			{
				if ((this._ApplicationNumber != value))
				{
					this.OnApplicationNumberChanging(value);
					this.SendPropertyChanging();
					this._ApplicationNumber = value;
					this.SendPropertyChanged("ApplicationNumber");
					this.OnApplicationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalDocumentsReceived", DbType="Bit NOT NULL")]
		public bool OriginalDocumentsReceived
		{
			get
			{
				return this._OriginalDocumentsReceived;
			}
			set
			{
				if ((this._OriginalDocumentsReceived != value))
				{
					this.OnOriginalDocumentsReceivedChanging(value);
					this.SendPropertyChanging();
					this._OriginalDocumentsReceived = value;
					this.SendPropertyChanged("OriginalDocumentsReceived");
					this.OnOriginalDocumentsReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCompetitiveGroupID", DbType="Int")]
		public System.Nullable<int> OrderCompetitiveGroupID
		{
			get
			{
				return this._OrderCompetitiveGroupID;
			}
			set
			{
				if ((this._OrderCompetitiveGroupID != value))
				{
					if (this._CompetitiveGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderCompetitiveGroupIDChanging(value);
					this.SendPropertyChanging();
					this._OrderCompetitiveGroupID = value;
					this.SendPropertyChanged("OrderCompetitiveGroupID");
					this.OnOrderCompetitiveGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderOfAdmissionID", DbType="Int")]
		public System.Nullable<int> OrderOfAdmissionID
		{
			get
			{
				return this._OrderOfAdmissionID;
			}
			set
			{
				if ((this._OrderOfAdmissionID != value))
				{
					if (this._OrderOfAdmission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderOfAdmissionIDChanging(value);
					this.SendPropertyChanging();
					this._OrderOfAdmissionID = value;
					this.SendPropertyChanged("OrderOfAdmissionID");
					this.OnOrderOfAdmissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCompetitiveGroupItemID", DbType="Int")]
		public System.Nullable<int> OrderCompetitiveGroupItemID
		{
			get
			{
				return this._OrderCompetitiveGroupItemID;
			}
			set
			{
				if ((this._OrderCompetitiveGroupItemID != value))
				{
					if (this._CompetitiveGroupItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderCompetitiveGroupItemIDChanging(value);
					this.SendPropertyChanging();
					this._OrderCompetitiveGroupItemID = value;
					this.SendPropertyChanged("OrderCompetitiveGroupItemID");
					this.OnOrderCompetitiveGroupItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCalculatedRating", DbType="Decimal(10,4)")]
		public System.Nullable<decimal> OrderCalculatedRating
		{
			get
			{
				return this._OrderCalculatedRating;
			}
			set
			{
				if ((this._OrderCalculatedRating != value))
				{
					this.OnOrderCalculatedRatingChanging(value);
					this.SendPropertyChanging();
					this._OrderCalculatedRating = value;
					this.SendPropertyChanged("OrderCalculatedRating");
					this.OnOrderCalculatedRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCalculatedBenefitID", DbType="SmallInt")]
		public System.Nullable<short> OrderCalculatedBenefitID
		{
			get
			{
				return this._OrderCalculatedBenefitID;
			}
			set
			{
				if ((this._OrderCalculatedBenefitID != value))
				{
					if (this._Benefit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderCalculatedBenefitIDChanging(value);
					this.SendPropertyChanging();
					this._OrderCalculatedBenefitID = value;
					this.SendPropertyChanged("OrderCalculatedBenefitID");
					this.OnOrderCalculatedBenefitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderEducationFormID", DbType="SmallInt")]
		public System.Nullable<short> OrderEducationFormID
		{
			get
			{
				return this._OrderEducationFormID;
			}
			set
			{
				if ((this._OrderEducationFormID != value))
				{
					if (this._AdmissionItemType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderEducationFormIDChanging(value);
					this.SendPropertyChanging();
					this._OrderEducationFormID = value;
					this.SendPropertyChanged("OrderEducationFormID");
					this.OnOrderEducationFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderEducationSourceID", DbType="SmallInt")]
		public System.Nullable<short> OrderEducationSourceID
		{
			get
			{
				return this._OrderEducationSourceID;
			}
			set
			{
				if ((this._OrderEducationSourceID != value))
				{
					if (this._AdmissionItemType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderEducationSourceIDChanging(value);
					this.SendPropertyChanging();
					this._OrderEducationSourceID = value;
					this.SendPropertyChanged("OrderEducationSourceID");
					this.OnOrderEducationSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDenyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDenyDate
		{
			get
			{
				return this._LastDenyDate;
			}
			set
			{
				if ((this._LastDenyDate != value))
				{
					this.OnLastDenyDateChanging(value);
					this.SendPropertyChanging();
					this._LastDenyDate = value;
					this.SendPropertyChanged("LastDenyDate");
					this.OnLastDenyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresBudgetO", DbType="Bit NOT NULL")]
		public bool IsRequiresBudgetO
		{
			get
			{
				return this._IsRequiresBudgetO;
			}
			set
			{
				if ((this._IsRequiresBudgetO != value))
				{
					this.OnIsRequiresBudgetOChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresBudgetO = value;
					this.SendPropertyChanged("IsRequiresBudgetO");
					this.OnIsRequiresBudgetOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresBudgetOZ", DbType="Bit NOT NULL")]
		public bool IsRequiresBudgetOZ
		{
			get
			{
				return this._IsRequiresBudgetOZ;
			}
			set
			{
				if ((this._IsRequiresBudgetOZ != value))
				{
					this.OnIsRequiresBudgetOZChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresBudgetOZ = value;
					this.SendPropertyChanged("IsRequiresBudgetOZ");
					this.OnIsRequiresBudgetOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresBudgetZ", DbType="Bit NOT NULL")]
		public bool IsRequiresBudgetZ
		{
			get
			{
				return this._IsRequiresBudgetZ;
			}
			set
			{
				if ((this._IsRequiresBudgetZ != value))
				{
					this.OnIsRequiresBudgetZChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresBudgetZ = value;
					this.SendPropertyChanged("IsRequiresBudgetZ");
					this.OnIsRequiresBudgetZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresPaidO", DbType="Bit NOT NULL")]
		public bool IsRequiresPaidO
		{
			get
			{
				return this._IsRequiresPaidO;
			}
			set
			{
				if ((this._IsRequiresPaidO != value))
				{
					this.OnIsRequiresPaidOChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresPaidO = value;
					this.SendPropertyChanged("IsRequiresPaidO");
					this.OnIsRequiresPaidOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresPaidOZ", DbType="Bit NOT NULL")]
		public bool IsRequiresPaidOZ
		{
			get
			{
				return this._IsRequiresPaidOZ;
			}
			set
			{
				if ((this._IsRequiresPaidOZ != value))
				{
					this.OnIsRequiresPaidOZChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresPaidOZ = value;
					this.SendPropertyChanged("IsRequiresPaidOZ");
					this.OnIsRequiresPaidOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresPaidZ", DbType="Bit NOT NULL")]
		public bool IsRequiresPaidZ
		{
			get
			{
				return this._IsRequiresPaidZ;
			}
			set
			{
				if ((this._IsRequiresPaidZ != value))
				{
					this.OnIsRequiresPaidZChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresPaidZ = value;
					this.SendPropertyChanged("IsRequiresPaidZ");
					this.OnIsRequiresPaidZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalDocumentsReceivedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OriginalDocumentsReceivedDate
		{
			get
			{
				return this._OriginalDocumentsReceivedDate;
			}
			set
			{
				if ((this._OriginalDocumentsReceivedDate != value))
				{
					this.OnOriginalDocumentsReceivedDateChanging(value);
					this.SendPropertyChanging();
					this._OriginalDocumentsReceivedDate = value;
					this.SendPropertyChanged("OriginalDocumentsReceivedDate");
					this.OnOriginalDocumentsReceivedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEgeDocumentsCheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastEgeDocumentsCheckDate
		{
			get
			{
				return this._LastEgeDocumentsCheckDate;
			}
			set
			{
				if ((this._LastEgeDocumentsCheckDate != value))
				{
					this.OnLastEgeDocumentsCheckDateChanging(value);
					this.SendPropertyChanging();
					this._LastEgeDocumentsCheckDate = value;
					this.SendPropertyChanged("LastEgeDocumentsCheckDate");
					this.OnLastEgeDocumentsCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCompetitiveGroupTargetID", DbType="Int")]
		public System.Nullable<int> OrderCompetitiveGroupTargetID
		{
			get
			{
				return this._OrderCompetitiveGroupTargetID;
			}
			set
			{
				if ((this._OrderCompetitiveGroupTargetID != value))
				{
					if (this._CompetitiveGroupTarget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderCompetitiveGroupTargetIDChanging(value);
					this.SendPropertyChanging();
					this._OrderCompetitiveGroupTargetID = value;
					this.SendPropertyChanged("OrderCompetitiveGroupTargetID");
					this.OnOrderCompetitiveGroupTargetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresTargetO", DbType="Bit NOT NULL")]
		public bool IsRequiresTargetO
		{
			get
			{
				return this._IsRequiresTargetO;
			}
			set
			{
				if ((this._IsRequiresTargetO != value))
				{
					this.OnIsRequiresTargetOChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresTargetO = value;
					this.SendPropertyChanged("IsRequiresTargetO");
					this.OnIsRequiresTargetOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresTargetOZ", DbType="Bit NOT NULL")]
		public bool IsRequiresTargetOZ
		{
			get
			{
				return this._IsRequiresTargetOZ;
			}
			set
			{
				if ((this._IsRequiresTargetOZ != value))
				{
					this.OnIsRequiresTargetOZChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresTargetOZ = value;
					this.SendPropertyChanged("IsRequiresTargetOZ");
					this.OnIsRequiresTargetOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresTargetZ", DbType="Bit NOT NULL")]
		public bool IsRequiresTargetZ
		{
			get
			{
				return this._IsRequiresTargetZ;
			}
			set
			{
				if ((this._IsRequiresTargetZ != value))
				{
					this.OnIsRequiresTargetZChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresTargetZ = value;
					this.SendPropertyChanged("IsRequiresTargetZ");
					this.OnIsRequiresTargetZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ApplicationGUID
		{
			get
			{
				return this._ApplicationGUID;
			}
			set
			{
				if ((this._ApplicationGUID != value))
				{
					this.OnApplicationGUIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationGUID = value;
					this.SendPropertyChanged("ApplicationGUID");
					this.OnApplicationGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderIdLevelBudget", DbType="Int")]
		public System.Nullable<int> OrderIdLevelBudget
		{
			get
			{
				return this._OrderIdLevelBudget;
			}
			set
			{
				if ((this._OrderIdLevelBudget != value))
				{
					if (this._LevelBudget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIdLevelBudgetChanging(value);
					this.SendPropertyChanging();
					this._OrderIdLevelBudget = value;
					this.SendPropertyChanged("OrderIdLevelBudget");
					this.OnOrderIdLevelBudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationCompetitiveGroupItem", Storage="_ApplicationCompetitiveGroupItems", ThisKey="ApplicationID", OtherKey="ApplicationId")]
		public EntitySet<ApplicationCompetitiveGroupItem> ApplicationCompetitiveGroupItems
		{
			get
			{
				return this._ApplicationCompetitiveGroupItems;
			}
			set
			{
				this._ApplicationCompetitiveGroupItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationCompositionResult", Storage="_ApplicationCompositionResults", ThisKey="ApplicationID", OtherKey="ApplicationID")]
		public EntitySet<ApplicationCompositionResult> ApplicationCompositionResults
		{
			get
			{
				return this._ApplicationCompositionResults;
			}
			set
			{
				this._ApplicationCompositionResults.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationCompositionResults_Approb", Storage="_ApplicationCompositionResults_Approbs", ThisKey="ApplicationID", OtherKey="ApplicationID")]
		public EntitySet<ApplicationCompositionResults_Approb> ApplicationCompositionResults_Approbs
		{
			get
			{
				return this._ApplicationCompositionResults_Approbs;
			}
			set
			{
				this._ApplicationCompositionResults_Approbs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationConsidered", Storage="_ApplicationConsidereds", ThisKey="ApplicationID", OtherKey="ApplicationID")]
		public EntitySet<ApplicationConsidered> ApplicationConsidereds
		{
			get
			{
				return this._ApplicationConsidereds;
			}
			set
			{
				this._ApplicationConsidereds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationEntranceTestDocument", Storage="_ApplicationEntranceTestDocuments", ThisKey="ApplicationID", OtherKey="ApplicationID")]
		public EntitySet<ApplicationEntranceTestDocument> ApplicationEntranceTestDocuments
		{
			get
			{
				return this._ApplicationEntranceTestDocuments;
			}
			set
			{
				this._ApplicationEntranceTestDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationEntrantDocument", Storage="_ApplicationEntrantDocuments", ThisKey="ApplicationID", OtherKey="ApplicationID")]
		public EntitySet<ApplicationEntrantDocument> ApplicationEntrantDocuments
		{
			get
			{
				return this._ApplicationEntrantDocuments;
			}
			set
			{
				this._ApplicationEntrantDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationExtra", Storage="_ApplicationExtras", ThisKey="ApplicationID", OtherKey="ApplicationID")]
		public EntitySet<ApplicationExtra> ApplicationExtras
		{
			get
			{
				return this._ApplicationExtras;
			}
			set
			{
				this._ApplicationExtras.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationSelectedCompetitiveGroup", Storage="_ApplicationSelectedCompetitiveGroups", ThisKey="ApplicationID", OtherKey="ApplicationID")]
		public EntitySet<ApplicationSelectedCompetitiveGroup> ApplicationSelectedCompetitiveGroups
		{
			get
			{
				return this._ApplicationSelectedCompetitiveGroups;
			}
			set
			{
				this._ApplicationSelectedCompetitiveGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationSelectedCompetitiveGroupItem", Storage="_ApplicationSelectedCompetitiveGroupItems", ThisKey="ApplicationID", OtherKey="ApplicationID")]
		public EntitySet<ApplicationSelectedCompetitiveGroupItem> ApplicationSelectedCompetitiveGroupItems
		{
			get
			{
				return this._ApplicationSelectedCompetitiveGroupItems;
			}
			set
			{
				this._ApplicationSelectedCompetitiveGroupItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationSelectedCompetitiveGroupTarget", Storage="_ApplicationSelectedCompetitiveGroupTargets", ThisKey="ApplicationID", OtherKey="ApplicationID")]
		public EntitySet<ApplicationSelectedCompetitiveGroupTarget> ApplicationSelectedCompetitiveGroupTargets
		{
			get
			{
				return this._ApplicationSelectedCompetitiveGroupTargets;
			}
			set
			{
				this._ApplicationSelectedCompetitiveGroupTargets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_IndividualAchivement", Storage="_IndividualAchivements", ThisKey="ApplicationID", OtherKey="ApplicationID")]
		public EntitySet<IndividualAchivement> IndividualAchivements
		{
			get
			{
				return this._IndividualAchivements;
			}
			set
			{
				this._IndividualAchivements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_OrderOfAdmissionHistory", Storage="_OrderOfAdmissionHistories", ThisKey="ApplicationID", OtherKey="ApplicationID")]
		public EntitySet<OrderOfAdmissionHistory> OrderOfAdmissionHistories
		{
			get
			{
				return this._OrderOfAdmissionHistories;
			}
			set
			{
				this._OrderOfAdmissionHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_Application", Storage="_AdmissionItemType", ThisKey="OrderEducationFormID", OtherKey="ItemTypeID", IsForeignKey=true)]
		public AdmissionItemType AdmissionItemType
		{
			get
			{
				return this._AdmissionItemType.Entity;
			}
			set
			{
				AdmissionItemType previousValue = this._AdmissionItemType.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionItemType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionItemType.Entity = null;
						previousValue.Applications.Remove(this);
					}
					this._AdmissionItemType.Entity = value;
					if ((value != null))
					{
						value.Applications.Add(this);
						this._OrderEducationFormID = value.ItemTypeID;
					}
					else
					{
						this._OrderEducationFormID = default(Nullable<short>);
					}
					this.SendPropertyChanged("AdmissionItemType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_Application1", Storage="_AdmissionItemType1", ThisKey="OrderEducationSourceID", OtherKey="ItemTypeID", IsForeignKey=true)]
		public AdmissionItemType AdmissionItemType1
		{
			get
			{
				return this._AdmissionItemType1.Entity;
			}
			set
			{
				AdmissionItemType previousValue = this._AdmissionItemType1.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionItemType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionItemType1.Entity = null;
						previousValue.Applications1.Remove(this);
					}
					this._AdmissionItemType1.Entity = value;
					if ((value != null))
					{
						value.Applications1.Add(this);
						this._OrderEducationSourceID = value.ItemTypeID;
					}
					else
					{
						this._OrderEducationSourceID = default(Nullable<short>);
					}
					this.SendPropertyChanged("AdmissionItemType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ViolationType_Application", Storage="_ViolationType", ThisKey="ViolationID", OtherKey="ViolationID", IsForeignKey=true)]
		public ViolationType ViolationType
		{
			get
			{
				return this._ViolationType.Entity;
			}
			set
			{
				ViolationType previousValue = this._ViolationType.Entity;
				if (((previousValue != value) 
							|| (this._ViolationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ViolationType.Entity = null;
						previousValue.Applications.Remove(this);
					}
					this._ViolationType.Entity = value;
					if ((value != null))
					{
						value.Applications.Add(this);
						this._ViolationID = value.ViolationID;
					}
					else
					{
						this._ViolationID = default(int);
					}
					this.SendPropertyChanged("ViolationType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ApplicationStatusType_Application", Storage="_ApplicationStatusType", ThisKey="StatusID", OtherKey="StatusID", IsForeignKey=true)]
		public ApplicationStatusType ApplicationStatusType
		{
			get
			{
				return this._ApplicationStatusType.Entity;
			}
			set
			{
				ApplicationStatusType previousValue = this._ApplicationStatusType.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationStatusType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationStatusType.Entity = null;
						previousValue.Applications.Remove(this);
					}
					this._ApplicationStatusType.Entity = value;
					if ((value != null))
					{
						value.Applications.Add(this);
						this._StatusID = value.StatusID;
					}
					else
					{
						this._StatusID = default(int);
					}
					this.SendPropertyChanged("ApplicationStatusType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Benefit_Application", Storage="_Benefit", ThisKey="OrderCalculatedBenefitID", OtherKey="BenefitID", IsForeignKey=true)]
		public Benefit Benefit
		{
			get
			{
				return this._Benefit.Entity;
			}
			set
			{
				Benefit previousValue = this._Benefit.Entity;
				if (((previousValue != value) 
							|| (this._Benefit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Benefit.Entity = null;
						previousValue.Applications.Remove(this);
					}
					this._Benefit.Entity = value;
					if ((value != null))
					{
						value.Applications.Add(this);
						this._OrderCalculatedBenefitID = value.BenefitID;
					}
					else
					{
						this._OrderCalculatedBenefitID = default(Nullable<short>);
					}
					this.SendPropertyChanged("Benefit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroup_Application", Storage="_CompetitiveGroup", ThisKey="OrderCompetitiveGroupID", OtherKey="CompetitiveGroupID", IsForeignKey=true)]
		public CompetitiveGroup CompetitiveGroup
		{
			get
			{
				return this._CompetitiveGroup.Entity;
			}
			set
			{
				CompetitiveGroup previousValue = this._CompetitiveGroup.Entity;
				if (((previousValue != value) 
							|| (this._CompetitiveGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompetitiveGroup.Entity = null;
						previousValue.Applications.Remove(this);
					}
					this._CompetitiveGroup.Entity = value;
					if ((value != null))
					{
						value.Applications.Add(this);
						this._OrderCompetitiveGroupID = value.CompetitiveGroupID;
					}
					else
					{
						this._OrderCompetitiveGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CompetitiveGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroupItem_Application", Storage="_CompetitiveGroupItem", ThisKey="OrderCompetitiveGroupItemID", OtherKey="CompetitiveGroupItemID", IsForeignKey=true)]
		public CompetitiveGroupItem CompetitiveGroupItem
		{
			get
			{
				return this._CompetitiveGroupItem.Entity;
			}
			set
			{
				CompetitiveGroupItem previousValue = this._CompetitiveGroupItem.Entity;
				if (((previousValue != value) 
							|| (this._CompetitiveGroupItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompetitiveGroupItem.Entity = null;
						previousValue.Applications.Remove(this);
					}
					this._CompetitiveGroupItem.Entity = value;
					if ((value != null))
					{
						value.Applications.Add(this);
						this._OrderCompetitiveGroupItemID = value.CompetitiveGroupItemID;
					}
					else
					{
						this._OrderCompetitiveGroupItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CompetitiveGroupItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroupTarget_Application", Storage="_CompetitiveGroupTarget", ThisKey="OrderCompetitiveGroupTargetID", OtherKey="CompetitiveGroupTargetID", IsForeignKey=true)]
		public CompetitiveGroupTarget CompetitiveGroupTarget
		{
			get
			{
				return this._CompetitiveGroupTarget.Entity;
			}
			set
			{
				CompetitiveGroupTarget previousValue = this._CompetitiveGroupTarget.Entity;
				if (((previousValue != value) 
							|| (this._CompetitiveGroupTarget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompetitiveGroupTarget.Entity = null;
						previousValue.Applications.Remove(this);
					}
					this._CompetitiveGroupTarget.Entity = value;
					if ((value != null))
					{
						value.Applications.Add(this);
						this._OrderCompetitiveGroupTargetID = value.CompetitiveGroupTargetID;
					}
					else
					{
						this._OrderCompetitiveGroupTargetID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CompetitiveGroupTarget");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entrant_Application", Storage="_Entrant", ThisKey="EntrantID", OtherKey="EntrantID", IsForeignKey=true)]
		public Entrant Entrant
		{
			get
			{
				return this._Entrant.Entity;
			}
			set
			{
				Entrant previousValue = this._Entrant.Entity;
				if (((previousValue != value) 
							|| (this._Entrant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entrant.Entity = null;
						previousValue.Applications.Remove(this);
					}
					this._Entrant.Entity = value;
					if ((value != null))
					{
						value.Applications.Add(this);
						this._EntrantID = value.EntrantID;
					}
					else
					{
						this._EntrantID = default(int);
					}
					this.SendPropertyChanged("Entrant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_Application", Storage="_Institution", ThisKey="InstitutionID", OtherKey="InstitutionID", IsForeignKey=true)]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.Applications.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.Applications.Add(this);
						this._InstitutionID = value.InstitutionID;
					}
					else
					{
						this._InstitutionID = default(int);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelBudget_Application", Storage="_LevelBudget", ThisKey="OrderIdLevelBudget", OtherKey="IdLevelBudget", IsForeignKey=true)]
		public LevelBudget LevelBudget
		{
			get
			{
				return this._LevelBudget.Entity;
			}
			set
			{
				LevelBudget previousValue = this._LevelBudget.Entity;
				if (((previousValue != value) 
							|| (this._LevelBudget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LevelBudget.Entity = null;
						previousValue.Applications.Remove(this);
					}
					this._LevelBudget.Entity = value;
					if ((value != null))
					{
						value.Applications.Add(this);
						this._OrderIdLevelBudget = value.IdLevelBudget;
					}
					else
					{
						this._OrderIdLevelBudget = default(Nullable<int>);
					}
					this.SendPropertyChanged("LevelBudget");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderOfAdmission_Application", Storage="_OrderOfAdmission", ThisKey="OrderOfAdmissionID", OtherKey="OrderID", IsForeignKey=true)]
		public OrderOfAdmission OrderOfAdmission
		{
			get
			{
				return this._OrderOfAdmission.Entity;
			}
			set
			{
				OrderOfAdmission previousValue = this._OrderOfAdmission.Entity;
				if (((previousValue != value) 
							|| (this._OrderOfAdmission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderOfAdmission.Entity = null;
						previousValue.Applications.Remove(this);
					}
					this._OrderOfAdmission.Entity = value;
					if ((value != null))
					{
						value.Applications.Add(this);
						this._OrderOfAdmissionID = value.OrderID;
					}
					else
					{
						this._OrderOfAdmissionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OrderOfAdmission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApplicationCompetitiveGroupItems(ApplicationCompetitiveGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_ApplicationCompetitiveGroupItems(ApplicationCompetitiveGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_ApplicationCompositionResults(ApplicationCompositionResult entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_ApplicationCompositionResults(ApplicationCompositionResult entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_ApplicationCompositionResults_Approbs(ApplicationCompositionResults_Approb entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_ApplicationCompositionResults_Approbs(ApplicationCompositionResults_Approb entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_ApplicationConsidereds(ApplicationConsidered entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_ApplicationConsidereds(ApplicationConsidered entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_ApplicationEntranceTestDocuments(ApplicationEntranceTestDocument entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_ApplicationEntranceTestDocuments(ApplicationEntranceTestDocument entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_ApplicationEntrantDocuments(ApplicationEntrantDocument entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_ApplicationEntrantDocuments(ApplicationEntrantDocument entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_ApplicationExtras(ApplicationExtra entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_ApplicationExtras(ApplicationExtra entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_ApplicationSelectedCompetitiveGroups(ApplicationSelectedCompetitiveGroup entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_ApplicationSelectedCompetitiveGroups(ApplicationSelectedCompetitiveGroup entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_ApplicationSelectedCompetitiveGroupItems(ApplicationSelectedCompetitiveGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_ApplicationSelectedCompetitiveGroupItems(ApplicationSelectedCompetitiveGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_ApplicationSelectedCompetitiveGroupTargets(ApplicationSelectedCompetitiveGroupTarget entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_ApplicationSelectedCompetitiveGroupTargets(ApplicationSelectedCompetitiveGroupTarget entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_IndividualAchivements(IndividualAchivement entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_IndividualAchivements(IndividualAchivement entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
		
		private void attach_OrderOfAdmissionHistories(OrderOfAdmissionHistory entity)
		{
			this.SendPropertyChanging();
			entity.Application = this;
		}
		
		private void detach_OrderOfAdmissionHistories(OrderOfAdmissionHistory entity)
		{
			this.SendPropertyChanging();
			entity.Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationCheckStatus")]
	public partial class ApplicationCheckStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ApplicationCheckStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationCompetitiveGroupItem")]
	public partial class ApplicationCompetitiveGroupItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _ApplicationId;
		
		private int _CompetitiveGroupId;
		
		private int _CompetitiveGroupItemId;
		
		private int _EducationFormId;
		
		private int _EducationSourceId;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<int> _CompetitiveGroupTargetId;
		
		private EntityRef<Application> _Application;
		
		private EntityRef<CompetitiveGroup> _CompetitiveGroup;
		
		private EntityRef<CompetitiveGroupItem> _CompetitiveGroupItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnApplicationIdChanging(int value);
    partial void OnApplicationIdChanged();
    partial void OnCompetitiveGroupIdChanging(int value);
    partial void OnCompetitiveGroupIdChanged();
    partial void OnCompetitiveGroupItemIdChanging(int value);
    partial void OnCompetitiveGroupItemIdChanged();
    partial void OnEducationFormIdChanging(int value);
    partial void OnEducationFormIdChanged();
    partial void OnEducationSourceIdChanging(int value);
    partial void OnEducationSourceIdChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnCompetitiveGroupTargetIdChanging(System.Nullable<int> value);
    partial void OnCompetitiveGroupTargetIdChanged();
    #endregion
		
		public ApplicationCompetitiveGroupItem()
		{
			this._Application = default(EntityRef<Application>);
			this._CompetitiveGroup = default(EntityRef<CompetitiveGroup>);
			this._CompetitiveGroupItem = default(EntityRef<CompetitiveGroupItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="Int NOT NULL")]
		public int ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupId", DbType="Int NOT NULL")]
		public int CompetitiveGroupId
		{
			get
			{
				return this._CompetitiveGroupId;
			}
			set
			{
				if ((this._CompetitiveGroupId != value))
				{
					if (this._CompetitiveGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompetitiveGroupIdChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupId = value;
					this.SendPropertyChanged("CompetitiveGroupId");
					this.OnCompetitiveGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupItemId", DbType="Int NOT NULL")]
		public int CompetitiveGroupItemId
		{
			get
			{
				return this._CompetitiveGroupItemId;
			}
			set
			{
				if ((this._CompetitiveGroupItemId != value))
				{
					if (this._CompetitiveGroupItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompetitiveGroupItemIdChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupItemId = value;
					this.SendPropertyChanged("CompetitiveGroupItemId");
					this.OnCompetitiveGroupItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationFormId", DbType="Int NOT NULL")]
		public int EducationFormId
		{
			get
			{
				return this._EducationFormId;
			}
			set
			{
				if ((this._EducationFormId != value))
				{
					this.OnEducationFormIdChanging(value);
					this.SendPropertyChanging();
					this._EducationFormId = value;
					this.SendPropertyChanged("EducationFormId");
					this.OnEducationFormIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationSourceId", DbType="Int NOT NULL")]
		public int EducationSourceId
		{
			get
			{
				return this._EducationSourceId;
			}
			set
			{
				if ((this._EducationSourceId != value))
				{
					this.OnEducationSourceIdChanging(value);
					this.SendPropertyChanging();
					this._EducationSourceId = value;
					this.SendPropertyChanged("EducationSourceId");
					this.OnEducationSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupTargetId", DbType="Int")]
		public System.Nullable<int> CompetitiveGroupTargetId
		{
			get
			{
				return this._CompetitiveGroupTargetId;
			}
			set
			{
				if ((this._CompetitiveGroupTargetId != value))
				{
					this.OnCompetitiveGroupTargetIdChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupTargetId = value;
					this.SendPropertyChanged("CompetitiveGroupTargetId");
					this.OnCompetitiveGroupTargetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationCompetitiveGroupItem", Storage="_Application", ThisKey="ApplicationId", OtherKey="ApplicationID", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.ApplicationCompetitiveGroupItems.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.ApplicationCompetitiveGroupItems.Add(this);
						this._ApplicationId = value.ApplicationID;
					}
					else
					{
						this._ApplicationId = default(int);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroup_ApplicationCompetitiveGroupItem", Storage="_CompetitiveGroup", ThisKey="CompetitiveGroupId", OtherKey="CompetitiveGroupID", IsForeignKey=true)]
		public CompetitiveGroup CompetitiveGroup
		{
			get
			{
				return this._CompetitiveGroup.Entity;
			}
			set
			{
				CompetitiveGroup previousValue = this._CompetitiveGroup.Entity;
				if (((previousValue != value) 
							|| (this._CompetitiveGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompetitiveGroup.Entity = null;
						previousValue.ApplicationCompetitiveGroupItems.Remove(this);
					}
					this._CompetitiveGroup.Entity = value;
					if ((value != null))
					{
						value.ApplicationCompetitiveGroupItems.Add(this);
						this._CompetitiveGroupId = value.CompetitiveGroupID;
					}
					else
					{
						this._CompetitiveGroupId = default(int);
					}
					this.SendPropertyChanged("CompetitiveGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroupItem_ApplicationCompetitiveGroupItem", Storage="_CompetitiveGroupItem", ThisKey="CompetitiveGroupItemId", OtherKey="CompetitiveGroupItemID", IsForeignKey=true)]
		public CompetitiveGroupItem CompetitiveGroupItem
		{
			get
			{
				return this._CompetitiveGroupItem.Entity;
			}
			set
			{
				CompetitiveGroupItem previousValue = this._CompetitiveGroupItem.Entity;
				if (((previousValue != value) 
							|| (this._CompetitiveGroupItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompetitiveGroupItem.Entity = null;
						previousValue.ApplicationCompetitiveGroupItems.Remove(this);
					}
					this._CompetitiveGroupItem.Entity = value;
					if ((value != null))
					{
						value.ApplicationCompetitiveGroupItems.Add(this);
						this._CompetitiveGroupItemId = value.CompetitiveGroupItemID;
					}
					else
					{
						this._CompetitiveGroupItemId = default(int);
					}
					this.SendPropertyChanged("CompetitiveGroupItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationCompositionResults")]
	public partial class ApplicationCompositionResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompositionID;
		
		private int _ApplicationID;
		
		private string _SourceID;
		
		private System.DateTime _Year;
		
		private System.Nullable<int> _ThemeID;
		
		private bool _Result;
		
		private EntityRef<Application> _Application;
		
		private EntityRef<CompositionTheme> _CompositionTheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompositionIDChanging(int value);
    partial void OnCompositionIDChanged();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnSourceIDChanging(string value);
    partial void OnSourceIDChanged();
    partial void OnYearChanging(System.DateTime value);
    partial void OnYearChanged();
    partial void OnThemeIDChanging(System.Nullable<int> value);
    partial void OnThemeIDChanged();
    partial void OnResultChanging(bool value);
    partial void OnResultChanged();
    #endregion
		
		public ApplicationCompositionResult()
		{
			this._Application = default(EntityRef<Application>);
			this._CompositionTheme = default(EntityRef<CompositionTheme>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompositionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompositionID
		{
			get
			{
				return this._CompositionID;
			}
			set
			{
				if ((this._CompositionID != value))
				{
					this.OnCompositionIDChanging(value);
					this.SendPropertyChanging();
					this._CompositionID = value;
					this.SendPropertyChanged("CompositionID");
					this.OnCompositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL")]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="DateTime NOT NULL")]
		public System.DateTime Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThemeID", DbType="Int")]
		public System.Nullable<int> ThemeID
		{
			get
			{
				return this._ThemeID;
			}
			set
			{
				if ((this._ThemeID != value))
				{
					if (this._CompositionTheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThemeIDChanging(value);
					this.SendPropertyChanging();
					this._ThemeID = value;
					this.SendPropertyChanged("ThemeID");
					this.OnThemeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="Bit NOT NULL")]
		public bool Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationCompositionResult", Storage="_Application", ThisKey="ApplicationID", OtherKey="ApplicationID", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.ApplicationCompositionResults.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.ApplicationCompositionResults.Add(this);
						this._ApplicationID = value.ApplicationID;
					}
					else
					{
						this._ApplicationID = default(int);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompositionTheme_ApplicationCompositionResult", Storage="_CompositionTheme", ThisKey="ThemeID", OtherKey="ThemeID", IsForeignKey=true)]
		public CompositionTheme CompositionTheme
		{
			get
			{
				return this._CompositionTheme.Entity;
			}
			set
			{
				CompositionTheme previousValue = this._CompositionTheme.Entity;
				if (((previousValue != value) 
							|| (this._CompositionTheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompositionTheme.Entity = null;
						previousValue.ApplicationCompositionResults.Remove(this);
					}
					this._CompositionTheme.Entity = value;
					if ((value != null))
					{
						value.ApplicationCompositionResults.Add(this);
						this._ThemeID = value.ThemeID;
					}
					else
					{
						this._ThemeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CompositionTheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationCompositionResults_Approb")]
	public partial class ApplicationCompositionResults_Approb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompositionID;
		
		private int _ApplicationID;
		
		private bool _IsVisible;
		
		private System.DateTime _Year;
		
		private int _ThemeID;
		
		private bool _Result;
		
		private System.Data.Linq.Binary _FileContent;
		
		private string _FileName;
		
		private EntityRef<Application> _Application;
		
		private EntityRef<CompositionThemes_Approb> _CompositionThemes_Approb;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompositionIDChanging(int value);
    partial void OnCompositionIDChanged();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnIsVisibleChanging(bool value);
    partial void OnIsVisibleChanged();
    partial void OnYearChanging(System.DateTime value);
    partial void OnYearChanged();
    partial void OnThemeIDChanging(int value);
    partial void OnThemeIDChanged();
    partial void OnResultChanging(bool value);
    partial void OnResultChanged();
    partial void OnFileContentChanging(System.Data.Linq.Binary value);
    partial void OnFileContentChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    #endregion
		
		public ApplicationCompositionResults_Approb()
		{
			this._Application = default(EntityRef<Application>);
			this._CompositionThemes_Approb = default(EntityRef<CompositionThemes_Approb>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompositionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompositionID
		{
			get
			{
				return this._CompositionID;
			}
			set
			{
				if ((this._CompositionID != value))
				{
					this.OnCompositionIDChanging(value);
					this.SendPropertyChanging();
					this._CompositionID = value;
					this.SendPropertyChanged("CompositionID");
					this.OnCompositionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL")]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisible", DbType="Bit NOT NULL")]
		public bool IsVisible
		{
			get
			{
				return this._IsVisible;
			}
			set
			{
				if ((this._IsVisible != value))
				{
					this.OnIsVisibleChanging(value);
					this.SendPropertyChanging();
					this._IsVisible = value;
					this.SendPropertyChanged("IsVisible");
					this.OnIsVisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="DateTime NOT NULL")]
		public System.DateTime Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThemeID", DbType="Int NOT NULL")]
		public int ThemeID
		{
			get
			{
				return this._ThemeID;
			}
			set
			{
				if ((this._ThemeID != value))
				{
					if (this._CompositionThemes_Approb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnThemeIDChanging(value);
					this.SendPropertyChanging();
					this._ThemeID = value;
					this.SendPropertyChanged("ThemeID");
					this.OnThemeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="Bit NOT NULL")]
		public bool Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileContent", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary FileContent
		{
			get
			{
				return this._FileContent;
			}
			set
			{
				if ((this._FileContent != value))
				{
					this.OnFileContentChanging(value);
					this.SendPropertyChanging();
					this._FileContent = value;
					this.SendPropertyChanged("FileContent");
					this.OnFileContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(100)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationCompositionResults_Approb", Storage="_Application", ThisKey="ApplicationID", OtherKey="ApplicationID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.ApplicationCompositionResults_Approbs.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.ApplicationCompositionResults_Approbs.Add(this);
						this._ApplicationID = value.ApplicationID;
					}
					else
					{
						this._ApplicationID = default(int);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompositionThemes_Approb_ApplicationCompositionResults_Approb", Storage="_CompositionThemes_Approb", ThisKey="ThemeID", OtherKey="ThemeID", IsForeignKey=true)]
		public CompositionThemes_Approb CompositionThemes_Approb
		{
			get
			{
				return this._CompositionThemes_Approb.Entity;
			}
			set
			{
				CompositionThemes_Approb previousValue = this._CompositionThemes_Approb.Entity;
				if (((previousValue != value) 
							|| (this._CompositionThemes_Approb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompositionThemes_Approb.Entity = null;
						previousValue.ApplicationCompositionResults_Approbs.Remove(this);
					}
					this._CompositionThemes_Approb.Entity = value;
					if ((value != null))
					{
						value.ApplicationCompositionResults_Approbs.Add(this);
						this._ThemeID = value.ThemeID;
					}
					else
					{
						this._ThemeID = default(int);
					}
					this.SendPropertyChanged("CompositionThemes_Approb");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationConsidered")]
	public partial class ApplicationConsidered : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationConsideredID;
		
		private int _ApplicationID;
		
		private int _DirectionID;
		
		private short _EducationLevelID;
		
		private short _EducationFormID;
		
		private short _FinanceSourceID;
		
		private bool _IsRequiresBudgetO;
		
		private bool _IsRequiresBudgetOZ;
		
		private bool _IsRequiresBudgetZ;
		
		private bool _IsRequiresPaidO;
		
		private bool _IsRequiresPaidOZ;
		
		private bool _IsRequiresPaidZ;
		
		private bool _IsRequiresTargetO;
		
		private bool _IsRequiresTargetOZ;
		
		private bool _IsRequiresTargetZ;
		
		private System.Nullable<short> _Stage;
		
		private bool _IsRecommended;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<AdmissionItemType> _AdmissionItemType;
		
		private EntityRef<Application> _Application;
		
		private EntityRef<Direction> _Direction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationConsideredIDChanging(int value);
    partial void OnApplicationConsideredIDChanged();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnDirectionIDChanging(int value);
    partial void OnDirectionIDChanged();
    partial void OnEducationLevelIDChanging(short value);
    partial void OnEducationLevelIDChanged();
    partial void OnEducationFormIDChanging(short value);
    partial void OnEducationFormIDChanged();
    partial void OnFinanceSourceIDChanging(short value);
    partial void OnFinanceSourceIDChanged();
    partial void OnIsRequiresBudgetOChanging(bool value);
    partial void OnIsRequiresBudgetOChanged();
    partial void OnIsRequiresBudgetOZChanging(bool value);
    partial void OnIsRequiresBudgetOZChanged();
    partial void OnIsRequiresBudgetZChanging(bool value);
    partial void OnIsRequiresBudgetZChanged();
    partial void OnIsRequiresPaidOChanging(bool value);
    partial void OnIsRequiresPaidOChanged();
    partial void OnIsRequiresPaidOZChanging(bool value);
    partial void OnIsRequiresPaidOZChanged();
    partial void OnIsRequiresPaidZChanging(bool value);
    partial void OnIsRequiresPaidZChanged();
    partial void OnIsRequiresTargetOChanging(bool value);
    partial void OnIsRequiresTargetOChanged();
    partial void OnIsRequiresTargetOZChanging(bool value);
    partial void OnIsRequiresTargetOZChanged();
    partial void OnIsRequiresTargetZChanging(bool value);
    partial void OnIsRequiresTargetZChanged();
    partial void OnStageChanging(System.Nullable<short> value);
    partial void OnStageChanged();
    partial void OnIsRecommendedChanging(bool value);
    partial void OnIsRecommendedChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ApplicationConsidered()
		{
			this._AdmissionItemType = default(EntityRef<AdmissionItemType>);
			this._Application = default(EntityRef<Application>);
			this._Direction = default(EntityRef<Direction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationConsideredID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ApplicationConsideredID
		{
			get
			{
				return this._ApplicationConsideredID;
			}
			set
			{
				if ((this._ApplicationConsideredID != value))
				{
					this.OnApplicationConsideredIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationConsideredID = value;
					this.SendPropertyChanged("ApplicationConsideredID");
					this.OnApplicationConsideredIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL")]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int NOT NULL")]
		public int DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					if (this._Direction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelID", DbType="SmallInt NOT NULL")]
		public short EducationLevelID
		{
			get
			{
				return this._EducationLevelID;
			}
			set
			{
				if ((this._EducationLevelID != value))
				{
					if (this._AdmissionItemType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEducationLevelIDChanging(value);
					this.SendPropertyChanging();
					this._EducationLevelID = value;
					this.SendPropertyChanged("EducationLevelID");
					this.OnEducationLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationFormID", DbType="SmallInt NOT NULL")]
		public short EducationFormID
		{
			get
			{
				return this._EducationFormID;
			}
			set
			{
				if ((this._EducationFormID != value))
				{
					this.OnEducationFormIDChanging(value);
					this.SendPropertyChanging();
					this._EducationFormID = value;
					this.SendPropertyChanged("EducationFormID");
					this.OnEducationFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceSourceID", DbType="SmallInt NOT NULL")]
		public short FinanceSourceID
		{
			get
			{
				return this._FinanceSourceID;
			}
			set
			{
				if ((this._FinanceSourceID != value))
				{
					this.OnFinanceSourceIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceSourceID = value;
					this.SendPropertyChanged("FinanceSourceID");
					this.OnFinanceSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresBudgetO", DbType="Bit NOT NULL")]
		public bool IsRequiresBudgetO
		{
			get
			{
				return this._IsRequiresBudgetO;
			}
			set
			{
				if ((this._IsRequiresBudgetO != value))
				{
					this.OnIsRequiresBudgetOChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresBudgetO = value;
					this.SendPropertyChanged("IsRequiresBudgetO");
					this.OnIsRequiresBudgetOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresBudgetOZ", DbType="Bit NOT NULL")]
		public bool IsRequiresBudgetOZ
		{
			get
			{
				return this._IsRequiresBudgetOZ;
			}
			set
			{
				if ((this._IsRequiresBudgetOZ != value))
				{
					this.OnIsRequiresBudgetOZChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresBudgetOZ = value;
					this.SendPropertyChanged("IsRequiresBudgetOZ");
					this.OnIsRequiresBudgetOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresBudgetZ", DbType="Bit NOT NULL")]
		public bool IsRequiresBudgetZ
		{
			get
			{
				return this._IsRequiresBudgetZ;
			}
			set
			{
				if ((this._IsRequiresBudgetZ != value))
				{
					this.OnIsRequiresBudgetZChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresBudgetZ = value;
					this.SendPropertyChanged("IsRequiresBudgetZ");
					this.OnIsRequiresBudgetZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresPaidO", DbType="Bit NOT NULL")]
		public bool IsRequiresPaidO
		{
			get
			{
				return this._IsRequiresPaidO;
			}
			set
			{
				if ((this._IsRequiresPaidO != value))
				{
					this.OnIsRequiresPaidOChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresPaidO = value;
					this.SendPropertyChanged("IsRequiresPaidO");
					this.OnIsRequiresPaidOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresPaidOZ", DbType="Bit NOT NULL")]
		public bool IsRequiresPaidOZ
		{
			get
			{
				return this._IsRequiresPaidOZ;
			}
			set
			{
				if ((this._IsRequiresPaidOZ != value))
				{
					this.OnIsRequiresPaidOZChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresPaidOZ = value;
					this.SendPropertyChanged("IsRequiresPaidOZ");
					this.OnIsRequiresPaidOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresPaidZ", DbType="Bit NOT NULL")]
		public bool IsRequiresPaidZ
		{
			get
			{
				return this._IsRequiresPaidZ;
			}
			set
			{
				if ((this._IsRequiresPaidZ != value))
				{
					this.OnIsRequiresPaidZChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresPaidZ = value;
					this.SendPropertyChanged("IsRequiresPaidZ");
					this.OnIsRequiresPaidZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresTargetO", DbType="Bit NOT NULL")]
		public bool IsRequiresTargetO
		{
			get
			{
				return this._IsRequiresTargetO;
			}
			set
			{
				if ((this._IsRequiresTargetO != value))
				{
					this.OnIsRequiresTargetOChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresTargetO = value;
					this.SendPropertyChanged("IsRequiresTargetO");
					this.OnIsRequiresTargetOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresTargetOZ", DbType="Bit NOT NULL")]
		public bool IsRequiresTargetOZ
		{
			get
			{
				return this._IsRequiresTargetOZ;
			}
			set
			{
				if ((this._IsRequiresTargetOZ != value))
				{
					this.OnIsRequiresTargetOZChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresTargetOZ = value;
					this.SendPropertyChanged("IsRequiresTargetOZ");
					this.OnIsRequiresTargetOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresTargetZ", DbType="Bit NOT NULL")]
		public bool IsRequiresTargetZ
		{
			get
			{
				return this._IsRequiresTargetZ;
			}
			set
			{
				if ((this._IsRequiresTargetZ != value))
				{
					this.OnIsRequiresTargetZChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresTargetZ = value;
					this.SendPropertyChanged("IsRequiresTargetZ");
					this.OnIsRequiresTargetZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stage", DbType="SmallInt")]
		public System.Nullable<short> Stage
		{
			get
			{
				return this._Stage;
			}
			set
			{
				if ((this._Stage != value))
				{
					this.OnStageChanging(value);
					this.SendPropertyChanging();
					this._Stage = value;
					this.SendPropertyChanged("Stage");
					this.OnStageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRecommended", DbType="Bit NOT NULL")]
		public bool IsRecommended
		{
			get
			{
				return this._IsRecommended;
			}
			set
			{
				if ((this._IsRecommended != value))
				{
					this.OnIsRecommendedChanging(value);
					this.SendPropertyChanging();
					this._IsRecommended = value;
					this.SendPropertyChanged("IsRecommended");
					this.OnIsRecommendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_ApplicationConsidered", Storage="_AdmissionItemType", ThisKey="EducationLevelID", OtherKey="ItemTypeID", IsForeignKey=true)]
		public AdmissionItemType AdmissionItemType
		{
			get
			{
				return this._AdmissionItemType.Entity;
			}
			set
			{
				AdmissionItemType previousValue = this._AdmissionItemType.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionItemType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionItemType.Entity = null;
						previousValue.ApplicationConsidereds.Remove(this);
					}
					this._AdmissionItemType.Entity = value;
					if ((value != null))
					{
						value.ApplicationConsidereds.Add(this);
						this._EducationLevelID = value.ItemTypeID;
					}
					else
					{
						this._EducationLevelID = default(short);
					}
					this.SendPropertyChanged("AdmissionItemType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationConsidered", Storage="_Application", ThisKey="ApplicationID", OtherKey="ApplicationID", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.ApplicationConsidereds.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.ApplicationConsidereds.Add(this);
						this._ApplicationID = value.ApplicationID;
					}
					else
					{
						this._ApplicationID = default(int);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_ApplicationConsidered", Storage="_Direction", ThisKey="DirectionID", OtherKey="DirectionID", IsForeignKey=true)]
		public Direction Direction
		{
			get
			{
				return this._Direction.Entity;
			}
			set
			{
				Direction previousValue = this._Direction.Entity;
				if (((previousValue != value) 
							|| (this._Direction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direction.Entity = null;
						previousValue.ApplicationConsidereds.Remove(this);
					}
					this._Direction.Entity = value;
					if ((value != null))
					{
						value.ApplicationConsidereds.Add(this);
						this._DirectionID = value.DirectionID;
					}
					else
					{
						this._DirectionID = default(int);
					}
					this.SendPropertyChanged("Direction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationEntranceTestDocument")]
	public partial class ApplicationEntranceTestDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ApplicationID;
		
		private System.Nullable<int> _SubjectID;
		
		private System.Nullable<int> _EntrantDocumentID;
		
		private System.Nullable<short> _EntranceTestTypeID;
		
		private System.Nullable<int> _SourceID;
		
		private System.Nullable<decimal> _ResultValue;
		
		private System.Nullable<short> _BenefitID;
		
		private System.Nullable<int> _EntranceTestItemID;
		
		private string _UID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _InstitutionDocumentNumber;
		
		private System.Nullable<System.DateTime> _InstitutionDocumentDate;
		
		private System.Nullable<int> _InstitutionDocumentTypeID;
		
		private System.Nullable<int> _CompetitiveGroupID;
		
		private bool _HasEge;
		
		private System.Nullable<decimal> _EgeResultValue;
		
		private System.Nullable<int> _AppealStatusID;
		
		private System.Nullable<bool> _UsedInOrder;
		
		private EntityRef<AppealStatus> _AppealStatus;
		
		private EntityRef<Application> _Application;
		
		private EntityRef<Benefit> _Benefit;
		
		private EntityRef<CompetitiveGroup> _CompetitiveGroup;
		
		private EntityRef<EntranceTestItemC> _EntranceTestItemC;
		
		private EntityRef<EntranceTestResultSource> _EntranceTestResultSource;
		
		private EntityRef<EntranceTestType> _EntranceTestType;
		
		private EntityRef<EntrantDocument> _EntrantDocument;
		
		private EntityRef<InstitutionDocumentType> _InstitutionDocumentType;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnSubjectIDChanging(System.Nullable<int> value);
    partial void OnSubjectIDChanged();
    partial void OnEntrantDocumentIDChanging(System.Nullable<int> value);
    partial void OnEntrantDocumentIDChanged();
    partial void OnEntranceTestTypeIDChanging(System.Nullable<short> value);
    partial void OnEntranceTestTypeIDChanged();
    partial void OnSourceIDChanging(System.Nullable<int> value);
    partial void OnSourceIDChanged();
    partial void OnResultValueChanging(System.Nullable<decimal> value);
    partial void OnResultValueChanged();
    partial void OnBenefitIDChanging(System.Nullable<short> value);
    partial void OnBenefitIDChanged();
    partial void OnEntranceTestItemIDChanging(System.Nullable<int> value);
    partial void OnEntranceTestItemIDChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnInstitutionDocumentNumberChanging(string value);
    partial void OnInstitutionDocumentNumberChanged();
    partial void OnInstitutionDocumentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnInstitutionDocumentDateChanged();
    partial void OnInstitutionDocumentTypeIDChanging(System.Nullable<int> value);
    partial void OnInstitutionDocumentTypeIDChanged();
    partial void OnCompetitiveGroupIDChanging(System.Nullable<int> value);
    partial void OnCompetitiveGroupIDChanged();
    partial void OnHasEgeChanging(bool value);
    partial void OnHasEgeChanged();
    partial void OnEgeResultValueChanging(System.Nullable<decimal> value);
    partial void OnEgeResultValueChanged();
    partial void OnAppealStatusIDChanging(System.Nullable<int> value);
    partial void OnAppealStatusIDChanged();
    partial void OnUsedInOrderChanging(System.Nullable<bool> value);
    partial void OnUsedInOrderChanged();
    #endregion
		
		public ApplicationEntranceTestDocument()
		{
			this._AppealStatus = default(EntityRef<AppealStatus>);
			this._Application = default(EntityRef<Application>);
			this._Benefit = default(EntityRef<Benefit>);
			this._CompetitiveGroup = default(EntityRef<CompetitiveGroup>);
			this._EntranceTestItemC = default(EntityRef<EntranceTestItemC>);
			this._EntranceTestResultSource = default(EntityRef<EntranceTestResultSource>);
			this._EntranceTestType = default(EntityRef<EntranceTestType>);
			this._EntrantDocument = default(EntityRef<EntrantDocument>);
			this._InstitutionDocumentType = default(EntityRef<InstitutionDocumentType>);
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL")]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int")]
		public System.Nullable<int> SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantDocumentID", DbType="Int")]
		public System.Nullable<int> EntrantDocumentID
		{
			get
			{
				return this._EntrantDocumentID;
			}
			set
			{
				if ((this._EntrantDocumentID != value))
				{
					if (this._EntrantDocument.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntrantDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._EntrantDocumentID = value;
					this.SendPropertyChanged("EntrantDocumentID");
					this.OnEntrantDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceTestTypeID", DbType="SmallInt")]
		public System.Nullable<short> EntranceTestTypeID
		{
			get
			{
				return this._EntranceTestTypeID;
			}
			set
			{
				if ((this._EntranceTestTypeID != value))
				{
					if (this._EntranceTestType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntranceTestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EntranceTestTypeID = value;
					this.SendPropertyChanged("EntranceTestTypeID");
					this.OnEntranceTestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="Int")]
		public System.Nullable<int> SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					if (this._EntranceTestResultSource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultValue", DbType="Decimal(7,4)")]
		public System.Nullable<decimal> ResultValue
		{
			get
			{
				return this._ResultValue;
			}
			set
			{
				if ((this._ResultValue != value))
				{
					this.OnResultValueChanging(value);
					this.SendPropertyChanging();
					this._ResultValue = value;
					this.SendPropertyChanged("ResultValue");
					this.OnResultValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BenefitID", DbType="SmallInt")]
		public System.Nullable<short> BenefitID
		{
			get
			{
				return this._BenefitID;
			}
			set
			{
				if ((this._BenefitID != value))
				{
					if (this._Benefit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBenefitIDChanging(value);
					this.SendPropertyChanging();
					this._BenefitID = value;
					this.SendPropertyChanged("BenefitID");
					this.OnBenefitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceTestItemID", DbType="Int")]
		public System.Nullable<int> EntranceTestItemID
		{
			get
			{
				return this._EntranceTestItemID;
			}
			set
			{
				if ((this._EntranceTestItemID != value))
				{
					if (this._EntranceTestItemC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntranceTestItemIDChanging(value);
					this.SendPropertyChanging();
					this._EntranceTestItemID = value;
					this.SendPropertyChanged("EntranceTestItemID");
					this.OnEntranceTestItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionDocumentNumber", DbType="VarChar(50)")]
		public string InstitutionDocumentNumber
		{
			get
			{
				return this._InstitutionDocumentNumber;
			}
			set
			{
				if ((this._InstitutionDocumentNumber != value))
				{
					this.OnInstitutionDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._InstitutionDocumentNumber = value;
					this.SendPropertyChanged("InstitutionDocumentNumber");
					this.OnInstitutionDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionDocumentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InstitutionDocumentDate
		{
			get
			{
				return this._InstitutionDocumentDate;
			}
			set
			{
				if ((this._InstitutionDocumentDate != value))
				{
					this.OnInstitutionDocumentDateChanging(value);
					this.SendPropertyChanging();
					this._InstitutionDocumentDate = value;
					this.SendPropertyChanged("InstitutionDocumentDate");
					this.OnInstitutionDocumentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionDocumentTypeID", DbType="Int")]
		public System.Nullable<int> InstitutionDocumentTypeID
		{
			get
			{
				return this._InstitutionDocumentTypeID;
			}
			set
			{
				if ((this._InstitutionDocumentTypeID != value))
				{
					if (this._InstitutionDocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionDocumentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionDocumentTypeID = value;
					this.SendPropertyChanged("InstitutionDocumentTypeID");
					this.OnInstitutionDocumentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupID", DbType="Int")]
		public System.Nullable<int> CompetitiveGroupID
		{
			get
			{
				return this._CompetitiveGroupID;
			}
			set
			{
				if ((this._CompetitiveGroupID != value))
				{
					if (this._CompetitiveGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompetitiveGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupID = value;
					this.SendPropertyChanged("CompetitiveGroupID");
					this.OnCompetitiveGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasEge", DbType="Bit NOT NULL")]
		public bool HasEge
		{
			get
			{
				return this._HasEge;
			}
			set
			{
				if ((this._HasEge != value))
				{
					this.OnHasEgeChanging(value);
					this.SendPropertyChanging();
					this._HasEge = value;
					this.SendPropertyChanged("HasEge");
					this.OnHasEgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeResultValue", DbType="Decimal(7,4)")]
		public System.Nullable<decimal> EgeResultValue
		{
			get
			{
				return this._EgeResultValue;
			}
			set
			{
				if ((this._EgeResultValue != value))
				{
					this.OnEgeResultValueChanging(value);
					this.SendPropertyChanging();
					this._EgeResultValue = value;
					this.SendPropertyChanged("EgeResultValue");
					this.OnEgeResultValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppealStatusID", DbType="Int")]
		public System.Nullable<int> AppealStatusID
		{
			get
			{
				return this._AppealStatusID;
			}
			set
			{
				if ((this._AppealStatusID != value))
				{
					if (this._AppealStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAppealStatusIDChanging(value);
					this.SendPropertyChanging();
					this._AppealStatusID = value;
					this.SendPropertyChanged("AppealStatusID");
					this.OnAppealStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsedInOrder", DbType="Bit")]
		public System.Nullable<bool> UsedInOrder
		{
			get
			{
				return this._UsedInOrder;
			}
			set
			{
				if ((this._UsedInOrder != value))
				{
					this.OnUsedInOrderChanging(value);
					this.SendPropertyChanging();
					this._UsedInOrder = value;
					this.SendPropertyChanged("UsedInOrder");
					this.OnUsedInOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AppealStatus_ApplicationEntranceTestDocument", Storage="_AppealStatus", ThisKey="AppealStatusID", OtherKey="AppealStatusID", IsForeignKey=true)]
		public AppealStatus AppealStatus
		{
			get
			{
				return this._AppealStatus.Entity;
			}
			set
			{
				AppealStatus previousValue = this._AppealStatus.Entity;
				if (((previousValue != value) 
							|| (this._AppealStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AppealStatus.Entity = null;
						previousValue.ApplicationEntranceTestDocuments.Remove(this);
					}
					this._AppealStatus.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntranceTestDocuments.Add(this);
						this._AppealStatusID = value.AppealStatusID;
					}
					else
					{
						this._AppealStatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AppealStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationEntranceTestDocument", Storage="_Application", ThisKey="ApplicationID", OtherKey="ApplicationID", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.ApplicationEntranceTestDocuments.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntranceTestDocuments.Add(this);
						this._ApplicationID = value.ApplicationID;
					}
					else
					{
						this._ApplicationID = default(int);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Benefit_ApplicationEntranceTestDocument", Storage="_Benefit", ThisKey="BenefitID", OtherKey="BenefitID", IsForeignKey=true)]
		public Benefit Benefit
		{
			get
			{
				return this._Benefit.Entity;
			}
			set
			{
				Benefit previousValue = this._Benefit.Entity;
				if (((previousValue != value) 
							|| (this._Benefit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Benefit.Entity = null;
						previousValue.ApplicationEntranceTestDocuments.Remove(this);
					}
					this._Benefit.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntranceTestDocuments.Add(this);
						this._BenefitID = value.BenefitID;
					}
					else
					{
						this._BenefitID = default(Nullable<short>);
					}
					this.SendPropertyChanged("Benefit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroup_ApplicationEntranceTestDocument", Storage="_CompetitiveGroup", ThisKey="CompetitiveGroupID", OtherKey="CompetitiveGroupID", IsForeignKey=true, DeleteRule="CASCADE")]
		public CompetitiveGroup CompetitiveGroup
		{
			get
			{
				return this._CompetitiveGroup.Entity;
			}
			set
			{
				CompetitiveGroup previousValue = this._CompetitiveGroup.Entity;
				if (((previousValue != value) 
							|| (this._CompetitiveGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompetitiveGroup.Entity = null;
						previousValue.ApplicationEntranceTestDocuments.Remove(this);
					}
					this._CompetitiveGroup.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntranceTestDocuments.Add(this);
						this._CompetitiveGroupID = value.CompetitiveGroupID;
					}
					else
					{
						this._CompetitiveGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CompetitiveGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntranceTestItemC_ApplicationEntranceTestDocument", Storage="_EntranceTestItemC", ThisKey="EntranceTestItemID", OtherKey="EntranceTestItemID", IsForeignKey=true)]
		public EntranceTestItemC EntranceTestItemC
		{
			get
			{
				return this._EntranceTestItemC.Entity;
			}
			set
			{
				EntranceTestItemC previousValue = this._EntranceTestItemC.Entity;
				if (((previousValue != value) 
							|| (this._EntranceTestItemC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntranceTestItemC.Entity = null;
						previousValue.ApplicationEntranceTestDocuments.Remove(this);
					}
					this._EntranceTestItemC.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntranceTestDocuments.Add(this);
						this._EntranceTestItemID = value.EntranceTestItemID;
					}
					else
					{
						this._EntranceTestItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntranceTestItemC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntranceTestResultSource_ApplicationEntranceTestDocument", Storage="_EntranceTestResultSource", ThisKey="SourceID", OtherKey="SourceID", IsForeignKey=true)]
		public EntranceTestResultSource EntranceTestResultSource
		{
			get
			{
				return this._EntranceTestResultSource.Entity;
			}
			set
			{
				EntranceTestResultSource previousValue = this._EntranceTestResultSource.Entity;
				if (((previousValue != value) 
							|| (this._EntranceTestResultSource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntranceTestResultSource.Entity = null;
						previousValue.ApplicationEntranceTestDocuments.Remove(this);
					}
					this._EntranceTestResultSource.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntranceTestDocuments.Add(this);
						this._SourceID = value.SourceID;
					}
					else
					{
						this._SourceID = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntranceTestResultSource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntranceTestType_ApplicationEntranceTestDocument", Storage="_EntranceTestType", ThisKey="EntranceTestTypeID", OtherKey="EntranceTestTypeID", IsForeignKey=true)]
		public EntranceTestType EntranceTestType
		{
			get
			{
				return this._EntranceTestType.Entity;
			}
			set
			{
				EntranceTestType previousValue = this._EntranceTestType.Entity;
				if (((previousValue != value) 
							|| (this._EntranceTestType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntranceTestType.Entity = null;
						previousValue.ApplicationEntranceTestDocuments.Remove(this);
					}
					this._EntranceTestType.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntranceTestDocuments.Add(this);
						this._EntranceTestTypeID = value.EntranceTestTypeID;
					}
					else
					{
						this._EntranceTestTypeID = default(Nullable<short>);
					}
					this.SendPropertyChanged("EntranceTestType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntrantDocument_ApplicationEntranceTestDocument", Storage="_EntrantDocument", ThisKey="EntrantDocumentID", OtherKey="EntrantDocumentID", IsForeignKey=true)]
		public EntrantDocument EntrantDocument
		{
			get
			{
				return this._EntrantDocument.Entity;
			}
			set
			{
				EntrantDocument previousValue = this._EntrantDocument.Entity;
				if (((previousValue != value) 
							|| (this._EntrantDocument.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntrantDocument.Entity = null;
						previousValue.ApplicationEntranceTestDocuments.Remove(this);
					}
					this._EntrantDocument.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntranceTestDocuments.Add(this);
						this._EntrantDocumentID = value.EntrantDocumentID;
					}
					else
					{
						this._EntrantDocumentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntrantDocument");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstitutionDocumentType_ApplicationEntranceTestDocument", Storage="_InstitutionDocumentType", ThisKey="InstitutionDocumentTypeID", OtherKey="InstitutionDocumentTypeID", IsForeignKey=true)]
		public InstitutionDocumentType InstitutionDocumentType
		{
			get
			{
				return this._InstitutionDocumentType.Entity;
			}
			set
			{
				InstitutionDocumentType previousValue = this._InstitutionDocumentType.Entity;
				if (((previousValue != value) 
							|| (this._InstitutionDocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstitutionDocumentType.Entity = null;
						previousValue.ApplicationEntranceTestDocuments.Remove(this);
					}
					this._InstitutionDocumentType.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntranceTestDocuments.Add(this);
						this._InstitutionDocumentTypeID = value.InstitutionDocumentTypeID;
					}
					else
					{
						this._InstitutionDocumentTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("InstitutionDocumentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_ApplicationEntranceTestDocument", Storage="_Subject", ThisKey="SubjectID", OtherKey="SubjectID", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.ApplicationEntranceTestDocuments.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntranceTestDocuments.Add(this);
						this._SubjectID = value.SubjectID;
					}
					else
					{
						this._SubjectID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationEntrantDocument")]
	public partial class ApplicationEntrantDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ApplicationID;
		
		private int _EntrantDocumentID;
		
		private System.Nullable<int> _AttachedDocumentType;
		
		private string _UID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<System.DateTime> _OriginalReceivedDate;
		
		private EntityRef<Application> _Application;
		
		private EntityRef<EntrantDocument> _EntrantDocument;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnEntrantDocumentIDChanging(int value);
    partial void OnEntrantDocumentIDChanged();
    partial void OnAttachedDocumentTypeChanging(System.Nullable<int> value);
    partial void OnAttachedDocumentTypeChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnOriginalReceivedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOriginalReceivedDateChanged();
    #endregion
		
		public ApplicationEntrantDocument()
		{
			this._Application = default(EntityRef<Application>);
			this._EntrantDocument = default(EntityRef<EntrantDocument>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL")]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantDocumentID", DbType="Int NOT NULL")]
		public int EntrantDocumentID
		{
			get
			{
				return this._EntrantDocumentID;
			}
			set
			{
				if ((this._EntrantDocumentID != value))
				{
					if (this._EntrantDocument.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntrantDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._EntrantDocumentID = value;
					this.SendPropertyChanged("EntrantDocumentID");
					this.OnEntrantDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachedDocumentType", DbType="Int")]
		public System.Nullable<int> AttachedDocumentType
		{
			get
			{
				return this._AttachedDocumentType;
			}
			set
			{
				if ((this._AttachedDocumentType != value))
				{
					this.OnAttachedDocumentTypeChanging(value);
					this.SendPropertyChanging();
					this._AttachedDocumentType = value;
					this.SendPropertyChanged("AttachedDocumentType");
					this.OnAttachedDocumentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalReceivedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OriginalReceivedDate
		{
			get
			{
				return this._OriginalReceivedDate;
			}
			set
			{
				if ((this._OriginalReceivedDate != value))
				{
					this.OnOriginalReceivedDateChanging(value);
					this.SendPropertyChanging();
					this._OriginalReceivedDate = value;
					this.SendPropertyChanged("OriginalReceivedDate");
					this.OnOriginalReceivedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationEntrantDocument", Storage="_Application", ThisKey="ApplicationID", OtherKey="ApplicationID", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.ApplicationEntrantDocuments.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntrantDocuments.Add(this);
						this._ApplicationID = value.ApplicationID;
					}
					else
					{
						this._ApplicationID = default(int);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntrantDocument_ApplicationEntrantDocument", Storage="_EntrantDocument", ThisKey="EntrantDocumentID", OtherKey="EntrantDocumentID", IsForeignKey=true)]
		public EntrantDocument EntrantDocument
		{
			get
			{
				return this._EntrantDocument.Entity;
			}
			set
			{
				EntrantDocument previousValue = this._EntrantDocument.Entity;
				if (((previousValue != value) 
							|| (this._EntrantDocument.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntrantDocument.Entity = null;
						previousValue.ApplicationEntrantDocuments.Remove(this);
					}
					this._EntrantDocument.Entity = value;
					if ((value != null))
					{
						value.ApplicationEntrantDocuments.Add(this);
						this._EntrantDocumentID = value.EntrantDocumentID;
					}
					else
					{
						this._EntrantDocumentID = default(int);
					}
					this.SendPropertyChanged("EntrantDocument");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationExportRequest")]
	public partial class ApplicationExportRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _RequestId;
		
		private System.DateTime _RequestDate;
		
		private int _RequestStatus;
		
		private long _InstitutionId;
		
		private int _YearStart;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIdChanging(System.Guid value);
    partial void OnRequestIdChanged();
    partial void OnRequestDateChanging(System.DateTime value);
    partial void OnRequestDateChanged();
    partial void OnRequestStatusChanging(int value);
    partial void OnRequestStatusChanged();
    partial void OnInstitutionIdChanging(long value);
    partial void OnInstitutionIdChanged();
    partial void OnYearStartChanging(int value);
    partial void OnYearStartChanged();
    #endregion
		
		public ApplicationExportRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestStatus", DbType="Int NOT NULL")]
		public int RequestStatus
		{
			get
			{
				return this._RequestStatus;
			}
			set
			{
				if ((this._RequestStatus != value))
				{
					this.OnRequestStatusChanging(value);
					this.SendPropertyChanging();
					this._RequestStatus = value;
					this.SendPropertyChanged("RequestStatus");
					this.OnRequestStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionId", DbType="BigInt NOT NULL")]
		public long InstitutionId
		{
			get
			{
				return this._InstitutionId;
			}
			set
			{
				if ((this._InstitutionId != value))
				{
					this.OnInstitutionIdChanging(value);
					this.SendPropertyChanging();
					this._InstitutionId = value;
					this.SendPropertyChanged("InstitutionId");
					this.OnInstitutionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearStart", DbType="Int NOT NULL")]
		public int YearStart
		{
			get
			{
				return this._YearStart;
			}
			set
			{
				if ((this._YearStart != value))
				{
					this.OnYearStartChanging(value);
					this.SendPropertyChanging();
					this._YearStart = value;
					this.SendPropertyChanged("YearStart");
					this.OnYearStartChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationExtra")]
	public partial class ApplicationExtra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationExtraID;
		
		private string _Value;
		
		private int _ApplicationID;
		
		private int _ApplicationExtraDefinitionID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<Application> _Application;
		
		private EntityRef<ApplicationExtraDefinition> _ApplicationExtraDefinition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationExtraIDChanging(int value);
    partial void OnApplicationExtraIDChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnApplicationExtraDefinitionIDChanging(int value);
    partial void OnApplicationExtraDefinitionIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ApplicationExtra()
		{
			this._Application = default(EntityRef<Application>);
			this._ApplicationExtraDefinition = default(EntityRef<ApplicationExtraDefinition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationExtraID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ApplicationExtraID
		{
			get
			{
				return this._ApplicationExtraID;
			}
			set
			{
				if ((this._ApplicationExtraID != value))
				{
					this.OnApplicationExtraIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationExtraID = value;
					this.SendPropertyChanged("ApplicationExtraID");
					this.OnApplicationExtraIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL")]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationExtraDefinitionID", DbType="Int NOT NULL")]
		public int ApplicationExtraDefinitionID
		{
			get
			{
				return this._ApplicationExtraDefinitionID;
			}
			set
			{
				if ((this._ApplicationExtraDefinitionID != value))
				{
					if (this._ApplicationExtraDefinition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationExtraDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationExtraDefinitionID = value;
					this.SendPropertyChanged("ApplicationExtraDefinitionID");
					this.OnApplicationExtraDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationExtra", Storage="_Application", ThisKey="ApplicationID", OtherKey="ApplicationID", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.ApplicationExtras.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.ApplicationExtras.Add(this);
						this._ApplicationID = value.ApplicationID;
					}
					else
					{
						this._ApplicationID = default(int);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ApplicationExtraDefinition_ApplicationExtra", Storage="_ApplicationExtraDefinition", ThisKey="ApplicationExtraDefinitionID", OtherKey="ApplicationExtraDefinitionID", IsForeignKey=true)]
		public ApplicationExtraDefinition ApplicationExtraDefinition
		{
			get
			{
				return this._ApplicationExtraDefinition.Entity;
			}
			set
			{
				ApplicationExtraDefinition previousValue = this._ApplicationExtraDefinition.Entity;
				if (((previousValue != value) 
							|| (this._ApplicationExtraDefinition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ApplicationExtraDefinition.Entity = null;
						previousValue.ApplicationExtras.Remove(this);
					}
					this._ApplicationExtraDefinition.Entity = value;
					if ((value != null))
					{
						value.ApplicationExtras.Add(this);
						this._ApplicationExtraDefinitionID = value.ApplicationExtraDefinitionID;
					}
					else
					{
						this._ApplicationExtraDefinitionID = default(int);
					}
					this.SendPropertyChanged("ApplicationExtraDefinition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationExtraDefinition")]
	public partial class ApplicationExtraDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationExtraDefinitionID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<ApplicationExtra> _ApplicationExtras;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationExtraDefinitionIDChanging(int value);
    partial void OnApplicationExtraDefinitionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ApplicationExtraDefinition()
		{
			this._ApplicationExtras = new EntitySet<ApplicationExtra>(new Action<ApplicationExtra>(this.attach_ApplicationExtras), new Action<ApplicationExtra>(this.detach_ApplicationExtras));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationExtraDefinitionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ApplicationExtraDefinitionID
		{
			get
			{
				return this._ApplicationExtraDefinitionID;
			}
			set
			{
				if ((this._ApplicationExtraDefinitionID != value))
				{
					this.OnApplicationExtraDefinitionIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationExtraDefinitionID = value;
					this.SendPropertyChanged("ApplicationExtraDefinitionID");
					this.OnApplicationExtraDefinitionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ApplicationExtraDefinition_ApplicationExtra", Storage="_ApplicationExtras", ThisKey="ApplicationExtraDefinitionID", OtherKey="ApplicationExtraDefinitionID")]
		public EntitySet<ApplicationExtra> ApplicationExtras
		{
			get
			{
				return this._ApplicationExtras;
			}
			set
			{
				this._ApplicationExtras.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApplicationExtras(ApplicationExtra entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationExtraDefinition = this;
		}
		
		private void detach_ApplicationExtras(ApplicationExtra entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationExtraDefinition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationSelectedCompetitiveGroup")]
	public partial class ApplicationSelectedCompetitiveGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemID;
		
		private int _ApplicationID;
		
		private int _CompetitiveGroupID;
		
		private System.Nullable<short> _CalculatedBenefitID;
		
		private System.Nullable<decimal> _CalculatedRating;
		
		private EntityRef<Application> _Application;
		
		private EntityRef<Benefit> _Benefit;
		
		private EntityRef<CompetitiveGroup> _CompetitiveGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnCompetitiveGroupIDChanging(int value);
    partial void OnCompetitiveGroupIDChanged();
    partial void OnCalculatedBenefitIDChanging(System.Nullable<short> value);
    partial void OnCalculatedBenefitIDChanged();
    partial void OnCalculatedRatingChanging(System.Nullable<decimal> value);
    partial void OnCalculatedRatingChanged();
    #endregion
		
		public ApplicationSelectedCompetitiveGroup()
		{
			this._Application = default(EntityRef<Application>);
			this._Benefit = default(EntityRef<Benefit>);
			this._CompetitiveGroup = default(EntityRef<CompetitiveGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL")]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupID", DbType="Int NOT NULL")]
		public int CompetitiveGroupID
		{
			get
			{
				return this._CompetitiveGroupID;
			}
			set
			{
				if ((this._CompetitiveGroupID != value))
				{
					if (this._CompetitiveGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompetitiveGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupID = value;
					this.SendPropertyChanged("CompetitiveGroupID");
					this.OnCompetitiveGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedBenefitID", DbType="SmallInt")]
		public System.Nullable<short> CalculatedBenefitID
		{
			get
			{
				return this._CalculatedBenefitID;
			}
			set
			{
				if ((this._CalculatedBenefitID != value))
				{
					if (this._Benefit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCalculatedBenefitIDChanging(value);
					this.SendPropertyChanging();
					this._CalculatedBenefitID = value;
					this.SendPropertyChanged("CalculatedBenefitID");
					this.OnCalculatedBenefitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedRating", DbType="Decimal(10,4)")]
		public System.Nullable<decimal> CalculatedRating
		{
			get
			{
				return this._CalculatedRating;
			}
			set
			{
				if ((this._CalculatedRating != value))
				{
					this.OnCalculatedRatingChanging(value);
					this.SendPropertyChanging();
					this._CalculatedRating = value;
					this.SendPropertyChanged("CalculatedRating");
					this.OnCalculatedRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationSelectedCompetitiveGroup", Storage="_Application", ThisKey="ApplicationID", OtherKey="ApplicationID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.ApplicationSelectedCompetitiveGroups.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.ApplicationSelectedCompetitiveGroups.Add(this);
						this._ApplicationID = value.ApplicationID;
					}
					else
					{
						this._ApplicationID = default(int);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Benefit_ApplicationSelectedCompetitiveGroup", Storage="_Benefit", ThisKey="CalculatedBenefitID", OtherKey="BenefitID", IsForeignKey=true)]
		public Benefit Benefit
		{
			get
			{
				return this._Benefit.Entity;
			}
			set
			{
				Benefit previousValue = this._Benefit.Entity;
				if (((previousValue != value) 
							|| (this._Benefit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Benefit.Entity = null;
						previousValue.ApplicationSelectedCompetitiveGroups.Remove(this);
					}
					this._Benefit.Entity = value;
					if ((value != null))
					{
						value.ApplicationSelectedCompetitiveGroups.Add(this);
						this._CalculatedBenefitID = value.BenefitID;
					}
					else
					{
						this._CalculatedBenefitID = default(Nullable<short>);
					}
					this.SendPropertyChanged("Benefit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroup_ApplicationSelectedCompetitiveGroup", Storage="_CompetitiveGroup", ThisKey="CompetitiveGroupID", OtherKey="CompetitiveGroupID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CompetitiveGroup CompetitiveGroup
		{
			get
			{
				return this._CompetitiveGroup.Entity;
			}
			set
			{
				CompetitiveGroup previousValue = this._CompetitiveGroup.Entity;
				if (((previousValue != value) 
							|| (this._CompetitiveGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompetitiveGroup.Entity = null;
						previousValue.ApplicationSelectedCompetitiveGroups.Remove(this);
					}
					this._CompetitiveGroup.Entity = value;
					if ((value != null))
					{
						value.ApplicationSelectedCompetitiveGroups.Add(this);
						this._CompetitiveGroupID = value.CompetitiveGroupID;
					}
					else
					{
						this._CompetitiveGroupID = default(int);
					}
					this.SendPropertyChanged("CompetitiveGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationSelectedCompetitiveGroupItem")]
	public partial class ApplicationSelectedCompetitiveGroupItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemID;
		
		private int _ApplicationID;
		
		private int _CompetitiveGroupItemID;
		
		private EntityRef<Application> _Application;
		
		private EntityRef<CompetitiveGroupItem> _CompetitiveGroupItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(int value);
    partial void OnItemIDChanged();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnCompetitiveGroupItemIDChanging(int value);
    partial void OnCompetitiveGroupItemIDChanged();
    #endregion
		
		public ApplicationSelectedCompetitiveGroupItem()
		{
			this._Application = default(EntityRef<Application>);
			this._CompetitiveGroupItem = default(EntityRef<CompetitiveGroupItem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL")]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupItemID", DbType="Int NOT NULL")]
		public int CompetitiveGroupItemID
		{
			get
			{
				return this._CompetitiveGroupItemID;
			}
			set
			{
				if ((this._CompetitiveGroupItemID != value))
				{
					if (this._CompetitiveGroupItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompetitiveGroupItemIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupItemID = value;
					this.SendPropertyChanged("CompetitiveGroupItemID");
					this.OnCompetitiveGroupItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationSelectedCompetitiveGroupItem", Storage="_Application", ThisKey="ApplicationID", OtherKey="ApplicationID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.ApplicationSelectedCompetitiveGroupItems.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.ApplicationSelectedCompetitiveGroupItems.Add(this);
						this._ApplicationID = value.ApplicationID;
					}
					else
					{
						this._ApplicationID = default(int);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroupItem_ApplicationSelectedCompetitiveGroupItem", Storage="_CompetitiveGroupItem", ThisKey="CompetitiveGroupItemID", OtherKey="CompetitiveGroupItemID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CompetitiveGroupItem CompetitiveGroupItem
		{
			get
			{
				return this._CompetitiveGroupItem.Entity;
			}
			set
			{
				CompetitiveGroupItem previousValue = this._CompetitiveGroupItem.Entity;
				if (((previousValue != value) 
							|| (this._CompetitiveGroupItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompetitiveGroupItem.Entity = null;
						previousValue.ApplicationSelectedCompetitiveGroupItems.Remove(this);
					}
					this._CompetitiveGroupItem.Entity = value;
					if ((value != null))
					{
						value.ApplicationSelectedCompetitiveGroupItems.Add(this);
						this._CompetitiveGroupItemID = value.CompetitiveGroupItemID;
					}
					else
					{
						this._CompetitiveGroupItemID = default(int);
					}
					this.SendPropertyChanged("CompetitiveGroupItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationSelectedCompetitiveGroupTarget")]
	public partial class ApplicationSelectedCompetitiveGroupTarget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ApplicationID;
		
		private int _CompetitiveGroupTargetID;
		
		private bool _IsForO;
		
		private bool _IsForOZ;
		
		private bool _IsForZ;
		
		private EntityRef<Application> _Application;
		
		private EntityRef<CompetitiveGroupTarget> _CompetitiveGroupTarget;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnCompetitiveGroupTargetIDChanging(int value);
    partial void OnCompetitiveGroupTargetIDChanged();
    partial void OnIsForOChanging(bool value);
    partial void OnIsForOChanged();
    partial void OnIsForOZChanging(bool value);
    partial void OnIsForOZChanged();
    partial void OnIsForZChanging(bool value);
    partial void OnIsForZChanged();
    #endregion
		
		public ApplicationSelectedCompetitiveGroupTarget()
		{
			this._Application = default(EntityRef<Application>);
			this._CompetitiveGroupTarget = default(EntityRef<CompetitiveGroupTarget>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL")]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupTargetID", DbType="Int NOT NULL")]
		public int CompetitiveGroupTargetID
		{
			get
			{
				return this._CompetitiveGroupTargetID;
			}
			set
			{
				if ((this._CompetitiveGroupTargetID != value))
				{
					if (this._CompetitiveGroupTarget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompetitiveGroupTargetIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupTargetID = value;
					this.SendPropertyChanged("CompetitiveGroupTargetID");
					this.OnCompetitiveGroupTargetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForO", DbType="Bit NOT NULL")]
		public bool IsForO
		{
			get
			{
				return this._IsForO;
			}
			set
			{
				if ((this._IsForO != value))
				{
					this.OnIsForOChanging(value);
					this.SendPropertyChanging();
					this._IsForO = value;
					this.SendPropertyChanged("IsForO");
					this.OnIsForOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForOZ", DbType="Bit NOT NULL")]
		public bool IsForOZ
		{
			get
			{
				return this._IsForOZ;
			}
			set
			{
				if ((this._IsForOZ != value))
				{
					this.OnIsForOZChanging(value);
					this.SendPropertyChanging();
					this._IsForOZ = value;
					this.SendPropertyChanged("IsForOZ");
					this.OnIsForOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForZ", DbType="Bit NOT NULL")]
		public bool IsForZ
		{
			get
			{
				return this._IsForZ;
			}
			set
			{
				if ((this._IsForZ != value))
				{
					this.OnIsForZChanging(value);
					this.SendPropertyChanging();
					this._IsForZ = value;
					this.SendPropertyChanged("IsForZ");
					this.OnIsForZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_ApplicationSelectedCompetitiveGroupTarget", Storage="_Application", ThisKey="ApplicationID", OtherKey="ApplicationID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.ApplicationSelectedCompetitiveGroupTargets.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.ApplicationSelectedCompetitiveGroupTargets.Add(this);
						this._ApplicationID = value.ApplicationID;
					}
					else
					{
						this._ApplicationID = default(int);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroupTarget_ApplicationSelectedCompetitiveGroupTarget", Storage="_CompetitiveGroupTarget", ThisKey="CompetitiveGroupTargetID", OtherKey="CompetitiveGroupTargetID", IsForeignKey=true)]
		public CompetitiveGroupTarget CompetitiveGroupTarget
		{
			get
			{
				return this._CompetitiveGroupTarget.Entity;
			}
			set
			{
				CompetitiveGroupTarget previousValue = this._CompetitiveGroupTarget.Entity;
				if (((previousValue != value) 
							|| (this._CompetitiveGroupTarget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompetitiveGroupTarget.Entity = null;
						previousValue.ApplicationSelectedCompetitiveGroupTargets.Remove(this);
					}
					this._CompetitiveGroupTarget.Entity = value;
					if ((value != null))
					{
						value.ApplicationSelectedCompetitiveGroupTargets.Add(this);
						this._CompetitiveGroupTargetID = value.CompetitiveGroupTargetID;
					}
					else
					{
						this._CompetitiveGroupTargetID = default(int);
					}
					this.SendPropertyChanged("CompetitiveGroupTarget");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApplicationStatusType")]
	public partial class ApplicationStatusType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusID;
		
		private string _Name;
		
		private bool _UseForAppLimitValidation;
		
		private bool _IsActiveApp;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<Application> _Applications;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUseForAppLimitValidationChanging(bool value);
    partial void OnUseForAppLimitValidationChanged();
    partial void OnIsActiveAppChanging(bool value);
    partial void OnIsActiveAppChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ApplicationStatusType()
		{
			this._Applications = new EntitySet<Application>(new Action<Application>(this.attach_Applications), new Action<Application>(this.detach_Applications));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseForAppLimitValidation", DbType="Bit NOT NULL")]
		public bool UseForAppLimitValidation
		{
			get
			{
				return this._UseForAppLimitValidation;
			}
			set
			{
				if ((this._UseForAppLimitValidation != value))
				{
					this.OnUseForAppLimitValidationChanging(value);
					this.SendPropertyChanging();
					this._UseForAppLimitValidation = value;
					this.SendPropertyChanged("UseForAppLimitValidation");
					this.OnUseForAppLimitValidationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActiveApp", DbType="Bit NOT NULL")]
		public bool IsActiveApp
		{
			get
			{
				return this._IsActiveApp;
			}
			set
			{
				if ((this._IsActiveApp != value))
				{
					this.OnIsActiveAppChanging(value);
					this.SendPropertyChanging();
					this._IsActiveApp = value;
					this.SendPropertyChanged("IsActiveApp");
					this.OnIsActiveAppChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ApplicationStatusType_Application", Storage="_Applications", ThisKey="StatusID", OtherKey="StatusID")]
		public EntitySet<Application> Applications
		{
			get
			{
				return this._Applications;
			}
			set
			{
				this._Applications.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationStatusType = this;
		}
		
		private void detach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.ApplicationStatusType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
	public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ApplicationName;
		
		private string _LoweredApplicationName;
		
		private System.Guid _ApplicationId;
		
		private string _Description;
		
		private EntitySet<aspnet_Membership> _aspnet_Memberships;
		
		private EntitySet<aspnet_Path> _aspnet_Paths;
		
		private EntitySet<aspnet_Role> _aspnet_Roles;
		
		private EntitySet<aspnet_User> _aspnet_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Application()
		{
			this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
			this._aspnet_Paths = new EntitySet<aspnet_Path>(new Action<aspnet_Path>(this.attach_aspnet_Paths), new Action<aspnet_Path>(this.detach_aspnet_Paths));
			this._aspnet_Roles = new EntitySet<aspnet_Role>(new Action<aspnet_Role>(this.attach_aspnet_Roles), new Action<aspnet_Role>(this.detach_aspnet_Roles));
			this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredApplicationName
		{
			get
			{
				return this._LoweredApplicationName;
			}
			set
			{
				if ((this._LoweredApplicationName != value))
				{
					this.OnLoweredApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredApplicationName = value;
					this.SendPropertyChanged("LoweredApplicationName");
					this.OnLoweredApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this._aspnet_Memberships;
			}
			set
			{
				this._aspnet_Memberships.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Paths", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Path> aspnet_Paths
		{
			get
			{
				return this._aspnet_Paths;
			}
			set
			{
				this._aspnet_Paths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this._aspnet_Roles;
			}
			set
			{
				this._aspnet_Roles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
		public EntitySet<aspnet_User> aspnet_Users
		{
			get
			{
				return this._aspnet_Users;
			}
			set
			{
				this._aspnet_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Memberships(aspnet_Membership entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Paths(aspnet_Path entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Roles(aspnet_Role entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
		
		private void attach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = this;
		}
		
		private void detach_aspnet_Users(aspnet_User entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Application = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Memberships.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Memberships.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Paths")]
	public partial class aspnet_Path : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _PathId;
		
		private string _Path;
		
		private string _LoweredPath;
		
		private EntityRef<aspnet_PersonalizationAllUser> _aspnet_PersonalizationAllUser;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnLoweredPathChanging(string value);
    partial void OnLoweredPathChanged();
    #endregion
		
		public aspnet_Path()
		{
			this._aspnet_PersonalizationAllUser = default(EntityRef<aspnet_PersonalizationAllUser>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredPath
		{
			get
			{
				return this._LoweredPath;
			}
			set
			{
				if ((this._LoweredPath != value))
				{
					this.OnLoweredPathChanging(value);
					this.SendPropertyChanging();
					this._LoweredPath = value;
					this.SendPropertyChanged("LoweredPath");
					this.OnLoweredPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_PersonalizationAllUser", ThisKey="PathId", OtherKey="PathId", IsUnique=true, IsForeignKey=false)]
		public aspnet_PersonalizationAllUser aspnet_PersonalizationAllUser
		{
			get
			{
				return this._aspnet_PersonalizationAllUser.Entity;
			}
			set
			{
				aspnet_PersonalizationAllUser previousValue = this._aspnet_PersonalizationAllUser.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_PersonalizationAllUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_PersonalizationAllUser.Entity = null;
						previousValue.aspnet_Path = null;
					}
					this._aspnet_PersonalizationAllUser.Entity = value;
					if ((value != null))
					{
						value.aspnet_Path = this;
					}
					this.SendPropertyChanged("aspnet_PersonalizationAllUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="PathId", OtherKey="PathId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Paths.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Paths.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Path = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationAllUsers")]
	public partial class aspnet_PersonalizationAllUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PathId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationAllUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationAllUser = null;
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationAllUser = this;
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationPerUser")]
	public partial class aspnet_PersonalizationPerUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _PathId;
		
		private System.Nullable<System.Guid> _UserId;
		
		private System.Data.Linq.Binary _PageSettings;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_Path> _aspnet_Path;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPathIdChanging(System.Nullable<System.Guid> value);
    partial void OnPathIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_PersonalizationPerUser()
		{
			this._aspnet_Path = default(EntityRef<aspnet_Path>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PathId
		{
			get
			{
				return this._PathId;
			}
			set
			{
				if ((this._PathId != value))
				{
					if (this._aspnet_Path.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPathIdChanging(value);
					this.SendPropertyChanging();
					this._PathId = value;
					this.SendPropertyChanged("PathId");
					this.OnPathIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PageSettings
		{
			get
			{
				return this._PageSettings;
			}
			set
			{
				if ((this._PageSettings != value))
				{
					this.OnPageSettingsChanging(value);
					this.SendPropertyChanging();
					this._PageSettings = value;
					this.SendPropertyChanged("PageSettings");
					this.OnPageSettingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
		public aspnet_Path aspnet_Path
		{
			get
			{
				return this._aspnet_Path.Entity;
			}
			set
			{
				aspnet_Path previousValue = this._aspnet_Path.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Path.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_Path.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._PathId = value.PathId;
					}
					else
					{
						this._PathId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_Path");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_PersonalizationPerUsers.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_PersonalizationPerUsers.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
	public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private string _PropertyNames;
		
		private string _PropertyValuesString;
		
		private System.Data.Linq.Binary _PropertyValuesBinary;
		
		private System.DateTime _LastUpdatedDate;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public aspnet_Profile()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyNames
		{
			get
			{
				return this._PropertyNames;
			}
			set
			{
				if ((this._PropertyNames != value))
				{
					this.OnPropertyNamesChanging(value);
					this.SendPropertyChanging();
					this._PropertyNames = value;
					this.SendPropertyChanged("PropertyNames");
					this.OnPropertyNamesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string PropertyValuesString
		{
			get
			{
				return this._PropertyValuesString;
			}
			set
			{
				if ((this._PropertyValuesString != value))
				{
					this.OnPropertyValuesStringChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesString = value;
					this.SendPropertyChanged("PropertyValuesString");
					this.OnPropertyValuesStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary PropertyValuesBinary
		{
			get
			{
				return this._PropertyValuesBinary;
			}
			set
			{
				if ((this._PropertyValuesBinary != value))
				{
					this.OnPropertyValuesBinaryChanging(value);
					this.SendPropertyChanging();
					this._PropertyValuesBinary = value;
					this.SendPropertyChanged("PropertyValuesBinary");
					this.OnPropertyValuesBinaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Profile = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Profile = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Roles.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Roles.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_SchemaVersions")]
	public partial class aspnet_SchemaVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Feature;
		
		private string _CompatibleSchemaVersion;
		
		private bool _IsCurrentVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
		
		public aspnet_SchemaVersion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Feature
		{
			get
			{
				return this._Feature;
			}
			set
			{
				if ((this._Feature != value))
				{
					this.OnFeatureChanging(value);
					this.SendPropertyChanging();
					this._Feature = value;
					this.SendPropertyChanged("Feature");
					this.OnFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompatibleSchemaVersion
		{
			get
			{
				return this._CompatibleSchemaVersion;
			}
			set
			{
				if ((this._CompatibleSchemaVersion != value))
				{
					this.OnCompatibleSchemaVersionChanging(value);
					this.SendPropertyChanging();
					this._CompatibleSchemaVersion = value;
					this.SendPropertyChanged("CompatibleSchemaVersion");
					this.OnCompatibleSchemaVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
		public bool IsCurrentVersion
		{
			get
			{
				return this._IsCurrentVersion;
			}
			set
			{
				if ((this._IsCurrentVersion != value))
				{
					this.OnIsCurrentVersionChanging(value);
					this.SendPropertyChanging();
					this._IsCurrentVersion = value;
					this.SendPropertyChanged("IsCurrentVersion");
					this.OnIsCurrentVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
		private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
		
		private EntityRef<aspnet_Profile> _aspnet_Profile;
		
		private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
		
		private EntityRef<UserPolicy> _UserPolicy;
		
		private EntityRef<aspnet_Application> _aspnet_Application;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
			this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
			this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
			this._UserPolicy = default(EntityRef<UserPolicy>);
			this._aspnet_Application = default(EntityRef<aspnet_Application>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					if (this._aspnet_Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
		{
			get
			{
				return this._aspnet_PersonalizationPerUsers;
			}
			set
			{
				this._aspnet_PersonalizationPerUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Profile aspnet_Profile
		{
			get
			{
				return this._aspnet_Profile.Entity;
			}
			set
			{
				aspnet_Profile previousValue = this._aspnet_Profile.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Profile.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Profile.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
		public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
		{
			get
			{
				return this._aspnet_UsersInRoles;
			}
			set
			{
				this._aspnet_UsersInRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_UserPolicy", Storage="_UserPolicy", ThisKey="UserId", OtherKey="UserID", IsUnique=true, IsForeignKey=false)]
		public UserPolicy UserPolicy
		{
			get
			{
				return this._UserPolicy.Entity;
			}
			set
			{
				UserPolicy previousValue = this._UserPolicy.Entity;
				if (((previousValue != value) 
							|| (this._UserPolicy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserPolicy.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._UserPolicy.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("UserPolicy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
		public aspnet_Application aspnet_Application
		{
			get
			{
				return this._aspnet_Application.Entity;
			}
			set
			{
				aspnet_Application previousValue = this._aspnet_Application.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Application.Entity = null;
						previousValue.aspnet_Users.Remove(this);
					}
					this._aspnet_Application.Entity = value;
					if ((value != null))
					{
						value.aspnet_Users.Add(this);
						this._ApplicationId = value.ApplicationId;
					}
					else
					{
						this._ApplicationId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Application");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
		
		private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = this;
		}
		
		private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
	public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserId;
		
		private System.Guid _RoleId;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
		
		public aspnet_UsersInRole()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_UsersInRoles.Remove(this);
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_UsersInRoles.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_WebEvent_Events")]
	public partial class aspnet_WebEvent_Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EventId;
		
		private System.DateTime _EventTimeUtc;
		
		private System.DateTime _EventTime;
		
		private string _EventType;
		
		private decimal _EventSequence;
		
		private decimal _EventOccurrence;
		
		private int _EventCode;
		
		private int _EventDetailCode;
		
		private string _Message;
		
		private string _ApplicationPath;
		
		private string _ApplicationVirtualPath;
		
		private string _MachineName;
		
		private string _RequestUrl;
		
		private string _ExceptionType;
		
		private string _Details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
		
		public aspnet_WebEvent_Event()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EventId
		{
			get
			{
				return this._EventId;
			}
			set
			{
				if ((this._EventId != value))
				{
					this.OnEventIdChanging(value);
					this.SendPropertyChanging();
					this._EventId = value;
					this.SendPropertyChanged("EventId");
					this.OnEventIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
		public System.DateTime EventTimeUtc
		{
			get
			{
				return this._EventTimeUtc;
			}
			set
			{
				if ((this._EventTimeUtc != value))
				{
					this.OnEventTimeUtcChanging(value);
					this.SendPropertyChanging();
					this._EventTimeUtc = value;
					this.SendPropertyChanged("EventTimeUtc");
					this.OnEventTimeUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime NOT NULL")]
		public System.DateTime EventTime
		{
			get
			{
				return this._EventTime;
			}
			set
			{
				if ((this._EventTime != value))
				{
					this.OnEventTimeChanging(value);
					this.SendPropertyChanging();
					this._EventTime = value;
					this.SendPropertyChanged("EventTime");
					this.OnEventTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string EventType
		{
			get
			{
				return this._EventType;
			}
			set
			{
				if ((this._EventType != value))
				{
					this.OnEventTypeChanging(value);
					this.SendPropertyChanging();
					this._EventType = value;
					this.SendPropertyChanged("EventType");
					this.OnEventTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventSequence
		{
			get
			{
				return this._EventSequence;
			}
			set
			{
				if ((this._EventSequence != value))
				{
					this.OnEventSequenceChanging(value);
					this.SendPropertyChanging();
					this._EventSequence = value;
					this.SendPropertyChanged("EventSequence");
					this.OnEventSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
		public decimal EventOccurrence
		{
			get
			{
				return this._EventOccurrence;
			}
			set
			{
				if ((this._EventOccurrence != value))
				{
					this.OnEventOccurrenceChanging(value);
					this.SendPropertyChanging();
					this._EventOccurrence = value;
					this.SendPropertyChanged("EventOccurrence");
					this.OnEventOccurrenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="Int NOT NULL")]
		public int EventCode
		{
			get
			{
				return this._EventCode;
			}
			set
			{
				if ((this._EventCode != value))
				{
					this.OnEventCodeChanging(value);
					this.SendPropertyChanging();
					this._EventCode = value;
					this.SendPropertyChanged("EventCode");
					this.OnEventCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetailCode", DbType="Int NOT NULL")]
		public int EventDetailCode
		{
			get
			{
				return this._EventDetailCode;
			}
			set
			{
				if ((this._EventDetailCode != value))
				{
					this.OnEventDetailCodeChanging(value);
					this.SendPropertyChanging();
					this._EventDetailCode = value;
					this.SendPropertyChanged("EventDetailCode");
					this.OnEventDetailCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(1024)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationPath", DbType="NVarChar(256)")]
		public string ApplicationPath
		{
			get
			{
				return this._ApplicationPath;
			}
			set
			{
				if ((this._ApplicationPath != value))
				{
					this.OnApplicationPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationPath = value;
					this.SendPropertyChanged("ApplicationPath");
					this.OnApplicationPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
		public string ApplicationVirtualPath
		{
			get
			{
				return this._ApplicationVirtualPath;
			}
			set
			{
				if ((this._ApplicationVirtualPath != value))
				{
					this.OnApplicationVirtualPathChanging(value);
					this.SendPropertyChanging();
					this._ApplicationVirtualPath = value;
					this.SendPropertyChanged("ApplicationVirtualPath");
					this.OnApplicationVirtualPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(1024)")]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionType", DbType="NVarChar(256)")]
		public string ExceptionType
		{
			get
			{
				return this._ExceptionType;
			}
			set
			{
				if ((this._ExceptionType != value))
				{
					this.OnExceptionTypeChanging(value);
					this.SendPropertyChanging();
					this._ExceptionType = value;
					this.SendPropertyChanged("ExceptionType");
					this.OnExceptionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Attachment")]
	public partial class Attachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AttachmentID;
		
		private string _MimeType;
		
		private string _Name;
		
		private System.Data.Linq.Binary _Body;
		
		private System.Guid _FileID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _DisplayName;
		
		private long _ContentLength;
		
		private EntitySet<EntrantDocument> _EntrantDocuments;
		
		private EntitySet<Institution> _Institutions;
		
		private EntitySet<InstitutionAccreditation> _InstitutionAccreditations;
		
		private EntitySet<InstitutionDocument> _InstitutionDocuments;
		
		private EntitySet<InstitutionHistory> _InstitutionHistories;
		
		private EntitySet<InstitutionHistory> _InstitutionHistories1;
		
		private EntitySet<InstitutionHistory> _InstitutionHistories2;
		
		private EntitySet<InstitutionLicense> _InstitutionLicenses;
		
		private EntitySet<PreparatoryCourse> _PreparatoryCourses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAttachmentIDChanging(int value);
    partial void OnAttachmentIDChanged();
    partial void OnMimeTypeChanging(string value);
    partial void OnMimeTypeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBodyChanging(System.Data.Linq.Binary value);
    partial void OnBodyChanged();
    partial void OnFileIDChanging(System.Guid value);
    partial void OnFileIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnContentLengthChanging(long value);
    partial void OnContentLengthChanged();
    #endregion
		
		public Attachment()
		{
			this._EntrantDocuments = new EntitySet<EntrantDocument>(new Action<EntrantDocument>(this.attach_EntrantDocuments), new Action<EntrantDocument>(this.detach_EntrantDocuments));
			this._Institutions = new EntitySet<Institution>(new Action<Institution>(this.attach_Institutions), new Action<Institution>(this.detach_Institutions));
			this._InstitutionAccreditations = new EntitySet<InstitutionAccreditation>(new Action<InstitutionAccreditation>(this.attach_InstitutionAccreditations), new Action<InstitutionAccreditation>(this.detach_InstitutionAccreditations));
			this._InstitutionDocuments = new EntitySet<InstitutionDocument>(new Action<InstitutionDocument>(this.attach_InstitutionDocuments), new Action<InstitutionDocument>(this.detach_InstitutionDocuments));
			this._InstitutionHistories = new EntitySet<InstitutionHistory>(new Action<InstitutionHistory>(this.attach_InstitutionHistories), new Action<InstitutionHistory>(this.detach_InstitutionHistories));
			this._InstitutionHistories1 = new EntitySet<InstitutionHistory>(new Action<InstitutionHistory>(this.attach_InstitutionHistories1), new Action<InstitutionHistory>(this.detach_InstitutionHistories1));
			this._InstitutionHistories2 = new EntitySet<InstitutionHistory>(new Action<InstitutionHistory>(this.attach_InstitutionHistories2), new Action<InstitutionHistory>(this.detach_InstitutionHistories2));
			this._InstitutionLicenses = new EntitySet<InstitutionLicense>(new Action<InstitutionLicense>(this.attach_InstitutionLicenses), new Action<InstitutionLicense>(this.detach_InstitutionLicenses));
			this._PreparatoryCourses = new EntitySet<PreparatoryCourse>(new Action<PreparatoryCourse>(this.attach_PreparatoryCourses), new Action<PreparatoryCourse>(this.detach_PreparatoryCourses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AttachmentID
		{
			get
			{
				return this._AttachmentID;
			}
			set
			{
				if ((this._AttachmentID != value))
				{
					this.OnAttachmentIDChanging(value);
					this.SendPropertyChanging();
					this._AttachmentID = value;
					this.SendPropertyChanged("AttachmentID");
					this.OnAttachmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MimeType", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string MimeType
		{
			get
			{
				return this._MimeType;
			}
			set
			{
				if ((this._MimeType != value))
				{
					this.OnMimeTypeChanging(value);
					this.SendPropertyChanging();
					this._MimeType = value;
					this.SendPropertyChanged("MimeType");
					this.OnMimeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(512)")]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentLength", DbType="BigInt NOT NULL")]
		public long ContentLength
		{
			get
			{
				return this._ContentLength;
			}
			set
			{
				if ((this._ContentLength != value))
				{
					this.OnContentLengthChanging(value);
					this.SendPropertyChanging();
					this._ContentLength = value;
					this.SendPropertyChanged("ContentLength");
					this.OnContentLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attachment_EntrantDocument", Storage="_EntrantDocuments", ThisKey="AttachmentID", OtherKey="AttachmentID")]
		public EntitySet<EntrantDocument> EntrantDocuments
		{
			get
			{
				return this._EntrantDocuments;
			}
			set
			{
				this._EntrantDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attachment_Institution", Storage="_Institutions", ThisKey="AttachmentID", OtherKey="HostelAttachmentID")]
		public EntitySet<Institution> Institutions
		{
			get
			{
				return this._Institutions;
			}
			set
			{
				this._Institutions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attachment_InstitutionAccreditation", Storage="_InstitutionAccreditations", ThisKey="AttachmentID", OtherKey="AttachmentID")]
		public EntitySet<InstitutionAccreditation> InstitutionAccreditations
		{
			get
			{
				return this._InstitutionAccreditations;
			}
			set
			{
				this._InstitutionAccreditations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attachment_InstitutionDocument", Storage="_InstitutionDocuments", ThisKey="AttachmentID", OtherKey="AttachmentId")]
		public EntitySet<InstitutionDocument> InstitutionDocuments
		{
			get
			{
				return this._InstitutionDocuments;
			}
			set
			{
				this._InstitutionDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attachment_InstitutionHistory", Storage="_InstitutionHistories", ThisKey="AttachmentID", OtherKey="AccreditationAttachmentID")]
		public EntitySet<InstitutionHistory> InstitutionHistories
		{
			get
			{
				return this._InstitutionHistories;
			}
			set
			{
				this._InstitutionHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attachment_InstitutionHistory1", Storage="_InstitutionHistories1", ThisKey="AttachmentID", OtherKey="HostelAttachmentID")]
		public EntitySet<InstitutionHistory> InstitutionHistories1
		{
			get
			{
				return this._InstitutionHistories1;
			}
			set
			{
				this._InstitutionHistories1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attachment_InstitutionHistory2", Storage="_InstitutionHistories2", ThisKey="AttachmentID", OtherKey="LicenseAttachmentID")]
		public EntitySet<InstitutionHistory> InstitutionHistories2
		{
			get
			{
				return this._InstitutionHistories2;
			}
			set
			{
				this._InstitutionHistories2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attachment_InstitutionLicense", Storage="_InstitutionLicenses", ThisKey="AttachmentID", OtherKey="AttachmentID")]
		public EntitySet<InstitutionLicense> InstitutionLicenses
		{
			get
			{
				return this._InstitutionLicenses;
			}
			set
			{
				this._InstitutionLicenses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attachment_PreparatoryCourse", Storage="_PreparatoryCourses", ThisKey="AttachmentID", OtherKey="MoreInformation")]
		public EntitySet<PreparatoryCourse> PreparatoryCourses
		{
			get
			{
				return this._PreparatoryCourses;
			}
			set
			{
				this._PreparatoryCourses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EntrantDocuments(EntrantDocument entity)
		{
			this.SendPropertyChanging();
			entity.Attachment = this;
		}
		
		private void detach_EntrantDocuments(EntrantDocument entity)
		{
			this.SendPropertyChanging();
			entity.Attachment = null;
		}
		
		private void attach_Institutions(Institution entity)
		{
			this.SendPropertyChanging();
			entity.Attachment = this;
		}
		
		private void detach_Institutions(Institution entity)
		{
			this.SendPropertyChanging();
			entity.Attachment = null;
		}
		
		private void attach_InstitutionAccreditations(InstitutionAccreditation entity)
		{
			this.SendPropertyChanging();
			entity.Attachment = this;
		}
		
		private void detach_InstitutionAccreditations(InstitutionAccreditation entity)
		{
			this.SendPropertyChanging();
			entity.Attachment = null;
		}
		
		private void attach_InstitutionDocuments(InstitutionDocument entity)
		{
			this.SendPropertyChanging();
			entity.Attachment = this;
		}
		
		private void detach_InstitutionDocuments(InstitutionDocument entity)
		{
			this.SendPropertyChanging();
			entity.Attachment = null;
		}
		
		private void attach_InstitutionHistories(InstitutionHistory entity)
		{
			this.SendPropertyChanging();
			entity.Attachment = this;
		}
		
		private void detach_InstitutionHistories(InstitutionHistory entity)
		{
			this.SendPropertyChanging();
			entity.Attachment = null;
		}
		
		private void attach_InstitutionHistories1(InstitutionHistory entity)
		{
			this.SendPropertyChanging();
			entity.Attachment1 = this;
		}
		
		private void detach_InstitutionHistories1(InstitutionHistory entity)
		{
			this.SendPropertyChanging();
			entity.Attachment1 = null;
		}
		
		private void attach_InstitutionHistories2(InstitutionHistory entity)
		{
			this.SendPropertyChanging();
			entity.Attachment2 = this;
		}
		
		private void detach_InstitutionHistories2(InstitutionHistory entity)
		{
			this.SendPropertyChanging();
			entity.Attachment2 = null;
		}
		
		private void attach_InstitutionLicenses(InstitutionLicense entity)
		{
			this.SendPropertyChanging();
			entity.Attachment = this;
		}
		
		private void detach_InstitutionLicenses(InstitutionLicense entity)
		{
			this.SendPropertyChanging();
			entity.Attachment = null;
		}
		
		private void attach_PreparatoryCourses(PreparatoryCourse entity)
		{
			this.SendPropertyChanging();
			entity.Attachment = this;
		}
		
		private void detach_PreparatoryCourses(PreparatoryCourse entity)
		{
			this.SendPropertyChanging();
			entity.Attachment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Benefit")]
	public partial class Benefit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _BenefitID;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<Application> _Applications;
		
		private EntitySet<ApplicationEntranceTestDocument> _ApplicationEntranceTestDocuments;
		
		private EntitySet<ApplicationSelectedCompetitiveGroup> _ApplicationSelectedCompetitiveGroups;
		
		private EntitySet<BenefitItemC> _BenefitItemCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBenefitIDChanging(short value);
    partial void OnBenefitIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Benefit()
		{
			this._Applications = new EntitySet<Application>(new Action<Application>(this.attach_Applications), new Action<Application>(this.detach_Applications));
			this._ApplicationEntranceTestDocuments = new EntitySet<ApplicationEntranceTestDocument>(new Action<ApplicationEntranceTestDocument>(this.attach_ApplicationEntranceTestDocuments), new Action<ApplicationEntranceTestDocument>(this.detach_ApplicationEntranceTestDocuments));
			this._ApplicationSelectedCompetitiveGroups = new EntitySet<ApplicationSelectedCompetitiveGroup>(new Action<ApplicationSelectedCompetitiveGroup>(this.attach_ApplicationSelectedCompetitiveGroups), new Action<ApplicationSelectedCompetitiveGroup>(this.detach_ApplicationSelectedCompetitiveGroups));
			this._BenefitItemCs = new EntitySet<BenefitItemC>(new Action<BenefitItemC>(this.attach_BenefitItemCs), new Action<BenefitItemC>(this.detach_BenefitItemCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BenefitID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short BenefitID
		{
			get
			{
				return this._BenefitID;
			}
			set
			{
				if ((this._BenefitID != value))
				{
					this.OnBenefitIDChanging(value);
					this.SendPropertyChanging();
					this._BenefitID = value;
					this.SendPropertyChanged("BenefitID");
					this.OnBenefitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Benefit_Application", Storage="_Applications", ThisKey="BenefitID", OtherKey="OrderCalculatedBenefitID")]
		public EntitySet<Application> Applications
		{
			get
			{
				return this._Applications;
			}
			set
			{
				this._Applications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Benefit_ApplicationEntranceTestDocument", Storage="_ApplicationEntranceTestDocuments", ThisKey="BenefitID", OtherKey="BenefitID")]
		public EntitySet<ApplicationEntranceTestDocument> ApplicationEntranceTestDocuments
		{
			get
			{
				return this._ApplicationEntranceTestDocuments;
			}
			set
			{
				this._ApplicationEntranceTestDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Benefit_ApplicationSelectedCompetitiveGroup", Storage="_ApplicationSelectedCompetitiveGroups", ThisKey="BenefitID", OtherKey="CalculatedBenefitID")]
		public EntitySet<ApplicationSelectedCompetitiveGroup> ApplicationSelectedCompetitiveGroups
		{
			get
			{
				return this._ApplicationSelectedCompetitiveGroups;
			}
			set
			{
				this._ApplicationSelectedCompetitiveGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Benefit_BenefitItemC", Storage="_BenefitItemCs", ThisKey="BenefitID", OtherKey="BenefitID")]
		public EntitySet<BenefitItemC> BenefitItemCs
		{
			get
			{
				return this._BenefitItemCs;
			}
			set
			{
				this._BenefitItemCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.Benefit = this;
		}
		
		private void detach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.Benefit = null;
		}
		
		private void attach_ApplicationEntranceTestDocuments(ApplicationEntranceTestDocument entity)
		{
			this.SendPropertyChanging();
			entity.Benefit = this;
		}
		
		private void detach_ApplicationEntranceTestDocuments(ApplicationEntranceTestDocument entity)
		{
			this.SendPropertyChanging();
			entity.Benefit = null;
		}
		
		private void attach_ApplicationSelectedCompetitiveGroups(ApplicationSelectedCompetitiveGroup entity)
		{
			this.SendPropertyChanging();
			entity.Benefit = this;
		}
		
		private void detach_ApplicationSelectedCompetitiveGroups(ApplicationSelectedCompetitiveGroup entity)
		{
			this.SendPropertyChanging();
			entity.Benefit = null;
		}
		
		private void attach_BenefitItemCs(BenefitItemC entity)
		{
			this.SendPropertyChanging();
			entity.Benefit = this;
		}
		
		private void detach_BenefitItemCs(BenefitItemC entity)
		{
			this.SendPropertyChanging();
			entity.Benefit = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BenefitItemC")]
	public partial class BenefitItemC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BenefitItemID;
		
		private System.Nullable<int> _EntranceTestItemID;
		
		private short _OlympicDiplomTypeID;
		
		private System.Nullable<short> _OlympicLevelFlags;
		
		private short _BenefitID;
		
		private bool _IsForAllOlympic;
		
		private int _CompetitiveGroupID;
		
		private string _UID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private int _OlympicYear;
		
		private System.Nullable<int> _EgeMinValue;
		
		private System.Nullable<System.Guid> _BenefitItemGUID;
		
		private System.Nullable<short> _ClassFlags;
		
		private EntitySet<BenefitItemCOlympicType> _BenefitItemCOlympicTypes;
		
		private EntitySet<BenefitItemCProfile> _BenefitItemCProfiles;
		
		private EntitySet<BenefitItemSubject> _BenefitItemSubjects;
		
		private EntityRef<Benefit> _Benefit;
		
		private EntityRef<CompetitiveGroup> _CompetitiveGroup;
		
		private EntityRef<EntranceTestItemC> _EntranceTestItemC;
		
		private EntityRef<OlympicDiplomType> _OlympicDiplomType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBenefitItemIDChanging(int value);
    partial void OnBenefitItemIDChanged();
    partial void OnEntranceTestItemIDChanging(System.Nullable<int> value);
    partial void OnEntranceTestItemIDChanged();
    partial void OnOlympicDiplomTypeIDChanging(short value);
    partial void OnOlympicDiplomTypeIDChanged();
    partial void OnOlympicLevelFlagsChanging(System.Nullable<short> value);
    partial void OnOlympicLevelFlagsChanged();
    partial void OnBenefitIDChanging(short value);
    partial void OnBenefitIDChanged();
    partial void OnIsForAllOlympicChanging(bool value);
    partial void OnIsForAllOlympicChanged();
    partial void OnCompetitiveGroupIDChanging(int value);
    partial void OnCompetitiveGroupIDChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnOlympicYearChanging(int value);
    partial void OnOlympicYearChanged();
    partial void OnEgeMinValueChanging(System.Nullable<int> value);
    partial void OnEgeMinValueChanged();
    partial void OnBenefitItemGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnBenefitItemGUIDChanged();
    partial void OnClassFlagsChanging(System.Nullable<short> value);
    partial void OnClassFlagsChanged();
    #endregion
		
		public BenefitItemC()
		{
			this._BenefitItemCOlympicTypes = new EntitySet<BenefitItemCOlympicType>(new Action<BenefitItemCOlympicType>(this.attach_BenefitItemCOlympicTypes), new Action<BenefitItemCOlympicType>(this.detach_BenefitItemCOlympicTypes));
			this._BenefitItemCProfiles = new EntitySet<BenefitItemCProfile>(new Action<BenefitItemCProfile>(this.attach_BenefitItemCProfiles), new Action<BenefitItemCProfile>(this.detach_BenefitItemCProfiles));
			this._BenefitItemSubjects = new EntitySet<BenefitItemSubject>(new Action<BenefitItemSubject>(this.attach_BenefitItemSubjects), new Action<BenefitItemSubject>(this.detach_BenefitItemSubjects));
			this._Benefit = default(EntityRef<Benefit>);
			this._CompetitiveGroup = default(EntityRef<CompetitiveGroup>);
			this._EntranceTestItemC = default(EntityRef<EntranceTestItemC>);
			this._OlympicDiplomType = default(EntityRef<OlympicDiplomType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BenefitItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BenefitItemID
		{
			get
			{
				return this._BenefitItemID;
			}
			set
			{
				if ((this._BenefitItemID != value))
				{
					this.OnBenefitItemIDChanging(value);
					this.SendPropertyChanging();
					this._BenefitItemID = value;
					this.SendPropertyChanged("BenefitItemID");
					this.OnBenefitItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceTestItemID", DbType="Int")]
		public System.Nullable<int> EntranceTestItemID
		{
			get
			{
				return this._EntranceTestItemID;
			}
			set
			{
				if ((this._EntranceTestItemID != value))
				{
					if (this._EntranceTestItemC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntranceTestItemIDChanging(value);
					this.SendPropertyChanging();
					this._EntranceTestItemID = value;
					this.SendPropertyChanged("EntranceTestItemID");
					this.OnEntranceTestItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicDiplomTypeID", DbType="SmallInt NOT NULL")]
		public short OlympicDiplomTypeID
		{
			get
			{
				return this._OlympicDiplomTypeID;
			}
			set
			{
				if ((this._OlympicDiplomTypeID != value))
				{
					if (this._OlympicDiplomType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOlympicDiplomTypeIDChanging(value);
					this.SendPropertyChanging();
					this._OlympicDiplomTypeID = value;
					this.SendPropertyChanged("OlympicDiplomTypeID");
					this.OnOlympicDiplomTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicLevelFlags", DbType="SmallInt")]
		public System.Nullable<short> OlympicLevelFlags
		{
			get
			{
				return this._OlympicLevelFlags;
			}
			set
			{
				if ((this._OlympicLevelFlags != value))
				{
					this.OnOlympicLevelFlagsChanging(value);
					this.SendPropertyChanging();
					this._OlympicLevelFlags = value;
					this.SendPropertyChanged("OlympicLevelFlags");
					this.OnOlympicLevelFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BenefitID", DbType="SmallInt NOT NULL")]
		public short BenefitID
		{
			get
			{
				return this._BenefitID;
			}
			set
			{
				if ((this._BenefitID != value))
				{
					if (this._Benefit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBenefitIDChanging(value);
					this.SendPropertyChanging();
					this._BenefitID = value;
					this.SendPropertyChanged("BenefitID");
					this.OnBenefitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForAllOlympic", DbType="Bit NOT NULL")]
		public bool IsForAllOlympic
		{
			get
			{
				return this._IsForAllOlympic;
			}
			set
			{
				if ((this._IsForAllOlympic != value))
				{
					this.OnIsForAllOlympicChanging(value);
					this.SendPropertyChanging();
					this._IsForAllOlympic = value;
					this.SendPropertyChanged("IsForAllOlympic");
					this.OnIsForAllOlympicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupID", DbType="Int NOT NULL")]
		public int CompetitiveGroupID
		{
			get
			{
				return this._CompetitiveGroupID;
			}
			set
			{
				if ((this._CompetitiveGroupID != value))
				{
					if (this._CompetitiveGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompetitiveGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupID = value;
					this.SendPropertyChanged("CompetitiveGroupID");
					this.OnCompetitiveGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicYear", DbType="Int NOT NULL")]
		public int OlympicYear
		{
			get
			{
				return this._OlympicYear;
			}
			set
			{
				if ((this._OlympicYear != value))
				{
					this.OnOlympicYearChanging(value);
					this.SendPropertyChanging();
					this._OlympicYear = value;
					this.SendPropertyChanged("OlympicYear");
					this.OnOlympicYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeMinValue", DbType="Int")]
		public System.Nullable<int> EgeMinValue
		{
			get
			{
				return this._EgeMinValue;
			}
			set
			{
				if ((this._EgeMinValue != value))
				{
					this.OnEgeMinValueChanging(value);
					this.SendPropertyChanging();
					this._EgeMinValue = value;
					this.SendPropertyChanged("EgeMinValue");
					this.OnEgeMinValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BenefitItemGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BenefitItemGUID
		{
			get
			{
				return this._BenefitItemGUID;
			}
			set
			{
				if ((this._BenefitItemGUID != value))
				{
					this.OnBenefitItemGUIDChanging(value);
					this.SendPropertyChanging();
					this._BenefitItemGUID = value;
					this.SendPropertyChanged("BenefitItemGUID");
					this.OnBenefitItemGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassFlags", DbType="SmallInt")]
		public System.Nullable<short> ClassFlags
		{
			get
			{
				return this._ClassFlags;
			}
			set
			{
				if ((this._ClassFlags != value))
				{
					this.OnClassFlagsChanging(value);
					this.SendPropertyChanging();
					this._ClassFlags = value;
					this.SendPropertyChanged("ClassFlags");
					this.OnClassFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BenefitItemC_BenefitItemCOlympicType", Storage="_BenefitItemCOlympicTypes", ThisKey="BenefitItemID", OtherKey="BenefitItemID")]
		public EntitySet<BenefitItemCOlympicType> BenefitItemCOlympicTypes
		{
			get
			{
				return this._BenefitItemCOlympicTypes;
			}
			set
			{
				this._BenefitItemCOlympicTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BenefitItemC_BenefitItemCProfile", Storage="_BenefitItemCProfiles", ThisKey="BenefitItemID", OtherKey="BenefitItemID")]
		public EntitySet<BenefitItemCProfile> BenefitItemCProfiles
		{
			get
			{
				return this._BenefitItemCProfiles;
			}
			set
			{
				this._BenefitItemCProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BenefitItemC_BenefitItemSubject", Storage="_BenefitItemSubjects", ThisKey="BenefitItemID", OtherKey="BenefitItemId")]
		public EntitySet<BenefitItemSubject> BenefitItemSubjects
		{
			get
			{
				return this._BenefitItemSubjects;
			}
			set
			{
				this._BenefitItemSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Benefit_BenefitItemC", Storage="_Benefit", ThisKey="BenefitID", OtherKey="BenefitID", IsForeignKey=true)]
		public Benefit Benefit
		{
			get
			{
				return this._Benefit.Entity;
			}
			set
			{
				Benefit previousValue = this._Benefit.Entity;
				if (((previousValue != value) 
							|| (this._Benefit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Benefit.Entity = null;
						previousValue.BenefitItemCs.Remove(this);
					}
					this._Benefit.Entity = value;
					if ((value != null))
					{
						value.BenefitItemCs.Add(this);
						this._BenefitID = value.BenefitID;
					}
					else
					{
						this._BenefitID = default(short);
					}
					this.SendPropertyChanged("Benefit");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroup_BenefitItemC", Storage="_CompetitiveGroup", ThisKey="CompetitiveGroupID", OtherKey="CompetitiveGroupID", IsForeignKey=true)]
		public CompetitiveGroup CompetitiveGroup
		{
			get
			{
				return this._CompetitiveGroup.Entity;
			}
			set
			{
				CompetitiveGroup previousValue = this._CompetitiveGroup.Entity;
				if (((previousValue != value) 
							|| (this._CompetitiveGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompetitiveGroup.Entity = null;
						previousValue.BenefitItemCs.Remove(this);
					}
					this._CompetitiveGroup.Entity = value;
					if ((value != null))
					{
						value.BenefitItemCs.Add(this);
						this._CompetitiveGroupID = value.CompetitiveGroupID;
					}
					else
					{
						this._CompetitiveGroupID = default(int);
					}
					this.SendPropertyChanged("CompetitiveGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntranceTestItemC_BenefitItemC", Storage="_EntranceTestItemC", ThisKey="EntranceTestItemID", OtherKey="EntranceTestItemID", IsForeignKey=true, DeleteRule="CASCADE")]
		public EntranceTestItemC EntranceTestItemC
		{
			get
			{
				return this._EntranceTestItemC.Entity;
			}
			set
			{
				EntranceTestItemC previousValue = this._EntranceTestItemC.Entity;
				if (((previousValue != value) 
							|| (this._EntranceTestItemC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntranceTestItemC.Entity = null;
						previousValue.BenefitItemCs.Remove(this);
					}
					this._EntranceTestItemC.Entity = value;
					if ((value != null))
					{
						value.BenefitItemCs.Add(this);
						this._EntranceTestItemID = value.EntranceTestItemID;
					}
					else
					{
						this._EntranceTestItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntranceTestItemC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicDiplomType_BenefitItemC", Storage="_OlympicDiplomType", ThisKey="OlympicDiplomTypeID", OtherKey="OlympicDiplomTypeID", IsForeignKey=true)]
		public OlympicDiplomType OlympicDiplomType
		{
			get
			{
				return this._OlympicDiplomType.Entity;
			}
			set
			{
				OlympicDiplomType previousValue = this._OlympicDiplomType.Entity;
				if (((previousValue != value) 
							|| (this._OlympicDiplomType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OlympicDiplomType.Entity = null;
						previousValue.BenefitItemCs.Remove(this);
					}
					this._OlympicDiplomType.Entity = value;
					if ((value != null))
					{
						value.BenefitItemCs.Add(this);
						this._OlympicDiplomTypeID = value.OlympicDiplomTypeID;
					}
					else
					{
						this._OlympicDiplomTypeID = default(short);
					}
					this.SendPropertyChanged("OlympicDiplomType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BenefitItemCOlympicTypes(BenefitItemCOlympicType entity)
		{
			this.SendPropertyChanging();
			entity.BenefitItemC = this;
		}
		
		private void detach_BenefitItemCOlympicTypes(BenefitItemCOlympicType entity)
		{
			this.SendPropertyChanging();
			entity.BenefitItemC = null;
		}
		
		private void attach_BenefitItemCProfiles(BenefitItemCProfile entity)
		{
			this.SendPropertyChanging();
			entity.BenefitItemC = this;
		}
		
		private void detach_BenefitItemCProfiles(BenefitItemCProfile entity)
		{
			this.SendPropertyChanging();
			entity.BenefitItemC = null;
		}
		
		private void attach_BenefitItemSubjects(BenefitItemSubject entity)
		{
			this.SendPropertyChanging();
			entity.BenefitItemC = this;
		}
		
		private void detach_BenefitItemSubjects(BenefitItemSubject entity)
		{
			this.SendPropertyChanging();
			entity.BenefitItemC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BenefitItemCOlympicType")]
	public partial class BenefitItemCOlympicType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _BenefitItemID;
		
		private int _OlympicTypeID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<short> _OlympicLevel;
		
		private System.Nullable<short> _ClassFlags;
		
		private System.Nullable<short> _OlympicLevelFlags;
		
		private EntitySet<BenefitItemCOlympicTypeProfile> _BenefitItemCOlympicTypeProfiles;
		
		private EntityRef<BenefitItemC> _BenefitItemC;
		
		private EntityRef<OlympicType> _OlympicType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnBenefitItemIDChanging(int value);
    partial void OnBenefitItemIDChanged();
    partial void OnOlympicTypeIDChanging(int value);
    partial void OnOlympicTypeIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnOlympicLevelChanging(System.Nullable<short> value);
    partial void OnOlympicLevelChanged();
    partial void OnClassFlagsChanging(System.Nullable<short> value);
    partial void OnClassFlagsChanged();
    partial void OnOlympicLevelFlagsChanging(System.Nullable<short> value);
    partial void OnOlympicLevelFlagsChanged();
    #endregion
		
		public BenefitItemCOlympicType()
		{
			this._BenefitItemCOlympicTypeProfiles = new EntitySet<BenefitItemCOlympicTypeProfile>(new Action<BenefitItemCOlympicTypeProfile>(this.attach_BenefitItemCOlympicTypeProfiles), new Action<BenefitItemCOlympicTypeProfile>(this.detach_BenefitItemCOlympicTypeProfiles));
			this._BenefitItemC = default(EntityRef<BenefitItemC>);
			this._OlympicType = default(EntityRef<OlympicType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BenefitItemID", DbType="Int NOT NULL")]
		public int BenefitItemID
		{
			get
			{
				return this._BenefitItemID;
			}
			set
			{
				if ((this._BenefitItemID != value))
				{
					if (this._BenefitItemC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBenefitItemIDChanging(value);
					this.SendPropertyChanging();
					this._BenefitItemID = value;
					this.SendPropertyChanged("BenefitItemID");
					this.OnBenefitItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicTypeID", DbType="Int NOT NULL")]
		public int OlympicTypeID
		{
			get
			{
				return this._OlympicTypeID;
			}
			set
			{
				if ((this._OlympicTypeID != value))
				{
					if (this._OlympicType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOlympicTypeIDChanging(value);
					this.SendPropertyChanging();
					this._OlympicTypeID = value;
					this.SendPropertyChanged("OlympicTypeID");
					this.OnOlympicTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicLevel", DbType="SmallInt")]
		public System.Nullable<short> OlympicLevel
		{
			get
			{
				return this._OlympicLevel;
			}
			set
			{
				if ((this._OlympicLevel != value))
				{
					this.OnOlympicLevelChanging(value);
					this.SendPropertyChanging();
					this._OlympicLevel = value;
					this.SendPropertyChanged("OlympicLevel");
					this.OnOlympicLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassFlags", DbType="SmallInt")]
		public System.Nullable<short> ClassFlags
		{
			get
			{
				return this._ClassFlags;
			}
			set
			{
				if ((this._ClassFlags != value))
				{
					this.OnClassFlagsChanging(value);
					this.SendPropertyChanging();
					this._ClassFlags = value;
					this.SendPropertyChanged("ClassFlags");
					this.OnClassFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicLevelFlags", DbType="SmallInt")]
		public System.Nullable<short> OlympicLevelFlags
		{
			get
			{
				return this._OlympicLevelFlags;
			}
			set
			{
				if ((this._OlympicLevelFlags != value))
				{
					this.OnOlympicLevelFlagsChanging(value);
					this.SendPropertyChanging();
					this._OlympicLevelFlags = value;
					this.SendPropertyChanged("OlympicLevelFlags");
					this.OnOlympicLevelFlagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BenefitItemCOlympicType_BenefitItemCOlympicTypeProfile", Storage="_BenefitItemCOlympicTypeProfiles", ThisKey="ID", OtherKey="BenefitItemCOlympicTypeID")]
		public EntitySet<BenefitItemCOlympicTypeProfile> BenefitItemCOlympicTypeProfiles
		{
			get
			{
				return this._BenefitItemCOlympicTypeProfiles;
			}
			set
			{
				this._BenefitItemCOlympicTypeProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BenefitItemC_BenefitItemCOlympicType", Storage="_BenefitItemC", ThisKey="BenefitItemID", OtherKey="BenefitItemID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BenefitItemC BenefitItemC
		{
			get
			{
				return this._BenefitItemC.Entity;
			}
			set
			{
				BenefitItemC previousValue = this._BenefitItemC.Entity;
				if (((previousValue != value) 
							|| (this._BenefitItemC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BenefitItemC.Entity = null;
						previousValue.BenefitItemCOlympicTypes.Remove(this);
					}
					this._BenefitItemC.Entity = value;
					if ((value != null))
					{
						value.BenefitItemCOlympicTypes.Add(this);
						this._BenefitItemID = value.BenefitItemID;
					}
					else
					{
						this._BenefitItemID = default(int);
					}
					this.SendPropertyChanged("BenefitItemC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicType_BenefitItemCOlympicType", Storage="_OlympicType", ThisKey="OlympicTypeID", OtherKey="OlympicID", IsForeignKey=true)]
		public OlympicType OlympicType
		{
			get
			{
				return this._OlympicType.Entity;
			}
			set
			{
				OlympicType previousValue = this._OlympicType.Entity;
				if (((previousValue != value) 
							|| (this._OlympicType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OlympicType.Entity = null;
						previousValue.BenefitItemCOlympicTypes.Remove(this);
					}
					this._OlympicType.Entity = value;
					if ((value != null))
					{
						value.BenefitItemCOlympicTypes.Add(this);
						this._OlympicTypeID = value.OlympicID;
					}
					else
					{
						this._OlympicTypeID = default(int);
					}
					this.SendPropertyChanged("OlympicType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BenefitItemCOlympicTypeProfiles(BenefitItemCOlympicTypeProfile entity)
		{
			this.SendPropertyChanging();
			entity.BenefitItemCOlympicType = this;
		}
		
		private void detach_BenefitItemCOlympicTypeProfiles(BenefitItemCOlympicTypeProfile entity)
		{
			this.SendPropertyChanging();
			entity.BenefitItemCOlympicType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BenefitItemCOlympicTypeProfile")]
	public partial class BenefitItemCOlympicTypeProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BenefitItemCOlympicTypeProfileID;
		
		private int _BenefitItemCOlympicTypeID;
		
		private int _OlympicProfileID;
		
		private EntityRef<BenefitItemCOlympicType> _BenefitItemCOlympicType;
		
		private EntityRef<OlympicProfile> _OlympicProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBenefitItemCOlympicTypeProfileIDChanging(int value);
    partial void OnBenefitItemCOlympicTypeProfileIDChanged();
    partial void OnBenefitItemCOlympicTypeIDChanging(int value);
    partial void OnBenefitItemCOlympicTypeIDChanged();
    partial void OnOlympicProfileIDChanging(int value);
    partial void OnOlympicProfileIDChanged();
    #endregion
		
		public BenefitItemCOlympicTypeProfile()
		{
			this._BenefitItemCOlympicType = default(EntityRef<BenefitItemCOlympicType>);
			this._OlympicProfile = default(EntityRef<OlympicProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BenefitItemCOlympicTypeProfileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BenefitItemCOlympicTypeProfileID
		{
			get
			{
				return this._BenefitItemCOlympicTypeProfileID;
			}
			set
			{
				if ((this._BenefitItemCOlympicTypeProfileID != value))
				{
					this.OnBenefitItemCOlympicTypeProfileIDChanging(value);
					this.SendPropertyChanging();
					this._BenefitItemCOlympicTypeProfileID = value;
					this.SendPropertyChanged("BenefitItemCOlympicTypeProfileID");
					this.OnBenefitItemCOlympicTypeProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BenefitItemCOlympicTypeID", DbType="Int NOT NULL")]
		public int BenefitItemCOlympicTypeID
		{
			get
			{
				return this._BenefitItemCOlympicTypeID;
			}
			set
			{
				if ((this._BenefitItemCOlympicTypeID != value))
				{
					if (this._BenefitItemCOlympicType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBenefitItemCOlympicTypeIDChanging(value);
					this.SendPropertyChanging();
					this._BenefitItemCOlympicTypeID = value;
					this.SendPropertyChanged("BenefitItemCOlympicTypeID");
					this.OnBenefitItemCOlympicTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicProfileID", DbType="Int NOT NULL")]
		public int OlympicProfileID
		{
			get
			{
				return this._OlympicProfileID;
			}
			set
			{
				if ((this._OlympicProfileID != value))
				{
					if (this._OlympicProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOlympicProfileIDChanging(value);
					this.SendPropertyChanging();
					this._OlympicProfileID = value;
					this.SendPropertyChanged("OlympicProfileID");
					this.OnOlympicProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BenefitItemCOlympicType_BenefitItemCOlympicTypeProfile", Storage="_BenefitItemCOlympicType", ThisKey="BenefitItemCOlympicTypeID", OtherKey="ID", IsForeignKey=true)]
		public BenefitItemCOlympicType BenefitItemCOlympicType
		{
			get
			{
				return this._BenefitItemCOlympicType.Entity;
			}
			set
			{
				BenefitItemCOlympicType previousValue = this._BenefitItemCOlympicType.Entity;
				if (((previousValue != value) 
							|| (this._BenefitItemCOlympicType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BenefitItemCOlympicType.Entity = null;
						previousValue.BenefitItemCOlympicTypeProfiles.Remove(this);
					}
					this._BenefitItemCOlympicType.Entity = value;
					if ((value != null))
					{
						value.BenefitItemCOlympicTypeProfiles.Add(this);
						this._BenefitItemCOlympicTypeID = value.ID;
					}
					else
					{
						this._BenefitItemCOlympicTypeID = default(int);
					}
					this.SendPropertyChanged("BenefitItemCOlympicType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicProfile_BenefitItemCOlympicTypeProfile", Storage="_OlympicProfile", ThisKey="OlympicProfileID", OtherKey="OlympicProfileID", IsForeignKey=true)]
		public OlympicProfile OlympicProfile
		{
			get
			{
				return this._OlympicProfile.Entity;
			}
			set
			{
				OlympicProfile previousValue = this._OlympicProfile.Entity;
				if (((previousValue != value) 
							|| (this._OlympicProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OlympicProfile.Entity = null;
						previousValue.BenefitItemCOlympicTypeProfiles.Remove(this);
					}
					this._OlympicProfile.Entity = value;
					if ((value != null))
					{
						value.BenefitItemCOlympicTypeProfiles.Add(this);
						this._OlympicProfileID = value.OlympicProfileID;
					}
					else
					{
						this._OlympicProfileID = default(int);
					}
					this.SendPropertyChanged("OlympicProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BenefitItemCProfile")]
	public partial class BenefitItemCProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BenefitItemCProfileID;
		
		private int _BenefitItemID;
		
		private int _OlympicProfileID;
		
		private EntityRef<BenefitItemC> _BenefitItemC;
		
		private EntityRef<OlympicProfile> _OlympicProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBenefitItemCProfileIDChanging(int value);
    partial void OnBenefitItemCProfileIDChanged();
    partial void OnBenefitItemIDChanging(int value);
    partial void OnBenefitItemIDChanged();
    partial void OnOlympicProfileIDChanging(int value);
    partial void OnOlympicProfileIDChanged();
    #endregion
		
		public BenefitItemCProfile()
		{
			this._BenefitItemC = default(EntityRef<BenefitItemC>);
			this._OlympicProfile = default(EntityRef<OlympicProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BenefitItemCProfileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BenefitItemCProfileID
		{
			get
			{
				return this._BenefitItemCProfileID;
			}
			set
			{
				if ((this._BenefitItemCProfileID != value))
				{
					this.OnBenefitItemCProfileIDChanging(value);
					this.SendPropertyChanging();
					this._BenefitItemCProfileID = value;
					this.SendPropertyChanged("BenefitItemCProfileID");
					this.OnBenefitItemCProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BenefitItemID", DbType="Int NOT NULL")]
		public int BenefitItemID
		{
			get
			{
				return this._BenefitItemID;
			}
			set
			{
				if ((this._BenefitItemID != value))
				{
					if (this._BenefitItemC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBenefitItemIDChanging(value);
					this.SendPropertyChanging();
					this._BenefitItemID = value;
					this.SendPropertyChanged("BenefitItemID");
					this.OnBenefitItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicProfileID", DbType="Int NOT NULL")]
		public int OlympicProfileID
		{
			get
			{
				return this._OlympicProfileID;
			}
			set
			{
				if ((this._OlympicProfileID != value))
				{
					if (this._OlympicProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOlympicProfileIDChanging(value);
					this.SendPropertyChanging();
					this._OlympicProfileID = value;
					this.SendPropertyChanged("OlympicProfileID");
					this.OnOlympicProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BenefitItemC_BenefitItemCProfile", Storage="_BenefitItemC", ThisKey="BenefitItemID", OtherKey="BenefitItemID", IsForeignKey=true)]
		public BenefitItemC BenefitItemC
		{
			get
			{
				return this._BenefitItemC.Entity;
			}
			set
			{
				BenefitItemC previousValue = this._BenefitItemC.Entity;
				if (((previousValue != value) 
							|| (this._BenefitItemC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BenefitItemC.Entity = null;
						previousValue.BenefitItemCProfiles.Remove(this);
					}
					this._BenefitItemC.Entity = value;
					if ((value != null))
					{
						value.BenefitItemCProfiles.Add(this);
						this._BenefitItemID = value.BenefitItemID;
					}
					else
					{
						this._BenefitItemID = default(int);
					}
					this.SendPropertyChanged("BenefitItemC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicProfile_BenefitItemCProfile", Storage="_OlympicProfile", ThisKey="OlympicProfileID", OtherKey="OlympicProfileID", IsForeignKey=true)]
		public OlympicProfile OlympicProfile
		{
			get
			{
				return this._OlympicProfile.Entity;
			}
			set
			{
				OlympicProfile previousValue = this._OlympicProfile.Entity;
				if (((previousValue != value) 
							|| (this._OlympicProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OlympicProfile.Entity = null;
						previousValue.BenefitItemCProfiles.Remove(this);
					}
					this._OlympicProfile.Entity = value;
					if ((value != null))
					{
						value.BenefitItemCProfiles.Add(this);
						this._OlympicProfileID = value.OlympicProfileID;
					}
					else
					{
						this._OlympicProfileID = default(int);
					}
					this.SendPropertyChanged("OlympicProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BenefitItemSubject")]
	public partial class BenefitItemSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BenefitItemId;
		
		private int _SubjectId;
		
		private int _EgeMinValue;
		
		private EntityRef<BenefitItemC> _BenefitItemC;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBenefitItemIdChanging(int value);
    partial void OnBenefitItemIdChanged();
    partial void OnSubjectIdChanging(int value);
    partial void OnSubjectIdChanged();
    partial void OnEgeMinValueChanging(int value);
    partial void OnEgeMinValueChanged();
    #endregion
		
		public BenefitItemSubject()
		{
			this._BenefitItemC = default(EntityRef<BenefitItemC>);
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BenefitItemId", DbType="Int NOT NULL")]
		public int BenefitItemId
		{
			get
			{
				return this._BenefitItemId;
			}
			set
			{
				if ((this._BenefitItemId != value))
				{
					if (this._BenefitItemC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBenefitItemIdChanging(value);
					this.SendPropertyChanging();
					this._BenefitItemId = value;
					this.SendPropertyChanged("BenefitItemId");
					this.OnBenefitItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="Int NOT NULL")]
		public int SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeMinValue", DbType="Int NOT NULL")]
		public int EgeMinValue
		{
			get
			{
				return this._EgeMinValue;
			}
			set
			{
				if ((this._EgeMinValue != value))
				{
					this.OnEgeMinValueChanging(value);
					this.SendPropertyChanging();
					this._EgeMinValue = value;
					this.SendPropertyChanged("EgeMinValue");
					this.OnEgeMinValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BenefitItemC_BenefitItemSubject", Storage="_BenefitItemC", ThisKey="BenefitItemId", OtherKey="BenefitItemID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BenefitItemC BenefitItemC
		{
			get
			{
				return this._BenefitItemC.Entity;
			}
			set
			{
				BenefitItemC previousValue = this._BenefitItemC.Entity;
				if (((previousValue != value) 
							|| (this._BenefitItemC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BenefitItemC.Entity = null;
						previousValue.BenefitItemSubjects.Remove(this);
					}
					this._BenefitItemC.Entity = value;
					if ((value != null))
					{
						value.BenefitItemSubjects.Add(this);
						this._BenefitItemId = value.BenefitItemID;
					}
					else
					{
						this._BenefitItemId = default(int);
					}
					this.SendPropertyChanged("BenefitItemC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_BenefitItemSubject", Storage="_Subject", ThisKey="SubjectId", OtherKey="SubjectID", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.BenefitItemSubjects.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.BenefitItemSubjects.Add(this);
						this._SubjectId = value.SubjectID;
					}
					else
					{
						this._SubjectId = default(int);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_AdmissionVolume")]
	public partial class bulk_AdmissionVolume
	{
		
		private System.Nullable<int> _ID;
		
		private System.Nullable<System.Guid> _GUID;
		
		private int _InstitutionID;
		
		private int _ImportPackageID;
		
		private int _AdmissionItemTypeID;
		
		private int _DirectionID;
		
		private int _NumberBudgetO;
		
		private int _NumberBudgetOZ;
		
		private int _NumberBudgetZ;
		
		private int _NumberPaidO;
		
		private int _NumberPaidOZ;
		
		private int _NumberPaidZ;
		
		private string _UID;
		
		private System.Nullable<int> _Course;
		
		private System.Nullable<int> _CampaignID;
		
		private int _NumberTargetO;
		
		private int _NumberTargetOZ;
		
		private int _NumberTargetZ;
		
		private System.Nullable<int> _NumberQuotaO;
		
		private System.Nullable<int> _NumberQuotaOZ;
		
		private System.Nullable<int> _NumberQuotaZ;
		
		public bulk_AdmissionVolume()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this._GUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this._InstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageID", DbType="Int NOT NULL")]
		public int ImportPackageID
		{
			get
			{
				return this._ImportPackageID;
			}
			set
			{
				if ((this._ImportPackageID != value))
				{
					this._ImportPackageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionItemTypeID", DbType="Int NOT NULL")]
		public int AdmissionItemTypeID
		{
			get
			{
				return this._AdmissionItemTypeID;
			}
			set
			{
				if ((this._AdmissionItemTypeID != value))
				{
					this._AdmissionItemTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int NOT NULL")]
		public int DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					this._DirectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetO", DbType="Int NOT NULL")]
		public int NumberBudgetO
		{
			get
			{
				return this._NumberBudgetO;
			}
			set
			{
				if ((this._NumberBudgetO != value))
				{
					this._NumberBudgetO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetOZ", DbType="Int NOT NULL")]
		public int NumberBudgetOZ
		{
			get
			{
				return this._NumberBudgetOZ;
			}
			set
			{
				if ((this._NumberBudgetOZ != value))
				{
					this._NumberBudgetOZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetZ", DbType="Int NOT NULL")]
		public int NumberBudgetZ
		{
			get
			{
				return this._NumberBudgetZ;
			}
			set
			{
				if ((this._NumberBudgetZ != value))
				{
					this._NumberBudgetZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberPaidO", DbType="Int NOT NULL")]
		public int NumberPaidO
		{
			get
			{
				return this._NumberPaidO;
			}
			set
			{
				if ((this._NumberPaidO != value))
				{
					this._NumberPaidO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberPaidOZ", DbType="Int NOT NULL")]
		public int NumberPaidOZ
		{
			get
			{
				return this._NumberPaidOZ;
			}
			set
			{
				if ((this._NumberPaidOZ != value))
				{
					this._NumberPaidOZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberPaidZ", DbType="Int NOT NULL")]
		public int NumberPaidZ
		{
			get
			{
				return this._NumberPaidZ;
			}
			set
			{
				if ((this._NumberPaidZ != value))
				{
					this._NumberPaidZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this._UID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="Int")]
		public System.Nullable<int> Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this._Course = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int")]
		public System.Nullable<int> CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					this._CampaignID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTargetO", DbType="Int NOT NULL")]
		public int NumberTargetO
		{
			get
			{
				return this._NumberTargetO;
			}
			set
			{
				if ((this._NumberTargetO != value))
				{
					this._NumberTargetO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTargetOZ", DbType="Int NOT NULL")]
		public int NumberTargetOZ
		{
			get
			{
				return this._NumberTargetOZ;
			}
			set
			{
				if ((this._NumberTargetOZ != value))
				{
					this._NumberTargetOZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTargetZ", DbType="Int NOT NULL")]
		public int NumberTargetZ
		{
			get
			{
				return this._NumberTargetZ;
			}
			set
			{
				if ((this._NumberTargetZ != value))
				{
					this._NumberTargetZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberQuotaO", DbType="Int")]
		public System.Nullable<int> NumberQuotaO
		{
			get
			{
				return this._NumberQuotaO;
			}
			set
			{
				if ((this._NumberQuotaO != value))
				{
					this._NumberQuotaO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberQuotaOZ", DbType="Int")]
		public System.Nullable<int> NumberQuotaOZ
		{
			get
			{
				return this._NumberQuotaOZ;
			}
			set
			{
				if ((this._NumberQuotaOZ != value))
				{
					this._NumberQuotaOZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberQuotaZ", DbType="Int")]
		public System.Nullable<int> NumberQuotaZ
		{
			get
			{
				return this._NumberQuotaZ;
			}
			set
			{
				if ((this._NumberQuotaZ != value))
				{
					this._NumberQuotaZ = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_Application")]
	public partial class bulk_Application : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ApplicationID;
		
		private System.Nullable<int> _EntrantID;
		
		private System.DateTime _RegistrationDate;
		
		private int _InstitutionID;
		
		private System.Nullable<bool> _ApproveInstitutionCount;
		
		private System.Nullable<bool> _NeedHostel;
		
		private System.Nullable<bool> _FirstHigherEducation;
		
		private System.Nullable<bool> _ApprovePersonalData;
		
		private System.Nullable<bool> _FamiliarWithLicenseAndRules;
		
		private System.Nullable<bool> _FamiliarWithAdmissionType;
		
		private System.Nullable<bool> _FamiliarWithOriginalDocumentDeliveryDate;
		
		private int _StatusID;
		
		private int _WizardStepID;
		
		private int _ViolationID;
		
		private string _StatusDecision;
		
		private System.Nullable<System.DateTime> _LastCheckDate;
		
		private string _ViolationErrors;
		
		private System.Nullable<System.DateTime> _PublishDate;
		
		private byte _SourceID;
		
		private string _ApplicationNumber;
		
		private bool _OriginalDocumentsReceived;
		
		private System.Nullable<int> _OrderCompetitiveGroupID;
		
		private System.Nullable<int> _OrderOfAdmissionID;
		
		private System.Nullable<int> _OrderCompetitiveGroupItemID;
		
		private System.Nullable<decimal> _OrderCalculatedRating;
		
		private System.Nullable<short> _OrderCalculatedBenefitID;
		
		private System.Nullable<short> _OrderEducationFormID;
		
		private System.Nullable<short> _OrderEducationSourceID;
		
		private System.Nullable<System.DateTime> _LastDenyDate;
		
		private string _UID;
		
		private bool _IsRequiresBudgetO;
		
		private bool _IsRequiresBudgetOZ;
		
		private bool _IsRequiresBudgetZ;
		
		private bool _IsRequiresPaidO;
		
		private bool _IsRequiresPaidOZ;
		
		private bool _IsRequiresPaidZ;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<System.DateTime> _OriginalDocumentsReceivedDate;
		
		private System.Nullable<System.DateTime> _LastEgeDocumentsCheckDate;
		
		private System.Nullable<int> _OrderCompetitiveGroupTargetID;
		
		private bool _IsRequiresTargetO;
		
		private bool _IsRequiresTargetOZ;
		
		private bool _IsRequiresTargetZ;
		
		private System.Nullable<System.Guid> _ApplicationGUID;
		
		private System.Nullable<int> _Priority;
		
		private string _EntrantUID;
		
		private int _ImportPackageID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnEntrantIDChanging(System.Nullable<int> value);
    partial void OnEntrantIDChanged();
    partial void OnRegistrationDateChanging(System.DateTime value);
    partial void OnRegistrationDateChanged();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnApproveInstitutionCountChanging(System.Nullable<bool> value);
    partial void OnApproveInstitutionCountChanged();
    partial void OnNeedHostelChanging(System.Nullable<bool> value);
    partial void OnNeedHostelChanged();
    partial void OnFirstHigherEducationChanging(System.Nullable<bool> value);
    partial void OnFirstHigherEducationChanged();
    partial void OnApprovePersonalDataChanging(System.Nullable<bool> value);
    partial void OnApprovePersonalDataChanged();
    partial void OnFamiliarWithLicenseAndRulesChanging(System.Nullable<bool> value);
    partial void OnFamiliarWithLicenseAndRulesChanged();
    partial void OnFamiliarWithAdmissionTypeChanging(System.Nullable<bool> value);
    partial void OnFamiliarWithAdmissionTypeChanged();
    partial void OnFamiliarWithOriginalDocumentDeliveryDateChanging(System.Nullable<bool> value);
    partial void OnFamiliarWithOriginalDocumentDeliveryDateChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnWizardStepIDChanging(int value);
    partial void OnWizardStepIDChanged();
    partial void OnViolationIDChanging(int value);
    partial void OnViolationIDChanged();
    partial void OnStatusDecisionChanging(string value);
    partial void OnStatusDecisionChanged();
    partial void OnLastCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastCheckDateChanged();
    partial void OnViolationErrorsChanging(string value);
    partial void OnViolationErrorsChanged();
    partial void OnPublishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishDateChanged();
    partial void OnSourceIDChanging(byte value);
    partial void OnSourceIDChanged();
    partial void OnApplicationNumberChanging(string value);
    partial void OnApplicationNumberChanged();
    partial void OnOriginalDocumentsReceivedChanging(bool value);
    partial void OnOriginalDocumentsReceivedChanged();
    partial void OnOrderCompetitiveGroupIDChanging(System.Nullable<int> value);
    partial void OnOrderCompetitiveGroupIDChanged();
    partial void OnOrderOfAdmissionIDChanging(System.Nullable<int> value);
    partial void OnOrderOfAdmissionIDChanged();
    partial void OnOrderCompetitiveGroupItemIDChanging(System.Nullable<int> value);
    partial void OnOrderCompetitiveGroupItemIDChanged();
    partial void OnOrderCalculatedRatingChanging(System.Nullable<decimal> value);
    partial void OnOrderCalculatedRatingChanged();
    partial void OnOrderCalculatedBenefitIDChanging(System.Nullable<short> value);
    partial void OnOrderCalculatedBenefitIDChanged();
    partial void OnOrderEducationFormIDChanging(System.Nullable<short> value);
    partial void OnOrderEducationFormIDChanged();
    partial void OnOrderEducationSourceIDChanging(System.Nullable<short> value);
    partial void OnOrderEducationSourceIDChanged();
    partial void OnLastDenyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastDenyDateChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnIsRequiresBudgetOChanging(bool value);
    partial void OnIsRequiresBudgetOChanged();
    partial void OnIsRequiresBudgetOZChanging(bool value);
    partial void OnIsRequiresBudgetOZChanged();
    partial void OnIsRequiresBudgetZChanging(bool value);
    partial void OnIsRequiresBudgetZChanged();
    partial void OnIsRequiresPaidOChanging(bool value);
    partial void OnIsRequiresPaidOChanged();
    partial void OnIsRequiresPaidOZChanging(bool value);
    partial void OnIsRequiresPaidOZChanged();
    partial void OnIsRequiresPaidZChanging(bool value);
    partial void OnIsRequiresPaidZChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnOriginalDocumentsReceivedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOriginalDocumentsReceivedDateChanged();
    partial void OnLastEgeDocumentsCheckDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastEgeDocumentsCheckDateChanged();
    partial void OnOrderCompetitiveGroupTargetIDChanging(System.Nullable<int> value);
    partial void OnOrderCompetitiveGroupTargetIDChanged();
    partial void OnIsRequiresTargetOChanging(bool value);
    partial void OnIsRequiresTargetOChanged();
    partial void OnIsRequiresTargetOZChanging(bool value);
    partial void OnIsRequiresTargetOZChanged();
    partial void OnIsRequiresTargetZChanging(bool value);
    partial void OnIsRequiresTargetZChanged();
    partial void OnApplicationGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnApplicationGUIDChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnEntrantUIDChanging(string value);
    partial void OnEntrantUIDChanged();
    partial void OnImportPackageIDChanging(int value);
    partial void OnImportPackageIDChanged();
    #endregion
		
		public bulk_Application()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantID", DbType="Int")]
		public System.Nullable<int> EntrantID
		{
			get
			{
				return this._EntrantID;
			}
			set
			{
				if ((this._EntrantID != value))
				{
					this.OnEntrantIDChanging(value);
					this.SendPropertyChanging();
					this._EntrantID = value;
					this.SendPropertyChanged("EntrantID");
					this.OnEntrantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="DateTime NOT NULL")]
		public System.DateTime RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this.OnRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDate = value;
					this.SendPropertyChanged("RegistrationDate");
					this.OnRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproveInstitutionCount", DbType="Bit")]
		public System.Nullable<bool> ApproveInstitutionCount
		{
			get
			{
				return this._ApproveInstitutionCount;
			}
			set
			{
				if ((this._ApproveInstitutionCount != value))
				{
					this.OnApproveInstitutionCountChanging(value);
					this.SendPropertyChanging();
					this._ApproveInstitutionCount = value;
					this.SendPropertyChanged("ApproveInstitutionCount");
					this.OnApproveInstitutionCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedHostel", DbType="Bit")]
		public System.Nullable<bool> NeedHostel
		{
			get
			{
				return this._NeedHostel;
			}
			set
			{
				if ((this._NeedHostel != value))
				{
					this.OnNeedHostelChanging(value);
					this.SendPropertyChanging();
					this._NeedHostel = value;
					this.SendPropertyChanged("NeedHostel");
					this.OnNeedHostelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstHigherEducation", DbType="Bit")]
		public System.Nullable<bool> FirstHigherEducation
		{
			get
			{
				return this._FirstHigherEducation;
			}
			set
			{
				if ((this._FirstHigherEducation != value))
				{
					this.OnFirstHigherEducationChanging(value);
					this.SendPropertyChanging();
					this._FirstHigherEducation = value;
					this.SendPropertyChanged("FirstHigherEducation");
					this.OnFirstHigherEducationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApprovePersonalData", DbType="Bit")]
		public System.Nullable<bool> ApprovePersonalData
		{
			get
			{
				return this._ApprovePersonalData;
			}
			set
			{
				if ((this._ApprovePersonalData != value))
				{
					this.OnApprovePersonalDataChanging(value);
					this.SendPropertyChanging();
					this._ApprovePersonalData = value;
					this.SendPropertyChanged("ApprovePersonalData");
					this.OnApprovePersonalDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamiliarWithLicenseAndRules", DbType="Bit")]
		public System.Nullable<bool> FamiliarWithLicenseAndRules
		{
			get
			{
				return this._FamiliarWithLicenseAndRules;
			}
			set
			{
				if ((this._FamiliarWithLicenseAndRules != value))
				{
					this.OnFamiliarWithLicenseAndRulesChanging(value);
					this.SendPropertyChanging();
					this._FamiliarWithLicenseAndRules = value;
					this.SendPropertyChanged("FamiliarWithLicenseAndRules");
					this.OnFamiliarWithLicenseAndRulesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamiliarWithAdmissionType", DbType="Bit")]
		public System.Nullable<bool> FamiliarWithAdmissionType
		{
			get
			{
				return this._FamiliarWithAdmissionType;
			}
			set
			{
				if ((this._FamiliarWithAdmissionType != value))
				{
					this.OnFamiliarWithAdmissionTypeChanging(value);
					this.SendPropertyChanging();
					this._FamiliarWithAdmissionType = value;
					this.SendPropertyChanged("FamiliarWithAdmissionType");
					this.OnFamiliarWithAdmissionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamiliarWithOriginalDocumentDeliveryDate", DbType="Bit")]
		public System.Nullable<bool> FamiliarWithOriginalDocumentDeliveryDate
		{
			get
			{
				return this._FamiliarWithOriginalDocumentDeliveryDate;
			}
			set
			{
				if ((this._FamiliarWithOriginalDocumentDeliveryDate != value))
				{
					this.OnFamiliarWithOriginalDocumentDeliveryDateChanging(value);
					this.SendPropertyChanging();
					this._FamiliarWithOriginalDocumentDeliveryDate = value;
					this.SendPropertyChanged("FamiliarWithOriginalDocumentDeliveryDate");
					this.OnFamiliarWithOriginalDocumentDeliveryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WizardStepID", DbType="Int NOT NULL")]
		public int WizardStepID
		{
			get
			{
				return this._WizardStepID;
			}
			set
			{
				if ((this._WizardStepID != value))
				{
					this.OnWizardStepIDChanging(value);
					this.SendPropertyChanging();
					this._WizardStepID = value;
					this.SendPropertyChanged("WizardStepID");
					this.OnWizardStepIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolationID", DbType="Int NOT NULL")]
		public int ViolationID
		{
			get
			{
				return this._ViolationID;
			}
			set
			{
				if ((this._ViolationID != value))
				{
					this.OnViolationIDChanging(value);
					this.SendPropertyChanging();
					this._ViolationID = value;
					this.SendPropertyChanged("ViolationID");
					this.OnViolationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusDecision", DbType="VarChar(MAX)")]
		public string StatusDecision
		{
			get
			{
				return this._StatusDecision;
			}
			set
			{
				if ((this._StatusDecision != value))
				{
					this.OnStatusDecisionChanging(value);
					this.SendPropertyChanging();
					this._StatusDecision = value;
					this.SendPropertyChanged("StatusDecision");
					this.OnStatusDecisionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastCheckDate
		{
			get
			{
				return this._LastCheckDate;
			}
			set
			{
				if ((this._LastCheckDate != value))
				{
					this.OnLastCheckDateChanging(value);
					this.SendPropertyChanging();
					this._LastCheckDate = value;
					this.SendPropertyChanged("LastCheckDate");
					this.OnLastCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ViolationErrors", DbType="VarChar(MAX)")]
		public string ViolationErrors
		{
			get
			{
				return this._ViolationErrors;
			}
			set
			{
				if ((this._ViolationErrors != value))
				{
					this.OnViolationErrorsChanging(value);
					this.SendPropertyChanging();
					this._ViolationErrors = value;
					this.SendPropertyChanged("ViolationErrors");
					this.OnViolationErrorsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishDate
		{
			get
			{
				return this._PublishDate;
			}
			set
			{
				if ((this._PublishDate != value))
				{
					this.OnPublishDateChanging(value);
					this.SendPropertyChanging();
					this._PublishDate = value;
					this.SendPropertyChanged("PublishDate");
					this.OnPublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="TinyInt NOT NULL")]
		public byte SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationNumber", DbType="VarChar(50)")]
		public string ApplicationNumber
		{
			get
			{
				return this._ApplicationNumber;
			}
			set
			{
				if ((this._ApplicationNumber != value))
				{
					this.OnApplicationNumberChanging(value);
					this.SendPropertyChanging();
					this._ApplicationNumber = value;
					this.SendPropertyChanged("ApplicationNumber");
					this.OnApplicationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalDocumentsReceived", DbType="Bit NOT NULL")]
		public bool OriginalDocumentsReceived
		{
			get
			{
				return this._OriginalDocumentsReceived;
			}
			set
			{
				if ((this._OriginalDocumentsReceived != value))
				{
					this.OnOriginalDocumentsReceivedChanging(value);
					this.SendPropertyChanging();
					this._OriginalDocumentsReceived = value;
					this.SendPropertyChanged("OriginalDocumentsReceived");
					this.OnOriginalDocumentsReceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCompetitiveGroupID", DbType="Int")]
		public System.Nullable<int> OrderCompetitiveGroupID
		{
			get
			{
				return this._OrderCompetitiveGroupID;
			}
			set
			{
				if ((this._OrderCompetitiveGroupID != value))
				{
					this.OnOrderCompetitiveGroupIDChanging(value);
					this.SendPropertyChanging();
					this._OrderCompetitiveGroupID = value;
					this.SendPropertyChanged("OrderCompetitiveGroupID");
					this.OnOrderCompetitiveGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderOfAdmissionID", DbType="Int")]
		public System.Nullable<int> OrderOfAdmissionID
		{
			get
			{
				return this._OrderOfAdmissionID;
			}
			set
			{
				if ((this._OrderOfAdmissionID != value))
				{
					this.OnOrderOfAdmissionIDChanging(value);
					this.SendPropertyChanging();
					this._OrderOfAdmissionID = value;
					this.SendPropertyChanged("OrderOfAdmissionID");
					this.OnOrderOfAdmissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCompetitiveGroupItemID", DbType="Int")]
		public System.Nullable<int> OrderCompetitiveGroupItemID
		{
			get
			{
				return this._OrderCompetitiveGroupItemID;
			}
			set
			{
				if ((this._OrderCompetitiveGroupItemID != value))
				{
					this.OnOrderCompetitiveGroupItemIDChanging(value);
					this.SendPropertyChanging();
					this._OrderCompetitiveGroupItemID = value;
					this.SendPropertyChanged("OrderCompetitiveGroupItemID");
					this.OnOrderCompetitiveGroupItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCalculatedRating", DbType="Decimal(10,4)")]
		public System.Nullable<decimal> OrderCalculatedRating
		{
			get
			{
				return this._OrderCalculatedRating;
			}
			set
			{
				if ((this._OrderCalculatedRating != value))
				{
					this.OnOrderCalculatedRatingChanging(value);
					this.SendPropertyChanging();
					this._OrderCalculatedRating = value;
					this.SendPropertyChanged("OrderCalculatedRating");
					this.OnOrderCalculatedRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCalculatedBenefitID", DbType="SmallInt")]
		public System.Nullable<short> OrderCalculatedBenefitID
		{
			get
			{
				return this._OrderCalculatedBenefitID;
			}
			set
			{
				if ((this._OrderCalculatedBenefitID != value))
				{
					this.OnOrderCalculatedBenefitIDChanging(value);
					this.SendPropertyChanging();
					this._OrderCalculatedBenefitID = value;
					this.SendPropertyChanged("OrderCalculatedBenefitID");
					this.OnOrderCalculatedBenefitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderEducationFormID", DbType="SmallInt")]
		public System.Nullable<short> OrderEducationFormID
		{
			get
			{
				return this._OrderEducationFormID;
			}
			set
			{
				if ((this._OrderEducationFormID != value))
				{
					this.OnOrderEducationFormIDChanging(value);
					this.SendPropertyChanging();
					this._OrderEducationFormID = value;
					this.SendPropertyChanged("OrderEducationFormID");
					this.OnOrderEducationFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderEducationSourceID", DbType="SmallInt")]
		public System.Nullable<short> OrderEducationSourceID
		{
			get
			{
				return this._OrderEducationSourceID;
			}
			set
			{
				if ((this._OrderEducationSourceID != value))
				{
					this.OnOrderEducationSourceIDChanging(value);
					this.SendPropertyChanging();
					this._OrderEducationSourceID = value;
					this.SendPropertyChanged("OrderEducationSourceID");
					this.OnOrderEducationSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDenyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastDenyDate
		{
			get
			{
				return this._LastDenyDate;
			}
			set
			{
				if ((this._LastDenyDate != value))
				{
					this.OnLastDenyDateChanging(value);
					this.SendPropertyChanging();
					this._LastDenyDate = value;
					this.SendPropertyChanged("LastDenyDate");
					this.OnLastDenyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresBudgetO", DbType="Bit NOT NULL")]
		public bool IsRequiresBudgetO
		{
			get
			{
				return this._IsRequiresBudgetO;
			}
			set
			{
				if ((this._IsRequiresBudgetO != value))
				{
					this.OnIsRequiresBudgetOChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresBudgetO = value;
					this.SendPropertyChanged("IsRequiresBudgetO");
					this.OnIsRequiresBudgetOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresBudgetOZ", DbType="Bit NOT NULL")]
		public bool IsRequiresBudgetOZ
		{
			get
			{
				return this._IsRequiresBudgetOZ;
			}
			set
			{
				if ((this._IsRequiresBudgetOZ != value))
				{
					this.OnIsRequiresBudgetOZChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresBudgetOZ = value;
					this.SendPropertyChanged("IsRequiresBudgetOZ");
					this.OnIsRequiresBudgetOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresBudgetZ", DbType="Bit NOT NULL")]
		public bool IsRequiresBudgetZ
		{
			get
			{
				return this._IsRequiresBudgetZ;
			}
			set
			{
				if ((this._IsRequiresBudgetZ != value))
				{
					this.OnIsRequiresBudgetZChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresBudgetZ = value;
					this.SendPropertyChanged("IsRequiresBudgetZ");
					this.OnIsRequiresBudgetZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresPaidO", DbType="Bit NOT NULL")]
		public bool IsRequiresPaidO
		{
			get
			{
				return this._IsRequiresPaidO;
			}
			set
			{
				if ((this._IsRequiresPaidO != value))
				{
					this.OnIsRequiresPaidOChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresPaidO = value;
					this.SendPropertyChanged("IsRequiresPaidO");
					this.OnIsRequiresPaidOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresPaidOZ", DbType="Bit NOT NULL")]
		public bool IsRequiresPaidOZ
		{
			get
			{
				return this._IsRequiresPaidOZ;
			}
			set
			{
				if ((this._IsRequiresPaidOZ != value))
				{
					this.OnIsRequiresPaidOZChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresPaidOZ = value;
					this.SendPropertyChanged("IsRequiresPaidOZ");
					this.OnIsRequiresPaidOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresPaidZ", DbType="Bit NOT NULL")]
		public bool IsRequiresPaidZ
		{
			get
			{
				return this._IsRequiresPaidZ;
			}
			set
			{
				if ((this._IsRequiresPaidZ != value))
				{
					this.OnIsRequiresPaidZChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresPaidZ = value;
					this.SendPropertyChanged("IsRequiresPaidZ");
					this.OnIsRequiresPaidZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalDocumentsReceivedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OriginalDocumentsReceivedDate
		{
			get
			{
				return this._OriginalDocumentsReceivedDate;
			}
			set
			{
				if ((this._OriginalDocumentsReceivedDate != value))
				{
					this.OnOriginalDocumentsReceivedDateChanging(value);
					this.SendPropertyChanging();
					this._OriginalDocumentsReceivedDate = value;
					this.SendPropertyChanged("OriginalDocumentsReceivedDate");
					this.OnOriginalDocumentsReceivedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEgeDocumentsCheckDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastEgeDocumentsCheckDate
		{
			get
			{
				return this._LastEgeDocumentsCheckDate;
			}
			set
			{
				if ((this._LastEgeDocumentsCheckDate != value))
				{
					this.OnLastEgeDocumentsCheckDateChanging(value);
					this.SendPropertyChanging();
					this._LastEgeDocumentsCheckDate = value;
					this.SendPropertyChanged("LastEgeDocumentsCheckDate");
					this.OnLastEgeDocumentsCheckDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCompetitiveGroupTargetID", DbType="Int")]
		public System.Nullable<int> OrderCompetitiveGroupTargetID
		{
			get
			{
				return this._OrderCompetitiveGroupTargetID;
			}
			set
			{
				if ((this._OrderCompetitiveGroupTargetID != value))
				{
					this.OnOrderCompetitiveGroupTargetIDChanging(value);
					this.SendPropertyChanging();
					this._OrderCompetitiveGroupTargetID = value;
					this.SendPropertyChanged("OrderCompetitiveGroupTargetID");
					this.OnOrderCompetitiveGroupTargetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresTargetO", DbType="Bit NOT NULL")]
		public bool IsRequiresTargetO
		{
			get
			{
				return this._IsRequiresTargetO;
			}
			set
			{
				if ((this._IsRequiresTargetO != value))
				{
					this.OnIsRequiresTargetOChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresTargetO = value;
					this.SendPropertyChanged("IsRequiresTargetO");
					this.OnIsRequiresTargetOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresTargetOZ", DbType="Bit NOT NULL")]
		public bool IsRequiresTargetOZ
		{
			get
			{
				return this._IsRequiresTargetOZ;
			}
			set
			{
				if ((this._IsRequiresTargetOZ != value))
				{
					this.OnIsRequiresTargetOZChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresTargetOZ = value;
					this.SendPropertyChanged("IsRequiresTargetOZ");
					this.OnIsRequiresTargetOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRequiresTargetZ", DbType="Bit NOT NULL")]
		public bool IsRequiresTargetZ
		{
			get
			{
				return this._IsRequiresTargetZ;
			}
			set
			{
				if ((this._IsRequiresTargetZ != value))
				{
					this.OnIsRequiresTargetZChanging(value);
					this.SendPropertyChanging();
					this._IsRequiresTargetZ = value;
					this.SendPropertyChanged("IsRequiresTargetZ");
					this.OnIsRequiresTargetZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ApplicationGUID
		{
			get
			{
				return this._ApplicationGUID;
			}
			set
			{
				if ((this._ApplicationGUID != value))
				{
					this.OnApplicationGUIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationGUID = value;
					this.SendPropertyChanged("ApplicationGUID");
					this.OnApplicationGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantUID", DbType="VarChar(200)")]
		public string EntrantUID
		{
			get
			{
				return this._EntrantUID;
			}
			set
			{
				if ((this._EntrantUID != value))
				{
					this.OnEntrantUIDChanging(value);
					this.SendPropertyChanging();
					this._EntrantUID = value;
					this.SendPropertyChanged("EntrantUID");
					this.OnEntrantUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageID", DbType="Int NOT NULL")]
		public int ImportPackageID
		{
			get
			{
				return this._ImportPackageID;
			}
			set
			{
				if ((this._ImportPackageID != value))
				{
					this.OnImportPackageIDChanging(value);
					this.SendPropertyChanging();
					this._ImportPackageID = value;
					this.SendPropertyChanged("ImportPackageID");
					this.OnImportPackageIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_ApplicationCompetitiveGroupItem")]
	public partial class bulk_ApplicationCompetitiveGroupItem
	{
		
		private System.Guid _Id;
		
		private System.Guid _ParentId;
		
		private System.Nullable<int> _CompetitiveGroupID;
		
		private System.Nullable<int> _CompetitiveGroupItemID;
		
		private System.Nullable<int> _CompetitiveGroupTargetID;
		
		private int _EducationForm;
		
		private int _EducationSource;
		
		private System.Nullable<int> _Priority;
		
		private int _ImportPackageId;
		
		private int _InstitutionId;
		
		public bulk_ApplicationCompetitiveGroupItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupID", DbType="Int")]
		public System.Nullable<int> CompetitiveGroupID
		{
			get
			{
				return this._CompetitiveGroupID;
			}
			set
			{
				if ((this._CompetitiveGroupID != value))
				{
					this._CompetitiveGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupItemID", DbType="Int")]
		public System.Nullable<int> CompetitiveGroupItemID
		{
			get
			{
				return this._CompetitiveGroupItemID;
			}
			set
			{
				if ((this._CompetitiveGroupItemID != value))
				{
					this._CompetitiveGroupItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupTargetID", DbType="Int")]
		public System.Nullable<int> CompetitiveGroupTargetID
		{
			get
			{
				return this._CompetitiveGroupTargetID;
			}
			set
			{
				if ((this._CompetitiveGroupTargetID != value))
				{
					this._CompetitiveGroupTargetID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationForm", DbType="Int NOT NULL")]
		public int EducationForm
		{
			get
			{
				return this._EducationForm;
			}
			set
			{
				if ((this._EducationForm != value))
				{
					this._EducationForm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationSource", DbType="Int NOT NULL")]
		public int EducationSource
		{
			get
			{
				return this._EducationSource;
			}
			set
			{
				if ((this._EducationSource != value))
				{
					this._EducationSource = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this._Priority = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageId", DbType="Int NOT NULL")]
		public int ImportPackageId
		{
			get
			{
				return this._ImportPackageId;
			}
			set
			{
				if ((this._ImportPackageId != value))
				{
					this._ImportPackageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionId", DbType="Int NOT NULL")]
		public int InstitutionId
		{
			get
			{
				return this._InstitutionId;
			}
			set
			{
				if ((this._InstitutionId != value))
				{
					this._InstitutionId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_ApplicationEntranceTestDocument")]
	public partial class bulk_ApplicationEntranceTestDocument
	{
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private string _UID;
		
		private int _ImportPackageId;
		
		private int _InstitutionId;
		
		private System.Nullable<decimal> _ResultValue;
		
		private System.Nullable<short> _EntranceTestTypeId;
		
		private System.Nullable<int> _CompetitiveGroupID;
		
		private System.Nullable<int> _EntranceTestItemID;
		
		private System.Nullable<int> _SubjectId;
		
		private System.Nullable<int> _SourceId;
		
		private System.Nullable<int> _BenefitId;
		
		private System.Nullable<int> _InstitutionDocumentTypeId;
		
		private System.Nullable<System.DateTime> _InstitutionDocumentDate;
		
		private string _InstitutionDocumentNumber;
		
		private string _EgeDocumentId;
		
		private System.Nullable<System.Guid> _BenefitEntrantDocumentId;
		
		private System.Nullable<int> _EgeResultValue;
		
		private System.Nullable<System.Guid> _ETEntrantDocumentId;
		
		public bulk_ApplicationEntranceTestDocument()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this._UID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageId", DbType="Int NOT NULL")]
		public int ImportPackageId
		{
			get
			{
				return this._ImportPackageId;
			}
			set
			{
				if ((this._ImportPackageId != value))
				{
					this._ImportPackageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionId", DbType="Int NOT NULL")]
		public int InstitutionId
		{
			get
			{
				return this._InstitutionId;
			}
			set
			{
				if ((this._InstitutionId != value))
				{
					this._InstitutionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultValue", DbType="Decimal(7,4)")]
		public System.Nullable<decimal> ResultValue
		{
			get
			{
				return this._ResultValue;
			}
			set
			{
				if ((this._ResultValue != value))
				{
					this._ResultValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceTestTypeId", DbType="SmallInt")]
		public System.Nullable<short> EntranceTestTypeId
		{
			get
			{
				return this._EntranceTestTypeId;
			}
			set
			{
				if ((this._EntranceTestTypeId != value))
				{
					this._EntranceTestTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupID", DbType="Int")]
		public System.Nullable<int> CompetitiveGroupID
		{
			get
			{
				return this._CompetitiveGroupID;
			}
			set
			{
				if ((this._CompetitiveGroupID != value))
				{
					this._CompetitiveGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceTestItemID", DbType="Int")]
		public System.Nullable<int> EntranceTestItemID
		{
			get
			{
				return this._EntranceTestItemID;
			}
			set
			{
				if ((this._EntranceTestItemID != value))
				{
					this._EntranceTestItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="Int")]
		public System.Nullable<int> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this._SubjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceId", DbType="Int")]
		public System.Nullable<int> SourceId
		{
			get
			{
				return this._SourceId;
			}
			set
			{
				if ((this._SourceId != value))
				{
					this._SourceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BenefitId", DbType="Int")]
		public System.Nullable<int> BenefitId
		{
			get
			{
				return this._BenefitId;
			}
			set
			{
				if ((this._BenefitId != value))
				{
					this._BenefitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionDocumentTypeId", DbType="Int")]
		public System.Nullable<int> InstitutionDocumentTypeId
		{
			get
			{
				return this._InstitutionDocumentTypeId;
			}
			set
			{
				if ((this._InstitutionDocumentTypeId != value))
				{
					this._InstitutionDocumentTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionDocumentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InstitutionDocumentDate
		{
			get
			{
				return this._InstitutionDocumentDate;
			}
			set
			{
				if ((this._InstitutionDocumentDate != value))
				{
					this._InstitutionDocumentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionDocumentNumber", DbType="VarChar(50)")]
		public string InstitutionDocumentNumber
		{
			get
			{
				return this._InstitutionDocumentNumber;
			}
			set
			{
				if ((this._InstitutionDocumentNumber != value))
				{
					this._InstitutionDocumentNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeDocumentId", DbType="VarChar(200)")]
		public string EgeDocumentId
		{
			get
			{
				return this._EgeDocumentId;
			}
			set
			{
				if ((this._EgeDocumentId != value))
				{
					this._EgeDocumentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BenefitEntrantDocumentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BenefitEntrantDocumentId
		{
			get
			{
				return this._BenefitEntrantDocumentId;
			}
			set
			{
				if ((this._BenefitEntrantDocumentId != value))
				{
					this._BenefitEntrantDocumentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeResultValue", DbType="Int")]
		public System.Nullable<int> EgeResultValue
		{
			get
			{
				return this._EgeResultValue;
			}
			set
			{
				if ((this._EgeResultValue != value))
				{
					this._EgeResultValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ETEntrantDocumentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ETEntrantDocumentId
		{
			get
			{
				return this._ETEntrantDocumentId;
			}
			set
			{
				if ((this._ETEntrantDocumentId != value))
				{
					this._ETEntrantDocumentId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_ApplicationIndividualAchievements")]
	public partial class bulk_ApplicationIndividualAchievement
	{
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private int _ImportPackageId;
		
		private int _InstitutionId;
		
		private string _IAUID;
		
		private string _IAName;
		
		private System.Nullable<decimal> _IAMark;
		
		private string _EntrantDocumentUID;
		
		private System.Nullable<int> _EntrantDocumentID;
		
		private System.Nullable<int> _InstitutionArchievementID;
		
		public bulk_ApplicationIndividualAchievement()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageId", DbType="Int NOT NULL")]
		public int ImportPackageId
		{
			get
			{
				return this._ImportPackageId;
			}
			set
			{
				if ((this._ImportPackageId != value))
				{
					this._ImportPackageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionId", DbType="Int NOT NULL")]
		public int InstitutionId
		{
			get
			{
				return this._InstitutionId;
			}
			set
			{
				if ((this._InstitutionId != value))
				{
					this._InstitutionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IAUID", DbType="VarChar(200)")]
		public string IAUID
		{
			get
			{
				return this._IAUID;
			}
			set
			{
				if ((this._IAUID != value))
				{
					this._IAUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IAName", DbType="VarChar(500)")]
		public string IAName
		{
			get
			{
				return this._IAName;
			}
			set
			{
				if ((this._IAName != value))
				{
					this._IAName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IAMark", DbType="Decimal(7,4)")]
		public System.Nullable<decimal> IAMark
		{
			get
			{
				return this._IAMark;
			}
			set
			{
				if ((this._IAMark != value))
				{
					this._IAMark = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantDocumentUID", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EntrantDocumentUID
		{
			get
			{
				return this._EntrantDocumentUID;
			}
			set
			{
				if ((this._EntrantDocumentUID != value))
				{
					this._EntrantDocumentUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantDocumentID", DbType="Int")]
		public System.Nullable<int> EntrantDocumentID
		{
			get
			{
				return this._EntrantDocumentID;
			}
			set
			{
				if ((this._EntrantDocumentID != value))
				{
					this._EntrantDocumentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionArchievementID", DbType="Int")]
		public System.Nullable<int> InstitutionArchievementID
		{
			get
			{
				return this._InstitutionArchievementID;
			}
			set
			{
				if ((this._InstitutionArchievementID != value))
				{
					this._InstitutionArchievementID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_ApplicationSelectedCompetitiveGroup")]
	public partial class bulk_ApplicationSelectedCompetitiveGroup
	{
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private string _UID;
		
		private int _CompetitiveGroupID;
		
		private System.Nullable<decimal> _CalculatedRating;
		
		private System.Nullable<int> _CalculatedBenefitId;
		
		private int _ImportPackageId;
		
		private int _InstitutionId;
		
		public bulk_ApplicationSelectedCompetitiveGroup()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this._UID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupID", DbType="Int NOT NULL")]
		public int CompetitiveGroupID
		{
			get
			{
				return this._CompetitiveGroupID;
			}
			set
			{
				if ((this._CompetitiveGroupID != value))
				{
					this._CompetitiveGroupID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedRating", DbType="Decimal(10,4)")]
		public System.Nullable<decimal> CalculatedRating
		{
			get
			{
				return this._CalculatedRating;
			}
			set
			{
				if ((this._CalculatedRating != value))
				{
					this._CalculatedRating = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculatedBenefitId", DbType="Int")]
		public System.Nullable<int> CalculatedBenefitId
		{
			get
			{
				return this._CalculatedBenefitId;
			}
			set
			{
				if ((this._CalculatedBenefitId != value))
				{
					this._CalculatedBenefitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageId", DbType="Int NOT NULL")]
		public int ImportPackageId
		{
			get
			{
				return this._ImportPackageId;
			}
			set
			{
				if ((this._ImportPackageId != value))
				{
					this._ImportPackageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionId", DbType="Int NOT NULL")]
		public int InstitutionId
		{
			get
			{
				return this._InstitutionId;
			}
			set
			{
				if ((this._InstitutionId != value))
				{
					this._InstitutionId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_ApplicationSelectedCompetitiveGroupItem")]
	public partial class bulk_ApplicationSelectedCompetitiveGroupItem
	{
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private int _CompetitiveGroupItemID;
		
		private int _ImportPackageId;
		
		private int _InstitutionId;
		
		public bulk_ApplicationSelectedCompetitiveGroupItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupItemID", DbType="Int NOT NULL")]
		public int CompetitiveGroupItemID
		{
			get
			{
				return this._CompetitiveGroupItemID;
			}
			set
			{
				if ((this._CompetitiveGroupItemID != value))
				{
					this._CompetitiveGroupItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageId", DbType="Int NOT NULL")]
		public int ImportPackageId
		{
			get
			{
				return this._ImportPackageId;
			}
			set
			{
				if ((this._ImportPackageId != value))
				{
					this._ImportPackageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionId", DbType="Int NOT NULL")]
		public int InstitutionId
		{
			get
			{
				return this._InstitutionId;
			}
			set
			{
				if ((this._InstitutionId != value))
				{
					this._InstitutionId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_ApplicationSelectedCompetitiveGroupTarget")]
	public partial class bulk_ApplicationSelectedCompetitiveGroupTarget
	{
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private int _CompetitiveGroupTargetID;
		
		private bool _IsForO;
		
		private bool _IsForOZ;
		
		private bool _IsForZ;
		
		private int _ImportPackageId;
		
		private int _InstitutionId;
		
		public bulk_ApplicationSelectedCompetitiveGroupTarget()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupTargetID", DbType="Int NOT NULL")]
		public int CompetitiveGroupTargetID
		{
			get
			{
				return this._CompetitiveGroupTargetID;
			}
			set
			{
				if ((this._CompetitiveGroupTargetID != value))
				{
					this._CompetitiveGroupTargetID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForO", DbType="Bit NOT NULL")]
		public bool IsForO
		{
			get
			{
				return this._IsForO;
			}
			set
			{
				if ((this._IsForO != value))
				{
					this._IsForO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForOZ", DbType="Bit NOT NULL")]
		public bool IsForOZ
		{
			get
			{
				return this._IsForOZ;
			}
			set
			{
				if ((this._IsForOZ != value))
				{
					this._IsForOZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForZ", DbType="Bit NOT NULL")]
		public bool IsForZ
		{
			get
			{
				return this._IsForZ;
			}
			set
			{
				if ((this._IsForZ != value))
				{
					this._IsForZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageId", DbType="Int NOT NULL")]
		public int ImportPackageId
		{
			get
			{
				return this._ImportPackageId;
			}
			set
			{
				if ((this._ImportPackageId != value))
				{
					this._ImportPackageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionId", DbType="Int NOT NULL")]
		public int InstitutionId
		{
			get
			{
				return this._InstitutionId;
			}
			set
			{
				if ((this._InstitutionId != value))
				{
					this._InstitutionId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_BenefitItemC")]
	public partial class bulk_BenefitItemC
	{
		
		private System.Nullable<int> _ID;
		
		private System.Guid _GUID;
		
		private System.Nullable<System.Guid> _ParentCompetitiveGroup;
		
		private System.Nullable<System.Guid> _ParentEntranceTestItem;
		
		private int _InstitutionID;
		
		private int _ImportPackageID;
		
		private short _OlympicDiplomTypeID;
		
		private short _OlympicLevelFlags;
		
		private short _BenefitID;
		
		private bool _IsForAllOlympic;
		
		private bool _IsProfileSubject;
		
		private string _UID;
		
		private int _OlympicYear;
		
		private System.Nullable<int> _EgeMinValue;
		
		public bulk_BenefitItemC()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this._GUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentCompetitiveGroup", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentCompetitiveGroup
		{
			get
			{
				return this._ParentCompetitiveGroup;
			}
			set
			{
				if ((this._ParentCompetitiveGroup != value))
				{
					this._ParentCompetitiveGroup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentEntranceTestItem", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentEntranceTestItem
		{
			get
			{
				return this._ParentEntranceTestItem;
			}
			set
			{
				if ((this._ParentEntranceTestItem != value))
				{
					this._ParentEntranceTestItem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this._InstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageID", DbType="Int NOT NULL")]
		public int ImportPackageID
		{
			get
			{
				return this._ImportPackageID;
			}
			set
			{
				if ((this._ImportPackageID != value))
				{
					this._ImportPackageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicDiplomTypeID", DbType="SmallInt NOT NULL")]
		public short OlympicDiplomTypeID
		{
			get
			{
				return this._OlympicDiplomTypeID;
			}
			set
			{
				if ((this._OlympicDiplomTypeID != value))
				{
					this._OlympicDiplomTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicLevelFlags", DbType="SmallInt NOT NULL")]
		public short OlympicLevelFlags
		{
			get
			{
				return this._OlympicLevelFlags;
			}
			set
			{
				if ((this._OlympicLevelFlags != value))
				{
					this._OlympicLevelFlags = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BenefitID", DbType="SmallInt NOT NULL")]
		public short BenefitID
		{
			get
			{
				return this._BenefitID;
			}
			set
			{
				if ((this._BenefitID != value))
				{
					this._BenefitID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForAllOlympic", DbType="Bit NOT NULL")]
		public bool IsForAllOlympic
		{
			get
			{
				return this._IsForAllOlympic;
			}
			set
			{
				if ((this._IsForAllOlympic != value))
				{
					this._IsForAllOlympic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsProfileSubject", DbType="Bit NOT NULL")]
		public bool IsProfileSubject
		{
			get
			{
				return this._IsProfileSubject;
			}
			set
			{
				if ((this._IsProfileSubject != value))
				{
					this._IsProfileSubject = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this._UID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicYear", DbType="Int NOT NULL")]
		public int OlympicYear
		{
			get
			{
				return this._OlympicYear;
			}
			set
			{
				if ((this._OlympicYear != value))
				{
					this._OlympicYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeMinValue", DbType="Int")]
		public System.Nullable<int> EgeMinValue
		{
			get
			{
				return this._EgeMinValue;
			}
			set
			{
				if ((this._EgeMinValue != value))
				{
					this._EgeMinValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_BenefitItemData")]
	public partial class bulk_BenefitItemData
	{
		
		private System.Guid _GUID;
		
		private System.Guid _ParentID;
		
		private int _InstitutionID;
		
		private int _ImportPackageID;
		
		private System.Nullable<int> _OlympicTypeID;
		
		private System.Nullable<int> _SubjectId;
		
		private System.Nullable<int> _EgeMinValue;
		
		public bulk_BenefitItemData()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this._GUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this._InstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageID", DbType="Int NOT NULL")]
		public int ImportPackageID
		{
			get
			{
				return this._ImportPackageID;
			}
			set
			{
				if ((this._ImportPackageID != value))
				{
					this._ImportPackageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicTypeID", DbType="Int")]
		public System.Nullable<int> OlympicTypeID
		{
			get
			{
				return this._OlympicTypeID;
			}
			set
			{
				if ((this._OlympicTypeID != value))
				{
					this._OlympicTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="Int")]
		public System.Nullable<int> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this._SubjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeMinValue", DbType="Int")]
		public System.Nullable<int> EgeMinValue
		{
			get
			{
				return this._EgeMinValue;
			}
			set
			{
				if ((this._EgeMinValue != value))
				{
					this._EgeMinValue = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_Campaign")]
	public partial class bulk_Campaign
	{
		
		private System.Guid _Id;
		
		private int _InstitutionID;
		
		private int _ImportPackageId;
		
		private string _UID;
		
		private string _Name;
		
		private int _YearStart;
		
		private int _YearEnd;
		
		private int _EducationFormFlag;
		
		private int _StatusID;
		
		private bool _Additional;
		
		private bool _IsFromKrym;
		
		public bulk_Campaign()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this._InstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageId", DbType="Int NOT NULL")]
		public int ImportPackageId
		{
			get
			{
				return this._ImportPackageId;
			}
			set
			{
				if ((this._ImportPackageId != value))
				{
					this._ImportPackageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this._UID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearStart", DbType="Int NOT NULL")]
		public int YearStart
		{
			get
			{
				return this._YearStart;
			}
			set
			{
				if ((this._YearStart != value))
				{
					this._YearStart = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearEnd", DbType="Int NOT NULL")]
		public int YearEnd
		{
			get
			{
				return this._YearEnd;
			}
			set
			{
				if ((this._YearEnd != value))
				{
					this._YearEnd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationFormFlag", DbType="Int NOT NULL")]
		public int EducationFormFlag
		{
			get
			{
				return this._EducationFormFlag;
			}
			set
			{
				if ((this._EducationFormFlag != value))
				{
					this._EducationFormFlag = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Additional", DbType="Bit NOT NULL")]
		public bool Additional
		{
			get
			{
				return this._Additional;
			}
			set
			{
				if ((this._Additional != value))
				{
					this._Additional = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFromKrym", DbType="Bit NOT NULL")]
		public bool IsFromKrym
		{
			get
			{
				return this._IsFromKrym;
			}
			set
			{
				if ((this._IsFromKrym != value))
				{
					this._IsFromKrym = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_CampaignDate")]
	public partial class bulk_CampaignDate
	{
		
		private System.Guid _Id;
		
		private System.Guid _ParentId;
		
		private int _Course;
		
		private short _EducationLevelID;
		
		private short _EducationFormID;
		
		private System.Nullable<System.DateTime> _DateStart;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private System.Nullable<System.DateTime> _DateOrder;
		
		private string _UID;
		
		private bool _IsActive;
		
		private int _Stage;
		
		private short _EducationSourceID;
		
		private int _ImportPackageID;
		
		private int _InstitutionID;
		
		public bulk_CampaignDate()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="Int NOT NULL")]
		public int Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this._Course = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelID", DbType="SmallInt NOT NULL")]
		public short EducationLevelID
		{
			get
			{
				return this._EducationLevelID;
			}
			set
			{
				if ((this._EducationLevelID != value))
				{
					this._EducationLevelID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationFormID", DbType="SmallInt NOT NULL")]
		public short EducationFormID
		{
			get
			{
				return this._EducationFormID;
			}
			set
			{
				if ((this._EducationFormID != value))
				{
					this._EducationFormID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateStart
		{
			get
			{
				return this._DateStart;
			}
			set
			{
				if ((this._DateStart != value))
				{
					this._DateStart = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this._DateEnd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOrder", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateOrder
		{
			get
			{
				return this._DateOrder;
			}
			set
			{
				if ((this._DateOrder != value))
				{
					this._DateOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this._UID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stage", DbType="Int NOT NULL")]
		public int Stage
		{
			get
			{
				return this._Stage;
			}
			set
			{
				if ((this._Stage != value))
				{
					this._Stage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationSourceID", DbType="SmallInt NOT NULL")]
		public short EducationSourceID
		{
			get
			{
				return this._EducationSourceID;
			}
			set
			{
				if ((this._EducationSourceID != value))
				{
					this._EducationSourceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageID", DbType="Int NOT NULL")]
		public int ImportPackageID
		{
			get
			{
				return this._ImportPackageID;
			}
			set
			{
				if ((this._ImportPackageID != value))
				{
					this._ImportPackageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this._InstitutionID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_CompetitiveGroup")]
	public partial class bulk_CompetitiveGroup
	{
		
		private System.Nullable<int> _ID;
		
		private System.Guid _GUID;
		
		private int _InstitutionID;
		
		private int _ImportPackageID;
		
		private string _Name;
		
		private short _Course;
		
		private string _UID;
		
		private System.Nullable<int> _CampaignID;
		
		private int _DirectionFilterType;
		
		public bulk_CompetitiveGroup()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this._GUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this._InstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageID", DbType="Int NOT NULL")]
		public int ImportPackageID
		{
			get
			{
				return this._ImportPackageID;
			}
			set
			{
				if ((this._ImportPackageID != value))
				{
					this._ImportPackageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="SmallInt NOT NULL")]
		public short Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this._Course = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this._UID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int")]
		public System.Nullable<int> CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					this._CampaignID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionFilterType", DbType="Int NOT NULL")]
		public int DirectionFilterType
		{
			get
			{
				return this._DirectionFilterType;
			}
			set
			{
				if ((this._DirectionFilterType != value))
				{
					this._DirectionFilterType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_CompetitiveGroupItem")]
	public partial class bulk_CompetitiveGroupItem
	{
		
		private System.Nullable<int> _ID;
		
		private System.Guid _GUID;
		
		private System.Guid _ParentID;
		
		private int _InstitutionID;
		
		private int _ImportPackageID;
		
		private int _DirectionID;
		
		private int _NumberBudgetO;
		
		private int _NumberBudgetOZ;
		
		private int _NumberBudgetZ;
		
		private int _NumberPaidO;
		
		private int _NumberPaidOZ;
		
		private int _NumberPaidZ;
		
		private string _UID;
		
		private short _EducationLevelID;
		
		private System.Nullable<int> _NumberQuotaO;
		
		private System.Nullable<int> _NumberQuotaOZ;
		
		private System.Nullable<int> _NumberQuotaZ;
		
		public bulk_CompetitiveGroupItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this._GUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this._InstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageID", DbType="Int NOT NULL")]
		public int ImportPackageID
		{
			get
			{
				return this._ImportPackageID;
			}
			set
			{
				if ((this._ImportPackageID != value))
				{
					this._ImportPackageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int NOT NULL")]
		public int DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					this._DirectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetO", DbType="Int NOT NULL")]
		public int NumberBudgetO
		{
			get
			{
				return this._NumberBudgetO;
			}
			set
			{
				if ((this._NumberBudgetO != value))
				{
					this._NumberBudgetO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetOZ", DbType="Int NOT NULL")]
		public int NumberBudgetOZ
		{
			get
			{
				return this._NumberBudgetOZ;
			}
			set
			{
				if ((this._NumberBudgetOZ != value))
				{
					this._NumberBudgetOZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetZ", DbType="Int NOT NULL")]
		public int NumberBudgetZ
		{
			get
			{
				return this._NumberBudgetZ;
			}
			set
			{
				if ((this._NumberBudgetZ != value))
				{
					this._NumberBudgetZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberPaidO", DbType="Int NOT NULL")]
		public int NumberPaidO
		{
			get
			{
				return this._NumberPaidO;
			}
			set
			{
				if ((this._NumberPaidO != value))
				{
					this._NumberPaidO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberPaidOZ", DbType="Int NOT NULL")]
		public int NumberPaidOZ
		{
			get
			{
				return this._NumberPaidOZ;
			}
			set
			{
				if ((this._NumberPaidOZ != value))
				{
					this._NumberPaidOZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberPaidZ", DbType="Int NOT NULL")]
		public int NumberPaidZ
		{
			get
			{
				return this._NumberPaidZ;
			}
			set
			{
				if ((this._NumberPaidZ != value))
				{
					this._NumberPaidZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this._UID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelID", DbType="SmallInt NOT NULL")]
		public short EducationLevelID
		{
			get
			{
				return this._EducationLevelID;
			}
			set
			{
				if ((this._EducationLevelID != value))
				{
					this._EducationLevelID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberQuotaO", DbType="Int")]
		public System.Nullable<int> NumberQuotaO
		{
			get
			{
				return this._NumberQuotaO;
			}
			set
			{
				if ((this._NumberQuotaO != value))
				{
					this._NumberQuotaO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberQuotaOZ", DbType="Int")]
		public System.Nullable<int> NumberQuotaOZ
		{
			get
			{
				return this._NumberQuotaOZ;
			}
			set
			{
				if ((this._NumberQuotaOZ != value))
				{
					this._NumberQuotaOZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberQuotaZ", DbType="Int")]
		public System.Nullable<int> NumberQuotaZ
		{
			get
			{
				return this._NumberQuotaZ;
			}
			set
			{
				if ((this._NumberQuotaZ != value))
				{
					this._NumberQuotaZ = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_CompetitiveGroupTarget")]
	public partial class bulk_CompetitiveGroupTarget
	{
		
		private System.Nullable<int> _ID;
		
		private System.Guid _GUID;
		
		private System.Guid _ParentID;
		
		private int _InstitutionID;
		
		private int _ImportPackageID;
		
		private string _Name;
		
		private string _UID;
		
		public bulk_CompetitiveGroupTarget()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this._GUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this._InstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageID", DbType="Int NOT NULL")]
		public int ImportPackageID
		{
			get
			{
				return this._ImportPackageID;
			}
			set
			{
				if ((this._ImportPackageID != value))
				{
					this._ImportPackageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this._UID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_CompetitiveGroupTargetItem")]
	public partial class bulk_CompetitiveGroupTargetItem
	{
		
		private System.Nullable<int> _ID;
		
		private System.Guid _GUID;
		
		private System.Guid _ParentID;
		
		private int _InstitutionID;
		
		private int _ImportPackageID;
		
		private System.Nullable<int> _CompetitiveGroupItemID;
		
		private System.Nullable<System.Guid> _CompetitiveGroupItemGUID;
		
		private string _UID;
		
		private int _NumberTargetO;
		
		private int _NumberTargetOZ;
		
		private int _NumberTargetZ;
		
		public bulk_CompetitiveGroupTargetItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this._GUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this._InstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageID", DbType="Int NOT NULL")]
		public int ImportPackageID
		{
			get
			{
				return this._ImportPackageID;
			}
			set
			{
				if ((this._ImportPackageID != value))
				{
					this._ImportPackageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupItemID", DbType="Int")]
		public System.Nullable<int> CompetitiveGroupItemID
		{
			get
			{
				return this._CompetitiveGroupItemID;
			}
			set
			{
				if ((this._CompetitiveGroupItemID != value))
				{
					this._CompetitiveGroupItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupItemGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CompetitiveGroupItemGUID
		{
			get
			{
				return this._CompetitiveGroupItemGUID;
			}
			set
			{
				if ((this._CompetitiveGroupItemGUID != value))
				{
					this._CompetitiveGroupItemGUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this._UID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTargetO", DbType="Int NOT NULL")]
		public int NumberTargetO
		{
			get
			{
				return this._NumberTargetO;
			}
			set
			{
				if ((this._NumberTargetO != value))
				{
					this._NumberTargetO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTargetOZ", DbType="Int NOT NULL")]
		public int NumberTargetOZ
		{
			get
			{
				return this._NumberTargetOZ;
			}
			set
			{
				if ((this._NumberTargetOZ != value))
				{
					this._NumberTargetOZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTargetZ", DbType="Int NOT NULL")]
		public int NumberTargetZ
		{
			get
			{
				return this._NumberTargetZ;
			}
			set
			{
				if ((this._NumberTargetZ != value))
				{
					this._NumberTargetZ = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_Delete")]
	public partial class bulk_Delete
	{
		
		private int _ID;
		
		private string _Type;
		
		private int _ImportPackageID;
		
		public bulk_Delete()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageID", DbType="Int NOT NULL")]
		public int ImportPackageID
		{
			get
			{
				return this._ImportPackageID;
			}
			set
			{
				if ((this._ImportPackageID != value))
				{
					this._ImportPackageID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_DistributedAdmissionVolume")]
	public partial class bulk_DistributedAdmissionVolume
	{
		
		private System.Nullable<int> _ID;
		
		private System.Nullable<System.Guid> _GUID;
		
		private int _InstitutionID;
		
		private int _ImportPackageID;
		
		private System.Nullable<int> _AdmissionVolumeID;
		
		private System.Nullable<System.Guid> _AdmissionVolumeGUID;
		
		private int _IdLevelBudget;
		
		private int _NumberBudgetO;
		
		private int _NumberBudgetOZ;
		
		private int _NumberBudgetZ;
		
		private int _NumberQuotaO;
		
		private int _NumberQuotaOZ;
		
		private int _NumberQuotaZ;
		
		private int _NumberTargetO;
		
		private int _NumberTargetOZ;
		
		private int _NumberTargetZ;
		
		public bulk_DistributedAdmissionVolume()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this._GUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this._InstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageID", DbType="Int NOT NULL")]
		public int ImportPackageID
		{
			get
			{
				return this._ImportPackageID;
			}
			set
			{
				if ((this._ImportPackageID != value))
				{
					this._ImportPackageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionVolumeID", DbType="Int")]
		public System.Nullable<int> AdmissionVolumeID
		{
			get
			{
				return this._AdmissionVolumeID;
			}
			set
			{
				if ((this._AdmissionVolumeID != value))
				{
					this._AdmissionVolumeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionVolumeGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AdmissionVolumeGUID
		{
			get
			{
				return this._AdmissionVolumeGUID;
			}
			set
			{
				if ((this._AdmissionVolumeGUID != value))
				{
					this._AdmissionVolumeGUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLevelBudget", DbType="Int NOT NULL")]
		public int IdLevelBudget
		{
			get
			{
				return this._IdLevelBudget;
			}
			set
			{
				if ((this._IdLevelBudget != value))
				{
					this._IdLevelBudget = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetO", DbType="Int NOT NULL")]
		public int NumberBudgetO
		{
			get
			{
				return this._NumberBudgetO;
			}
			set
			{
				if ((this._NumberBudgetO != value))
				{
					this._NumberBudgetO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetOZ", DbType="Int NOT NULL")]
		public int NumberBudgetOZ
		{
			get
			{
				return this._NumberBudgetOZ;
			}
			set
			{
				if ((this._NumberBudgetOZ != value))
				{
					this._NumberBudgetOZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetZ", DbType="Int NOT NULL")]
		public int NumberBudgetZ
		{
			get
			{
				return this._NumberBudgetZ;
			}
			set
			{
				if ((this._NumberBudgetZ != value))
				{
					this._NumberBudgetZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberQuotaO", DbType="Int NOT NULL")]
		public int NumberQuotaO
		{
			get
			{
				return this._NumberQuotaO;
			}
			set
			{
				if ((this._NumberQuotaO != value))
				{
					this._NumberQuotaO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberQuotaOZ", DbType="Int NOT NULL")]
		public int NumberQuotaOZ
		{
			get
			{
				return this._NumberQuotaOZ;
			}
			set
			{
				if ((this._NumberQuotaOZ != value))
				{
					this._NumberQuotaOZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberQuotaZ", DbType="Int NOT NULL")]
		public int NumberQuotaZ
		{
			get
			{
				return this._NumberQuotaZ;
			}
			set
			{
				if ((this._NumberQuotaZ != value))
				{
					this._NumberQuotaZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTargetO", DbType="Int NOT NULL")]
		public int NumberTargetO
		{
			get
			{
				return this._NumberTargetO;
			}
			set
			{
				if ((this._NumberTargetO != value))
				{
					this._NumberTargetO = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTargetOZ", DbType="Int NOT NULL")]
		public int NumberTargetOZ
		{
			get
			{
				return this._NumberTargetOZ;
			}
			set
			{
				if ((this._NumberTargetOZ != value))
				{
					this._NumberTargetOZ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTargetZ", DbType="Int NOT NULL")]
		public int NumberTargetZ
		{
			get
			{
				return this._NumberTargetZ;
			}
			set
			{
				if ((this._NumberTargetZ != value))
				{
					this._NumberTargetZ = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_EntranceTestItemC")]
	public partial class bulk_EntranceTestItemC
	{
		
		private System.Nullable<int> _ID;
		
		private System.Guid _GUID;
		
		private System.Guid _ParentID;
		
		private int _InstitutionID;
		
		private int _ImportPackageID;
		
		private short _EntranceTestTypeID;
		
		private string _Form;
		
		private System.Nullable<decimal> _MinScore;
		
		private System.Nullable<int> _SubjectID;
		
		private string _SubjectName;
		
		private string _UID;
		
		private System.Nullable<int> _EntranceTestPriority;
		
		public bulk_EntranceTestItemC()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this._GUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this._InstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageID", DbType="Int NOT NULL")]
		public int ImportPackageID
		{
			get
			{
				return this._ImportPackageID;
			}
			set
			{
				if ((this._ImportPackageID != value))
				{
					this._ImportPackageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceTestTypeID", DbType="SmallInt NOT NULL")]
		public short EntranceTestTypeID
		{
			get
			{
				return this._EntranceTestTypeID;
			}
			set
			{
				if ((this._EntranceTestTypeID != value))
				{
					this._EntranceTestTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Form", DbType="VarChar(2000)")]
		public string Form
		{
			get
			{
				return this._Form;
			}
			set
			{
				if ((this._Form != value))
				{
					this._Form = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinScore", DbType="Decimal(7,4)")]
		public System.Nullable<decimal> MinScore
		{
			get
			{
				return this._MinScore;
			}
			set
			{
				if ((this._MinScore != value))
				{
					this._MinScore = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int")]
		public System.Nullable<int> SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(2000)")]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this._SubjectName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this._UID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceTestPriority", DbType="Int")]
		public System.Nullable<int> EntranceTestPriority
		{
			get
			{
				return this._EntranceTestPriority;
			}
			set
			{
				if ((this._EntranceTestPriority != value))
				{
					this._EntranceTestPriority = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_Entrant")]
	public partial class bulk_Entrant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntrantID;
		
		private System.Nullable<int> _IdentityDocumentID;
		
		private string _CustomInformation;
		
		private string _SNILS;
		
		private System.Nullable<int> _RegistrationAddressID;
		
		private System.Nullable<int> _FactAddressID;
		
		private string _MobilePhone;
		
		private string _Email;
		
		private string _UID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private int _InstitutionID;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private int _GenderID;
		
		private int _ImportPackageID;
		
		private System.Guid _EntrantGUID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntrantIDChanging(int value);
    partial void OnEntrantIDChanged();
    partial void OnIdentityDocumentIDChanging(System.Nullable<int> value);
    partial void OnIdentityDocumentIDChanged();
    partial void OnCustomInformationChanging(string value);
    partial void OnCustomInformationChanged();
    partial void OnSNILSChanging(string value);
    partial void OnSNILSChanged();
    partial void OnRegistrationAddressIDChanging(System.Nullable<int> value);
    partial void OnRegistrationAddressIDChanged();
    partial void OnFactAddressIDChanging(System.Nullable<int> value);
    partial void OnFactAddressIDChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnGenderIDChanging(int value);
    partial void OnGenderIDChanged();
    partial void OnImportPackageIDChanging(int value);
    partial void OnImportPackageIDChanged();
    partial void OnEntrantGUIDChanging(System.Guid value);
    partial void OnEntrantGUIDChanged();
    #endregion
		
		public bulk_Entrant()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EntrantID
		{
			get
			{
				return this._EntrantID;
			}
			set
			{
				if ((this._EntrantID != value))
				{
					this.OnEntrantIDChanging(value);
					this.SendPropertyChanging();
					this._EntrantID = value;
					this.SendPropertyChanged("EntrantID");
					this.OnEntrantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityDocumentID", DbType="Int")]
		public System.Nullable<int> IdentityDocumentID
		{
			get
			{
				return this._IdentityDocumentID;
			}
			set
			{
				if ((this._IdentityDocumentID != value))
				{
					this.OnIdentityDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._IdentityDocumentID = value;
					this.SendPropertyChanged("IdentityDocumentID");
					this.OnIdentityDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomInformation", DbType="VarChar(MAX)")]
		public string CustomInformation
		{
			get
			{
				return this._CustomInformation;
			}
			set
			{
				if ((this._CustomInformation != value))
				{
					this.OnCustomInformationChanging(value);
					this.SendPropertyChanging();
					this._CustomInformation = value;
					this.SendPropertyChanged("CustomInformation");
					this.OnCustomInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNILS", DbType="Char(14)")]
		public string SNILS
		{
			get
			{
				return this._SNILS;
			}
			set
			{
				if ((this._SNILS != value))
				{
					this.OnSNILSChanging(value);
					this.SendPropertyChanging();
					this._SNILS = value;
					this.SendPropertyChanged("SNILS");
					this.OnSNILSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationAddressID", DbType="Int")]
		public System.Nullable<int> RegistrationAddressID
		{
			get
			{
				return this._RegistrationAddressID;
			}
			set
			{
				if ((this._RegistrationAddressID != value))
				{
					this.OnRegistrationAddressIDChanging(value);
					this.SendPropertyChanging();
					this._RegistrationAddressID = value;
					this.SendPropertyChanged("RegistrationAddressID");
					this.OnRegistrationAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactAddressID", DbType="Int")]
		public System.Nullable<int> FactAddressID
		{
			get
			{
				return this._FactAddressID;
			}
			set
			{
				if ((this._FactAddressID != value))
				{
					this.OnFactAddressIDChanging(value);
					this.SendPropertyChanging();
					this._FactAddressID = value;
					this.SendPropertyChanged("FactAddressID");
					this.OnFactAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="VarChar(20)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(255)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderID", DbType="Int NOT NULL")]
		public int GenderID
		{
			get
			{
				return this._GenderID;
			}
			set
			{
				if ((this._GenderID != value))
				{
					this.OnGenderIDChanging(value);
					this.SendPropertyChanging();
					this._GenderID = value;
					this.SendPropertyChanged("GenderID");
					this.OnGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageID", DbType="Int NOT NULL")]
		public int ImportPackageID
		{
			get
			{
				return this._ImportPackageID;
			}
			set
			{
				if ((this._ImportPackageID != value))
				{
					this.OnImportPackageIDChanging(value);
					this.SendPropertyChanging();
					this._ImportPackageID = value;
					this.SendPropertyChanged("ImportPackageID");
					this.OnImportPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EntrantGUID
		{
			get
			{
				return this._EntrantGUID;
			}
			set
			{
				if ((this._EntrantGUID != value))
				{
					this.OnEntrantGUIDChanging(value);
					this.SendPropertyChanging();
					this._EntrantGUID = value;
					this.SendPropertyChanged("EntrantGUID");
					this.OnEntrantGUIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_EntrantDocument")]
	public partial class bulk_EntrantDocument
	{
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private string _UID;
		
		private int _ImportPackageId;
		
		private int _InstitutionId;
		
		private string _InstitutionName;
		
		private bool _OriginalReceived;
		
		private System.Nullable<System.DateTime> _OriginalReceivedDate;
		
		private string _DocumentNumber;
		
		private System.Nullable<System.DateTime> _DocumentDate;
		
		private string _DocumentOrganization;
		
		private string _DocumentSeries;
		
		private int _DocumentTypeId;
		
		private string _DocumentSpecificData;
		
		private System.Nullable<int> _IdentityDocumentTypeId;
		
		private System.Nullable<int> _NationalityTypeId;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private System.Nullable<int> _EndYear;
		
		private string _BirthPlace;
		
		private string _SubdivisionCode;
		
		private string _RegistrationNumber;
		
		private string _QualificationName;
		
		private string _SpecialityName;
		
		private System.Nullable<int> _SpecializationId;
		
		private System.Nullable<int> _ProfessionId;
		
		private string _DocumentTypeNameText;
		
		private string _AdditionalInfo;
		
		private System.Nullable<int> _DisabilityTypeId;
		
		private System.Nullable<int> _DiplomaTypeId;
		
		private System.Nullable<int> _OlympicId;
		
		private string _OlympicPlace;
		
		private System.Nullable<System.DateTime> _OlympicDate;
		
		private System.Nullable<System.Guid> _EntranceTestResultId;
		
		private System.Nullable<float> _GPA;
		
		private System.Nullable<int> _EntrantDocumentID;
		
		public bulk_EntrantDocument()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this._UID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageId", DbType="Int NOT NULL")]
		public int ImportPackageId
		{
			get
			{
				return this._ImportPackageId;
			}
			set
			{
				if ((this._ImportPackageId != value))
				{
					this._ImportPackageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionId", DbType="Int NOT NULL")]
		public int InstitutionId
		{
			get
			{
				return this._InstitutionId;
			}
			set
			{
				if ((this._InstitutionId != value))
				{
					this._InstitutionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionName", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
		public string InstitutionName
		{
			get
			{
				return this._InstitutionName;
			}
			set
			{
				if ((this._InstitutionName != value))
				{
					this._InstitutionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalReceived", DbType="Bit NOT NULL")]
		public bool OriginalReceived
		{
			get
			{
				return this._OriginalReceived;
			}
			set
			{
				if ((this._OriginalReceived != value))
				{
					this._OriginalReceived = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalReceivedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OriginalReceivedDate
		{
			get
			{
				return this._OriginalReceivedDate;
			}
			set
			{
				if ((this._OriginalReceivedDate != value))
				{
					this._OriginalReceivedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="VarChar(100)")]
		public string DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this._DocumentNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DocumentDate
		{
			get
			{
				return this._DocumentDate;
			}
			set
			{
				if ((this._DocumentDate != value))
				{
					this._DocumentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentOrganization", DbType="VarChar(500)")]
		public string DocumentOrganization
		{
			get
			{
				return this._DocumentOrganization;
			}
			set
			{
				if ((this._DocumentOrganization != value))
				{
					this._DocumentOrganization = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentSeries", DbType="VarChar(20)")]
		public string DocumentSeries
		{
			get
			{
				return this._DocumentSeries;
			}
			set
			{
				if ((this._DocumentSeries != value))
				{
					this._DocumentSeries = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeId", DbType="Int NOT NULL")]
		public int DocumentTypeId
		{
			get
			{
				return this._DocumentTypeId;
			}
			set
			{
				if ((this._DocumentTypeId != value))
				{
					this._DocumentTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentSpecificData", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DocumentSpecificData
		{
			get
			{
				return this._DocumentSpecificData;
			}
			set
			{
				if ((this._DocumentSpecificData != value))
				{
					this._DocumentSpecificData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityDocumentTypeId", DbType="Int")]
		public System.Nullable<int> IdentityDocumentTypeId
		{
			get
			{
				return this._IdentityDocumentTypeId;
			}
			set
			{
				if ((this._IdentityDocumentTypeId != value))
				{
					this._IdentityDocumentTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalityTypeId", DbType="Int")]
		public System.Nullable<int> NationalityTypeId
		{
			get
			{
				return this._NationalityTypeId;
			}
			set
			{
				if ((this._NationalityTypeId != value))
				{
					this._NationalityTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndYear", DbType="Int")]
		public System.Nullable<int> EndYear
		{
			get
			{
				return this._EndYear;
			}
			set
			{
				if ((this._EndYear != value))
				{
					this._EndYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthPlace", DbType="VarChar(255)")]
		public string BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					this._BirthPlace = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubdivisionCode", DbType="VarChar(70)")]
		public string SubdivisionCode
		{
			get
			{
				return this._SubdivisionCode;
			}
			set
			{
				if ((this._SubdivisionCode != value))
				{
					this._SubdivisionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumber", DbType="VarChar(200)")]
		public string RegistrationNumber
		{
			get
			{
				return this._RegistrationNumber;
			}
			set
			{
				if ((this._RegistrationNumber != value))
				{
					this._RegistrationNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationName", DbType="VarChar(255)")]
		public string QualificationName
		{
			get
			{
				return this._QualificationName;
			}
			set
			{
				if ((this._QualificationName != value))
				{
					this._QualificationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityName", DbType="VarChar(255)")]
		public string SpecialityName
		{
			get
			{
				return this._SpecialityName;
			}
			set
			{
				if ((this._SpecialityName != value))
				{
					this._SpecialityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecializationId", DbType="Int")]
		public System.Nullable<int> SpecializationId
		{
			get
			{
				return this._SpecializationId;
			}
			set
			{
				if ((this._SpecializationId != value))
				{
					this._SpecializationId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfessionId", DbType="Int")]
		public System.Nullable<int> ProfessionId
		{
			get
			{
				return this._ProfessionId;
			}
			set
			{
				if ((this._ProfessionId != value))
				{
					this._ProfessionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeNameText", DbType="VarChar(500)")]
		public string DocumentTypeNameText
		{
			get
			{
				return this._DocumentTypeNameText;
			}
			set
			{
				if ((this._DocumentTypeNameText != value))
				{
					this._DocumentTypeNameText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalInfo", DbType="VarChar(MAX)")]
		public string AdditionalInfo
		{
			get
			{
				return this._AdditionalInfo;
			}
			set
			{
				if ((this._AdditionalInfo != value))
				{
					this._AdditionalInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisabilityTypeId", DbType="Int")]
		public System.Nullable<int> DisabilityTypeId
		{
			get
			{
				return this._DisabilityTypeId;
			}
			set
			{
				if ((this._DisabilityTypeId != value))
				{
					this._DisabilityTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiplomaTypeId", DbType="Int")]
		public System.Nullable<int> DiplomaTypeId
		{
			get
			{
				return this._DiplomaTypeId;
			}
			set
			{
				if ((this._DiplomaTypeId != value))
				{
					this._DiplomaTypeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicId", DbType="Int")]
		public System.Nullable<int> OlympicId
		{
			get
			{
				return this._OlympicId;
			}
			set
			{
				if ((this._OlympicId != value))
				{
					this._OlympicId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicPlace", DbType="VarChar(255)")]
		public string OlympicPlace
		{
			get
			{
				return this._OlympicPlace;
			}
			set
			{
				if ((this._OlympicPlace != value))
				{
					this._OlympicPlace = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OlympicDate
		{
			get
			{
				return this._OlympicDate;
			}
			set
			{
				if ((this._OlympicDate != value))
				{
					this._OlympicDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceTestResultId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EntranceTestResultId
		{
			get
			{
				return this._EntranceTestResultId;
			}
			set
			{
				if ((this._EntranceTestResultId != value))
				{
					this._EntranceTestResultId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPA", DbType="Real")]
		public System.Nullable<float> GPA
		{
			get
			{
				return this._GPA;
			}
			set
			{
				if ((this._GPA != value))
				{
					this._GPA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantDocumentID", DbType="Int")]
		public System.Nullable<int> EntrantDocumentID
		{
			get
			{
				return this._EntrantDocumentID;
			}
			set
			{
				if ((this._EntrantDocumentID != value))
				{
					this._EntrantDocumentID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_EntrantDocumentSubject")]
	public partial class bulk_EntrantDocumentSubject
	{
		
		private System.Guid _Id;
		
		private System.Nullable<System.Guid> _ParentId;
		
		private string _UID;
		
		private int _ImportPackageId;
		
		private int _InstitutionId;
		
		private System.Nullable<int> _SubjectId;
		
		private System.Nullable<int> _Value;
		
		public bulk_EntrantDocumentSubject()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentId
		{
			get
			{
				return this._ParentId;
			}
			set
			{
				if ((this._ParentId != value))
				{
					this._ParentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this._UID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageId", DbType="Int NOT NULL")]
		public int ImportPackageId
		{
			get
			{
				return this._ImportPackageId;
			}
			set
			{
				if ((this._ImportPackageId != value))
				{
					this._ImportPackageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionId", DbType="Int NOT NULL")]
		public int InstitutionId
		{
			get
			{
				return this._InstitutionId;
			}
			set
			{
				if ((this._InstitutionId != value))
				{
					this._InstitutionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="Int")]
		public System.Nullable<int> SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					this._SubjectId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Int")]
		public System.Nullable<int> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_InstitutionAchievements")]
	public partial class bulk_InstitutionAchievement
	{
		
		private System.Nullable<int> _Id;
		
		private int _ImportPackageId;
		
		private int _InstitutionId;
		
		private string _UID;
		
		private string _Name;
		
		private int _IdCategory;
		
		private decimal _MaxValue;
		
		private System.Nullable<int> _CampaignID;
		
		public bulk_InstitutionAchievement()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int")]
		public System.Nullable<int> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageId", DbType="Int NOT NULL")]
		public int ImportPackageId
		{
			get
			{
				return this._ImportPackageId;
			}
			set
			{
				if ((this._ImportPackageId != value))
				{
					this._ImportPackageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionId", DbType="Int NOT NULL")]
		public int InstitutionId
		{
			get
			{
				return this._InstitutionId;
			}
			set
			{
				if ((this._InstitutionId != value))
				{
					this._InstitutionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this._UID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(4000)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategory", DbType="Int NOT NULL")]
		public int IdCategory
		{
			get
			{
				return this._IdCategory;
			}
			set
			{
				if ((this._IdCategory != value))
				{
					this._IdCategory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxValue", DbType="Decimal(7,4) NOT NULL")]
		public decimal MaxValue
		{
			get
			{
				return this._MaxValue;
			}
			set
			{
				if ((this._MaxValue != value))
				{
					this._MaxValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int")]
		public System.Nullable<int> CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					this._CampaignID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.bulk_OrderOfAdmission")]
	public partial class bulk_OrderOfAdmission
	{
		
		private System.Nullable<int> _Id;
		
		private int _ImportPackageId;
		
		private int _InstitutionId;
		
		private System.Guid _GUID;
		
		private string _UID;
		
		private System.Nullable<int> _ApplicationID;
		
		private System.Nullable<int> _ApplicationLevelBudgetID;
		
		private System.Nullable<int> _ApplicationCGItemID;
		
		private System.Nullable<int> _DirectionID;
		
		private System.Nullable<int> _EducationFormID;
		
		private System.Nullable<int> _EducationLevelID;
		
		private System.Nullable<int> _FinanceSourceID;
		
		private bool _IsBeneficiary;
		
		private bool _IsForeigner;
		
		private System.Nullable<System.DateTime> _OrderDate;
		
		private System.Nullable<System.DateTime> _OrderDatePublished;
		
		private string _OrderName;
		
		private string _OrderNumber;
		
		private System.Nullable<int> _Stage;
		
		private System.Nullable<int> _CampaignID;
		
		private System.Nullable<int> _Course;
		
		private int _OrderStatus;
		
		public bulk_OrderOfAdmission()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int")]
		public System.Nullable<int> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportPackageId", DbType="Int NOT NULL")]
		public int ImportPackageId
		{
			get
			{
				return this._ImportPackageId;
			}
			set
			{
				if ((this._ImportPackageId != value))
				{
					this._ImportPackageId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionId", DbType="Int NOT NULL")]
		public int InstitutionId
		{
			get
			{
				return this._InstitutionId;
			}
			set
			{
				if ((this._InstitutionId != value))
				{
					this._InstitutionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this._GUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this._UID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int")]
		public System.Nullable<int> ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this._ApplicationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationLevelBudgetID", DbType="Int")]
		public System.Nullable<int> ApplicationLevelBudgetID
		{
			get
			{
				return this._ApplicationLevelBudgetID;
			}
			set
			{
				if ((this._ApplicationLevelBudgetID != value))
				{
					this._ApplicationLevelBudgetID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationCGItemID", DbType="Int")]
		public System.Nullable<int> ApplicationCGItemID
		{
			get
			{
				return this._ApplicationCGItemID;
			}
			set
			{
				if ((this._ApplicationCGItemID != value))
				{
					this._ApplicationCGItemID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int")]
		public System.Nullable<int> DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					this._DirectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationFormID", DbType="Int")]
		public System.Nullable<int> EducationFormID
		{
			get
			{
				return this._EducationFormID;
			}
			set
			{
				if ((this._EducationFormID != value))
				{
					this._EducationFormID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelID", DbType="Int")]
		public System.Nullable<int> EducationLevelID
		{
			get
			{
				return this._EducationLevelID;
			}
			set
			{
				if ((this._EducationLevelID != value))
				{
					this._EducationLevelID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceSourceID", DbType="Int")]
		public System.Nullable<int> FinanceSourceID
		{
			get
			{
				return this._FinanceSourceID;
			}
			set
			{
				if ((this._FinanceSourceID != value))
				{
					this._FinanceSourceID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBeneficiary", DbType="Bit NOT NULL")]
		public bool IsBeneficiary
		{
			get
			{
				return this._IsBeneficiary;
			}
			set
			{
				if ((this._IsBeneficiary != value))
				{
					this._IsBeneficiary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForeigner", DbType="Bit NOT NULL")]
		public bool IsForeigner
		{
			get
			{
				return this._IsForeigner;
			}
			set
			{
				if ((this._IsForeigner != value))
				{
					this._IsForeigner = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this._OrderDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDatePublished", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrderDatePublished
		{
			get
			{
				return this._OrderDatePublished;
			}
			set
			{
				if ((this._OrderDatePublished != value))
				{
					this._OrderDatePublished = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderName", DbType="VarChar(200)")]
		public string OrderName
		{
			get
			{
				return this._OrderName;
			}
			set
			{
				if ((this._OrderName != value))
				{
					this._OrderName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNumber", DbType="VarChar(50)")]
		public string OrderNumber
		{
			get
			{
				return this._OrderNumber;
			}
			set
			{
				if ((this._OrderNumber != value))
				{
					this._OrderNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stage", DbType="Int")]
		public System.Nullable<int> Stage
		{
			get
			{
				return this._Stage;
			}
			set
			{
				if ((this._Stage != value))
				{
					this._Stage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int")]
		public System.Nullable<int> CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					this._CampaignID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="Int")]
		public System.Nullable<int> Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this._Course = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatus", DbType="Int NOT NULL")]
		public int OrderStatus
		{
			get
			{
				return this._OrderStatus;
			}
			set
			{
				if ((this._OrderStatus != value))
				{
					this._OrderStatus = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Campaign")]
	public partial class Campaign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CampaignID;
		
		private int _InstitutionID;
		
		private string _Name;
		
		private int _YearStart;
		
		private int _YearEnd;
		
		private int _EducationFormFlag;
		
		private int _StatusID;
		
		private string _UID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<System.Guid> _CampaignGUID;
		
		private short _CampaignTypeID;
		
		private EntitySet<AdmissionVolume> _AdmissionVolumes;
		
		private EntitySet<CampaignEducationLevel> _CampaignEducationLevels;
		
		private EntitySet<CompetitiveGroup> _CompetitiveGroups;
		
		private EntitySet<InstitutionAchievement> _InstitutionAchievements;
		
		private EntitySet<OrderOfAdmission> _OrderOfAdmissions;
		
		private EntityRef<Institution> _Institution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnYearStartChanging(int value);
    partial void OnYearStartChanged();
    partial void OnYearEndChanging(int value);
    partial void OnYearEndChanged();
    partial void OnEducationFormFlagChanging(int value);
    partial void OnEducationFormFlagChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnCampaignGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnCampaignGUIDChanged();
    partial void OnCampaignTypeIDChanging(short value);
    partial void OnCampaignTypeIDChanged();
    #endregion
		
		public Campaign()
		{
			this._AdmissionVolumes = new EntitySet<AdmissionVolume>(new Action<AdmissionVolume>(this.attach_AdmissionVolumes), new Action<AdmissionVolume>(this.detach_AdmissionVolumes));
			this._CampaignEducationLevels = new EntitySet<CampaignEducationLevel>(new Action<CampaignEducationLevel>(this.attach_CampaignEducationLevels), new Action<CampaignEducationLevel>(this.detach_CampaignEducationLevels));
			this._CompetitiveGroups = new EntitySet<CompetitiveGroup>(new Action<CompetitiveGroup>(this.attach_CompetitiveGroups), new Action<CompetitiveGroup>(this.detach_CompetitiveGroups));
			this._InstitutionAchievements = new EntitySet<InstitutionAchievement>(new Action<InstitutionAchievement>(this.attach_InstitutionAchievements), new Action<InstitutionAchievement>(this.detach_InstitutionAchievements));
			this._OrderOfAdmissions = new EntitySet<OrderOfAdmission>(new Action<OrderOfAdmission>(this.attach_OrderOfAdmissions), new Action<OrderOfAdmission>(this.detach_OrderOfAdmissions));
			this._Institution = default(EntityRef<Institution>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					if (this._Institution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearStart", DbType="Int NOT NULL")]
		public int YearStart
		{
			get
			{
				return this._YearStart;
			}
			set
			{
				if ((this._YearStart != value))
				{
					this.OnYearStartChanging(value);
					this.SendPropertyChanging();
					this._YearStart = value;
					this.SendPropertyChanged("YearStart");
					this.OnYearStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearEnd", DbType="Int NOT NULL")]
		public int YearEnd
		{
			get
			{
				return this._YearEnd;
			}
			set
			{
				if ((this._YearEnd != value))
				{
					this.OnYearEndChanging(value);
					this.SendPropertyChanging();
					this._YearEnd = value;
					this.SendPropertyChanged("YearEnd");
					this.OnYearEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationFormFlag", DbType="Int NOT NULL")]
		public int EducationFormFlag
		{
			get
			{
				return this._EducationFormFlag;
			}
			set
			{
				if ((this._EducationFormFlag != value))
				{
					this.OnEducationFormFlagChanging(value);
					this.SendPropertyChanging();
					this._EducationFormFlag = value;
					this.SendPropertyChanged("EducationFormFlag");
					this.OnEducationFormFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CampaignGUID
		{
			get
			{
				return this._CampaignGUID;
			}
			set
			{
				if ((this._CampaignGUID != value))
				{
					this.OnCampaignGUIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignGUID = value;
					this.SendPropertyChanged("CampaignGUID");
					this.OnCampaignGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignTypeID", DbType="SmallInt NOT NULL")]
		public short CampaignTypeID
		{
			get
			{
				return this._CampaignTypeID;
			}
			set
			{
				if ((this._CampaignTypeID != value))
				{
					this.OnCampaignTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignTypeID = value;
					this.SendPropertyChanged("CampaignTypeID");
					this.OnCampaignTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_AdmissionVolume", Storage="_AdmissionVolumes", ThisKey="CampaignID", OtherKey="CampaignID")]
		public EntitySet<AdmissionVolume> AdmissionVolumes
		{
			get
			{
				return this._AdmissionVolumes;
			}
			set
			{
				this._AdmissionVolumes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignEducationLevel", Storage="_CampaignEducationLevels", ThisKey="CampaignID", OtherKey="CampaignID")]
		public EntitySet<CampaignEducationLevel> CampaignEducationLevels
		{
			get
			{
				return this._CampaignEducationLevels;
			}
			set
			{
				this._CampaignEducationLevels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CompetitiveGroup", Storage="_CompetitiveGroups", ThisKey="CampaignID", OtherKey="CampaignID")]
		public EntitySet<CompetitiveGroup> CompetitiveGroups
		{
			get
			{
				return this._CompetitiveGroups;
			}
			set
			{
				this._CompetitiveGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_InstitutionAchievement", Storage="_InstitutionAchievements", ThisKey="CampaignID", OtherKey="CampaignID")]
		public EntitySet<InstitutionAchievement> InstitutionAchievements
		{
			get
			{
				return this._InstitutionAchievements;
			}
			set
			{
				this._InstitutionAchievements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_OrderOfAdmission", Storage="_OrderOfAdmissions", ThisKey="CampaignID", OtherKey="CampaignID")]
		public EntitySet<OrderOfAdmission> OrderOfAdmissions
		{
			get
			{
				return this._OrderOfAdmissions;
			}
			set
			{
				this._OrderOfAdmissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_Campaign", Storage="_Institution", ThisKey="InstitutionID", OtherKey="InstitutionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.Campaigns.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.Campaigns.Add(this);
						this._InstitutionID = value.InstitutionID;
					}
					else
					{
						this._InstitutionID = default(int);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdmissionVolumes(AdmissionVolume entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_AdmissionVolumes(AdmissionVolume entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_CampaignEducationLevels(CampaignEducationLevel entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_CampaignEducationLevels(CampaignEducationLevel entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_CompetitiveGroups(CompetitiveGroup entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_CompetitiveGroups(CompetitiveGroup entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_InstitutionAchievements(InstitutionAchievement entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_InstitutionAchievements(InstitutionAchievement entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
		
		private void attach_OrderOfAdmissions(OrderOfAdmission entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = this;
		}
		
		private void detach_OrderOfAdmissions(OrderOfAdmission entity)
		{
			this.SendPropertyChanging();
			entity.Campaign = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CampaignEducationLevel")]
	public partial class CampaignEducationLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CampaignEducationLevelID;
		
		private int _CampaignID;
		
		private int _Course;
		
		private short _EducationLevelID;
		
		private System.Nullable<bool> _PresentInLicense;
		
		private EntityRef<AdmissionItemType> _AdmissionItemType;
		
		private EntityRef<Campaign> _Campaign;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignEducationLevelIDChanging(int value);
    partial void OnCampaignEducationLevelIDChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnCourseChanging(int value);
    partial void OnCourseChanged();
    partial void OnEducationLevelIDChanging(short value);
    partial void OnEducationLevelIDChanged();
    partial void OnPresentInLicenseChanging(System.Nullable<bool> value);
    partial void OnPresentInLicenseChanged();
    #endregion
		
		public CampaignEducationLevel()
		{
			this._AdmissionItemType = default(EntityRef<AdmissionItemType>);
			this._Campaign = default(EntityRef<Campaign>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignEducationLevelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CampaignEducationLevelID
		{
			get
			{
				return this._CampaignEducationLevelID;
			}
			set
			{
				if ((this._CampaignEducationLevelID != value))
				{
					this.OnCampaignEducationLevelIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignEducationLevelID = value;
					this.SendPropertyChanged("CampaignEducationLevelID");
					this.OnCampaignEducationLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL")]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="Int NOT NULL")]
		public int Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this.OnCourseChanging(value);
					this.SendPropertyChanging();
					this._Course = value;
					this.SendPropertyChanged("Course");
					this.OnCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelID", DbType="SmallInt NOT NULL")]
		public short EducationLevelID
		{
			get
			{
				return this._EducationLevelID;
			}
			set
			{
				if ((this._EducationLevelID != value))
				{
					if (this._AdmissionItemType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEducationLevelIDChanging(value);
					this.SendPropertyChanging();
					this._EducationLevelID = value;
					this.SendPropertyChanged("EducationLevelID");
					this.OnEducationLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PresentInLicense", DbType="Bit")]
		public System.Nullable<bool> PresentInLicense
		{
			get
			{
				return this._PresentInLicense;
			}
			set
			{
				if ((this._PresentInLicense != value))
				{
					this.OnPresentInLicenseChanging(value);
					this.SendPropertyChanging();
					this._PresentInLicense = value;
					this.SendPropertyChanged("PresentInLicense");
					this.OnPresentInLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_CampaignEducationLevel", Storage="_AdmissionItemType", ThisKey="EducationLevelID", OtherKey="ItemTypeID", IsForeignKey=true)]
		public AdmissionItemType AdmissionItemType
		{
			get
			{
				return this._AdmissionItemType.Entity;
			}
			set
			{
				AdmissionItemType previousValue = this._AdmissionItemType.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionItemType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionItemType.Entity = null;
						previousValue.CampaignEducationLevels.Remove(this);
					}
					this._AdmissionItemType.Entity = value;
					if ((value != null))
					{
						value.CampaignEducationLevels.Add(this);
						this._EducationLevelID = value.ItemTypeID;
					}
					else
					{
						this._EducationLevelID = default(short);
					}
					this.SendPropertyChanged("AdmissionItemType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CampaignEducationLevel", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.CampaignEducationLevels.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.CampaignEducationLevels.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CampaignOrderDateCatalog")]
	public partial class CampaignOrderDateCatalog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _YearStart;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private System.DateTime _TargetOrderDate;
		
		private System.DateTime _Stage1OrderDate;
		
		private System.DateTime _Stage2OrderDate;
		
		private System.DateTime _PaidOrderDate;
		
		private System.Nullable<int> _PreviousUseDepth;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnYearStartChanging(int value);
    partial void OnYearStartChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnTargetOrderDateChanging(System.DateTime value);
    partial void OnTargetOrderDateChanged();
    partial void OnStage1OrderDateChanging(System.DateTime value);
    partial void OnStage1OrderDateChanged();
    partial void OnStage2OrderDateChanging(System.DateTime value);
    partial void OnStage2OrderDateChanged();
    partial void OnPaidOrderDateChanging(System.DateTime value);
    partial void OnPaidOrderDateChanged();
    partial void OnPreviousUseDepthChanging(System.Nullable<int> value);
    partial void OnPreviousUseDepthChanged();
    #endregion
		
		public CampaignOrderDateCatalog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearStart", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int YearStart
		{
			get
			{
				return this._YearStart;
			}
			set
			{
				if ((this._YearStart != value))
				{
					this.OnYearStartChanging(value);
					this.SendPropertyChanging();
					this._YearStart = value;
					this.SendPropertyChanged("YearStart");
					this.OnYearStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetOrderDate", DbType="Date NOT NULL")]
		public System.DateTime TargetOrderDate
		{
			get
			{
				return this._TargetOrderDate;
			}
			set
			{
				if ((this._TargetOrderDate != value))
				{
					this.OnTargetOrderDateChanging(value);
					this.SendPropertyChanging();
					this._TargetOrderDate = value;
					this.SendPropertyChanged("TargetOrderDate");
					this.OnTargetOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stage1OrderDate", DbType="Date NOT NULL")]
		public System.DateTime Stage1OrderDate
		{
			get
			{
				return this._Stage1OrderDate;
			}
			set
			{
				if ((this._Stage1OrderDate != value))
				{
					this.OnStage1OrderDateChanging(value);
					this.SendPropertyChanging();
					this._Stage1OrderDate = value;
					this.SendPropertyChanged("Stage1OrderDate");
					this.OnStage1OrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stage2OrderDate", DbType="Date NOT NULL")]
		public System.DateTime Stage2OrderDate
		{
			get
			{
				return this._Stage2OrderDate;
			}
			set
			{
				if ((this._Stage2OrderDate != value))
				{
					this.OnStage2OrderDateChanging(value);
					this.SendPropertyChanging();
					this._Stage2OrderDate = value;
					this.SendPropertyChanged("Stage2OrderDate");
					this.OnStage2OrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaidOrderDate", DbType="Date NOT NULL")]
		public System.DateTime PaidOrderDate
		{
			get
			{
				return this._PaidOrderDate;
			}
			set
			{
				if ((this._PaidOrderDate != value))
				{
					this.OnPaidOrderDateChanging(value);
					this.SendPropertyChanging();
					this._PaidOrderDate = value;
					this.SendPropertyChanged("PaidOrderDate");
					this.OnPaidOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousUseDepth", DbType="Int")]
		public System.Nullable<int> PreviousUseDepth
		{
			get
			{
				return this._PreviousUseDepth;
			}
			set
			{
				if ((this._PreviousUseDepth != value))
				{
					this.OnPreviousUseDepthChanging(value);
					this.SendPropertyChanging();
					this._PreviousUseDepth = value;
					this.SendPropertyChanged("PreviousUseDepth");
					this.OnPreviousUseDepthChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CampaignStatus")]
	public partial class CampaignStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public CampaignStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CampaignTypes")]
	public partial class CampaignType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _CampaignTypeID;
		
		private string _Name;
		
		private EntitySet<EduLevelsToCampaignType> _EduLevelsToCampaignTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignTypeIDChanging(short value);
    partial void OnCampaignTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CampaignType()
		{
			this._EduLevelsToCampaignTypes = new EntitySet<EduLevelsToCampaignType>(new Action<EduLevelsToCampaignType>(this.attach_EduLevelsToCampaignTypes), new Action<EduLevelsToCampaignType>(this.detach_EduLevelsToCampaignTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignTypeID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short CampaignTypeID
		{
			get
			{
				return this._CampaignTypeID;
			}
			set
			{
				if ((this._CampaignTypeID != value))
				{
					this.OnCampaignTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignTypeID = value;
					this.SendPropertyChanged("CampaignTypeID");
					this.OnCampaignTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignType_EduLevelsToCampaignType", Storage="_EduLevelsToCampaignTypes", ThisKey="CampaignTypeID", OtherKey="CampaignTypeID")]
		public EntitySet<EduLevelsToCampaignType> EduLevelsToCampaignTypes
		{
			get
			{
				return this._EduLevelsToCampaignTypes;
			}
			set
			{
				this._EduLevelsToCampaignTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EduLevelsToCampaignTypes(EduLevelsToCampaignType entity)
		{
			this.SendPropertyChanging();
			entity.CampaignType = this;
		}
		
		private void detach_EduLevelsToCampaignTypes(EduLevelsToCampaignType entity)
		{
			this.SendPropertyChanging();
			entity.CampaignType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CityType")]
	public partial class CityType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CityID;
		
		private int _RegionID;
		
		private string _Name;
		
		private string _OkatoCode;
		
		private System.Nullable<System.DateTime> _OkatoModified;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCityIDChanging(int value);
    partial void OnCityIDChanged();
    partial void OnRegionIDChanging(int value);
    partial void OnRegionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOkatoCodeChanging(string value);
    partial void OnOkatoCodeChanged();
    partial void OnOkatoModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnOkatoModifiedChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public CityType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int NOT NULL")]
		public int RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OkatoCode", DbType="VarChar(16)")]
		public string OkatoCode
		{
			get
			{
				return this._OkatoCode;
			}
			set
			{
				if ((this._OkatoCode != value))
				{
					this.OnOkatoCodeChanging(value);
					this.SendPropertyChanging();
					this._OkatoCode = value;
					this.SendPropertyChanged("OkatoCode");
					this.OnOkatoCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OkatoModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> OkatoModified
		{
			get
			{
				return this._OkatoModified;
			}
			set
			{
				if ((this._OkatoModified != value))
				{
					this.OnOkatoModifiedChanging(value);
					this.SendPropertyChanging();
					this._OkatoModified = value;
					this.SendPropertyChanged("OkatoModified");
					this.OnOkatoModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompetitiveGroup")]
	public partial class CompetitiveGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompetitiveGroupID;
		
		private int _InstitutionID;
		
		private string _Name;
		
		private short _Course;
		
		private string _UID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _CampaignID;
		
		private System.Nullable<System.Guid> _CompetitiveGroupGUID;
		
		private System.Nullable<bool> _IsFromKrym;
		
		private System.Nullable<bool> _IsAdditional;
		
		private System.Nullable<short> _EducationFormId;
		
		private System.Nullable<short> _EducationSourceId;
		
		private System.Nullable<short> _EducationLevelID;
		
		private System.Nullable<int> _DirectionID;
		
		private EntitySet<Application> _Applications;
		
		private EntitySet<ApplicationCompetitiveGroupItem> _ApplicationCompetitiveGroupItems;
		
		private EntitySet<ApplicationEntranceTestDocument> _ApplicationEntranceTestDocuments;
		
		private EntitySet<ApplicationSelectedCompetitiveGroup> _ApplicationSelectedCompetitiveGroups;
		
		private EntitySet<BenefitItemC> _BenefitItemCs;
		
		private EntitySet<CompetitiveGroupItem> _CompetitiveGroupItems;
		
		private EntitySet<CompetitiveGroupProgram> _CompetitiveGroupPrograms;
		
		private EntitySet<CompetitiveGroupTargetItem> _CompetitiveGroupTargetItems;
		
		private EntitySet<EntranceTestItemC> _EntranceTestItemCs;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<AdmissionItemType> _AdmissionItemType;
		
		private EntityRef<AdmissionItemType> _AdmissionItemType1;
		
		private EntityRef<AdmissionItemType> _AdmissionItemType2;
		
		private EntityRef<Direction> _Direction;
		
		private EntityRef<Institution> _Institution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompetitiveGroupIDChanging(int value);
    partial void OnCompetitiveGroupIDChanged();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCourseChanging(short value);
    partial void OnCourseChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnCampaignIDChanging(System.Nullable<int> value);
    partial void OnCampaignIDChanged();
    partial void OnCompetitiveGroupGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnCompetitiveGroupGUIDChanged();
    partial void OnIsFromKrymChanging(System.Nullable<bool> value);
    partial void OnIsFromKrymChanged();
    partial void OnIsAdditionalChanging(System.Nullable<bool> value);
    partial void OnIsAdditionalChanged();
    partial void OnEducationFormIdChanging(System.Nullable<short> value);
    partial void OnEducationFormIdChanged();
    partial void OnEducationSourceIdChanging(System.Nullable<short> value);
    partial void OnEducationSourceIdChanged();
    partial void OnEducationLevelIDChanging(System.Nullable<short> value);
    partial void OnEducationLevelIDChanged();
    partial void OnDirectionIDChanging(System.Nullable<int> value);
    partial void OnDirectionIDChanged();
    #endregion
		
		public CompetitiveGroup()
		{
			this._Applications = new EntitySet<Application>(new Action<Application>(this.attach_Applications), new Action<Application>(this.detach_Applications));
			this._ApplicationCompetitiveGroupItems = new EntitySet<ApplicationCompetitiveGroupItem>(new Action<ApplicationCompetitiveGroupItem>(this.attach_ApplicationCompetitiveGroupItems), new Action<ApplicationCompetitiveGroupItem>(this.detach_ApplicationCompetitiveGroupItems));
			this._ApplicationEntranceTestDocuments = new EntitySet<ApplicationEntranceTestDocument>(new Action<ApplicationEntranceTestDocument>(this.attach_ApplicationEntranceTestDocuments), new Action<ApplicationEntranceTestDocument>(this.detach_ApplicationEntranceTestDocuments));
			this._ApplicationSelectedCompetitiveGroups = new EntitySet<ApplicationSelectedCompetitiveGroup>(new Action<ApplicationSelectedCompetitiveGroup>(this.attach_ApplicationSelectedCompetitiveGroups), new Action<ApplicationSelectedCompetitiveGroup>(this.detach_ApplicationSelectedCompetitiveGroups));
			this._BenefitItemCs = new EntitySet<BenefitItemC>(new Action<BenefitItemC>(this.attach_BenefitItemCs), new Action<BenefitItemC>(this.detach_BenefitItemCs));
			this._CompetitiveGroupItems = new EntitySet<CompetitiveGroupItem>(new Action<CompetitiveGroupItem>(this.attach_CompetitiveGroupItems), new Action<CompetitiveGroupItem>(this.detach_CompetitiveGroupItems));
			this._CompetitiveGroupPrograms = new EntitySet<CompetitiveGroupProgram>(new Action<CompetitiveGroupProgram>(this.attach_CompetitiveGroupPrograms), new Action<CompetitiveGroupProgram>(this.detach_CompetitiveGroupPrograms));
			this._CompetitiveGroupTargetItems = new EntitySet<CompetitiveGroupTargetItem>(new Action<CompetitiveGroupTargetItem>(this.attach_CompetitiveGroupTargetItems), new Action<CompetitiveGroupTargetItem>(this.detach_CompetitiveGroupTargetItems));
			this._EntranceTestItemCs = new EntitySet<EntranceTestItemC>(new Action<EntranceTestItemC>(this.attach_EntranceTestItemCs), new Action<EntranceTestItemC>(this.detach_EntranceTestItemCs));
			this._Campaign = default(EntityRef<Campaign>);
			this._AdmissionItemType = default(EntityRef<AdmissionItemType>);
			this._AdmissionItemType1 = default(EntityRef<AdmissionItemType>);
			this._AdmissionItemType2 = default(EntityRef<AdmissionItemType>);
			this._Direction = default(EntityRef<Direction>);
			this._Institution = default(EntityRef<Institution>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompetitiveGroupID
		{
			get
			{
				return this._CompetitiveGroupID;
			}
			set
			{
				if ((this._CompetitiveGroupID != value))
				{
					this.OnCompetitiveGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupID = value;
					this.SendPropertyChanged("CompetitiveGroupID");
					this.OnCompetitiveGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					if (this._Institution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="SmallInt NOT NULL")]
		public short Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this.OnCourseChanging(value);
					this.SendPropertyChanging();
					this._Course = value;
					this.SendPropertyChanged("Course");
					this.OnCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int")]
		public System.Nullable<int> CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CompetitiveGroupGUID
		{
			get
			{
				return this._CompetitiveGroupGUID;
			}
			set
			{
				if ((this._CompetitiveGroupGUID != value))
				{
					this.OnCompetitiveGroupGUIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupGUID = value;
					this.SendPropertyChanged("CompetitiveGroupGUID");
					this.OnCompetitiveGroupGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFromKrym", DbType="Bit")]
		public System.Nullable<bool> IsFromKrym
		{
			get
			{
				return this._IsFromKrym;
			}
			set
			{
				if ((this._IsFromKrym != value))
				{
					this.OnIsFromKrymChanging(value);
					this.SendPropertyChanging();
					this._IsFromKrym = value;
					this.SendPropertyChanged("IsFromKrym");
					this.OnIsFromKrymChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdditional", DbType="Bit")]
		public System.Nullable<bool> IsAdditional
		{
			get
			{
				return this._IsAdditional;
			}
			set
			{
				if ((this._IsAdditional != value))
				{
					this.OnIsAdditionalChanging(value);
					this.SendPropertyChanging();
					this._IsAdditional = value;
					this.SendPropertyChanged("IsAdditional");
					this.OnIsAdditionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationFormId", DbType="SmallInt")]
		public System.Nullable<short> EducationFormId
		{
			get
			{
				return this._EducationFormId;
			}
			set
			{
				if ((this._EducationFormId != value))
				{
					if (this._AdmissionItemType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEducationFormIdChanging(value);
					this.SendPropertyChanging();
					this._EducationFormId = value;
					this.SendPropertyChanged("EducationFormId");
					this.OnEducationFormIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationSourceId", DbType="SmallInt")]
		public System.Nullable<short> EducationSourceId
		{
			get
			{
				return this._EducationSourceId;
			}
			set
			{
				if ((this._EducationSourceId != value))
				{
					if (this._AdmissionItemType2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEducationSourceIdChanging(value);
					this.SendPropertyChanging();
					this._EducationSourceId = value;
					this.SendPropertyChanged("EducationSourceId");
					this.OnEducationSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelID", DbType="SmallInt")]
		public System.Nullable<short> EducationLevelID
		{
			get
			{
				return this._EducationLevelID;
			}
			set
			{
				if ((this._EducationLevelID != value))
				{
					if (this._AdmissionItemType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEducationLevelIDChanging(value);
					this.SendPropertyChanging();
					this._EducationLevelID = value;
					this.SendPropertyChanged("EducationLevelID");
					this.OnEducationLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int")]
		public System.Nullable<int> DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					if (this._Direction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroup_Application", Storage="_Applications", ThisKey="CompetitiveGroupID", OtherKey="OrderCompetitiveGroupID")]
		public EntitySet<Application> Applications
		{
			get
			{
				return this._Applications;
			}
			set
			{
				this._Applications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroup_ApplicationCompetitiveGroupItem", Storage="_ApplicationCompetitiveGroupItems", ThisKey="CompetitiveGroupID", OtherKey="CompetitiveGroupId")]
		public EntitySet<ApplicationCompetitiveGroupItem> ApplicationCompetitiveGroupItems
		{
			get
			{
				return this._ApplicationCompetitiveGroupItems;
			}
			set
			{
				this._ApplicationCompetitiveGroupItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroup_ApplicationEntranceTestDocument", Storage="_ApplicationEntranceTestDocuments", ThisKey="CompetitiveGroupID", OtherKey="CompetitiveGroupID")]
		public EntitySet<ApplicationEntranceTestDocument> ApplicationEntranceTestDocuments
		{
			get
			{
				return this._ApplicationEntranceTestDocuments;
			}
			set
			{
				this._ApplicationEntranceTestDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroup_ApplicationSelectedCompetitiveGroup", Storage="_ApplicationSelectedCompetitiveGroups", ThisKey="CompetitiveGroupID", OtherKey="CompetitiveGroupID")]
		public EntitySet<ApplicationSelectedCompetitiveGroup> ApplicationSelectedCompetitiveGroups
		{
			get
			{
				return this._ApplicationSelectedCompetitiveGroups;
			}
			set
			{
				this._ApplicationSelectedCompetitiveGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroup_BenefitItemC", Storage="_BenefitItemCs", ThisKey="CompetitiveGroupID", OtherKey="CompetitiveGroupID")]
		public EntitySet<BenefitItemC> BenefitItemCs
		{
			get
			{
				return this._BenefitItemCs;
			}
			set
			{
				this._BenefitItemCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroup_CompetitiveGroupItem", Storage="_CompetitiveGroupItems", ThisKey="CompetitiveGroupID", OtherKey="CompetitiveGroupID")]
		public EntitySet<CompetitiveGroupItem> CompetitiveGroupItems
		{
			get
			{
				return this._CompetitiveGroupItems;
			}
			set
			{
				this._CompetitiveGroupItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroup_CompetitiveGroupProgram", Storage="_CompetitiveGroupPrograms", ThisKey="CompetitiveGroupID", OtherKey="CompetitiveGroupID")]
		public EntitySet<CompetitiveGroupProgram> CompetitiveGroupPrograms
		{
			get
			{
				return this._CompetitiveGroupPrograms;
			}
			set
			{
				this._CompetitiveGroupPrograms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroup_CompetitiveGroupTargetItem", Storage="_CompetitiveGroupTargetItems", ThisKey="CompetitiveGroupID", OtherKey="CompetitiveGroupID")]
		public EntitySet<CompetitiveGroupTargetItem> CompetitiveGroupTargetItems
		{
			get
			{
				return this._CompetitiveGroupTargetItems;
			}
			set
			{
				this._CompetitiveGroupTargetItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroup_EntranceTestItemC", Storage="_EntranceTestItemCs", ThisKey="CompetitiveGroupID", OtherKey="CompetitiveGroupID")]
		public EntitySet<EntranceTestItemC> EntranceTestItemCs
		{
			get
			{
				return this._EntranceTestItemCs;
			}
			set
			{
				this._EntranceTestItemCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_CompetitiveGroup", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.CompetitiveGroups.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.CompetitiveGroups.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_CompetitiveGroup", Storage="_AdmissionItemType", ThisKey="EducationFormId", OtherKey="ItemTypeID", IsForeignKey=true)]
		public AdmissionItemType AdmissionItemType
		{
			get
			{
				return this._AdmissionItemType.Entity;
			}
			set
			{
				AdmissionItemType previousValue = this._AdmissionItemType.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionItemType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionItemType.Entity = null;
						previousValue.CompetitiveGroups.Remove(this);
					}
					this._AdmissionItemType.Entity = value;
					if ((value != null))
					{
						value.CompetitiveGroups.Add(this);
						this._EducationFormId = value.ItemTypeID;
					}
					else
					{
						this._EducationFormId = default(Nullable<short>);
					}
					this.SendPropertyChanged("AdmissionItemType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_CompetitiveGroup1", Storage="_AdmissionItemType1", ThisKey="EducationLevelID", OtherKey="ItemTypeID", IsForeignKey=true)]
		public AdmissionItemType AdmissionItemType1
		{
			get
			{
				return this._AdmissionItemType1.Entity;
			}
			set
			{
				AdmissionItemType previousValue = this._AdmissionItemType1.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionItemType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionItemType1.Entity = null;
						previousValue.CompetitiveGroups1.Remove(this);
					}
					this._AdmissionItemType1.Entity = value;
					if ((value != null))
					{
						value.CompetitiveGroups1.Add(this);
						this._EducationLevelID = value.ItemTypeID;
					}
					else
					{
						this._EducationLevelID = default(Nullable<short>);
					}
					this.SendPropertyChanged("AdmissionItemType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_CompetitiveGroup2", Storage="_AdmissionItemType2", ThisKey="EducationSourceId", OtherKey="ItemTypeID", IsForeignKey=true)]
		public AdmissionItemType AdmissionItemType2
		{
			get
			{
				return this._AdmissionItemType2.Entity;
			}
			set
			{
				AdmissionItemType previousValue = this._AdmissionItemType2.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionItemType2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionItemType2.Entity = null;
						previousValue.CompetitiveGroups2.Remove(this);
					}
					this._AdmissionItemType2.Entity = value;
					if ((value != null))
					{
						value.CompetitiveGroups2.Add(this);
						this._EducationSourceId = value.ItemTypeID;
					}
					else
					{
						this._EducationSourceId = default(Nullable<short>);
					}
					this.SendPropertyChanged("AdmissionItemType2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_CompetitiveGroup", Storage="_Direction", ThisKey="DirectionID", OtherKey="DirectionID", IsForeignKey=true)]
		public Direction Direction
		{
			get
			{
				return this._Direction.Entity;
			}
			set
			{
				Direction previousValue = this._Direction.Entity;
				if (((previousValue != value) 
							|| (this._Direction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direction.Entity = null;
						previousValue.CompetitiveGroups.Remove(this);
					}
					this._Direction.Entity = value;
					if ((value != null))
					{
						value.CompetitiveGroups.Add(this);
						this._DirectionID = value.DirectionID;
					}
					else
					{
						this._DirectionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Direction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_CompetitiveGroup", Storage="_Institution", ThisKey="InstitutionID", OtherKey="InstitutionID", IsForeignKey=true)]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.CompetitiveGroups.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.CompetitiveGroups.Add(this);
						this._InstitutionID = value.InstitutionID;
					}
					else
					{
						this._InstitutionID = default(int);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroup = this;
		}
		
		private void detach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroup = null;
		}
		
		private void attach_ApplicationCompetitiveGroupItems(ApplicationCompetitiveGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroup = this;
		}
		
		private void detach_ApplicationCompetitiveGroupItems(ApplicationCompetitiveGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroup = null;
		}
		
		private void attach_ApplicationEntranceTestDocuments(ApplicationEntranceTestDocument entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroup = this;
		}
		
		private void detach_ApplicationEntranceTestDocuments(ApplicationEntranceTestDocument entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroup = null;
		}
		
		private void attach_ApplicationSelectedCompetitiveGroups(ApplicationSelectedCompetitiveGroup entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroup = this;
		}
		
		private void detach_ApplicationSelectedCompetitiveGroups(ApplicationSelectedCompetitiveGroup entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroup = null;
		}
		
		private void attach_BenefitItemCs(BenefitItemC entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroup = this;
		}
		
		private void detach_BenefitItemCs(BenefitItemC entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroup = null;
		}
		
		private void attach_CompetitiveGroupItems(CompetitiveGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroup = this;
		}
		
		private void detach_CompetitiveGroupItems(CompetitiveGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroup = null;
		}
		
		private void attach_CompetitiveGroupPrograms(CompetitiveGroupProgram entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroup = this;
		}
		
		private void detach_CompetitiveGroupPrograms(CompetitiveGroupProgram entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroup = null;
		}
		
		private void attach_CompetitiveGroupTargetItems(CompetitiveGroupTargetItem entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroup = this;
		}
		
		private void detach_CompetitiveGroupTargetItems(CompetitiveGroupTargetItem entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroup = null;
		}
		
		private void attach_EntranceTestItemCs(EntranceTestItemC entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroup = this;
		}
		
		private void detach_EntranceTestItemCs(EntranceTestItemC entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompetitiveGroupItem")]
	public partial class CompetitiveGroupItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompetitiveGroupItemID;
		
		private int _CompetitiveGroupID;
		
		private System.Nullable<int> _NumberBudgetO;
		
		private System.Nullable<int> _NumberBudgetOZ;
		
		private System.Nullable<int> _NumberBudgetZ;
		
		private System.Nullable<int> _NumberPaidO;
		
		private System.Nullable<int> _NumberPaidOZ;
		
		private System.Nullable<int> _NumberPaidZ;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _NumberQuotaO;
		
		private System.Nullable<int> _NumberQuotaOZ;
		
		private System.Nullable<int> _NumberQuotaZ;
		
		private EntitySet<Application> _Applications;
		
		private EntitySet<ApplicationCompetitiveGroupItem> _ApplicationCompetitiveGroupItems;
		
		private EntitySet<ApplicationSelectedCompetitiveGroupItem> _ApplicationSelectedCompetitiveGroupItems;
		
		private EntityRef<CompetitiveGroup> _CompetitiveGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompetitiveGroupItemIDChanging(int value);
    partial void OnCompetitiveGroupItemIDChanged();
    partial void OnCompetitiveGroupIDChanging(int value);
    partial void OnCompetitiveGroupIDChanged();
    partial void OnNumberBudgetOChanging(System.Nullable<int> value);
    partial void OnNumberBudgetOChanged();
    partial void OnNumberBudgetOZChanging(System.Nullable<int> value);
    partial void OnNumberBudgetOZChanged();
    partial void OnNumberBudgetZChanging(System.Nullable<int> value);
    partial void OnNumberBudgetZChanged();
    partial void OnNumberPaidOChanging(System.Nullable<int> value);
    partial void OnNumberPaidOChanged();
    partial void OnNumberPaidOZChanging(System.Nullable<int> value);
    partial void OnNumberPaidOZChanged();
    partial void OnNumberPaidZChanging(System.Nullable<int> value);
    partial void OnNumberPaidZChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnNumberQuotaOChanging(System.Nullable<int> value);
    partial void OnNumberQuotaOChanged();
    partial void OnNumberQuotaOZChanging(System.Nullable<int> value);
    partial void OnNumberQuotaOZChanged();
    partial void OnNumberQuotaZChanging(System.Nullable<int> value);
    partial void OnNumberQuotaZChanged();
    #endregion
		
		public CompetitiveGroupItem()
		{
			this._Applications = new EntitySet<Application>(new Action<Application>(this.attach_Applications), new Action<Application>(this.detach_Applications));
			this._ApplicationCompetitiveGroupItems = new EntitySet<ApplicationCompetitiveGroupItem>(new Action<ApplicationCompetitiveGroupItem>(this.attach_ApplicationCompetitiveGroupItems), new Action<ApplicationCompetitiveGroupItem>(this.detach_ApplicationCompetitiveGroupItems));
			this._ApplicationSelectedCompetitiveGroupItems = new EntitySet<ApplicationSelectedCompetitiveGroupItem>(new Action<ApplicationSelectedCompetitiveGroupItem>(this.attach_ApplicationSelectedCompetitiveGroupItems), new Action<ApplicationSelectedCompetitiveGroupItem>(this.detach_ApplicationSelectedCompetitiveGroupItems));
			this._CompetitiveGroup = default(EntityRef<CompetitiveGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompetitiveGroupItemID
		{
			get
			{
				return this._CompetitiveGroupItemID;
			}
			set
			{
				if ((this._CompetitiveGroupItemID != value))
				{
					this.OnCompetitiveGroupItemIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupItemID = value;
					this.SendPropertyChanged("CompetitiveGroupItemID");
					this.OnCompetitiveGroupItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupID", DbType="Int NOT NULL")]
		public int CompetitiveGroupID
		{
			get
			{
				return this._CompetitiveGroupID;
			}
			set
			{
				if ((this._CompetitiveGroupID != value))
				{
					if (this._CompetitiveGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompetitiveGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupID = value;
					this.SendPropertyChanged("CompetitiveGroupID");
					this.OnCompetitiveGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetO", DbType="Int")]
		public System.Nullable<int> NumberBudgetO
		{
			get
			{
				return this._NumberBudgetO;
			}
			set
			{
				if ((this._NumberBudgetO != value))
				{
					this.OnNumberBudgetOChanging(value);
					this.SendPropertyChanging();
					this._NumberBudgetO = value;
					this.SendPropertyChanged("NumberBudgetO");
					this.OnNumberBudgetOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetOZ", DbType="Int")]
		public System.Nullable<int> NumberBudgetOZ
		{
			get
			{
				return this._NumberBudgetOZ;
			}
			set
			{
				if ((this._NumberBudgetOZ != value))
				{
					this.OnNumberBudgetOZChanging(value);
					this.SendPropertyChanging();
					this._NumberBudgetOZ = value;
					this.SendPropertyChanged("NumberBudgetOZ");
					this.OnNumberBudgetOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetZ", DbType="Int")]
		public System.Nullable<int> NumberBudgetZ
		{
			get
			{
				return this._NumberBudgetZ;
			}
			set
			{
				if ((this._NumberBudgetZ != value))
				{
					this.OnNumberBudgetZChanging(value);
					this.SendPropertyChanging();
					this._NumberBudgetZ = value;
					this.SendPropertyChanged("NumberBudgetZ");
					this.OnNumberBudgetZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberPaidO", DbType="Int")]
		public System.Nullable<int> NumberPaidO
		{
			get
			{
				return this._NumberPaidO;
			}
			set
			{
				if ((this._NumberPaidO != value))
				{
					this.OnNumberPaidOChanging(value);
					this.SendPropertyChanging();
					this._NumberPaidO = value;
					this.SendPropertyChanged("NumberPaidO");
					this.OnNumberPaidOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberPaidOZ", DbType="Int")]
		public System.Nullable<int> NumberPaidOZ
		{
			get
			{
				return this._NumberPaidOZ;
			}
			set
			{
				if ((this._NumberPaidOZ != value))
				{
					this.OnNumberPaidOZChanging(value);
					this.SendPropertyChanging();
					this._NumberPaidOZ = value;
					this.SendPropertyChanged("NumberPaidOZ");
					this.OnNumberPaidOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberPaidZ", DbType="Int")]
		public System.Nullable<int> NumberPaidZ
		{
			get
			{
				return this._NumberPaidZ;
			}
			set
			{
				if ((this._NumberPaidZ != value))
				{
					this.OnNumberPaidZChanging(value);
					this.SendPropertyChanging();
					this._NumberPaidZ = value;
					this.SendPropertyChanged("NumberPaidZ");
					this.OnNumberPaidZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberQuotaO", DbType="Int")]
		public System.Nullable<int> NumberQuotaO
		{
			get
			{
				return this._NumberQuotaO;
			}
			set
			{
				if ((this._NumberQuotaO != value))
				{
					this.OnNumberQuotaOChanging(value);
					this.SendPropertyChanging();
					this._NumberQuotaO = value;
					this.SendPropertyChanged("NumberQuotaO");
					this.OnNumberQuotaOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberQuotaOZ", DbType="Int")]
		public System.Nullable<int> NumberQuotaOZ
		{
			get
			{
				return this._NumberQuotaOZ;
			}
			set
			{
				if ((this._NumberQuotaOZ != value))
				{
					this.OnNumberQuotaOZChanging(value);
					this.SendPropertyChanging();
					this._NumberQuotaOZ = value;
					this.SendPropertyChanged("NumberQuotaOZ");
					this.OnNumberQuotaOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberQuotaZ", DbType="Int")]
		public System.Nullable<int> NumberQuotaZ
		{
			get
			{
				return this._NumberQuotaZ;
			}
			set
			{
				if ((this._NumberQuotaZ != value))
				{
					this.OnNumberQuotaZChanging(value);
					this.SendPropertyChanging();
					this._NumberQuotaZ = value;
					this.SendPropertyChanged("NumberQuotaZ");
					this.OnNumberQuotaZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroupItem_Application", Storage="_Applications", ThisKey="CompetitiveGroupItemID", OtherKey="OrderCompetitiveGroupItemID")]
		public EntitySet<Application> Applications
		{
			get
			{
				return this._Applications;
			}
			set
			{
				this._Applications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroupItem_ApplicationCompetitiveGroupItem", Storage="_ApplicationCompetitiveGroupItems", ThisKey="CompetitiveGroupItemID", OtherKey="CompetitiveGroupItemId")]
		public EntitySet<ApplicationCompetitiveGroupItem> ApplicationCompetitiveGroupItems
		{
			get
			{
				return this._ApplicationCompetitiveGroupItems;
			}
			set
			{
				this._ApplicationCompetitiveGroupItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroupItem_ApplicationSelectedCompetitiveGroupItem", Storage="_ApplicationSelectedCompetitiveGroupItems", ThisKey="CompetitiveGroupItemID", OtherKey="CompetitiveGroupItemID")]
		public EntitySet<ApplicationSelectedCompetitiveGroupItem> ApplicationSelectedCompetitiveGroupItems
		{
			get
			{
				return this._ApplicationSelectedCompetitiveGroupItems;
			}
			set
			{
				this._ApplicationSelectedCompetitiveGroupItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroup_CompetitiveGroupItem", Storage="_CompetitiveGroup", ThisKey="CompetitiveGroupID", OtherKey="CompetitiveGroupID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CompetitiveGroup CompetitiveGroup
		{
			get
			{
				return this._CompetitiveGroup.Entity;
			}
			set
			{
				CompetitiveGroup previousValue = this._CompetitiveGroup.Entity;
				if (((previousValue != value) 
							|| (this._CompetitiveGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompetitiveGroup.Entity = null;
						previousValue.CompetitiveGroupItems.Remove(this);
					}
					this._CompetitiveGroup.Entity = value;
					if ((value != null))
					{
						value.CompetitiveGroupItems.Add(this);
						this._CompetitiveGroupID = value.CompetitiveGroupID;
					}
					else
					{
						this._CompetitiveGroupID = default(int);
					}
					this.SendPropertyChanged("CompetitiveGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroupItem = this;
		}
		
		private void detach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroupItem = null;
		}
		
		private void attach_ApplicationCompetitiveGroupItems(ApplicationCompetitiveGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroupItem = this;
		}
		
		private void detach_ApplicationCompetitiveGroupItems(ApplicationCompetitiveGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroupItem = null;
		}
		
		private void attach_ApplicationSelectedCompetitiveGroupItems(ApplicationSelectedCompetitiveGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroupItem = this;
		}
		
		private void detach_ApplicationSelectedCompetitiveGroupItems(ApplicationSelectedCompetitiveGroupItem entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroupItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompetitiveGroupProgram")]
	public partial class CompetitiveGroupProgram : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ProgramID;
		
		private string _UID;
		
		private int _CompetitiveGroupID;
		
		private string _Name;
		
		private string _Code;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<CompetitiveGroup> _CompetitiveGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramIDChanging(long value);
    partial void OnProgramIDChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnCompetitiveGroupIDChanging(int value);
    partial void OnCompetitiveGroupIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public CompetitiveGroupProgram()
		{
			this._CompetitiveGroup = default(EntityRef<CompetitiveGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ProgramID
		{
			get
			{
				return this._ProgramID;
			}
			set
			{
				if ((this._ProgramID != value))
				{
					this.OnProgramIDChanging(value);
					this.SendPropertyChanging();
					this._ProgramID = value;
					this.SendPropertyChanged("ProgramID");
					this.OnProgramIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupID", DbType="Int NOT NULL")]
		public int CompetitiveGroupID
		{
			get
			{
				return this._CompetitiveGroupID;
			}
			set
			{
				if ((this._CompetitiveGroupID != value))
				{
					if (this._CompetitiveGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompetitiveGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupID = value;
					this.SendPropertyChanged("CompetitiveGroupID");
					this.OnCompetitiveGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroup_CompetitiveGroupProgram", Storage="_CompetitiveGroup", ThisKey="CompetitiveGroupID", OtherKey="CompetitiveGroupID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CompetitiveGroup CompetitiveGroup
		{
			get
			{
				return this._CompetitiveGroup.Entity;
			}
			set
			{
				CompetitiveGroup previousValue = this._CompetitiveGroup.Entity;
				if (((previousValue != value) 
							|| (this._CompetitiveGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompetitiveGroup.Entity = null;
						previousValue.CompetitiveGroupPrograms.Remove(this);
					}
					this._CompetitiveGroup.Entity = value;
					if ((value != null))
					{
						value.CompetitiveGroupPrograms.Add(this);
						this._CompetitiveGroupID = value.CompetitiveGroupID;
					}
					else
					{
						this._CompetitiveGroupID = default(int);
					}
					this.SendPropertyChanged("CompetitiveGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompetitiveGroupTarget")]
	public partial class CompetitiveGroupTarget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompetitiveGroupTargetID;
		
		private string _Name;
		
		private string _UID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private int _InstitutionID;
		
		private EntitySet<Application> _Applications;
		
		private EntitySet<ApplicationSelectedCompetitiveGroupTarget> _ApplicationSelectedCompetitiveGroupTargets;
		
		private EntitySet<CompetitiveGroupTargetItem> _CompetitiveGroupTargetItems;
		
		private EntityRef<Institution> _Institution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompetitiveGroupTargetIDChanging(int value);
    partial void OnCompetitiveGroupTargetIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    #endregion
		
		public CompetitiveGroupTarget()
		{
			this._Applications = new EntitySet<Application>(new Action<Application>(this.attach_Applications), new Action<Application>(this.detach_Applications));
			this._ApplicationSelectedCompetitiveGroupTargets = new EntitySet<ApplicationSelectedCompetitiveGroupTarget>(new Action<ApplicationSelectedCompetitiveGroupTarget>(this.attach_ApplicationSelectedCompetitiveGroupTargets), new Action<ApplicationSelectedCompetitiveGroupTarget>(this.detach_ApplicationSelectedCompetitiveGroupTargets));
			this._CompetitiveGroupTargetItems = new EntitySet<CompetitiveGroupTargetItem>(new Action<CompetitiveGroupTargetItem>(this.attach_CompetitiveGroupTargetItems), new Action<CompetitiveGroupTargetItem>(this.detach_CompetitiveGroupTargetItems));
			this._Institution = default(EntityRef<Institution>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupTargetID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompetitiveGroupTargetID
		{
			get
			{
				return this._CompetitiveGroupTargetID;
			}
			set
			{
				if ((this._CompetitiveGroupTargetID != value))
				{
					this.OnCompetitiveGroupTargetIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupTargetID = value;
					this.SendPropertyChanged("CompetitiveGroupTargetID");
					this.OnCompetitiveGroupTargetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					if (this._Institution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroupTarget_Application", Storage="_Applications", ThisKey="CompetitiveGroupTargetID", OtherKey="OrderCompetitiveGroupTargetID")]
		public EntitySet<Application> Applications
		{
			get
			{
				return this._Applications;
			}
			set
			{
				this._Applications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroupTarget_ApplicationSelectedCompetitiveGroupTarget", Storage="_ApplicationSelectedCompetitiveGroupTargets", ThisKey="CompetitiveGroupTargetID", OtherKey="CompetitiveGroupTargetID")]
		public EntitySet<ApplicationSelectedCompetitiveGroupTarget> ApplicationSelectedCompetitiveGroupTargets
		{
			get
			{
				return this._ApplicationSelectedCompetitiveGroupTargets;
			}
			set
			{
				this._ApplicationSelectedCompetitiveGroupTargets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroupTarget_CompetitiveGroupTargetItem", Storage="_CompetitiveGroupTargetItems", ThisKey="CompetitiveGroupTargetID", OtherKey="CompetitiveGroupTargetID")]
		public EntitySet<CompetitiveGroupTargetItem> CompetitiveGroupTargetItems
		{
			get
			{
				return this._CompetitiveGroupTargetItems;
			}
			set
			{
				this._CompetitiveGroupTargetItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_CompetitiveGroupTarget", Storage="_Institution", ThisKey="InstitutionID", OtherKey="InstitutionID", IsForeignKey=true)]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.CompetitiveGroupTargets.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.CompetitiveGroupTargets.Add(this);
						this._InstitutionID = value.InstitutionID;
					}
					else
					{
						this._InstitutionID = default(int);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroupTarget = this;
		}
		
		private void detach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroupTarget = null;
		}
		
		private void attach_ApplicationSelectedCompetitiveGroupTargets(ApplicationSelectedCompetitiveGroupTarget entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroupTarget = this;
		}
		
		private void detach_ApplicationSelectedCompetitiveGroupTargets(ApplicationSelectedCompetitiveGroupTarget entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroupTarget = null;
		}
		
		private void attach_CompetitiveGroupTargetItems(CompetitiveGroupTargetItem entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroupTarget = this;
		}
		
		private void detach_CompetitiveGroupTargetItems(CompetitiveGroupTargetItem entity)
		{
			this.SendPropertyChanging();
			entity.CompetitiveGroupTarget = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompetitiveGroupTargetItem")]
	public partial class CompetitiveGroupTargetItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CompetitiveGroupTargetItemID;
		
		private int _CompetitiveGroupTargetID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _NumberTargetO;
		
		private System.Nullable<int> _NumberTargetOZ;
		
		private System.Nullable<int> _NumberTargetZ;
		
		private int _CompetitiveGroupID;
		
		private EntityRef<CompetitiveGroup> _CompetitiveGroup;
		
		private EntityRef<CompetitiveGroupTarget> _CompetitiveGroupTarget;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompetitiveGroupTargetItemIDChanging(int value);
    partial void OnCompetitiveGroupTargetItemIDChanged();
    partial void OnCompetitiveGroupTargetIDChanging(int value);
    partial void OnCompetitiveGroupTargetIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnNumberTargetOChanging(System.Nullable<int> value);
    partial void OnNumberTargetOChanged();
    partial void OnNumberTargetOZChanging(System.Nullable<int> value);
    partial void OnNumberTargetOZChanged();
    partial void OnNumberTargetZChanging(System.Nullable<int> value);
    partial void OnNumberTargetZChanged();
    partial void OnCompetitiveGroupIDChanging(int value);
    partial void OnCompetitiveGroupIDChanged();
    #endregion
		
		public CompetitiveGroupTargetItem()
		{
			this._CompetitiveGroup = default(EntityRef<CompetitiveGroup>);
			this._CompetitiveGroupTarget = default(EntityRef<CompetitiveGroupTarget>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupTargetItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CompetitiveGroupTargetItemID
		{
			get
			{
				return this._CompetitiveGroupTargetItemID;
			}
			set
			{
				if ((this._CompetitiveGroupTargetItemID != value))
				{
					this.OnCompetitiveGroupTargetItemIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupTargetItemID = value;
					this.SendPropertyChanged("CompetitiveGroupTargetItemID");
					this.OnCompetitiveGroupTargetItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupTargetID", DbType="Int NOT NULL")]
		public int CompetitiveGroupTargetID
		{
			get
			{
				return this._CompetitiveGroupTargetID;
			}
			set
			{
				if ((this._CompetitiveGroupTargetID != value))
				{
					if (this._CompetitiveGroupTarget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompetitiveGroupTargetIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupTargetID = value;
					this.SendPropertyChanged("CompetitiveGroupTargetID");
					this.OnCompetitiveGroupTargetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTargetO", DbType="Int")]
		public System.Nullable<int> NumberTargetO
		{
			get
			{
				return this._NumberTargetO;
			}
			set
			{
				if ((this._NumberTargetO != value))
				{
					this.OnNumberTargetOChanging(value);
					this.SendPropertyChanging();
					this._NumberTargetO = value;
					this.SendPropertyChanged("NumberTargetO");
					this.OnNumberTargetOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTargetOZ", DbType="Int")]
		public System.Nullable<int> NumberTargetOZ
		{
			get
			{
				return this._NumberTargetOZ;
			}
			set
			{
				if ((this._NumberTargetOZ != value))
				{
					this.OnNumberTargetOZChanging(value);
					this.SendPropertyChanging();
					this._NumberTargetOZ = value;
					this.SendPropertyChanged("NumberTargetOZ");
					this.OnNumberTargetOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTargetZ", DbType="Int")]
		public System.Nullable<int> NumberTargetZ
		{
			get
			{
				return this._NumberTargetZ;
			}
			set
			{
				if ((this._NumberTargetZ != value))
				{
					this.OnNumberTargetZChanging(value);
					this.SendPropertyChanging();
					this._NumberTargetZ = value;
					this.SendPropertyChanged("NumberTargetZ");
					this.OnNumberTargetZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupID", DbType="Int NOT NULL")]
		public int CompetitiveGroupID
		{
			get
			{
				return this._CompetitiveGroupID;
			}
			set
			{
				if ((this._CompetitiveGroupID != value))
				{
					if (this._CompetitiveGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompetitiveGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupID = value;
					this.SendPropertyChanged("CompetitiveGroupID");
					this.OnCompetitiveGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroup_CompetitiveGroupTargetItem", Storage="_CompetitiveGroup", ThisKey="CompetitiveGroupID", OtherKey="CompetitiveGroupID", IsForeignKey=true)]
		public CompetitiveGroup CompetitiveGroup
		{
			get
			{
				return this._CompetitiveGroup.Entity;
			}
			set
			{
				CompetitiveGroup previousValue = this._CompetitiveGroup.Entity;
				if (((previousValue != value) 
							|| (this._CompetitiveGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompetitiveGroup.Entity = null;
						previousValue.CompetitiveGroupTargetItems.Remove(this);
					}
					this._CompetitiveGroup.Entity = value;
					if ((value != null))
					{
						value.CompetitiveGroupTargetItems.Add(this);
						this._CompetitiveGroupID = value.CompetitiveGroupID;
					}
					else
					{
						this._CompetitiveGroupID = default(int);
					}
					this.SendPropertyChanged("CompetitiveGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroupTarget_CompetitiveGroupTargetItem", Storage="_CompetitiveGroupTarget", ThisKey="CompetitiveGroupTargetID", OtherKey="CompetitiveGroupTargetID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CompetitiveGroupTarget CompetitiveGroupTarget
		{
			get
			{
				return this._CompetitiveGroupTarget.Entity;
			}
			set
			{
				CompetitiveGroupTarget previousValue = this._CompetitiveGroupTarget.Entity;
				if (((previousValue != value) 
							|| (this._CompetitiveGroupTarget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompetitiveGroupTarget.Entity = null;
						previousValue.CompetitiveGroupTargetItems.Remove(this);
					}
					this._CompetitiveGroupTarget.Entity = value;
					if ((value != null))
					{
						value.CompetitiveGroupTargetItems.Add(this);
						this._CompetitiveGroupTargetID = value.CompetitiveGroupTargetID;
					}
					else
					{
						this._CompetitiveGroupTargetID = default(int);
					}
					this.SendPropertyChanged("CompetitiveGroupTarget");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompositionThemes")]
	public partial class CompositionTheme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThemeID;
		
		private string _Name;
		
		private EntitySet<ApplicationCompositionResult> _ApplicationCompositionResults;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThemeIDChanging(int value);
    partial void OnThemeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CompositionTheme()
		{
			this._ApplicationCompositionResults = new EntitySet<ApplicationCompositionResult>(new Action<ApplicationCompositionResult>(this.attach_ApplicationCompositionResults), new Action<ApplicationCompositionResult>(this.detach_ApplicationCompositionResults));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThemeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ThemeID
		{
			get
			{
				return this._ThemeID;
			}
			set
			{
				if ((this._ThemeID != value))
				{
					this.OnThemeIDChanging(value);
					this.SendPropertyChanging();
					this._ThemeID = value;
					this.SendPropertyChanged("ThemeID");
					this.OnThemeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompositionTheme_ApplicationCompositionResult", Storage="_ApplicationCompositionResults", ThisKey="ThemeID", OtherKey="ThemeID")]
		public EntitySet<ApplicationCompositionResult> ApplicationCompositionResults
		{
			get
			{
				return this._ApplicationCompositionResults;
			}
			set
			{
				this._ApplicationCompositionResults.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApplicationCompositionResults(ApplicationCompositionResult entity)
		{
			this.SendPropertyChanging();
			entity.CompositionTheme = this;
		}
		
		private void detach_ApplicationCompositionResults(ApplicationCompositionResult entity)
		{
			this.SendPropertyChanging();
			entity.CompositionTheme = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CompositionThemes_Approb")]
	public partial class CompositionThemes_Approb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ThemeID;
		
		private string _Code;
		
		private string _Name;
		
		private EntitySet<ApplicationCompositionResults_Approb> _ApplicationCompositionResults_Approbs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnThemeIDChanging(int value);
    partial void OnThemeIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public CompositionThemes_Approb()
		{
			this._ApplicationCompositionResults_Approbs = new EntitySet<ApplicationCompositionResults_Approb>(new Action<ApplicationCompositionResults_Approb>(this.attach_ApplicationCompositionResults_Approbs), new Action<ApplicationCompositionResults_Approb>(this.detach_ApplicationCompositionResults_Approbs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThemeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ThemeID
		{
			get
			{
				return this._ThemeID;
			}
			set
			{
				if ((this._ThemeID != value))
				{
					this.OnThemeIDChanging(value);
					this.SendPropertyChanging();
					this._ThemeID = value;
					this.SendPropertyChanged("ThemeID");
					this.OnThemeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompositionThemes_Approb_ApplicationCompositionResults_Approb", Storage="_ApplicationCompositionResults_Approbs", ThisKey="ThemeID", OtherKey="ThemeID")]
		public EntitySet<ApplicationCompositionResults_Approb> ApplicationCompositionResults_Approbs
		{
			get
			{
				return this._ApplicationCompositionResults_Approbs;
			}
			set
			{
				this._ApplicationCompositionResults_Approbs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApplicationCompositionResults_Approbs(ApplicationCompositionResults_Approb entity)
		{
			this.SendPropertyChanging();
			entity.CompositionThemes_Approb = this;
		}
		
		private void detach_ApplicationCompositionResults_Approbs(ApplicationCompositionResults_Approb entity)
		{
			this.SendPropertyChanging();
			entity.CompositionThemes_Approb = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CountryType")]
	public partial class CountryType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CountryID;
		
		private string _Name;
		
		private int _DisplayOrder;
		
		private bool _HasRegions;
		
		private string _DigitCode;
		
		private string _Alfa2Code;
		
		private string _Alfa3Code;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<Address> _Addresses;
		
		private EntitySet<RegionType> _RegionTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnHasRegionsChanging(bool value);
    partial void OnHasRegionsChanged();
    partial void OnDigitCodeChanging(string value);
    partial void OnDigitCodeChanged();
    partial void OnAlfa2CodeChanging(string value);
    partial void OnAlfa2CodeChanged();
    partial void OnAlfa3CodeChanging(string value);
    partial void OnAlfa3CodeChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public CountryType()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			this._RegionTypes = new EntitySet<RegionType>(new Action<RegionType>(this.attach_RegionTypes), new Action<RegionType>(this.detach_RegionTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasRegions", DbType="Bit NOT NULL")]
		public bool HasRegions
		{
			get
			{
				return this._HasRegions;
			}
			set
			{
				if ((this._HasRegions != value))
				{
					this.OnHasRegionsChanging(value);
					this.SendPropertyChanging();
					this._HasRegions = value;
					this.SendPropertyChanged("HasRegions");
					this.OnHasRegionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DigitCode", DbType="VarChar(3)")]
		public string DigitCode
		{
			get
			{
				return this._DigitCode;
			}
			set
			{
				if ((this._DigitCode != value))
				{
					this.OnDigitCodeChanging(value);
					this.SendPropertyChanging();
					this._DigitCode = value;
					this.SendPropertyChanged("DigitCode");
					this.OnDigitCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alfa2Code", DbType="VarChar(2)")]
		public string Alfa2Code
		{
			get
			{
				return this._Alfa2Code;
			}
			set
			{
				if ((this._Alfa2Code != value))
				{
					this.OnAlfa2CodeChanging(value);
					this.SendPropertyChanging();
					this._Alfa2Code = value;
					this.SendPropertyChanged("Alfa2Code");
					this.OnAlfa2CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alfa3Code", DbType="VarChar(3)")]
		public string Alfa3Code
		{
			get
			{
				return this._Alfa3Code;
			}
			set
			{
				if ((this._Alfa3Code != value))
				{
					this.OnAlfa3CodeChanging(value);
					this.SendPropertyChanging();
					this._Alfa3Code = value;
					this.SendPropertyChanged("Alfa3Code");
					this.OnAlfa3CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryType_Address", Storage="_Addresses", ThisKey="CountryID", OtherKey="CountryID")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryType_RegionType", Storage="_RegionTypes", ThisKey="CountryID", OtherKey="CountryID")]
		public EntitySet<RegionType> RegionTypes
		{
			get
			{
				return this._RegionTypes;
			}
			set
			{
				this._RegionTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.CountryType = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.CountryType = null;
		}
		
		private void attach_RegionTypes(RegionType entity)
		{
			this.SendPropertyChanging();
			entity.CountryType = this;
		}
		
		private void detach_RegionTypes(RegionType entity)
		{
			this.SendPropertyChanging();
			entity.CountryType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CourseSubject")]
	public partial class CourseSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CourseSubjectID;
		
		private int _PreparatoryCourseID;
		
		private System.Nullable<int> _SubjectID;
		
		private string _SubjectName;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<PreparatoryCourse> _PreparatoryCourse;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseSubjectIDChanging(int value);
    partial void OnCourseSubjectIDChanged();
    partial void OnPreparatoryCourseIDChanging(int value);
    partial void OnPreparatoryCourseIDChanged();
    partial void OnSubjectIDChanging(System.Nullable<int> value);
    partial void OnSubjectIDChanged();
    partial void OnSubjectNameChanging(string value);
    partial void OnSubjectNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public CourseSubject()
		{
			this._PreparatoryCourse = default(EntityRef<PreparatoryCourse>);
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseSubjectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CourseSubjectID
		{
			get
			{
				return this._CourseSubjectID;
			}
			set
			{
				if ((this._CourseSubjectID != value))
				{
					this.OnCourseSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._CourseSubjectID = value;
					this.SendPropertyChanged("CourseSubjectID");
					this.OnCourseSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparatoryCourseID", DbType="Int NOT NULL")]
		public int PreparatoryCourseID
		{
			get
			{
				return this._PreparatoryCourseID;
			}
			set
			{
				if ((this._PreparatoryCourseID != value))
				{
					if (this._PreparatoryCourse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPreparatoryCourseIDChanging(value);
					this.SendPropertyChanging();
					this._PreparatoryCourseID = value;
					this.SendPropertyChanged("PreparatoryCourseID");
					this.OnPreparatoryCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int")]
		public System.Nullable<int> SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this.OnSubjectNameChanging(value);
					this.SendPropertyChanging();
					this._SubjectName = value;
					this.SendPropertyChanged("SubjectName");
					this.OnSubjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PreparatoryCourse_CourseSubject", Storage="_PreparatoryCourse", ThisKey="PreparatoryCourseID", OtherKey="PreparatoryCourseID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PreparatoryCourse PreparatoryCourse
		{
			get
			{
				return this._PreparatoryCourse.Entity;
			}
			set
			{
				PreparatoryCourse previousValue = this._PreparatoryCourse.Entity;
				if (((previousValue != value) 
							|| (this._PreparatoryCourse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PreparatoryCourse.Entity = null;
						previousValue.CourseSubjects.Remove(this);
					}
					this._PreparatoryCourse.Entity = value;
					if ((value != null))
					{
						value.CourseSubjects.Add(this);
						this._PreparatoryCourseID = value.PreparatoryCourseID;
					}
					else
					{
						this._PreparatoryCourseID = default(int);
					}
					this.SendPropertyChanged("PreparatoryCourse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_CourseSubject", Storage="_Subject", ThisKey="SubjectID", OtherKey="SubjectID", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.CourseSubjects.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.CourseSubjects.Add(this);
						this._SubjectID = value.SubjectID;
					}
					else
					{
						this._SubjectID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CourseType")]
	public partial class CourseType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CourseID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<PreparatoryCourse> _PreparatoryCourses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseIDChanging(int value);
    partial void OnCourseIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public CourseType()
		{
			this._PreparatoryCourses = new EntitySet<PreparatoryCourse>(new Action<PreparatoryCourse>(this.attach_PreparatoryCourses), new Action<PreparatoryCourse>(this.detach_PreparatoryCourses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseType_PreparatoryCourse", Storage="_PreparatoryCourses", ThisKey="CourseID", OtherKey="CourseTypeID")]
		public EntitySet<PreparatoryCourse> PreparatoryCourses
		{
			get
			{
				return this._PreparatoryCourses;
			}
			set
			{
				this._PreparatoryCourses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PreparatoryCourses(PreparatoryCourse entity)
		{
			this.SendPropertyChanging();
			entity.CourseType = this;
		}
		
		private void detach_PreparatoryCourses(PreparatoryCourse entity)
		{
			this.SendPropertyChanging();
			entity.CourseType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dba_indexDefragLog")]
	public partial class dba_indexDefragLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _indexDefrag_id;
		
		private int _objectID;
		
		private string _objectName;
		
		private int _indexID;
		
		private string _indexName;
		
		private double _fragmentation;
		
		private int _page_count;
		
		private System.DateTime _dateTimeStart;
		
		private int _durationSeconds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnindexDefrag_idChanging(int value);
    partial void OnindexDefrag_idChanged();
    partial void OnobjectIDChanging(int value);
    partial void OnobjectIDChanged();
    partial void OnobjectNameChanging(string value);
    partial void OnobjectNameChanged();
    partial void OnindexIDChanging(int value);
    partial void OnindexIDChanged();
    partial void OnindexNameChanging(string value);
    partial void OnindexNameChanged();
    partial void OnfragmentationChanging(double value);
    partial void OnfragmentationChanged();
    partial void Onpage_countChanging(int value);
    partial void Onpage_countChanged();
    partial void OndateTimeStartChanging(System.DateTime value);
    partial void OndateTimeStartChanged();
    partial void OndurationSecondsChanging(int value);
    partial void OndurationSecondsChanged();
    #endregion
		
		public dba_indexDefragLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_indexDefrag_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int indexDefrag_id
		{
			get
			{
				return this._indexDefrag_id;
			}
			set
			{
				if ((this._indexDefrag_id != value))
				{
					this.OnindexDefrag_idChanging(value);
					this.SendPropertyChanging();
					this._indexDefrag_id = value;
					this.SendPropertyChanged("indexDefrag_id");
					this.OnindexDefrag_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_objectID", DbType="Int NOT NULL")]
		public int objectID
		{
			get
			{
				return this._objectID;
			}
			set
			{
				if ((this._objectID != value))
				{
					this.OnobjectIDChanging(value);
					this.SendPropertyChanging();
					this._objectID = value;
					this.SendPropertyChanged("objectID");
					this.OnobjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_objectName", DbType="NVarChar(130) NOT NULL", CanBeNull=false)]
		public string objectName
		{
			get
			{
				return this._objectName;
			}
			set
			{
				if ((this._objectName != value))
				{
					this.OnobjectNameChanging(value);
					this.SendPropertyChanging();
					this._objectName = value;
					this.SendPropertyChanged("objectName");
					this.OnobjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_indexID", DbType="Int NOT NULL")]
		public int indexID
		{
			get
			{
				return this._indexID;
			}
			set
			{
				if ((this._indexID != value))
				{
					this.OnindexIDChanging(value);
					this.SendPropertyChanging();
					this._indexID = value;
					this.SendPropertyChanged("indexID");
					this.OnindexIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_indexName", DbType="NVarChar(130) NOT NULL", CanBeNull=false)]
		public string indexName
		{
			get
			{
				return this._indexName;
			}
			set
			{
				if ((this._indexName != value))
				{
					this.OnindexNameChanging(value);
					this.SendPropertyChanging();
					this._indexName = value;
					this.SendPropertyChanged("indexName");
					this.OnindexNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fragmentation", DbType="Float NOT NULL")]
		public double fragmentation
		{
			get
			{
				return this._fragmentation;
			}
			set
			{
				if ((this._fragmentation != value))
				{
					this.OnfragmentationChanging(value);
					this.SendPropertyChanging();
					this._fragmentation = value;
					this.SendPropertyChanged("fragmentation");
					this.OnfragmentationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_count", DbType="Int NOT NULL")]
		public int page_count
		{
			get
			{
				return this._page_count;
			}
			set
			{
				if ((this._page_count != value))
				{
					this.Onpage_countChanging(value);
					this.SendPropertyChanging();
					this._page_count = value;
					this.SendPropertyChanged("page_count");
					this.Onpage_countChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateTimeStart", DbType="DateTime NOT NULL")]
		public System.DateTime dateTimeStart
		{
			get
			{
				return this._dateTimeStart;
			}
			set
			{
				if ((this._dateTimeStart != value))
				{
					this.OndateTimeStartChanging(value);
					this.SendPropertyChanging();
					this._dateTimeStart = value;
					this.SendPropertyChanged("dateTimeStart");
					this.OndateTimeStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_durationSeconds", DbType="Int NOT NULL")]
		public int durationSeconds
		{
			get
			{
				return this._durationSeconds;
			}
			set
			{
				if ((this._durationSeconds != value))
				{
					this.OndurationSecondsChanging(value);
					this.SendPropertyChanging();
					this._durationSeconds = value;
					this.SendPropertyChanged("durationSeconds");
					this.OndurationSecondsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Direction")]
	public partial class Direction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DirectionID;
		
		private string _EIIS_ID;
		
		private System.Nullable<int> _Esrp_ID;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<int> _ParentID;
		
		private string _SYS_GUID;
		
		private string _EDULEVEL;
		
		private System.Nullable<short> _EducationLevelId;
		
		private string _EDUPROGRAMTYPE;
		
		private System.Nullable<int> _EducationProgramTypeId;
		
		private string _UGSCODE;
		
		private string _UGSNAME;
		
		private string _QUALIFICATIONCODE;
		
		private string _QUALIFICATIONNAME;
		
		private string _PERIOD;
		
		private string _EDU_DIRECTORY;
		
		private string _EDUPR_ADDITIONAL;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _NewCode;
		
		private EntitySet<AdmissionVolume> _AdmissionVolumes;
		
		private EntitySet<AllowedDirection> _AllowedDirections;
		
		private EntitySet<ApplicationConsidered> _ApplicationConsidereds;
		
		private EntitySet<CompetitiveGroup> _CompetitiveGroups;
		
		private EntitySet<DirectionSubjectLinkDirection> _DirectionSubjectLinkDirections;
		
		private EntityRef<EntranceTestCreativeDirection> _EntranceTestCreativeDirection;
		
		private EntitySet<EntranceTestProfileDirection> _EntranceTestProfileDirections;
		
		private EntitySet<InstitutionDirectionRequest> _InstitutionDirectionRequests;
		
		private EntitySet<InstitutionItem> _InstitutionItems;
		
		private EntityRef<AdmissionItemType> _AdmissionItemType;
		
		private EntityRef<EDU_PROGRAM_TYPE> _EDU_PROGRAM_TYPE;
		
		private EntityRef<ParentDirection> _ParentDirection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDirectionIDChanging(int value);
    partial void OnDirectionIDChanged();
    partial void OnEIIS_IDChanging(string value);
    partial void OnEIIS_IDChanged();
    partial void OnEsrp_IDChanging(System.Nullable<int> value);
    partial void OnEsrp_IDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnSYS_GUIDChanging(string value);
    partial void OnSYS_GUIDChanged();
    partial void OnEDULEVELChanging(string value);
    partial void OnEDULEVELChanged();
    partial void OnEducationLevelIdChanging(System.Nullable<short> value);
    partial void OnEducationLevelIdChanged();
    partial void OnEDUPROGRAMTYPEChanging(string value);
    partial void OnEDUPROGRAMTYPEChanged();
    partial void OnEducationProgramTypeIdChanging(System.Nullable<int> value);
    partial void OnEducationProgramTypeIdChanged();
    partial void OnUGSCODEChanging(string value);
    partial void OnUGSCODEChanged();
    partial void OnUGSNAMEChanging(string value);
    partial void OnUGSNAMEChanged();
    partial void OnQUALIFICATIONCODEChanging(string value);
    partial void OnQUALIFICATIONCODEChanged();
    partial void OnQUALIFICATIONNAMEChanging(string value);
    partial void OnQUALIFICATIONNAMEChanged();
    partial void OnPERIODChanging(string value);
    partial void OnPERIODChanged();
    partial void OnEDU_DIRECTORYChanging(string value);
    partial void OnEDU_DIRECTORYChanged();
    partial void OnEDUPR_ADDITIONALChanging(string value);
    partial void OnEDUPR_ADDITIONALChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnNewCodeChanging(string value);
    partial void OnNewCodeChanged();
    #endregion
		
		public Direction()
		{
			this._AdmissionVolumes = new EntitySet<AdmissionVolume>(new Action<AdmissionVolume>(this.attach_AdmissionVolumes), new Action<AdmissionVolume>(this.detach_AdmissionVolumes));
			this._AllowedDirections = new EntitySet<AllowedDirection>(new Action<AllowedDirection>(this.attach_AllowedDirections), new Action<AllowedDirection>(this.detach_AllowedDirections));
			this._ApplicationConsidereds = new EntitySet<ApplicationConsidered>(new Action<ApplicationConsidered>(this.attach_ApplicationConsidereds), new Action<ApplicationConsidered>(this.detach_ApplicationConsidereds));
			this._CompetitiveGroups = new EntitySet<CompetitiveGroup>(new Action<CompetitiveGroup>(this.attach_CompetitiveGroups), new Action<CompetitiveGroup>(this.detach_CompetitiveGroups));
			this._DirectionSubjectLinkDirections = new EntitySet<DirectionSubjectLinkDirection>(new Action<DirectionSubjectLinkDirection>(this.attach_DirectionSubjectLinkDirections), new Action<DirectionSubjectLinkDirection>(this.detach_DirectionSubjectLinkDirections));
			this._EntranceTestCreativeDirection = default(EntityRef<EntranceTestCreativeDirection>);
			this._EntranceTestProfileDirections = new EntitySet<EntranceTestProfileDirection>(new Action<EntranceTestProfileDirection>(this.attach_EntranceTestProfileDirections), new Action<EntranceTestProfileDirection>(this.detach_EntranceTestProfileDirections));
			this._InstitutionDirectionRequests = new EntitySet<InstitutionDirectionRequest>(new Action<InstitutionDirectionRequest>(this.attach_InstitutionDirectionRequests), new Action<InstitutionDirectionRequest>(this.detach_InstitutionDirectionRequests));
			this._InstitutionItems = new EntitySet<InstitutionItem>(new Action<InstitutionItem>(this.attach_InstitutionItems), new Action<InstitutionItem>(this.detach_InstitutionItems));
			this._AdmissionItemType = default(EntityRef<AdmissionItemType>);
			this._EDU_PROGRAM_TYPE = default(EntityRef<EDU_PROGRAM_TYPE>);
			this._ParentDirection = default(EntityRef<ParentDirection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIIS_ID", DbType="VarChar(50)")]
		public string EIIS_ID
		{
			get
			{
				return this._EIIS_ID;
			}
			set
			{
				if ((this._EIIS_ID != value))
				{
					this.OnEIIS_IDChanging(value);
					this.SendPropertyChanging();
					this._EIIS_ID = value;
					this.SendPropertyChanged("EIIS_ID");
					this.OnEIIS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Esrp_ID", DbType="Int")]
		public System.Nullable<int> Esrp_ID
		{
			get
			{
				return this._Esrp_ID;
			}
			set
			{
				if ((this._Esrp_ID != value))
				{
					this.OnEsrp_IDChanging(value);
					this.SendPropertyChanging();
					this._Esrp_ID = value;
					this.SendPropertyChanged("Esrp_ID");
					this.OnEsrp_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._ParentDirection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SYS_GUID", DbType="VarChar(50)")]
		public string SYS_GUID
		{
			get
			{
				return this._SYS_GUID;
			}
			set
			{
				if ((this._SYS_GUID != value))
				{
					this.OnSYS_GUIDChanging(value);
					this.SendPropertyChanging();
					this._SYS_GUID = value;
					this.SendPropertyChanged("SYS_GUID");
					this.OnSYS_GUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDULEVEL", DbType="VarChar(500)")]
		public string EDULEVEL
		{
			get
			{
				return this._EDULEVEL;
			}
			set
			{
				if ((this._EDULEVEL != value))
				{
					this.OnEDULEVELChanging(value);
					this.SendPropertyChanging();
					this._EDULEVEL = value;
					this.SendPropertyChanged("EDULEVEL");
					this.OnEDULEVELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelId", DbType="SmallInt")]
		public System.Nullable<short> EducationLevelId
		{
			get
			{
				return this._EducationLevelId;
			}
			set
			{
				if ((this._EducationLevelId != value))
				{
					if (this._AdmissionItemType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEducationLevelIdChanging(value);
					this.SendPropertyChanging();
					this._EducationLevelId = value;
					this.SendPropertyChanged("EducationLevelId");
					this.OnEducationLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDUPROGRAMTYPE", DbType="VarChar(500)")]
		public string EDUPROGRAMTYPE
		{
			get
			{
				return this._EDUPROGRAMTYPE;
			}
			set
			{
				if ((this._EDUPROGRAMTYPE != value))
				{
					this.OnEDUPROGRAMTYPEChanging(value);
					this.SendPropertyChanging();
					this._EDUPROGRAMTYPE = value;
					this.SendPropertyChanged("EDUPROGRAMTYPE");
					this.OnEDUPROGRAMTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationProgramTypeId", DbType="Int")]
		public System.Nullable<int> EducationProgramTypeId
		{
			get
			{
				return this._EducationProgramTypeId;
			}
			set
			{
				if ((this._EducationProgramTypeId != value))
				{
					if (this._EDU_PROGRAM_TYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEducationProgramTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EducationProgramTypeId = value;
					this.SendPropertyChanged("EducationProgramTypeId");
					this.OnEducationProgramTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UGSCODE", DbType="VarChar(10)")]
		public string UGSCODE
		{
			get
			{
				return this._UGSCODE;
			}
			set
			{
				if ((this._UGSCODE != value))
				{
					this.OnUGSCODEChanging(value);
					this.SendPropertyChanging();
					this._UGSCODE = value;
					this.SendPropertyChanged("UGSCODE");
					this.OnUGSCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UGSNAME", DbType="VarChar(500)")]
		public string UGSNAME
		{
			get
			{
				return this._UGSNAME;
			}
			set
			{
				if ((this._UGSNAME != value))
				{
					this.OnUGSNAMEChanging(value);
					this.SendPropertyChanging();
					this._UGSNAME = value;
					this.SendPropertyChanged("UGSNAME");
					this.OnUGSNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUALIFICATIONCODE", DbType="VarChar(10)")]
		public string QUALIFICATIONCODE
		{
			get
			{
				return this._QUALIFICATIONCODE;
			}
			set
			{
				if ((this._QUALIFICATIONCODE != value))
				{
					this.OnQUALIFICATIONCODEChanging(value);
					this.SendPropertyChanging();
					this._QUALIFICATIONCODE = value;
					this.SendPropertyChanged("QUALIFICATIONCODE");
					this.OnQUALIFICATIONCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUALIFICATIONNAME", DbType="VarChar(1500)")]
		public string QUALIFICATIONNAME
		{
			get
			{
				return this._QUALIFICATIONNAME;
			}
			set
			{
				if ((this._QUALIFICATIONNAME != value))
				{
					this.OnQUALIFICATIONNAMEChanging(value);
					this.SendPropertyChanging();
					this._QUALIFICATIONNAME = value;
					this.SendPropertyChanged("QUALIFICATIONNAME");
					this.OnQUALIFICATIONNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERIOD", DbType="VarChar(100)")]
		public string PERIOD
		{
			get
			{
				return this._PERIOD;
			}
			set
			{
				if ((this._PERIOD != value))
				{
					this.OnPERIODChanging(value);
					this.SendPropertyChanging();
					this._PERIOD = value;
					this.SendPropertyChanged("PERIOD");
					this.OnPERIODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDU_DIRECTORY", DbType="VarChar(500)")]
		public string EDU_DIRECTORY
		{
			get
			{
				return this._EDU_DIRECTORY;
			}
			set
			{
				if ((this._EDU_DIRECTORY != value))
				{
					this.OnEDU_DIRECTORYChanging(value);
					this.SendPropertyChanging();
					this._EDU_DIRECTORY = value;
					this.SendPropertyChanged("EDU_DIRECTORY");
					this.OnEDU_DIRECTORYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDUPR_ADDITIONAL", DbType="VarChar(500)")]
		public string EDUPR_ADDITIONAL
		{
			get
			{
				return this._EDUPR_ADDITIONAL;
			}
			set
			{
				if ((this._EDUPR_ADDITIONAL != value))
				{
					this.OnEDUPR_ADDITIONALChanging(value);
					this.SendPropertyChanging();
					this._EDUPR_ADDITIONAL = value;
					this.SendPropertyChanged("EDUPR_ADDITIONAL");
					this.OnEDUPR_ADDITIONALChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCode", DbType="VarChar(50)")]
		public string NewCode
		{
			get
			{
				return this._NewCode;
			}
			set
			{
				if ((this._NewCode != value))
				{
					this.OnNewCodeChanging(value);
					this.SendPropertyChanging();
					this._NewCode = value;
					this.SendPropertyChanged("NewCode");
					this.OnNewCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_AdmissionVolume", Storage="_AdmissionVolumes", ThisKey="DirectionID", OtherKey="DirectionID")]
		public EntitySet<AdmissionVolume> AdmissionVolumes
		{
			get
			{
				return this._AdmissionVolumes;
			}
			set
			{
				this._AdmissionVolumes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_AllowedDirection", Storage="_AllowedDirections", ThisKey="DirectionID", OtherKey="DirectionID")]
		public EntitySet<AllowedDirection> AllowedDirections
		{
			get
			{
				return this._AllowedDirections;
			}
			set
			{
				this._AllowedDirections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_ApplicationConsidered", Storage="_ApplicationConsidereds", ThisKey="DirectionID", OtherKey="DirectionID")]
		public EntitySet<ApplicationConsidered> ApplicationConsidereds
		{
			get
			{
				return this._ApplicationConsidereds;
			}
			set
			{
				this._ApplicationConsidereds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_CompetitiveGroup", Storage="_CompetitiveGroups", ThisKey="DirectionID", OtherKey="DirectionID")]
		public EntitySet<CompetitiveGroup> CompetitiveGroups
		{
			get
			{
				return this._CompetitiveGroups;
			}
			set
			{
				this._CompetitiveGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_DirectionSubjectLinkDirection", Storage="_DirectionSubjectLinkDirections", ThisKey="DirectionID", OtherKey="DirectionID")]
		public EntitySet<DirectionSubjectLinkDirection> DirectionSubjectLinkDirections
		{
			get
			{
				return this._DirectionSubjectLinkDirections;
			}
			set
			{
				this._DirectionSubjectLinkDirections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_EntranceTestCreativeDirection", Storage="_EntranceTestCreativeDirection", ThisKey="DirectionID", OtherKey="DirectionID", IsUnique=true, IsForeignKey=false)]
		public EntranceTestCreativeDirection EntranceTestCreativeDirection
		{
			get
			{
				return this._EntranceTestCreativeDirection.Entity;
			}
			set
			{
				EntranceTestCreativeDirection previousValue = this._EntranceTestCreativeDirection.Entity;
				if (((previousValue != value) 
							|| (this._EntranceTestCreativeDirection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntranceTestCreativeDirection.Entity = null;
						previousValue.Direction = null;
					}
					this._EntranceTestCreativeDirection.Entity = value;
					if ((value != null))
					{
						value.Direction = this;
					}
					this.SendPropertyChanged("EntranceTestCreativeDirection");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_EntranceTestProfileDirection", Storage="_EntranceTestProfileDirections", ThisKey="DirectionID", OtherKey="DirectionID")]
		public EntitySet<EntranceTestProfileDirection> EntranceTestProfileDirections
		{
			get
			{
				return this._EntranceTestProfileDirections;
			}
			set
			{
				this._EntranceTestProfileDirections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_InstitutionDirectionRequest", Storage="_InstitutionDirectionRequests", ThisKey="DirectionID", OtherKey="DirectionId")]
		public EntitySet<InstitutionDirectionRequest> InstitutionDirectionRequests
		{
			get
			{
				return this._InstitutionDirectionRequests;
			}
			set
			{
				this._InstitutionDirectionRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_InstitutionItem", Storage="_InstitutionItems", ThisKey="DirectionID", OtherKey="DirectionID")]
		public EntitySet<InstitutionItem> InstitutionItems
		{
			get
			{
				return this._InstitutionItems;
			}
			set
			{
				this._InstitutionItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_Direction", Storage="_AdmissionItemType", ThisKey="EducationLevelId", OtherKey="ItemTypeID", IsForeignKey=true)]
		public AdmissionItemType AdmissionItemType
		{
			get
			{
				return this._AdmissionItemType.Entity;
			}
			set
			{
				AdmissionItemType previousValue = this._AdmissionItemType.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionItemType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionItemType.Entity = null;
						previousValue.Directions.Remove(this);
					}
					this._AdmissionItemType.Entity = value;
					if ((value != null))
					{
						value.Directions.Add(this);
						this._EducationLevelId = value.ItemTypeID;
					}
					else
					{
						this._EducationLevelId = default(Nullable<short>);
					}
					this.SendPropertyChanged("AdmissionItemType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EDU_PROGRAM_TYPE_Direction", Storage="_EDU_PROGRAM_TYPE", ThisKey="EducationProgramTypeId", OtherKey="ID", IsForeignKey=true)]
		public EDU_PROGRAM_TYPE EDU_PROGRAM_TYPE
		{
			get
			{
				return this._EDU_PROGRAM_TYPE.Entity;
			}
			set
			{
				EDU_PROGRAM_TYPE previousValue = this._EDU_PROGRAM_TYPE.Entity;
				if (((previousValue != value) 
							|| (this._EDU_PROGRAM_TYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EDU_PROGRAM_TYPE.Entity = null;
						previousValue.Directions.Remove(this);
					}
					this._EDU_PROGRAM_TYPE.Entity = value;
					if ((value != null))
					{
						value.Directions.Add(this);
						this._EducationProgramTypeId = value.ID;
					}
					else
					{
						this._EducationProgramTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("EDU_PROGRAM_TYPE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ParentDirection_Direction", Storage="_ParentDirection", ThisKey="ParentID", OtherKey="ParentDirectionID", IsForeignKey=true)]
		public ParentDirection ParentDirection
		{
			get
			{
				return this._ParentDirection.Entity;
			}
			set
			{
				ParentDirection previousValue = this._ParentDirection.Entity;
				if (((previousValue != value) 
							|| (this._ParentDirection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ParentDirection.Entity = null;
						previousValue.Directions.Remove(this);
					}
					this._ParentDirection.Entity = value;
					if ((value != null))
					{
						value.Directions.Add(this);
						this._ParentID = value.ParentDirectionID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("ParentDirection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdmissionVolumes(AdmissionVolume entity)
		{
			this.SendPropertyChanging();
			entity.Direction = this;
		}
		
		private void detach_AdmissionVolumes(AdmissionVolume entity)
		{
			this.SendPropertyChanging();
			entity.Direction = null;
		}
		
		private void attach_AllowedDirections(AllowedDirection entity)
		{
			this.SendPropertyChanging();
			entity.Direction = this;
		}
		
		private void detach_AllowedDirections(AllowedDirection entity)
		{
			this.SendPropertyChanging();
			entity.Direction = null;
		}
		
		private void attach_ApplicationConsidereds(ApplicationConsidered entity)
		{
			this.SendPropertyChanging();
			entity.Direction = this;
		}
		
		private void detach_ApplicationConsidereds(ApplicationConsidered entity)
		{
			this.SendPropertyChanging();
			entity.Direction = null;
		}
		
		private void attach_CompetitiveGroups(CompetitiveGroup entity)
		{
			this.SendPropertyChanging();
			entity.Direction = this;
		}
		
		private void detach_CompetitiveGroups(CompetitiveGroup entity)
		{
			this.SendPropertyChanging();
			entity.Direction = null;
		}
		
		private void attach_DirectionSubjectLinkDirections(DirectionSubjectLinkDirection entity)
		{
			this.SendPropertyChanging();
			entity.Direction = this;
		}
		
		private void detach_DirectionSubjectLinkDirections(DirectionSubjectLinkDirection entity)
		{
			this.SendPropertyChanging();
			entity.Direction = null;
		}
		
		private void attach_EntranceTestProfileDirections(EntranceTestProfileDirection entity)
		{
			this.SendPropertyChanging();
			entity.Direction = this;
		}
		
		private void detach_EntranceTestProfileDirections(EntranceTestProfileDirection entity)
		{
			this.SendPropertyChanging();
			entity.Direction = null;
		}
		
		private void attach_InstitutionDirectionRequests(InstitutionDirectionRequest entity)
		{
			this.SendPropertyChanging();
			entity.Direction = this;
		}
		
		private void detach_InstitutionDirectionRequests(InstitutionDirectionRequest entity)
		{
			this.SendPropertyChanging();
			entity.Direction = null;
		}
		
		private void attach_InstitutionItems(InstitutionItem entity)
		{
			this.SendPropertyChanging();
			entity.Direction = this;
		}
		
		private void detach_InstitutionItems(InstitutionItem entity)
		{
			this.SendPropertyChanging();
			entity.Direction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Direction_old")]
	public partial class Direction_old
	{
		
		private int _DirectionID;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<int> _ParentID;
		
		private string _SYS_GUID;
		
		private string _EDULEVEL;
		
		private string _EDUPROGRAMTYPE;
		
		private string _UGSCODE;
		
		private string _UGSNAME;
		
		private string _QUALIFICATIONCODE;
		
		private string _QUALIFICATIONNAME;
		
		private string _PERIOD;
		
		private string _EDU_DIRECTORY;
		
		private string _EDUPR_ADDITIONAL;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _NewCode;
		
		public Direction_old()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int NOT NULL")]
		public int DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					this._DirectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(6)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SYS_GUID", DbType="VarChar(50)")]
		public string SYS_GUID
		{
			get
			{
				return this._SYS_GUID;
			}
			set
			{
				if ((this._SYS_GUID != value))
				{
					this._SYS_GUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDULEVEL", DbType="VarChar(500)")]
		public string EDULEVEL
		{
			get
			{
				return this._EDULEVEL;
			}
			set
			{
				if ((this._EDULEVEL != value))
				{
					this._EDULEVEL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDUPROGRAMTYPE", DbType="VarChar(500)")]
		public string EDUPROGRAMTYPE
		{
			get
			{
				return this._EDUPROGRAMTYPE;
			}
			set
			{
				if ((this._EDUPROGRAMTYPE != value))
				{
					this._EDUPROGRAMTYPE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UGSCODE", DbType="Char(8)")]
		public string UGSCODE
		{
			get
			{
				return this._UGSCODE;
			}
			set
			{
				if ((this._UGSCODE != value))
				{
					this._UGSCODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UGSNAME", DbType="VarChar(500)")]
		public string UGSNAME
		{
			get
			{
				return this._UGSNAME;
			}
			set
			{
				if ((this._UGSNAME != value))
				{
					this._UGSNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUALIFICATIONCODE", DbType="Char(10)")]
		public string QUALIFICATIONCODE
		{
			get
			{
				return this._QUALIFICATIONCODE;
			}
			set
			{
				if ((this._QUALIFICATIONCODE != value))
				{
					this._QUALIFICATIONCODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUALIFICATIONNAME", DbType="VarChar(500)")]
		public string QUALIFICATIONNAME
		{
			get
			{
				return this._QUALIFICATIONNAME;
			}
			set
			{
				if ((this._QUALIFICATIONNAME != value))
				{
					this._QUALIFICATIONNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERIOD", DbType="VarChar(50)")]
		public string PERIOD
		{
			get
			{
				return this._PERIOD;
			}
			set
			{
				if ((this._PERIOD != value))
				{
					this._PERIOD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDU_DIRECTORY", DbType="VarChar(500)")]
		public string EDU_DIRECTORY
		{
			get
			{
				return this._EDU_DIRECTORY;
			}
			set
			{
				if ((this._EDU_DIRECTORY != value))
				{
					this._EDU_DIRECTORY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDUPR_ADDITIONAL", DbType="VarChar(500)")]
		public string EDUPR_ADDITIONAL
		{
			get
			{
				return this._EDUPR_ADDITIONAL;
			}
			set
			{
				if ((this._EDUPR_ADDITIONAL != value))
				{
					this._EDUPR_ADDITIONAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCode", DbType="Char(8)")]
		public string NewCode
		{
			get
			{
				return this._NewCode;
			}
			set
			{
				if ((this._NewCode != value))
				{
					this._NewCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Direction_tmp")]
	public partial class Direction_tmp
	{
		
		private int _DirectionID;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<int> _ParentID;
		
		private string _SYS_GUID;
		
		private string _EDULEVEL;
		
		private string _EDUPROGRAMTYPE;
		
		private string _UGSCODE;
		
		private string _UGSNAME;
		
		private string _QUALIFICATIONCODE;
		
		private string _QUALIFICATIONNAME;
		
		private string _PERIOD;
		
		private string _EDU_DIRECTORY;
		
		private string _EDUPR_ADDITIONAL;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _NewCode;
		
		public Direction_tmp()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int NOT NULL")]
		public int DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					this._DirectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(6)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SYS_GUID", DbType="VarChar(50)")]
		public string SYS_GUID
		{
			get
			{
				return this._SYS_GUID;
			}
			set
			{
				if ((this._SYS_GUID != value))
				{
					this._SYS_GUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDULEVEL", DbType="VarChar(500)")]
		public string EDULEVEL
		{
			get
			{
				return this._EDULEVEL;
			}
			set
			{
				if ((this._EDULEVEL != value))
				{
					this._EDULEVEL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDUPROGRAMTYPE", DbType="VarChar(500)")]
		public string EDUPROGRAMTYPE
		{
			get
			{
				return this._EDUPROGRAMTYPE;
			}
			set
			{
				if ((this._EDUPROGRAMTYPE != value))
				{
					this._EDUPROGRAMTYPE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UGSCODE", DbType="Char(8)")]
		public string UGSCODE
		{
			get
			{
				return this._UGSCODE;
			}
			set
			{
				if ((this._UGSCODE != value))
				{
					this._UGSCODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UGSNAME", DbType="VarChar(500)")]
		public string UGSNAME
		{
			get
			{
				return this._UGSNAME;
			}
			set
			{
				if ((this._UGSNAME != value))
				{
					this._UGSNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUALIFICATIONCODE", DbType="Char(10)")]
		public string QUALIFICATIONCODE
		{
			get
			{
				return this._QUALIFICATIONCODE;
			}
			set
			{
				if ((this._QUALIFICATIONCODE != value))
				{
					this._QUALIFICATIONCODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUALIFICATIONNAME", DbType="VarChar(500)")]
		public string QUALIFICATIONNAME
		{
			get
			{
				return this._QUALIFICATIONNAME;
			}
			set
			{
				if ((this._QUALIFICATIONNAME != value))
				{
					this._QUALIFICATIONNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PERIOD", DbType="VarChar(50)")]
		public string PERIOD
		{
			get
			{
				return this._PERIOD;
			}
			set
			{
				if ((this._PERIOD != value))
				{
					this._PERIOD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDU_DIRECTORY", DbType="VarChar(500)")]
		public string EDU_DIRECTORY
		{
			get
			{
				return this._EDU_DIRECTORY;
			}
			set
			{
				if ((this._EDU_DIRECTORY != value))
				{
					this._EDU_DIRECTORY = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDUPR_ADDITIONAL", DbType="VarChar(500)")]
		public string EDUPR_ADDITIONAL
		{
			get
			{
				return this._EDUPR_ADDITIONAL;
			}
			set
			{
				if ((this._EDUPR_ADDITIONAL != value))
				{
					this._EDUPR_ADDITIONAL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCode", DbType="Char(8)")]
		public string NewCode
		{
			get
			{
				return this._NewCode;
			}
			set
			{
				if ((this._NewCode != value))
				{
					this._NewCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DirectionSubjectLink")]
	public partial class DirectionSubjectLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private System.Nullable<int> _ProfileSubjectID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<DirectionSubjectLinkDirection> _DirectionSubjectLinkDirections;
		
		private EntitySet<DirectionSubjectLinkSubject> _DirectionSubjectLinkSubjects;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnProfileSubjectIDChanging(System.Nullable<int> value);
    partial void OnProfileSubjectIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public DirectionSubjectLink()
		{
			this._DirectionSubjectLinkDirections = new EntitySet<DirectionSubjectLinkDirection>(new Action<DirectionSubjectLinkDirection>(this.attach_DirectionSubjectLinkDirections), new Action<DirectionSubjectLinkDirection>(this.detach_DirectionSubjectLinkDirections));
			this._DirectionSubjectLinkSubjects = new EntitySet<DirectionSubjectLinkSubject>(new Action<DirectionSubjectLinkSubject>(this.attach_DirectionSubjectLinkSubjects), new Action<DirectionSubjectLinkSubject>(this.detach_DirectionSubjectLinkSubjects));
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileSubjectID", DbType="Int")]
		public System.Nullable<int> ProfileSubjectID
		{
			get
			{
				return this._ProfileSubjectID;
			}
			set
			{
				if ((this._ProfileSubjectID != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfileSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileSubjectID = value;
					this.SendPropertyChanged("ProfileSubjectID");
					this.OnProfileSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DirectionSubjectLink_DirectionSubjectLinkDirection", Storage="_DirectionSubjectLinkDirections", ThisKey="ID", OtherKey="LinkID")]
		public EntitySet<DirectionSubjectLinkDirection> DirectionSubjectLinkDirections
		{
			get
			{
				return this._DirectionSubjectLinkDirections;
			}
			set
			{
				this._DirectionSubjectLinkDirections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DirectionSubjectLink_DirectionSubjectLinkSubject", Storage="_DirectionSubjectLinkSubjects", ThisKey="ID", OtherKey="LinkID")]
		public EntitySet<DirectionSubjectLinkSubject> DirectionSubjectLinkSubjects
		{
			get
			{
				return this._DirectionSubjectLinkSubjects;
			}
			set
			{
				this._DirectionSubjectLinkSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_DirectionSubjectLink", Storage="_Subject", ThisKey="ProfileSubjectID", OtherKey="SubjectID", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.DirectionSubjectLinks.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.DirectionSubjectLinks.Add(this);
						this._ProfileSubjectID = value.SubjectID;
					}
					else
					{
						this._ProfileSubjectID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DirectionSubjectLinkDirections(DirectionSubjectLinkDirection entity)
		{
			this.SendPropertyChanging();
			entity.DirectionSubjectLink = this;
		}
		
		private void detach_DirectionSubjectLinkDirections(DirectionSubjectLinkDirection entity)
		{
			this.SendPropertyChanging();
			entity.DirectionSubjectLink = null;
		}
		
		private void attach_DirectionSubjectLinkSubjects(DirectionSubjectLinkSubject entity)
		{
			this.SendPropertyChanging();
			entity.DirectionSubjectLink = this;
		}
		
		private void detach_DirectionSubjectLinkSubjects(DirectionSubjectLinkSubject entity)
		{
			this.SendPropertyChanging();
			entity.DirectionSubjectLink = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DirectionSubjectLinkDirection")]
	public partial class DirectionSubjectLinkDirection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _DirectionID;
		
		private int _LinkID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<Direction> _Direction;
		
		private EntityRef<DirectionSubjectLink> _DirectionSubjectLink;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDirectionIDChanging(int value);
    partial void OnDirectionIDChanged();
    partial void OnLinkIDChanging(int value);
    partial void OnLinkIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public DirectionSubjectLinkDirection()
		{
			this._Direction = default(EntityRef<Direction>);
			this._DirectionSubjectLink = default(EntityRef<DirectionSubjectLink>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int NOT NULL")]
		public int DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					if (this._Direction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkID", DbType="Int NOT NULL")]
		public int LinkID
		{
			get
			{
				return this._LinkID;
			}
			set
			{
				if ((this._LinkID != value))
				{
					if (this._DirectionSubjectLink.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLinkIDChanging(value);
					this.SendPropertyChanging();
					this._LinkID = value;
					this.SendPropertyChanged("LinkID");
					this.OnLinkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_DirectionSubjectLinkDirection", Storage="_Direction", ThisKey="DirectionID", OtherKey="DirectionID", IsForeignKey=true)]
		public Direction Direction
		{
			get
			{
				return this._Direction.Entity;
			}
			set
			{
				Direction previousValue = this._Direction.Entity;
				if (((previousValue != value) 
							|| (this._Direction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direction.Entity = null;
						previousValue.DirectionSubjectLinkDirections.Remove(this);
					}
					this._Direction.Entity = value;
					if ((value != null))
					{
						value.DirectionSubjectLinkDirections.Add(this);
						this._DirectionID = value.DirectionID;
					}
					else
					{
						this._DirectionID = default(int);
					}
					this.SendPropertyChanged("Direction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DirectionSubjectLink_DirectionSubjectLinkDirection", Storage="_DirectionSubjectLink", ThisKey="LinkID", OtherKey="ID", IsForeignKey=true)]
		public DirectionSubjectLink DirectionSubjectLink
		{
			get
			{
				return this._DirectionSubjectLink.Entity;
			}
			set
			{
				DirectionSubjectLink previousValue = this._DirectionSubjectLink.Entity;
				if (((previousValue != value) 
							|| (this._DirectionSubjectLink.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DirectionSubjectLink.Entity = null;
						previousValue.DirectionSubjectLinkDirections.Remove(this);
					}
					this._DirectionSubjectLink.Entity = value;
					if ((value != null))
					{
						value.DirectionSubjectLinkDirections.Add(this);
						this._LinkID = value.ID;
					}
					else
					{
						this._LinkID = default(int);
					}
					this.SendPropertyChanged("DirectionSubjectLink");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DirectionSubjectLinkSubject")]
	public partial class DirectionSubjectLinkSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SubjectID;
		
		private int _LinkID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<DirectionSubjectLink> _DirectionSubjectLink;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSubjectIDChanging(int value);
    partial void OnSubjectIDChanged();
    partial void OnLinkIDChanging(int value);
    partial void OnLinkIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public DirectionSubjectLinkSubject()
		{
			this._DirectionSubjectLink = default(EntityRef<DirectionSubjectLink>);
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkID", DbType="Int NOT NULL")]
		public int LinkID
		{
			get
			{
				return this._LinkID;
			}
			set
			{
				if ((this._LinkID != value))
				{
					if (this._DirectionSubjectLink.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLinkIDChanging(value);
					this.SendPropertyChanging();
					this._LinkID = value;
					this.SendPropertyChanged("LinkID");
					this.OnLinkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DirectionSubjectLink_DirectionSubjectLinkSubject", Storage="_DirectionSubjectLink", ThisKey="LinkID", OtherKey="ID", IsForeignKey=true)]
		public DirectionSubjectLink DirectionSubjectLink
		{
			get
			{
				return this._DirectionSubjectLink.Entity;
			}
			set
			{
				DirectionSubjectLink previousValue = this._DirectionSubjectLink.Entity;
				if (((previousValue != value) 
							|| (this._DirectionSubjectLink.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DirectionSubjectLink.Entity = null;
						previousValue.DirectionSubjectLinkSubjects.Remove(this);
					}
					this._DirectionSubjectLink.Entity = value;
					if ((value != null))
					{
						value.DirectionSubjectLinkSubjects.Add(this);
						this._LinkID = value.ID;
					}
					else
					{
						this._LinkID = default(int);
					}
					this.SendPropertyChanged("DirectionSubjectLink");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_DirectionSubjectLinkSubject", Storage="_Subject", ThisKey="SubjectID", OtherKey="SubjectID", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.DirectionSubjectLinkSubjects.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.DirectionSubjectLinkSubjects.Add(this);
						this._SubjectID = value.SubjectID;
					}
					else
					{
						this._SubjectID = default(int);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DisabilityType")]
	public partial class DisabilityType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DisabilityID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDisabilityIDChanging(int value);
    partial void OnDisabilityIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public DisabilityType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisabilityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DisabilityID
		{
			get
			{
				return this._DisabilityID;
			}
			set
			{
				if ((this._DisabilityID != value))
				{
					this.OnDisabilityIDChanging(value);
					this.SendPropertyChanging();
					this._DisabilityID = value;
					this.SendPropertyChanged("DisabilityID");
					this.OnDisabilityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistributedAdmissionVolume")]
	public partial class DistributedAdmissionVolume : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DistributedAdmissionVolumeID;
		
		private int _AdmissionVolumeID;
		
		private int _IdLevelBudget;
		
		private int _NumberBudgetO;
		
		private int _NumberBudgetOZ;
		
		private int _NumberBudgetZ;
		
		private int _NumberQuotaO;
		
		private int _NumberQuotaOZ;
		
		private int _NumberQuotaZ;
		
		private int _NumberTargetO;
		
		private int _NumberTargetOZ;
		
		private int _NumberTargetZ;
		
		private EntityRef<AdmissionVolume> _AdmissionVolume;
		
		private EntityRef<LevelBudget> _LevelBudget;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDistributedAdmissionVolumeIDChanging(int value);
    partial void OnDistributedAdmissionVolumeIDChanged();
    partial void OnAdmissionVolumeIDChanging(int value);
    partial void OnAdmissionVolumeIDChanged();
    partial void OnIdLevelBudgetChanging(int value);
    partial void OnIdLevelBudgetChanged();
    partial void OnNumberBudgetOChanging(int value);
    partial void OnNumberBudgetOChanged();
    partial void OnNumberBudgetOZChanging(int value);
    partial void OnNumberBudgetOZChanged();
    partial void OnNumberBudgetZChanging(int value);
    partial void OnNumberBudgetZChanged();
    partial void OnNumberQuotaOChanging(int value);
    partial void OnNumberQuotaOChanged();
    partial void OnNumberQuotaOZChanging(int value);
    partial void OnNumberQuotaOZChanged();
    partial void OnNumberQuotaZChanging(int value);
    partial void OnNumberQuotaZChanged();
    partial void OnNumberTargetOChanging(int value);
    partial void OnNumberTargetOChanged();
    partial void OnNumberTargetOZChanging(int value);
    partial void OnNumberTargetOZChanged();
    partial void OnNumberTargetZChanging(int value);
    partial void OnNumberTargetZChanged();
    #endregion
		
		public DistributedAdmissionVolume()
		{
			this._AdmissionVolume = default(EntityRef<AdmissionVolume>);
			this._LevelBudget = default(EntityRef<LevelBudget>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistributedAdmissionVolumeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DistributedAdmissionVolumeID
		{
			get
			{
				return this._DistributedAdmissionVolumeID;
			}
			set
			{
				if ((this._DistributedAdmissionVolumeID != value))
				{
					this.OnDistributedAdmissionVolumeIDChanging(value);
					this.SendPropertyChanging();
					this._DistributedAdmissionVolumeID = value;
					this.SendPropertyChanged("DistributedAdmissionVolumeID");
					this.OnDistributedAdmissionVolumeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionVolumeID", DbType="Int NOT NULL")]
		public int AdmissionVolumeID
		{
			get
			{
				return this._AdmissionVolumeID;
			}
			set
			{
				if ((this._AdmissionVolumeID != value))
				{
					if (this._AdmissionVolume.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdmissionVolumeIDChanging(value);
					this.SendPropertyChanging();
					this._AdmissionVolumeID = value;
					this.SendPropertyChanged("AdmissionVolumeID");
					this.OnAdmissionVolumeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLevelBudget", DbType="Int NOT NULL")]
		public int IdLevelBudget
		{
			get
			{
				return this._IdLevelBudget;
			}
			set
			{
				if ((this._IdLevelBudget != value))
				{
					if (this._LevelBudget.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdLevelBudgetChanging(value);
					this.SendPropertyChanging();
					this._IdLevelBudget = value;
					this.SendPropertyChanged("IdLevelBudget");
					this.OnIdLevelBudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetO", DbType="Int NOT NULL")]
		public int NumberBudgetO
		{
			get
			{
				return this._NumberBudgetO;
			}
			set
			{
				if ((this._NumberBudgetO != value))
				{
					this.OnNumberBudgetOChanging(value);
					this.SendPropertyChanging();
					this._NumberBudgetO = value;
					this.SendPropertyChanged("NumberBudgetO");
					this.OnNumberBudgetOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetOZ", DbType="Int NOT NULL")]
		public int NumberBudgetOZ
		{
			get
			{
				return this._NumberBudgetOZ;
			}
			set
			{
				if ((this._NumberBudgetOZ != value))
				{
					this.OnNumberBudgetOZChanging(value);
					this.SendPropertyChanging();
					this._NumberBudgetOZ = value;
					this.SendPropertyChanged("NumberBudgetOZ");
					this.OnNumberBudgetOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberBudgetZ", DbType="Int NOT NULL")]
		public int NumberBudgetZ
		{
			get
			{
				return this._NumberBudgetZ;
			}
			set
			{
				if ((this._NumberBudgetZ != value))
				{
					this.OnNumberBudgetZChanging(value);
					this.SendPropertyChanging();
					this._NumberBudgetZ = value;
					this.SendPropertyChanged("NumberBudgetZ");
					this.OnNumberBudgetZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberQuotaO", DbType="Int NOT NULL")]
		public int NumberQuotaO
		{
			get
			{
				return this._NumberQuotaO;
			}
			set
			{
				if ((this._NumberQuotaO != value))
				{
					this.OnNumberQuotaOChanging(value);
					this.SendPropertyChanging();
					this._NumberQuotaO = value;
					this.SendPropertyChanged("NumberQuotaO");
					this.OnNumberQuotaOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberQuotaOZ", DbType="Int NOT NULL")]
		public int NumberQuotaOZ
		{
			get
			{
				return this._NumberQuotaOZ;
			}
			set
			{
				if ((this._NumberQuotaOZ != value))
				{
					this.OnNumberQuotaOZChanging(value);
					this.SendPropertyChanging();
					this._NumberQuotaOZ = value;
					this.SendPropertyChanged("NumberQuotaOZ");
					this.OnNumberQuotaOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberQuotaZ", DbType="Int NOT NULL")]
		public int NumberQuotaZ
		{
			get
			{
				return this._NumberQuotaZ;
			}
			set
			{
				if ((this._NumberQuotaZ != value))
				{
					this.OnNumberQuotaZChanging(value);
					this.SendPropertyChanging();
					this._NumberQuotaZ = value;
					this.SendPropertyChanged("NumberQuotaZ");
					this.OnNumberQuotaZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTargetO", DbType="Int NOT NULL")]
		public int NumberTargetO
		{
			get
			{
				return this._NumberTargetO;
			}
			set
			{
				if ((this._NumberTargetO != value))
				{
					this.OnNumberTargetOChanging(value);
					this.SendPropertyChanging();
					this._NumberTargetO = value;
					this.SendPropertyChanged("NumberTargetO");
					this.OnNumberTargetOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTargetOZ", DbType="Int NOT NULL")]
		public int NumberTargetOZ
		{
			get
			{
				return this._NumberTargetOZ;
			}
			set
			{
				if ((this._NumberTargetOZ != value))
				{
					this.OnNumberTargetOZChanging(value);
					this.SendPropertyChanging();
					this._NumberTargetOZ = value;
					this.SendPropertyChanged("NumberTargetOZ");
					this.OnNumberTargetOZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberTargetZ", DbType="Int NOT NULL")]
		public int NumberTargetZ
		{
			get
			{
				return this._NumberTargetZ;
			}
			set
			{
				if ((this._NumberTargetZ != value))
				{
					this.OnNumberTargetZChanging(value);
					this.SendPropertyChanging();
					this._NumberTargetZ = value;
					this.SendPropertyChanged("NumberTargetZ");
					this.OnNumberTargetZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionVolume_DistributedAdmissionVolume", Storage="_AdmissionVolume", ThisKey="AdmissionVolumeID", OtherKey="AdmissionVolumeID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AdmissionVolume AdmissionVolume
		{
			get
			{
				return this._AdmissionVolume.Entity;
			}
			set
			{
				AdmissionVolume previousValue = this._AdmissionVolume.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionVolume.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionVolume.Entity = null;
						previousValue.DistributedAdmissionVolumes.Remove(this);
					}
					this._AdmissionVolume.Entity = value;
					if ((value != null))
					{
						value.DistributedAdmissionVolumes.Add(this);
						this._AdmissionVolumeID = value.AdmissionVolumeID;
					}
					else
					{
						this._AdmissionVolumeID = default(int);
					}
					this.SendPropertyChanged("AdmissionVolume");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelBudget_DistributedAdmissionVolume", Storage="_LevelBudget", ThisKey="IdLevelBudget", OtherKey="IdLevelBudget", IsForeignKey=true)]
		public LevelBudget LevelBudget
		{
			get
			{
				return this._LevelBudget.Entity;
			}
			set
			{
				LevelBudget previousValue = this._LevelBudget.Entity;
				if (((previousValue != value) 
							|| (this._LevelBudget.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LevelBudget.Entity = null;
						previousValue.DistributedAdmissionVolumes.Remove(this);
					}
					this._LevelBudget.Entity = value;
					if ((value != null))
					{
						value.DistributedAdmissionVolumes.Add(this);
						this._IdLevelBudget = value.IdLevelBudget;
					}
					else
					{
						this._IdLevelBudget = default(int);
					}
					this.SendPropertyChanged("LevelBudget");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentCategory")]
	public partial class DocumentCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryID;
		
		private string _Name;
		
		private EntitySet<DocumentType> _DocumentTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public DocumentCategory()
		{
			this._DocumentTypes = new EntitySet<DocumentType>(new Action<DocumentType>(this.attach_DocumentTypes), new Action<DocumentType>(this.detach_DocumentTypes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentCategory_DocumentType", Storage="_DocumentTypes", ThisKey="CategoryID", OtherKey="CategoryID")]
		public EntitySet<DocumentType> DocumentTypes
		{
			get
			{
				return this._DocumentTypes;
			}
			set
			{
				this._DocumentTypes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DocumentTypes(DocumentType entity)
		{
			this.SendPropertyChanging();
			entity.DocumentCategory = this;
		}
		
		private void detach_DocumentTypes(DocumentType entity)
		{
			this.SendPropertyChanging();
			entity.DocumentCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentCheckStatus")]
	public partial class DocumentCheckStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public DocumentCheckStatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DocumentType")]
	public partial class DocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private int _CategoryID;
		
		private bool _IsMedical;
		
		private EntitySet<EduLevelDocumentType> _EduLevelDocumentTypes;
		
		private EntitySet<EntrantDocument> _EntrantDocuments;
		
		private EntityRef<DocumentCategory> _DocumentCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentIDChanging(int value);
    partial void OnDocumentIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnIsMedicalChanging(bool value);
    partial void OnIsMedicalChanged();
    #endregion
		
		public DocumentType()
		{
			this._EduLevelDocumentTypes = new EntitySet<EduLevelDocumentType>(new Action<EduLevelDocumentType>(this.attach_EduLevelDocumentTypes), new Action<EduLevelDocumentType>(this.detach_EduLevelDocumentTypes));
			this._EntrantDocuments = new EntitySet<EntrantDocument>(new Action<EntrantDocument>(this.attach_EntrantDocuments), new Action<EntrantDocument>(this.detach_EntrantDocuments));
			this._DocumentCategory = default(EntityRef<DocumentCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._DocumentCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMedical", DbType="Bit NOT NULL")]
		public bool IsMedical
		{
			get
			{
				return this._IsMedical;
			}
			set
			{
				if ((this._IsMedical != value))
				{
					this.OnIsMedicalChanging(value);
					this.SendPropertyChanging();
					this._IsMedical = value;
					this.SendPropertyChanged("IsMedical");
					this.OnIsMedicalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_EduLevelDocumentType", Storage="_EduLevelDocumentTypes", ThisKey="DocumentID", OtherKey="DocumentTypeId")]
		public EntitySet<EduLevelDocumentType> EduLevelDocumentTypes
		{
			get
			{
				return this._EduLevelDocumentTypes;
			}
			set
			{
				this._EduLevelDocumentTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_EntrantDocument", Storage="_EntrantDocuments", ThisKey="DocumentID", OtherKey="DocumentTypeID")]
		public EntitySet<EntrantDocument> EntrantDocuments
		{
			get
			{
				return this._EntrantDocuments;
			}
			set
			{
				this._EntrantDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentCategory_DocumentType", Storage="_DocumentCategory", ThisKey="CategoryID", OtherKey="CategoryID", IsForeignKey=true)]
		public DocumentCategory DocumentCategory
		{
			get
			{
				return this._DocumentCategory.Entity;
			}
			set
			{
				DocumentCategory previousValue = this._DocumentCategory.Entity;
				if (((previousValue != value) 
							|| (this._DocumentCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentCategory.Entity = null;
						previousValue.DocumentTypes.Remove(this);
					}
					this._DocumentCategory.Entity = value;
					if ((value != null))
					{
						value.DocumentTypes.Add(this);
						this._CategoryID = value.CategoryID;
					}
					else
					{
						this._CategoryID = default(int);
					}
					this.SendPropertyChanged("DocumentCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EduLevelDocumentTypes(EduLevelDocumentType entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = this;
		}
		
		private void detach_EduLevelDocumentTypes(EduLevelDocumentType entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = null;
		}
		
		private void attach_EntrantDocuments(EntrantDocument entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = this;
		}
		
		private void detach_EntrantDocuments(EntrantDocument entity)
		{
			this.SendPropertyChanging();
			entity.DocumentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EDU_PROGRAM_TYPES")]
	public partial class EDU_PROGRAM_TYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _EIIS_ID;
		
		private string _NAME;
		
		private string _SHORTNAME;
		
		private System.Nullable<int> _Esrp_Id;
		
		private int _ID;
		
		private EntitySet<Direction> _Directions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnEIIS_IDChanging(string value);
    partial void OnEIIS_IDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnSHORTNAMEChanging(string value);
    partial void OnSHORTNAMEChanged();
    partial void OnEsrp_IdChanging(System.Nullable<int> value);
    partial void OnEsrp_IdChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public EDU_PROGRAM_TYPE()
		{
			this._Directions = new EntitySet<Direction>(new Action<Direction>(this.attach_Directions), new Action<Direction>(this.detach_Directions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(6)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIIS_ID", DbType="VarChar(50)")]
		public string EIIS_ID
		{
			get
			{
				return this._EIIS_ID;
			}
			set
			{
				if ((this._EIIS_ID != value))
				{
					this.OnEIIS_IDChanging(value);
					this.SendPropertyChanging();
					this._EIIS_ID = value;
					this.SendPropertyChanged("EIIS_ID");
					this.OnEIIS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(255)")]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHORTNAME", DbType="VarChar(25)")]
		public string SHORTNAME
		{
			get
			{
				return this._SHORTNAME;
			}
			set
			{
				if ((this._SHORTNAME != value))
				{
					this.OnSHORTNAMEChanging(value);
					this.SendPropertyChanging();
					this._SHORTNAME = value;
					this.SendPropertyChanged("SHORTNAME");
					this.OnSHORTNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Esrp_Id", DbType="Int")]
		public System.Nullable<int> Esrp_Id
		{
			get
			{
				return this._Esrp_Id;
			}
			set
			{
				if ((this._Esrp_Id != value))
				{
					this.OnEsrp_IdChanging(value);
					this.SendPropertyChanging();
					this._Esrp_Id = value;
					this.SendPropertyChanged("Esrp_Id");
					this.OnEsrp_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EDU_PROGRAM_TYPE_Direction", Storage="_Directions", ThisKey="ID", OtherKey="EducationProgramTypeId")]
		public EntitySet<Direction> Directions
		{
			get
			{
				return this._Directions;
			}
			set
			{
				this._Directions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Directions(Direction entity)
		{
			this.SendPropertyChanging();
			entity.EDU_PROGRAM_TYPE = this;
		}
		
		private void detach_Directions(Direction entity)
		{
			this.SendPropertyChanging();
			entity.EDU_PROGRAM_TYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EduLevelDocumentType")]
	public partial class EduLevelDocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _LevelID;
		
		private int _DocumentTypeId;
		
		private EntityRef<DocumentType> _DocumentType;
		
		private EntityRef<EduLevel> _EduLevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLevelIDChanging(int value);
    partial void OnLevelIDChanged();
    partial void OnDocumentTypeIdChanging(int value);
    partial void OnDocumentTypeIdChanged();
    #endregion
		
		public EduLevelDocumentType()
		{
			this._DocumentType = default(EntityRef<DocumentType>);
			this._EduLevel = default(EntityRef<EduLevel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", DbType="Int NOT NULL")]
		public int LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					if (this._EduLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeId", DbType="Int NOT NULL")]
		public int DocumentTypeId
		{
			get
			{
				return this._DocumentTypeId;
			}
			set
			{
				if ((this._DocumentTypeId != value))
				{
					if (this._DocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeId = value;
					this.SendPropertyChanged("DocumentTypeId");
					this.OnDocumentTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_EduLevelDocumentType", Storage="_DocumentType", ThisKey="DocumentTypeId", OtherKey="DocumentID", IsForeignKey=true)]
		public DocumentType DocumentType
		{
			get
			{
				return this._DocumentType.Entity;
			}
			set
			{
				DocumentType previousValue = this._DocumentType.Entity;
				if (((previousValue != value) 
							|| (this._DocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentType.Entity = null;
						previousValue.EduLevelDocumentTypes.Remove(this);
					}
					this._DocumentType.Entity = value;
					if ((value != null))
					{
						value.EduLevelDocumentTypes.Add(this);
						this._DocumentTypeId = value.DocumentID;
					}
					else
					{
						this._DocumentTypeId = default(int);
					}
					this.SendPropertyChanged("DocumentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EduLevel_EduLevelDocumentType", Storage="_EduLevel", ThisKey="LevelID", OtherKey="LevelID", IsForeignKey=true)]
		public EduLevel EduLevel
		{
			get
			{
				return this._EduLevel.Entity;
			}
			set
			{
				EduLevel previousValue = this._EduLevel.Entity;
				if (((previousValue != value) 
							|| (this._EduLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EduLevel.Entity = null;
						previousValue.EduLevelDocumentTypes.Remove(this);
					}
					this._EduLevel.Entity = value;
					if ((value != null))
					{
						value.EduLevelDocumentTypes.Add(this);
						this._LevelID = value.LevelID;
					}
					else
					{
						this._LevelID = default(int);
					}
					this.SendPropertyChanged("EduLevel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EduLevels")]
	public partial class EduLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LevelID;
		
		private short _AdmissionItemTypeID;
		
		private string _Name;
		
		private EntitySet<EduLevelDocumentType> _EduLevelDocumentTypes;
		
		private EntityRef<AdmissionItemType> _AdmissionItemType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLevelIDChanging(int value);
    partial void OnLevelIDChanged();
    partial void OnAdmissionItemTypeIDChanging(short value);
    partial void OnAdmissionItemTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public EduLevel()
		{
			this._EduLevelDocumentTypes = new EntitySet<EduLevelDocumentType>(new Action<EduLevelDocumentType>(this.attach_EduLevelDocumentTypes), new Action<EduLevelDocumentType>(this.detach_EduLevelDocumentTypes));
			this._AdmissionItemType = default(EntityRef<AdmissionItemType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LevelID
		{
			get
			{
				return this._LevelID;
			}
			set
			{
				if ((this._LevelID != value))
				{
					this.OnLevelIDChanging(value);
					this.SendPropertyChanging();
					this._LevelID = value;
					this.SendPropertyChanged("LevelID");
					this.OnLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionItemTypeID", DbType="SmallInt NOT NULL")]
		public short AdmissionItemTypeID
		{
			get
			{
				return this._AdmissionItemTypeID;
			}
			set
			{
				if ((this._AdmissionItemTypeID != value))
				{
					if (this._AdmissionItemType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdmissionItemTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AdmissionItemTypeID = value;
					this.SendPropertyChanged("AdmissionItemTypeID");
					this.OnAdmissionItemTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EduLevel_EduLevelDocumentType", Storage="_EduLevelDocumentTypes", ThisKey="LevelID", OtherKey="LevelID")]
		public EntitySet<EduLevelDocumentType> EduLevelDocumentTypes
		{
			get
			{
				return this._EduLevelDocumentTypes;
			}
			set
			{
				this._EduLevelDocumentTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_EduLevel", Storage="_AdmissionItemType", ThisKey="AdmissionItemTypeID", OtherKey="ItemTypeID", IsForeignKey=true)]
		public AdmissionItemType AdmissionItemType
		{
			get
			{
				return this._AdmissionItemType.Entity;
			}
			set
			{
				AdmissionItemType previousValue = this._AdmissionItemType.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionItemType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionItemType.Entity = null;
						previousValue.EduLevels.Remove(this);
					}
					this._AdmissionItemType.Entity = value;
					if ((value != null))
					{
						value.EduLevels.Add(this);
						this._AdmissionItemTypeID = value.ItemTypeID;
					}
					else
					{
						this._AdmissionItemTypeID = default(short);
					}
					this.SendPropertyChanged("AdmissionItemType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EduLevelDocumentTypes(EduLevelDocumentType entity)
		{
			this.SendPropertyChanging();
			entity.EduLevel = this;
		}
		
		private void detach_EduLevelDocumentTypes(EduLevelDocumentType entity)
		{
			this.SendPropertyChanging();
			entity.EduLevel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EduLevelsToCampaignTypes")]
	public partial class EduLevelsToCampaignType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _CampaignTypeID;
		
		private short _AdmissionItemTypeID;
		
		private EntityRef<AdmissionItemType> _AdmissionItemType;
		
		private EntityRef<CampaignType> _CampaignType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCampaignTypeIDChanging(short value);
    partial void OnCampaignTypeIDChanged();
    partial void OnAdmissionItemTypeIDChanging(short value);
    partial void OnAdmissionItemTypeIDChanged();
    #endregion
		
		public EduLevelsToCampaignType()
		{
			this._AdmissionItemType = default(EntityRef<AdmissionItemType>);
			this._CampaignType = default(EntityRef<CampaignType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignTypeID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short CampaignTypeID
		{
			get
			{
				return this._CampaignTypeID;
			}
			set
			{
				if ((this._CampaignTypeID != value))
				{
					if (this._CampaignType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignTypeID = value;
					this.SendPropertyChanged("CampaignTypeID");
					this.OnCampaignTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionItemTypeID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short AdmissionItemTypeID
		{
			get
			{
				return this._AdmissionItemTypeID;
			}
			set
			{
				if ((this._AdmissionItemTypeID != value))
				{
					if (this._AdmissionItemType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdmissionItemTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AdmissionItemTypeID = value;
					this.SendPropertyChanged("AdmissionItemTypeID");
					this.OnAdmissionItemTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_EduLevelsToCampaignType", Storage="_AdmissionItemType", ThisKey="AdmissionItemTypeID", OtherKey="ItemTypeID", IsForeignKey=true)]
		public AdmissionItemType AdmissionItemType
		{
			get
			{
				return this._AdmissionItemType.Entity;
			}
			set
			{
				AdmissionItemType previousValue = this._AdmissionItemType.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionItemType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionItemType.Entity = null;
						previousValue.EduLevelsToCampaignTypes.Remove(this);
					}
					this._AdmissionItemType.Entity = value;
					if ((value != null))
					{
						value.EduLevelsToCampaignTypes.Add(this);
						this._AdmissionItemTypeID = value.ItemTypeID;
					}
					else
					{
						this._AdmissionItemTypeID = default(short);
					}
					this.SendPropertyChanged("AdmissionItemType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CampaignType_EduLevelsToCampaignType", Storage="_CampaignType", ThisKey="CampaignTypeID", OtherKey="CampaignTypeID", IsForeignKey=true)]
		public CampaignType CampaignType
		{
			get
			{
				return this._CampaignType.Entity;
			}
			set
			{
				CampaignType previousValue = this._CampaignType.Entity;
				if (((previousValue != value) 
							|| (this._CampaignType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CampaignType.Entity = null;
						previousValue.EduLevelsToCampaignTypes.Remove(this);
					}
					this._CampaignType.Entity = value;
					if ((value != null))
					{
						value.EduLevelsToCampaignTypes.Add(this);
						this._CampaignTypeID = value.CampaignTypeID;
					}
					else
					{
						this._CampaignTypeID = default(short);
					}
					this.SendPropertyChanged("CampaignType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EduLevelsToUgsCode")]
	public partial class EduLevelsToUgsCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _EducationLevelId;
		
		private string _QualificationCode;
		
		private EntityRef<AdmissionItemType> _AdmissionItemType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEducationLevelIdChanging(short value);
    partial void OnEducationLevelIdChanged();
    partial void OnQualificationCodeChanging(string value);
    partial void OnQualificationCodeChanged();
    #endregion
		
		public EduLevelsToUgsCode()
		{
			this._AdmissionItemType = default(EntityRef<AdmissionItemType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short EducationLevelId
		{
			get
			{
				return this._EducationLevelId;
			}
			set
			{
				if ((this._EducationLevelId != value))
				{
					if (this._AdmissionItemType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEducationLevelIdChanging(value);
					this.SendPropertyChanging();
					this._EducationLevelId = value;
					this.SendPropertyChanged("EducationLevelId");
					this.OnEducationLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationCode", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string QualificationCode
		{
			get
			{
				return this._QualificationCode;
			}
			set
			{
				if ((this._QualificationCode != value))
				{
					this.OnQualificationCodeChanging(value);
					this.SendPropertyChanging();
					this._QualificationCode = value;
					this.SendPropertyChanged("QualificationCode");
					this.OnQualificationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_EduLevelsToUgsCode", Storage="_AdmissionItemType", ThisKey="EducationLevelId", OtherKey="ItemTypeID", IsForeignKey=true)]
		public AdmissionItemType AdmissionItemType
		{
			get
			{
				return this._AdmissionItemType.Entity;
			}
			set
			{
				AdmissionItemType previousValue = this._AdmissionItemType.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionItemType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionItemType.Entity = null;
						previousValue.EduLevelsToUgsCodes.Remove(this);
					}
					this._AdmissionItemType.Entity = value;
					if ((value != null))
					{
						value.EduLevelsToUgsCodes.Add(this);
						this._EducationLevelId = value.ItemTypeID;
					}
					else
					{
						this._EducationLevelId = default(short);
					}
					this.SendPropertyChanged("AdmissionItemType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntranceTestCreativeDirection")]
	public partial class EntranceTestCreativeDirection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DirectionID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<Direction> _Direction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDirectionIDChanging(int value);
    partial void OnDirectionIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public EntranceTestCreativeDirection()
		{
			this._Direction = default(EntityRef<Direction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					if (this._Direction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_EntranceTestCreativeDirection", Storage="_Direction", ThisKey="DirectionID", OtherKey="DirectionID", IsForeignKey=true)]
		public Direction Direction
		{
			get
			{
				return this._Direction.Entity;
			}
			set
			{
				Direction previousValue = this._Direction.Entity;
				if (((previousValue != value) 
							|| (this._Direction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direction.Entity = null;
						previousValue.EntranceTestCreativeDirection = null;
					}
					this._Direction.Entity = value;
					if ((value != null))
					{
						value.EntranceTestCreativeDirection = this;
						this._DirectionID = value.DirectionID;
					}
					else
					{
						this._DirectionID = default(int);
					}
					this.SendPropertyChanged("Direction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntranceTestItemC")]
	public partial class EntranceTestItemC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntranceTestItemID;
		
		private int _CompetitiveGroupID;
		
		private short _EntranceTestTypeID;
		
		private System.Nullable<decimal> _MinScore;
		
		private System.Nullable<int> _SubjectID;
		
		private string _SubjectName;
		
		private string _UID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _EntranceTestPriority;
		
		private System.Nullable<System.Guid> _EntranceTestItemGUID;
		
		private System.Nullable<bool> _IsForSPOandVO;
		
		private System.Nullable<int> _ReplacedEntranceTestItemID;
		
		private EntitySet<ApplicationEntranceTestDocument> _ApplicationEntranceTestDocuments;
		
		private EntitySet<BenefitItemC> _BenefitItemCs;
		
		private EntitySet<EntranceTestItemC> _EntranceTestItemCs;
		
		private EntityRef<CompetitiveGroup> _CompetitiveGroup;
		
		private EntityRef<EntranceTestItemC> _EntranceTestItemC1;
		
		private EntityRef<EntranceTestType> _EntranceTestType;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntranceTestItemIDChanging(int value);
    partial void OnEntranceTestItemIDChanged();
    partial void OnCompetitiveGroupIDChanging(int value);
    partial void OnCompetitiveGroupIDChanged();
    partial void OnEntranceTestTypeIDChanging(short value);
    partial void OnEntranceTestTypeIDChanged();
    partial void OnMinScoreChanging(System.Nullable<decimal> value);
    partial void OnMinScoreChanged();
    partial void OnSubjectIDChanging(System.Nullable<int> value);
    partial void OnSubjectIDChanged();
    partial void OnSubjectNameChanging(string value);
    partial void OnSubjectNameChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnEntranceTestPriorityChanging(System.Nullable<int> value);
    partial void OnEntranceTestPriorityChanged();
    partial void OnEntranceTestItemGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnEntranceTestItemGUIDChanged();
    partial void OnIsForSPOandVOChanging(System.Nullable<bool> value);
    partial void OnIsForSPOandVOChanged();
    partial void OnReplacedEntranceTestItemIDChanging(System.Nullable<int> value);
    partial void OnReplacedEntranceTestItemIDChanged();
    #endregion
		
		public EntranceTestItemC()
		{
			this._ApplicationEntranceTestDocuments = new EntitySet<ApplicationEntranceTestDocument>(new Action<ApplicationEntranceTestDocument>(this.attach_ApplicationEntranceTestDocuments), new Action<ApplicationEntranceTestDocument>(this.detach_ApplicationEntranceTestDocuments));
			this._BenefitItemCs = new EntitySet<BenefitItemC>(new Action<BenefitItemC>(this.attach_BenefitItemCs), new Action<BenefitItemC>(this.detach_BenefitItemCs));
			this._EntranceTestItemCs = new EntitySet<EntranceTestItemC>(new Action<EntranceTestItemC>(this.attach_EntranceTestItemCs), new Action<EntranceTestItemC>(this.detach_EntranceTestItemCs));
			this._CompetitiveGroup = default(EntityRef<CompetitiveGroup>);
			this._EntranceTestItemC1 = default(EntityRef<EntranceTestItemC>);
			this._EntranceTestType = default(EntityRef<EntranceTestType>);
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceTestItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EntranceTestItemID
		{
			get
			{
				return this._EntranceTestItemID;
			}
			set
			{
				if ((this._EntranceTestItemID != value))
				{
					this.OnEntranceTestItemIDChanging(value);
					this.SendPropertyChanging();
					this._EntranceTestItemID = value;
					this.SendPropertyChanged("EntranceTestItemID");
					this.OnEntranceTestItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupID", DbType="Int NOT NULL")]
		public int CompetitiveGroupID
		{
			get
			{
				return this._CompetitiveGroupID;
			}
			set
			{
				if ((this._CompetitiveGroupID != value))
				{
					if (this._CompetitiveGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCompetitiveGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupID = value;
					this.SendPropertyChanged("CompetitiveGroupID");
					this.OnCompetitiveGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceTestTypeID", DbType="SmallInt NOT NULL")]
		public short EntranceTestTypeID
		{
			get
			{
				return this._EntranceTestTypeID;
			}
			set
			{
				if ((this._EntranceTestTypeID != value))
				{
					if (this._EntranceTestType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntranceTestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EntranceTestTypeID = value;
					this.SendPropertyChanged("EntranceTestTypeID");
					this.OnEntranceTestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinScore", DbType="Decimal(7,4)")]
		public System.Nullable<decimal> MinScore
		{
			get
			{
				return this._MinScore;
			}
			set
			{
				if ((this._MinScore != value))
				{
					this.OnMinScoreChanging(value);
					this.SendPropertyChanging();
					this._MinScore = value;
					this.SendPropertyChanged("MinScore");
					this.OnMinScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int")]
		public System.Nullable<int> SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectName", DbType="VarChar(2000)")]
		public string SubjectName
		{
			get
			{
				return this._SubjectName;
			}
			set
			{
				if ((this._SubjectName != value))
				{
					this.OnSubjectNameChanging(value);
					this.SendPropertyChanging();
					this._SubjectName = value;
					this.SendPropertyChanged("SubjectName");
					this.OnSubjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceTestPriority", DbType="Int")]
		public System.Nullable<int> EntranceTestPriority
		{
			get
			{
				return this._EntranceTestPriority;
			}
			set
			{
				if ((this._EntranceTestPriority != value))
				{
					this.OnEntranceTestPriorityChanging(value);
					this.SendPropertyChanging();
					this._EntranceTestPriority = value;
					this.SendPropertyChanged("EntranceTestPriority");
					this.OnEntranceTestPriorityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceTestItemGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EntranceTestItemGUID
		{
			get
			{
				return this._EntranceTestItemGUID;
			}
			set
			{
				if ((this._EntranceTestItemGUID != value))
				{
					this.OnEntranceTestItemGUIDChanging(value);
					this.SendPropertyChanging();
					this._EntranceTestItemGUID = value;
					this.SendPropertyChanged("EntranceTestItemGUID");
					this.OnEntranceTestItemGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForSPOandVO", DbType="Bit")]
		public System.Nullable<bool> IsForSPOandVO
		{
			get
			{
				return this._IsForSPOandVO;
			}
			set
			{
				if ((this._IsForSPOandVO != value))
				{
					this.OnIsForSPOandVOChanging(value);
					this.SendPropertyChanging();
					this._IsForSPOandVO = value;
					this.SendPropertyChanged("IsForSPOandVO");
					this.OnIsForSPOandVOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplacedEntranceTestItemID", DbType="Int")]
		public System.Nullable<int> ReplacedEntranceTestItemID
		{
			get
			{
				return this._ReplacedEntranceTestItemID;
			}
			set
			{
				if ((this._ReplacedEntranceTestItemID != value))
				{
					if (this._EntranceTestItemC1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReplacedEntranceTestItemIDChanging(value);
					this.SendPropertyChanging();
					this._ReplacedEntranceTestItemID = value;
					this.SendPropertyChanged("ReplacedEntranceTestItemID");
					this.OnReplacedEntranceTestItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntranceTestItemC_ApplicationEntranceTestDocument", Storage="_ApplicationEntranceTestDocuments", ThisKey="EntranceTestItemID", OtherKey="EntranceTestItemID")]
		public EntitySet<ApplicationEntranceTestDocument> ApplicationEntranceTestDocuments
		{
			get
			{
				return this._ApplicationEntranceTestDocuments;
			}
			set
			{
				this._ApplicationEntranceTestDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntranceTestItemC_BenefitItemC", Storage="_BenefitItemCs", ThisKey="EntranceTestItemID", OtherKey="EntranceTestItemID")]
		public EntitySet<BenefitItemC> BenefitItemCs
		{
			get
			{
				return this._BenefitItemCs;
			}
			set
			{
				this._BenefitItemCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntranceTestItemC_EntranceTestItemC", Storage="_EntranceTestItemCs", ThisKey="EntranceTestItemID", OtherKey="ReplacedEntranceTestItemID")]
		public EntitySet<EntranceTestItemC> EntranceTestItemCs
		{
			get
			{
				return this._EntranceTestItemCs;
			}
			set
			{
				this._EntranceTestItemCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CompetitiveGroup_EntranceTestItemC", Storage="_CompetitiveGroup", ThisKey="CompetitiveGroupID", OtherKey="CompetitiveGroupID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CompetitiveGroup CompetitiveGroup
		{
			get
			{
				return this._CompetitiveGroup.Entity;
			}
			set
			{
				CompetitiveGroup previousValue = this._CompetitiveGroup.Entity;
				if (((previousValue != value) 
							|| (this._CompetitiveGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CompetitiveGroup.Entity = null;
						previousValue.EntranceTestItemCs.Remove(this);
					}
					this._CompetitiveGroup.Entity = value;
					if ((value != null))
					{
						value.EntranceTestItemCs.Add(this);
						this._CompetitiveGroupID = value.CompetitiveGroupID;
					}
					else
					{
						this._CompetitiveGroupID = default(int);
					}
					this.SendPropertyChanged("CompetitiveGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntranceTestItemC_EntranceTestItemC", Storage="_EntranceTestItemC1", ThisKey="ReplacedEntranceTestItemID", OtherKey="EntranceTestItemID", IsForeignKey=true)]
		public EntranceTestItemC EntranceTestItemC1
		{
			get
			{
				return this._EntranceTestItemC1.Entity;
			}
			set
			{
				EntranceTestItemC previousValue = this._EntranceTestItemC1.Entity;
				if (((previousValue != value) 
							|| (this._EntranceTestItemC1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntranceTestItemC1.Entity = null;
						previousValue.EntranceTestItemCs.Remove(this);
					}
					this._EntranceTestItemC1.Entity = value;
					if ((value != null))
					{
						value.EntranceTestItemCs.Add(this);
						this._ReplacedEntranceTestItemID = value.EntranceTestItemID;
					}
					else
					{
						this._ReplacedEntranceTestItemID = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntranceTestItemC1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntranceTestType_EntranceTestItemC", Storage="_EntranceTestType", ThisKey="EntranceTestTypeID", OtherKey="EntranceTestTypeID", IsForeignKey=true)]
		public EntranceTestType EntranceTestType
		{
			get
			{
				return this._EntranceTestType.Entity;
			}
			set
			{
				EntranceTestType previousValue = this._EntranceTestType.Entity;
				if (((previousValue != value) 
							|| (this._EntranceTestType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntranceTestType.Entity = null;
						previousValue.EntranceTestItemCs.Remove(this);
					}
					this._EntranceTestType.Entity = value;
					if ((value != null))
					{
						value.EntranceTestItemCs.Add(this);
						this._EntranceTestTypeID = value.EntranceTestTypeID;
					}
					else
					{
						this._EntranceTestTypeID = default(short);
					}
					this.SendPropertyChanged("EntranceTestType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_EntranceTestItemC", Storage="_Subject", ThisKey="SubjectID", OtherKey="SubjectID", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.EntranceTestItemCs.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.EntranceTestItemCs.Add(this);
						this._SubjectID = value.SubjectID;
					}
					else
					{
						this._SubjectID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApplicationEntranceTestDocuments(ApplicationEntranceTestDocument entity)
		{
			this.SendPropertyChanging();
			entity.EntranceTestItemC = this;
		}
		
		private void detach_ApplicationEntranceTestDocuments(ApplicationEntranceTestDocument entity)
		{
			this.SendPropertyChanging();
			entity.EntranceTestItemC = null;
		}
		
		private void attach_BenefitItemCs(BenefitItemC entity)
		{
			this.SendPropertyChanging();
			entity.EntranceTestItemC = this;
		}
		
		private void detach_BenefitItemCs(BenefitItemC entity)
		{
			this.SendPropertyChanging();
			entity.EntranceTestItemC = null;
		}
		
		private void attach_EntranceTestItemCs(EntranceTestItemC entity)
		{
			this.SendPropertyChanging();
			entity.EntranceTestItemC1 = this;
		}
		
		private void detach_EntranceTestItemCs(EntranceTestItemC entity)
		{
			this.SendPropertyChanging();
			entity.EntranceTestItemC1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntranceTestProfileDirection")]
	public partial class EntranceTestProfileDirection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProfileDirectionID;
		
		private int _InstitutionID;
		
		private int _DirectionID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<Direction> _Direction;
		
		private EntityRef<Institution> _Institution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProfileDirectionIDChanging(int value);
    partial void OnProfileDirectionIDChanged();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnDirectionIDChanging(int value);
    partial void OnDirectionIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public EntranceTestProfileDirection()
		{
			this._Direction = default(EntityRef<Direction>);
			this._Institution = default(EntityRef<Institution>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileDirectionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProfileDirectionID
		{
			get
			{
				return this._ProfileDirectionID;
			}
			set
			{
				if ((this._ProfileDirectionID != value))
				{
					this.OnProfileDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileDirectionID = value;
					this.SendPropertyChanged("ProfileDirectionID");
					this.OnProfileDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					if (this._Institution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int NOT NULL")]
		public int DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					if (this._Direction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_EntranceTestProfileDirection", Storage="_Direction", ThisKey="DirectionID", OtherKey="DirectionID", IsForeignKey=true)]
		public Direction Direction
		{
			get
			{
				return this._Direction.Entity;
			}
			set
			{
				Direction previousValue = this._Direction.Entity;
				if (((previousValue != value) 
							|| (this._Direction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direction.Entity = null;
						previousValue.EntranceTestProfileDirections.Remove(this);
					}
					this._Direction.Entity = value;
					if ((value != null))
					{
						value.EntranceTestProfileDirections.Add(this);
						this._DirectionID = value.DirectionID;
					}
					else
					{
						this._DirectionID = default(int);
					}
					this.SendPropertyChanged("Direction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_EntranceTestProfileDirection", Storage="_Institution", ThisKey="InstitutionID", OtherKey="InstitutionID", IsForeignKey=true)]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.EntranceTestProfileDirections.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.EntranceTestProfileDirections.Add(this);
						this._InstitutionID = value.InstitutionID;
					}
					else
					{
						this._InstitutionID = default(int);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntranceTestResultSource")]
	public partial class EntranceTestResultSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SourceID;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<ApplicationEntranceTestDocument> _ApplicationEntranceTestDocuments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSourceIDChanging(int value);
    partial void OnSourceIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public EntranceTestResultSource()
		{
			this._ApplicationEntranceTestDocuments = new EntitySet<ApplicationEntranceTestDocument>(new Action<ApplicationEntranceTestDocument>(this.attach_ApplicationEntranceTestDocuments), new Action<ApplicationEntranceTestDocument>(this.detach_ApplicationEntranceTestDocuments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SourceID
		{
			get
			{
				return this._SourceID;
			}
			set
			{
				if ((this._SourceID != value))
				{
					this.OnSourceIDChanging(value);
					this.SendPropertyChanging();
					this._SourceID = value;
					this.SendPropertyChanged("SourceID");
					this.OnSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntranceTestResultSource_ApplicationEntranceTestDocument", Storage="_ApplicationEntranceTestDocuments", ThisKey="SourceID", OtherKey="SourceID")]
		public EntitySet<ApplicationEntranceTestDocument> ApplicationEntranceTestDocuments
		{
			get
			{
				return this._ApplicationEntranceTestDocuments;
			}
			set
			{
				this._ApplicationEntranceTestDocuments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApplicationEntranceTestDocuments(ApplicationEntranceTestDocument entity)
		{
			this.SendPropertyChanging();
			entity.EntranceTestResultSource = this;
		}
		
		private void detach_ApplicationEntranceTestDocuments(ApplicationEntranceTestDocument entity)
		{
			this.SendPropertyChanging();
			entity.EntranceTestResultSource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntranceTestType")]
	public partial class EntranceTestType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _EntranceTestTypeID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<ApplicationEntranceTestDocument> _ApplicationEntranceTestDocuments;
		
		private EntitySet<EntranceTestItemC> _EntranceTestItemCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntranceTestTypeIDChanging(short value);
    partial void OnEntranceTestTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public EntranceTestType()
		{
			this._ApplicationEntranceTestDocuments = new EntitySet<ApplicationEntranceTestDocument>(new Action<ApplicationEntranceTestDocument>(this.attach_ApplicationEntranceTestDocuments), new Action<ApplicationEntranceTestDocument>(this.detach_ApplicationEntranceTestDocuments));
			this._EntranceTestItemCs = new EntitySet<EntranceTestItemC>(new Action<EntranceTestItemC>(this.attach_EntranceTestItemCs), new Action<EntranceTestItemC>(this.detach_EntranceTestItemCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntranceTestTypeID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short EntranceTestTypeID
		{
			get
			{
				return this._EntranceTestTypeID;
			}
			set
			{
				if ((this._EntranceTestTypeID != value))
				{
					this.OnEntranceTestTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EntranceTestTypeID = value;
					this.SendPropertyChanged("EntranceTestTypeID");
					this.OnEntranceTestTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntranceTestType_ApplicationEntranceTestDocument", Storage="_ApplicationEntranceTestDocuments", ThisKey="EntranceTestTypeID", OtherKey="EntranceTestTypeID")]
		public EntitySet<ApplicationEntranceTestDocument> ApplicationEntranceTestDocuments
		{
			get
			{
				return this._ApplicationEntranceTestDocuments;
			}
			set
			{
				this._ApplicationEntranceTestDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntranceTestType_EntranceTestItemC", Storage="_EntranceTestItemCs", ThisKey="EntranceTestTypeID", OtherKey="EntranceTestTypeID")]
		public EntitySet<EntranceTestItemC> EntranceTestItemCs
		{
			get
			{
				return this._EntranceTestItemCs;
			}
			set
			{
				this._EntranceTestItemCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApplicationEntranceTestDocuments(ApplicationEntranceTestDocument entity)
		{
			this.SendPropertyChanging();
			entity.EntranceTestType = this;
		}
		
		private void detach_ApplicationEntranceTestDocuments(ApplicationEntranceTestDocument entity)
		{
			this.SendPropertyChanging();
			entity.EntranceTestType = null;
		}
		
		private void attach_EntranceTestItemCs(EntranceTestItemC entity)
		{
			this.SendPropertyChanging();
			entity.EntranceTestType = this;
		}
		
		private void detach_EntranceTestItemCs(EntranceTestItemC entity)
		{
			this.SendPropertyChanging();
			entity.EntranceTestType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Entrant")]
	public partial class Entrant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntrantID;
		
		private System.Nullable<int> _IdentityDocumentID;
		
		private string _CustomInformation;
		
		private string _SNILS;
		
		private System.Nullable<int> _RegistrationAddressID;
		
		private System.Nullable<int> _FactAddressID;
		
		private string _MobilePhone;
		
		private string _Email;
		
		private string _UID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _InstitutionID;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private int _GenderID;
		
		private System.Nullable<int> _PersonId;
		
		private System.Nullable<System.DateTime> _PersonLinkDate;
		
		private System.Nullable<System.Guid> _EntrantGUID;
		
		private EntitySet<Application> _Applications;
		
		private EntitySet<EntrantDocument> _EntrantDocuments;
		
		private EntitySet<EntrantLanguage> _EntrantLanguages;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Address> _Address1;
		
		private EntityRef<EntrantDocument> _EntrantDocument;
		
		private EntityRef<GenderType> _GenderType;
		
		private EntityRef<Institution> _Institution;
		
		private EntityRef<RVIPerson> _RVIPerson;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntrantIDChanging(int value);
    partial void OnEntrantIDChanged();
    partial void OnIdentityDocumentIDChanging(System.Nullable<int> value);
    partial void OnIdentityDocumentIDChanged();
    partial void OnCustomInformationChanging(string value);
    partial void OnCustomInformationChanged();
    partial void OnSNILSChanging(string value);
    partial void OnSNILSChanged();
    partial void OnRegistrationAddressIDChanging(System.Nullable<int> value);
    partial void OnRegistrationAddressIDChanged();
    partial void OnFactAddressIDChanging(System.Nullable<int> value);
    partial void OnFactAddressIDChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnInstitutionIDChanging(System.Nullable<int> value);
    partial void OnInstitutionIDChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnGenderIDChanging(int value);
    partial void OnGenderIDChanged();
    partial void OnPersonIdChanging(System.Nullable<int> value);
    partial void OnPersonIdChanged();
    partial void OnPersonLinkDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPersonLinkDateChanged();
    partial void OnEntrantGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnEntrantGUIDChanged();
    #endregion
		
		public Entrant()
		{
			this._Applications = new EntitySet<Application>(new Action<Application>(this.attach_Applications), new Action<Application>(this.detach_Applications));
			this._EntrantDocuments = new EntitySet<EntrantDocument>(new Action<EntrantDocument>(this.attach_EntrantDocuments), new Action<EntrantDocument>(this.detach_EntrantDocuments));
			this._EntrantLanguages = new EntitySet<EntrantLanguage>(new Action<EntrantLanguage>(this.attach_EntrantLanguages), new Action<EntrantLanguage>(this.detach_EntrantLanguages));
			this._Address = default(EntityRef<Address>);
			this._Address1 = default(EntityRef<Address>);
			this._EntrantDocument = default(EntityRef<EntrantDocument>);
			this._GenderType = default(EntityRef<GenderType>);
			this._Institution = default(EntityRef<Institution>);
			this._RVIPerson = default(EntityRef<RVIPerson>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EntrantID
		{
			get
			{
				return this._EntrantID;
			}
			set
			{
				if ((this._EntrantID != value))
				{
					this.OnEntrantIDChanging(value);
					this.SendPropertyChanging();
					this._EntrantID = value;
					this.SendPropertyChanged("EntrantID");
					this.OnEntrantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityDocumentID", DbType="Int")]
		public System.Nullable<int> IdentityDocumentID
		{
			get
			{
				return this._IdentityDocumentID;
			}
			set
			{
				if ((this._IdentityDocumentID != value))
				{
					if (this._EntrantDocument.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdentityDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._IdentityDocumentID = value;
					this.SendPropertyChanged("IdentityDocumentID");
					this.OnIdentityDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomInformation", DbType="VarChar(MAX)")]
		public string CustomInformation
		{
			get
			{
				return this._CustomInformation;
			}
			set
			{
				if ((this._CustomInformation != value))
				{
					this.OnCustomInformationChanging(value);
					this.SendPropertyChanging();
					this._CustomInformation = value;
					this.SendPropertyChanged("CustomInformation");
					this.OnCustomInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNILS", DbType="Char(14)")]
		public string SNILS
		{
			get
			{
				return this._SNILS;
			}
			set
			{
				if ((this._SNILS != value))
				{
					this.OnSNILSChanging(value);
					this.SendPropertyChanging();
					this._SNILS = value;
					this.SendPropertyChanged("SNILS");
					this.OnSNILSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationAddressID", DbType="Int")]
		public System.Nullable<int> RegistrationAddressID
		{
			get
			{
				return this._RegistrationAddressID;
			}
			set
			{
				if ((this._RegistrationAddressID != value))
				{
					if (this._Address1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegistrationAddressIDChanging(value);
					this.SendPropertyChanging();
					this._RegistrationAddressID = value;
					this.SendPropertyChanged("RegistrationAddressID");
					this.OnRegistrationAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactAddressID", DbType="Int")]
		public System.Nullable<int> FactAddressID
		{
			get
			{
				return this._FactAddressID;
			}
			set
			{
				if ((this._FactAddressID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFactAddressIDChanging(value);
					this.SendPropertyChanging();
					this._FactAddressID = value;
					this.SendPropertyChanged("FactAddressID");
					this.OnFactAddressIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="VarChar(20)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int")]
		public System.Nullable<int> InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					if (this._Institution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(255)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderID", DbType="Int NOT NULL")]
		public int GenderID
		{
			get
			{
				return this._GenderID;
			}
			set
			{
				if ((this._GenderID != value))
				{
					if (this._GenderType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenderIDChanging(value);
					this.SendPropertyChanging();
					this._GenderID = value;
					this.SendPropertyChanged("GenderID");
					this.OnGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="Int")]
		public System.Nullable<int> PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._RVIPerson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonLinkDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PersonLinkDate
		{
			get
			{
				return this._PersonLinkDate;
			}
			set
			{
				if ((this._PersonLinkDate != value))
				{
					this.OnPersonLinkDateChanging(value);
					this.SendPropertyChanging();
					this._PersonLinkDate = value;
					this.SendPropertyChanged("PersonLinkDate");
					this.OnPersonLinkDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EntrantGUID
		{
			get
			{
				return this._EntrantGUID;
			}
			set
			{
				if ((this._EntrantGUID != value))
				{
					this.OnEntrantGUIDChanging(value);
					this.SendPropertyChanging();
					this._EntrantGUID = value;
					this.SendPropertyChanged("EntrantGUID");
					this.OnEntrantGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entrant_Application", Storage="_Applications", ThisKey="EntrantID", OtherKey="EntrantID")]
		public EntitySet<Application> Applications
		{
			get
			{
				return this._Applications;
			}
			set
			{
				this._Applications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entrant_EntrantDocument", Storage="_EntrantDocuments", ThisKey="EntrantID", OtherKey="EntrantID")]
		public EntitySet<EntrantDocument> EntrantDocuments
		{
			get
			{
				return this._EntrantDocuments;
			}
			set
			{
				this._EntrantDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entrant_EntrantLanguage", Storage="_EntrantLanguages", ThisKey="EntrantID", OtherKey="EntrantID")]
		public EntitySet<EntrantLanguage> EntrantLanguages
		{
			get
			{
				return this._EntrantLanguages;
			}
			set
			{
				this._EntrantLanguages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Entrant", Storage="_Address", ThisKey="FactAddressID", OtherKey="AddressID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.Entrants.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.Entrants.Add(this);
						this._FactAddressID = value.AddressID;
					}
					else
					{
						this._FactAddressID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Entrant1", Storage="_Address1", ThisKey="RegistrationAddressID", OtherKey="AddressID", IsForeignKey=true)]
		public Address Address1
		{
			get
			{
				return this._Address1.Entity;
			}
			set
			{
				Address previousValue = this._Address1.Entity;
				if (((previousValue != value) 
							|| (this._Address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address1.Entity = null;
						previousValue.Entrants1.Remove(this);
					}
					this._Address1.Entity = value;
					if ((value != null))
					{
						value.Entrants1.Add(this);
						this._RegistrationAddressID = value.AddressID;
					}
					else
					{
						this._RegistrationAddressID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Address1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntrantDocument_Entrant", Storage="_EntrantDocument", ThisKey="IdentityDocumentID", OtherKey="EntrantDocumentID", IsForeignKey=true)]
		public EntrantDocument EntrantDocument
		{
			get
			{
				return this._EntrantDocument.Entity;
			}
			set
			{
				EntrantDocument previousValue = this._EntrantDocument.Entity;
				if (((previousValue != value) 
							|| (this._EntrantDocument.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntrantDocument.Entity = null;
						previousValue.Entrants.Remove(this);
					}
					this._EntrantDocument.Entity = value;
					if ((value != null))
					{
						value.Entrants.Add(this);
						this._IdentityDocumentID = value.EntrantDocumentID;
					}
					else
					{
						this._IdentityDocumentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntrantDocument");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GenderType_Entrant", Storage="_GenderType", ThisKey="GenderID", OtherKey="GenderID", IsForeignKey=true)]
		public GenderType GenderType
		{
			get
			{
				return this._GenderType.Entity;
			}
			set
			{
				GenderType previousValue = this._GenderType.Entity;
				if (((previousValue != value) 
							|| (this._GenderType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GenderType.Entity = null;
						previousValue.Entrants.Remove(this);
					}
					this._GenderType.Entity = value;
					if ((value != null))
					{
						value.Entrants.Add(this);
						this._GenderID = value.GenderID;
					}
					else
					{
						this._GenderID = default(int);
					}
					this.SendPropertyChanged("GenderType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_Entrant", Storage="_Institution", ThisKey="InstitutionID", OtherKey="InstitutionID", IsForeignKey=true)]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.Entrants.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.Entrants.Add(this);
						this._InstitutionID = value.InstitutionID;
					}
					else
					{
						this._InstitutionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RVIPerson_Entrant", Storage="_RVIPerson", ThisKey="PersonId", OtherKey="PersonId", IsForeignKey=true)]
		public RVIPerson RVIPerson
		{
			get
			{
				return this._RVIPerson.Entity;
			}
			set
			{
				RVIPerson previousValue = this._RVIPerson.Entity;
				if (((previousValue != value) 
							|| (this._RVIPerson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RVIPerson.Entity = null;
						previousValue.Entrants.Remove(this);
					}
					this._RVIPerson.Entity = value;
					if ((value != null))
					{
						value.Entrants.Add(this);
						this._PersonId = value.PersonId;
					}
					else
					{
						this._PersonId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RVIPerson");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.Entrant = this;
		}
		
		private void detach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.Entrant = null;
		}
		
		private void attach_EntrantDocuments(EntrantDocument entity)
		{
			this.SendPropertyChanging();
			entity.Entrant = this;
		}
		
		private void detach_EntrantDocuments(EntrantDocument entity)
		{
			this.SendPropertyChanging();
			entity.Entrant = null;
		}
		
		private void attach_EntrantLanguages(EntrantLanguage entity)
		{
			this.SendPropertyChanging();
			entity.Entrant = this;
		}
		
		private void detach_EntrantLanguages(EntrantLanguage entity)
		{
			this.SendPropertyChanging();
			entity.Entrant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntrantDocument")]
	public partial class EntrantDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntrantDocumentID;
		
		private int _EntrantID;
		
		private int _DocumentTypeID;
		
		private string _DocumentSeries;
		
		private string _DocumentNumber;
		
		private System.Nullable<System.DateTime> _DocumentDate;
		
		private string _DocumentOrganization;
		
		private string _DocumentSpecificData;
		
		private System.Nullable<int> _AttachmentID;
		
		private string _UID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<System.Guid> _EntrantDocumentGUID;
		
		private System.Nullable<bool> _OlympApproved;
		
		private System.Nullable<bool> _OlympMatched;
		
		private EntitySet<ApplicationEntranceTestDocument> _ApplicationEntranceTestDocuments;
		
		private EntitySet<ApplicationEntrantDocument> _ApplicationEntrantDocuments;
		
		private EntitySet<Entrant> _Entrants;
		
		private EntitySet<IndividualAchivement> _IndividualAchivements;
		
		private EntityRef<Attachment> _Attachment;
		
		private EntityRef<DocumentType> _DocumentType;
		
		private EntityRef<Entrant> _Entrant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntrantDocumentIDChanging(int value);
    partial void OnEntrantDocumentIDChanged();
    partial void OnEntrantIDChanging(int value);
    partial void OnEntrantIDChanged();
    partial void OnDocumentTypeIDChanging(int value);
    partial void OnDocumentTypeIDChanged();
    partial void OnDocumentSeriesChanging(string value);
    partial void OnDocumentSeriesChanged();
    partial void OnDocumentNumberChanging(string value);
    partial void OnDocumentNumberChanged();
    partial void OnDocumentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDocumentDateChanged();
    partial void OnDocumentOrganizationChanging(string value);
    partial void OnDocumentOrganizationChanged();
    partial void OnDocumentSpecificDataChanging(string value);
    partial void OnDocumentSpecificDataChanged();
    partial void OnAttachmentIDChanging(System.Nullable<int> value);
    partial void OnAttachmentIDChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnEntrantDocumentGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnEntrantDocumentGUIDChanged();
    partial void OnOlympApprovedChanging(System.Nullable<bool> value);
    partial void OnOlympApprovedChanged();
    partial void OnOlympMatchedChanging(System.Nullable<bool> value);
    partial void OnOlympMatchedChanged();
    #endregion
		
		public EntrantDocument()
		{
			this._ApplicationEntranceTestDocuments = new EntitySet<ApplicationEntranceTestDocument>(new Action<ApplicationEntranceTestDocument>(this.attach_ApplicationEntranceTestDocuments), new Action<ApplicationEntranceTestDocument>(this.detach_ApplicationEntranceTestDocuments));
			this._ApplicationEntrantDocuments = new EntitySet<ApplicationEntrantDocument>(new Action<ApplicationEntrantDocument>(this.attach_ApplicationEntrantDocuments), new Action<ApplicationEntrantDocument>(this.detach_ApplicationEntrantDocuments));
			this._Entrants = new EntitySet<Entrant>(new Action<Entrant>(this.attach_Entrants), new Action<Entrant>(this.detach_Entrants));
			this._IndividualAchivements = new EntitySet<IndividualAchivement>(new Action<IndividualAchivement>(this.attach_IndividualAchivements), new Action<IndividualAchivement>(this.detach_IndividualAchivements));
			this._Attachment = default(EntityRef<Attachment>);
			this._DocumentType = default(EntityRef<DocumentType>);
			this._Entrant = default(EntityRef<Entrant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantDocumentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EntrantDocumentID
		{
			get
			{
				return this._EntrantDocumentID;
			}
			set
			{
				if ((this._EntrantDocumentID != value))
				{
					this.OnEntrantDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._EntrantDocumentID = value;
					this.SendPropertyChanged("EntrantDocumentID");
					this.OnEntrantDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantID", DbType="Int NOT NULL")]
		public int EntrantID
		{
			get
			{
				return this._EntrantID;
			}
			set
			{
				if ((this._EntrantID != value))
				{
					if (this._Entrant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntrantIDChanging(value);
					this.SendPropertyChanging();
					this._EntrantID = value;
					this.SendPropertyChanged("EntrantID");
					this.OnEntrantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeID", DbType="Int NOT NULL")]
		public int DocumentTypeID
		{
			get
			{
				return this._DocumentTypeID;
			}
			set
			{
				if ((this._DocumentTypeID != value))
				{
					if (this._DocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeID = value;
					this.SendPropertyChanged("DocumentTypeID");
					this.OnDocumentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentSeries", DbType="VarChar(20)")]
		public string DocumentSeries
		{
			get
			{
				return this._DocumentSeries;
			}
			set
			{
				if ((this._DocumentSeries != value))
				{
					this.OnDocumentSeriesChanging(value);
					this.SendPropertyChanging();
					this._DocumentSeries = value;
					this.SendPropertyChanged("DocumentSeries");
					this.OnDocumentSeriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="VarChar(100)")]
		public string DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this.OnDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._DocumentNumber = value;
					this.SendPropertyChanged("DocumentNumber");
					this.OnDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DocumentDate
		{
			get
			{
				return this._DocumentDate;
			}
			set
			{
				if ((this._DocumentDate != value))
				{
					this.OnDocumentDateChanging(value);
					this.SendPropertyChanging();
					this._DocumentDate = value;
					this.SendPropertyChanged("DocumentDate");
					this.OnDocumentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentOrganization", DbType="VarChar(500)")]
		public string DocumentOrganization
		{
			get
			{
				return this._DocumentOrganization;
			}
			set
			{
				if ((this._DocumentOrganization != value))
				{
					this.OnDocumentOrganizationChanging(value);
					this.SendPropertyChanging();
					this._DocumentOrganization = value;
					this.SendPropertyChanged("DocumentOrganization");
					this.OnDocumentOrganizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentSpecificData", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DocumentSpecificData
		{
			get
			{
				return this._DocumentSpecificData;
			}
			set
			{
				if ((this._DocumentSpecificData != value))
				{
					this.OnDocumentSpecificDataChanging(value);
					this.SendPropertyChanging();
					this._DocumentSpecificData = value;
					this.SendPropertyChanged("DocumentSpecificData");
					this.OnDocumentSpecificDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentID", DbType="Int")]
		public System.Nullable<int> AttachmentID
		{
			get
			{
				return this._AttachmentID;
			}
			set
			{
				if ((this._AttachmentID != value))
				{
					if (this._Attachment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttachmentIDChanging(value);
					this.SendPropertyChanging();
					this._AttachmentID = value;
					this.SendPropertyChanged("AttachmentID");
					this.OnAttachmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantDocumentGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> EntrantDocumentGUID
		{
			get
			{
				return this._EntrantDocumentGUID;
			}
			set
			{
				if ((this._EntrantDocumentGUID != value))
				{
					this.OnEntrantDocumentGUIDChanging(value);
					this.SendPropertyChanging();
					this._EntrantDocumentGUID = value;
					this.SendPropertyChanged("EntrantDocumentGUID");
					this.OnEntrantDocumentGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympApproved", DbType="Bit")]
		public System.Nullable<bool> OlympApproved
		{
			get
			{
				return this._OlympApproved;
			}
			set
			{
				if ((this._OlympApproved != value))
				{
					this.OnOlympApprovedChanging(value);
					this.SendPropertyChanging();
					this._OlympApproved = value;
					this.SendPropertyChanged("OlympApproved");
					this.OnOlympApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympMatched", DbType="Bit")]
		public System.Nullable<bool> OlympMatched
		{
			get
			{
				return this._OlympMatched;
			}
			set
			{
				if ((this._OlympMatched != value))
				{
					this.OnOlympMatchedChanging(value);
					this.SendPropertyChanging();
					this._OlympMatched = value;
					this.SendPropertyChanged("OlympMatched");
					this.OnOlympMatchedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntrantDocument_ApplicationEntranceTestDocument", Storage="_ApplicationEntranceTestDocuments", ThisKey="EntrantDocumentID", OtherKey="EntrantDocumentID")]
		public EntitySet<ApplicationEntranceTestDocument> ApplicationEntranceTestDocuments
		{
			get
			{
				return this._ApplicationEntranceTestDocuments;
			}
			set
			{
				this._ApplicationEntranceTestDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntrantDocument_ApplicationEntrantDocument", Storage="_ApplicationEntrantDocuments", ThisKey="EntrantDocumentID", OtherKey="EntrantDocumentID")]
		public EntitySet<ApplicationEntrantDocument> ApplicationEntrantDocuments
		{
			get
			{
				return this._ApplicationEntrantDocuments;
			}
			set
			{
				this._ApplicationEntrantDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntrantDocument_Entrant", Storage="_Entrants", ThisKey="EntrantDocumentID", OtherKey="IdentityDocumentID")]
		public EntitySet<Entrant> Entrants
		{
			get
			{
				return this._Entrants;
			}
			set
			{
				this._Entrants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntrantDocument_IndividualAchivement", Storage="_IndividualAchivements", ThisKey="EntrantDocumentID", OtherKey="EntrantDocumentID")]
		public EntitySet<IndividualAchivement> IndividualAchivements
		{
			get
			{
				return this._IndividualAchivements;
			}
			set
			{
				this._IndividualAchivements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attachment_EntrantDocument", Storage="_Attachment", ThisKey="AttachmentID", OtherKey="AttachmentID", IsForeignKey=true)]
		public Attachment Attachment
		{
			get
			{
				return this._Attachment.Entity;
			}
			set
			{
				Attachment previousValue = this._Attachment.Entity;
				if (((previousValue != value) 
							|| (this._Attachment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Attachment.Entity = null;
						previousValue.EntrantDocuments.Remove(this);
					}
					this._Attachment.Entity = value;
					if ((value != null))
					{
						value.EntrantDocuments.Add(this);
						this._AttachmentID = value.AttachmentID;
					}
					else
					{
						this._AttachmentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Attachment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DocumentType_EntrantDocument", Storage="_DocumentType", ThisKey="DocumentTypeID", OtherKey="DocumentID", IsForeignKey=true)]
		public DocumentType DocumentType
		{
			get
			{
				return this._DocumentType.Entity;
			}
			set
			{
				DocumentType previousValue = this._DocumentType.Entity;
				if (((previousValue != value) 
							|| (this._DocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DocumentType.Entity = null;
						previousValue.EntrantDocuments.Remove(this);
					}
					this._DocumentType.Entity = value;
					if ((value != null))
					{
						value.EntrantDocuments.Add(this);
						this._DocumentTypeID = value.DocumentID;
					}
					else
					{
						this._DocumentTypeID = default(int);
					}
					this.SendPropertyChanged("DocumentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entrant_EntrantDocument", Storage="_Entrant", ThisKey="EntrantID", OtherKey="EntrantID", IsForeignKey=true)]
		public Entrant Entrant
		{
			get
			{
				return this._Entrant.Entity;
			}
			set
			{
				Entrant previousValue = this._Entrant.Entity;
				if (((previousValue != value) 
							|| (this._Entrant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entrant.Entity = null;
						previousValue.EntrantDocuments.Remove(this);
					}
					this._Entrant.Entity = value;
					if ((value != null))
					{
						value.EntrantDocuments.Add(this);
						this._EntrantID = value.EntrantID;
					}
					else
					{
						this._EntrantID = default(int);
					}
					this.SendPropertyChanged("Entrant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApplicationEntranceTestDocuments(ApplicationEntranceTestDocument entity)
		{
			this.SendPropertyChanging();
			entity.EntrantDocument = this;
		}
		
		private void detach_ApplicationEntranceTestDocuments(ApplicationEntranceTestDocument entity)
		{
			this.SendPropertyChanging();
			entity.EntrantDocument = null;
		}
		
		private void attach_ApplicationEntrantDocuments(ApplicationEntrantDocument entity)
		{
			this.SendPropertyChanging();
			entity.EntrantDocument = this;
		}
		
		private void detach_ApplicationEntrantDocuments(ApplicationEntrantDocument entity)
		{
			this.SendPropertyChanging();
			entity.EntrantDocument = null;
		}
		
		private void attach_Entrants(Entrant entity)
		{
			this.SendPropertyChanging();
			entity.EntrantDocument = this;
		}
		
		private void detach_Entrants(Entrant entity)
		{
			this.SendPropertyChanging();
			entity.EntrantDocument = null;
		}
		
		private void attach_IndividualAchivements(IndividualAchivement entity)
		{
			this.SendPropertyChanging();
			entity.EntrantDocument = this;
		}
		
		private void detach_IndividualAchivements(IndividualAchivement entity)
		{
			this.SendPropertyChanging();
			entity.EntrantDocument = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntrantDocumentCustom")]
	public partial class EntrantDocumentCustom
	{
		
		private int _EntrantDocumentID;
		
		private string _DocumentTypeNameText;
		
		private string _AdditionalInfo;
		
		public EntrantDocumentCustom()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantDocumentID", DbType="Int NOT NULL")]
		public int EntrantDocumentID
		{
			get
			{
				return this._EntrantDocumentID;
			}
			set
			{
				if ((this._EntrantDocumentID != value))
				{
					this._EntrantDocumentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeNameText", DbType="VarChar(500)")]
		public string DocumentTypeNameText
		{
			get
			{
				return this._DocumentTypeNameText;
			}
			set
			{
				if ((this._DocumentTypeNameText != value))
				{
					this._DocumentTypeNameText = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalInfo", DbType="VarChar(MAX)")]
		public string AdditionalInfo
		{
			get
			{
				return this._AdditionalInfo;
			}
			set
			{
				if ((this._AdditionalInfo != value))
				{
					this._AdditionalInfo = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntrantDocumentDisability")]
	public partial class EntrantDocumentDisability
	{
		
		private int _EntrantDocumentID;
		
		private System.Nullable<int> _DisabilityTypeID;
		
		public EntrantDocumentDisability()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantDocumentID", DbType="Int NOT NULL")]
		public int EntrantDocumentID
		{
			get
			{
				return this._EntrantDocumentID;
			}
			set
			{
				if ((this._EntrantDocumentID != value))
				{
					this._EntrantDocumentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisabilityTypeID", DbType="Int")]
		public System.Nullable<int> DisabilityTypeID
		{
			get
			{
				return this._DisabilityTypeID;
			}
			set
			{
				if ((this._DisabilityTypeID != value))
				{
					this._DisabilityTypeID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntrantDocumentEdu")]
	public partial class EntrantDocumentEdu
	{
		
		private int _EntrantDocumentID;
		
		private string _RegistrationNumber;
		
		private string _InstitutionName;
		
		private string _SpecialityName;
		
		private string _QualificationName;
		
		private System.Nullable<float> _GPA;
		
		public EntrantDocumentEdu()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantDocumentID", DbType="Int NOT NULL")]
		public int EntrantDocumentID
		{
			get
			{
				return this._EntrantDocumentID;
			}
			set
			{
				if ((this._EntrantDocumentID != value))
				{
					this._EntrantDocumentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationNumber", DbType="VarChar(20)")]
		public string RegistrationNumber
		{
			get
			{
				return this._RegistrationNumber;
			}
			set
			{
				if ((this._RegistrationNumber != value))
				{
					this._RegistrationNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionName", DbType="VarChar(1000)")]
		public string InstitutionName
		{
			get
			{
				return this._InstitutionName;
			}
			set
			{
				if ((this._InstitutionName != value))
				{
					this._InstitutionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpecialityName", DbType="VarChar(255)")]
		public string SpecialityName
		{
			get
			{
				return this._SpecialityName;
			}
			set
			{
				if ((this._SpecialityName != value))
				{
					this._SpecialityName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationName", DbType="VarChar(255)")]
		public string QualificationName
		{
			get
			{
				return this._QualificationName;
			}
			set
			{
				if ((this._QualificationName != value))
				{
					this._QualificationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPA", DbType="Real")]
		public System.Nullable<float> GPA
		{
			get
			{
				return this._GPA;
			}
			set
			{
				if ((this._GPA != value))
				{
					this._GPA = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntrantDocumentEge")]
	public partial class EntrantDocumentEge
	{
		
		private int _EntrantDocumentID;
		
		private string _DecisionNumber;
		
		private string _Decision;
		
		private System.Nullable<System.DateTime> _DecisionDate;
		
		private string _TypographicNumber;
		
		public EntrantDocumentEge()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantDocumentID", DbType="Int NOT NULL")]
		public int EntrantDocumentID
		{
			get
			{
				return this._EntrantDocumentID;
			}
			set
			{
				if ((this._EntrantDocumentID != value))
				{
					this._EntrantDocumentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecisionNumber", DbType="VarChar(20)")]
		public string DecisionNumber
		{
			get
			{
				return this._DecisionNumber;
			}
			set
			{
				if ((this._DecisionNumber != value))
				{
					this._DecisionNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Decision", DbType="VarChar(255)")]
		public string Decision
		{
			get
			{
				return this._Decision;
			}
			set
			{
				if ((this._Decision != value))
				{
					this._Decision = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecisionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DecisionDate
		{
			get
			{
				return this._DecisionDate;
			}
			set
			{
				if ((this._DecisionDate != value))
				{
					this._DecisionDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypographicNumber", DbType="VarChar(20)")]
		public string TypographicNumber
		{
			get
			{
				return this._TypographicNumber;
			}
			set
			{
				if ((this._TypographicNumber != value))
				{
					this._TypographicNumber = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntrantDocumentEgeAndOlympicSubject")]
	public partial class EntrantDocumentEgeAndOlympicSubject
	{
		
		private int _EntrantDocumentID;
		
		private System.Nullable<int> _SubjectID;
		
		private System.Nullable<decimal> _Value;
		
		private System.Nullable<int> _AppealStatusID;
		
		public EntrantDocumentEgeAndOlympicSubject()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantDocumentID", DbType="Int NOT NULL")]
		public int EntrantDocumentID
		{
			get
			{
				return this._EntrantDocumentID;
			}
			set
			{
				if ((this._EntrantDocumentID != value))
				{
					this._EntrantDocumentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int")]
		public System.Nullable<int> SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppealStatusID", DbType="Int")]
		public System.Nullable<int> AppealStatusID
		{
			get
			{
				return this._AppealStatusID;
			}
			set
			{
				if ((this._AppealStatusID != value))
				{
					this._AppealStatusID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntrantDocumentIdentity")]
	public partial class EntrantDocumentIdentity
	{
		
		private int _EntrantDocumentID;
		
		private System.Nullable<int> _IdentityDocumentTypeID;
		
		private System.Nullable<int> _GenderTypeID;
		
		private System.Nullable<int> _NationalityTypeID;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _BirthPlace;
		
		private string _SubdivisionCode;
		
		public EntrantDocumentIdentity()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantDocumentID", DbType="Int NOT NULL")]
		public int EntrantDocumentID
		{
			get
			{
				return this._EntrantDocumentID;
			}
			set
			{
				if ((this._EntrantDocumentID != value))
				{
					this._EntrantDocumentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityDocumentTypeID", DbType="Int")]
		public System.Nullable<int> IdentityDocumentTypeID
		{
			get
			{
				return this._IdentityDocumentTypeID;
			}
			set
			{
				if ((this._IdentityDocumentTypeID != value))
				{
					this._IdentityDocumentTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderTypeID", DbType="Int")]
		public System.Nullable<int> GenderTypeID
		{
			get
			{
				return this._GenderTypeID;
			}
			set
			{
				if ((this._GenderTypeID != value))
				{
					this._GenderTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalityTypeID", DbType="Int")]
		public System.Nullable<int> NationalityTypeID
		{
			get
			{
				return this._NationalityTypeID;
			}
			set
			{
				if ((this._NationalityTypeID != value))
				{
					this._NationalityTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthPlace", DbType="VarChar(255)")]
		public string BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					this._BirthPlace = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubdivisionCode", DbType="VarChar(7)")]
		public string SubdivisionCode
		{
			get
			{
				return this._SubdivisionCode;
			}
			set
			{
				if ((this._SubdivisionCode != value))
				{
					this._SubdivisionCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntrantDocumentIdentity_tmp")]
	public partial class EntrantDocumentIdentity_tmp
	{
		
		private int _EntrantDocumentID;
		
		private System.Nullable<int> _IdentityDocumentTypeID;
		
		private System.Nullable<int> _GenderTypeID;
		
		private System.Nullable<int> _NationalityTypeID;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _BirthPlace;
		
		private string _SubdivisionCode;
		
		public EntrantDocumentIdentity_tmp()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantDocumentID", DbType="Int NOT NULL")]
		public int EntrantDocumentID
		{
			get
			{
				return this._EntrantDocumentID;
			}
			set
			{
				if ((this._EntrantDocumentID != value))
				{
					this._EntrantDocumentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityDocumentTypeID", DbType="Int")]
		public System.Nullable<int> IdentityDocumentTypeID
		{
			get
			{
				return this._IdentityDocumentTypeID;
			}
			set
			{
				if ((this._IdentityDocumentTypeID != value))
				{
					this._IdentityDocumentTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderTypeID", DbType="Int")]
		public System.Nullable<int> GenderTypeID
		{
			get
			{
				return this._GenderTypeID;
			}
			set
			{
				if ((this._GenderTypeID != value))
				{
					this._GenderTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalityTypeID", DbType="Int")]
		public System.Nullable<int> NationalityTypeID
		{
			get
			{
				return this._NationalityTypeID;
			}
			set
			{
				if ((this._NationalityTypeID != value))
				{
					this._NationalityTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this._BirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthPlace", DbType="VarChar(255)")]
		public string BirthPlace
		{
			get
			{
				return this._BirthPlace;
			}
			set
			{
				if ((this._BirthPlace != value))
				{
					this._BirthPlace = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubdivisionCode", DbType="VarChar(7)")]
		public string SubdivisionCode
		{
			get
			{
				return this._SubdivisionCode;
			}
			set
			{
				if ((this._SubdivisionCode != value))
				{
					this._SubdivisionCode = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntrantDocumentMarks")]
	public partial class EntrantDocumentMark : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EntrantDocumentID;
		
		private int _SubjectID;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEntrantDocumentIDChanging(int value);
    partial void OnEntrantDocumentIDChanged();
    partial void OnSubjectIDChanging(int value);
    partial void OnSubjectIDChanged();
    #endregion
		
		public EntrantDocumentMark()
		{
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantDocumentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EntrantDocumentID
		{
			get
			{
				return this._EntrantDocumentID;
			}
			set
			{
				if ((this._EntrantDocumentID != value))
				{
					this.OnEntrantDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._EntrantDocumentID = value;
					this.SendPropertyChanged("EntrantDocumentID");
					this.OnEntrantDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_EntrantDocumentMark", Storage="_Subject", ThisKey="SubjectID", OtherKey="SubjectID", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.EntrantDocumentMarks.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.EntrantDocumentMarks.Add(this);
						this._SubjectID = value.SubjectID;
					}
					else
					{
						this._SubjectID = default(int);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntrantDocumentOlympic")]
	public partial class EntrantDocumentOlympic
	{
		
		private int _EntrantDocumentID;
		
		private System.Nullable<int> _DiplomaTypeID;
		
		private System.Nullable<int> _OlympicID;
		
		private System.Nullable<int> _ClassNumber;
		
		private System.Nullable<int> _OlympicProfileID;
		
		public EntrantDocumentOlympic()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantDocumentID", DbType="Int NOT NULL")]
		public int EntrantDocumentID
		{
			get
			{
				return this._EntrantDocumentID;
			}
			set
			{
				if ((this._EntrantDocumentID != value))
				{
					this._EntrantDocumentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiplomaTypeID", DbType="Int")]
		public System.Nullable<int> DiplomaTypeID
		{
			get
			{
				return this._DiplomaTypeID;
			}
			set
			{
				if ((this._DiplomaTypeID != value))
				{
					this._DiplomaTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicID", DbType="Int")]
		public System.Nullable<int> OlympicID
		{
			get
			{
				return this._OlympicID;
			}
			set
			{
				if ((this._OlympicID != value))
				{
					this._OlympicID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassNumber", DbType="Int")]
		public System.Nullable<int> ClassNumber
		{
			get
			{
				return this._ClassNumber;
			}
			set
			{
				if ((this._ClassNumber != value))
				{
					this._ClassNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicProfileID", DbType="Int")]
		public System.Nullable<int> OlympicProfileID
		{
			get
			{
				return this._OlympicProfileID;
			}
			set
			{
				if ((this._OlympicProfileID != value))
				{
					this._OlympicProfileID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EntrantLanguage")]
	public partial class EntrantLanguage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _EntrantID;
		
		private int _LanguageID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<Entrant> _Entrant;
		
		private EntityRef<ForeignLanguageType> _ForeignLanguageType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEntrantIDChanging(int value);
    partial void OnEntrantIDChanged();
    partial void OnLanguageIDChanging(int value);
    partial void OnLanguageIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public EntrantLanguage()
		{
			this._Entrant = default(EntityRef<Entrant>);
			this._ForeignLanguageType = default(EntityRef<ForeignLanguageType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantID", DbType="Int NOT NULL")]
		public int EntrantID
		{
			get
			{
				return this._EntrantID;
			}
			set
			{
				if ((this._EntrantID != value))
				{
					if (this._Entrant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntrantIDChanging(value);
					this.SendPropertyChanging();
					this._EntrantID = value;
					this.SendPropertyChanged("EntrantID");
					this.OnEntrantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", DbType="Int NOT NULL")]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._ForeignLanguageType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entrant_EntrantLanguage", Storage="_Entrant", ThisKey="EntrantID", OtherKey="EntrantID", IsForeignKey=true)]
		public Entrant Entrant
		{
			get
			{
				return this._Entrant.Entity;
			}
			set
			{
				Entrant previousValue = this._Entrant.Entity;
				if (((previousValue != value) 
							|| (this._Entrant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entrant.Entity = null;
						previousValue.EntrantLanguages.Remove(this);
					}
					this._Entrant.Entity = value;
					if ((value != null))
					{
						value.EntrantLanguages.Add(this);
						this._EntrantID = value.EntrantID;
					}
					else
					{
						this._EntrantID = default(int);
					}
					this.SendPropertyChanged("Entrant");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForeignLanguageType_EntrantLanguage", Storage="_ForeignLanguageType", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public ForeignLanguageType ForeignLanguageType
		{
			get
			{
				return this._ForeignLanguageType.Entity;
			}
			set
			{
				ForeignLanguageType previousValue = this._ForeignLanguageType.Entity;
				if (((previousValue != value) 
							|| (this._ForeignLanguageType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ForeignLanguageType.Entity = null;
						previousValue.EntrantLanguages.Remove(this);
					}
					this._ForeignLanguageType.Entity = value;
					if ((value != null))
					{
						value.EntrantLanguages.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(int);
					}
					this.SendPropertyChanged("ForeignLanguageType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FbsToFisMap")]
	public partial class FbsToFisMap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _IdSubjectFis;
		
		private int _IdSubjectFbs;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnIdSubjectFisChanging(int value);
    partial void OnIdSubjectFisChanged();
    partial void OnIdSubjectFbsChanging(int value);
    partial void OnIdSubjectFbsChanged();
    #endregion
		
		public FbsToFisMap()
		{
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSubjectFis", DbType="Int NOT NULL")]
		public int IdSubjectFis
		{
			get
			{
				return this._IdSubjectFis;
			}
			set
			{
				if ((this._IdSubjectFis != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSubjectFisChanging(value);
					this.SendPropertyChanging();
					this._IdSubjectFis = value;
					this.SendPropertyChanged("IdSubjectFis");
					this.OnIdSubjectFisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSubjectFbs", DbType="Int NOT NULL")]
		public int IdSubjectFbs
		{
			get
			{
				return this._IdSubjectFbs;
			}
			set
			{
				if ((this._IdSubjectFbs != value))
				{
					this.OnIdSubjectFbsChanging(value);
					this.SendPropertyChanging();
					this._IdSubjectFbs = value;
					this.SendPropertyChanged("IdSubjectFbs");
					this.OnIdSubjectFbsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_FbsToFisMap", Storage="_Subject", ThisKey="IdSubjectFis", OtherKey="SubjectID", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.FbsToFisMaps.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.FbsToFisMaps.Add(this);
						this._IdSubjectFis = value.SubjectID;
					}
					else
					{
						this._IdSubjectFis = default(int);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.findPathTable")]
	public partial class findPathTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Nomer;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _NAF;
		
		private string _Series;
		
		private string _Number;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomerChanging(int value);
    partial void OnNomerChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnNAFChanging(string value);
    partial void OnNAFChanged();
    partial void OnSeriesChanging(string value);
    partial void OnSeriesChanged();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    #endregion
		
		public findPathTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nomer", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Nomer
		{
			get
			{
				return this._Nomer;
			}
			set
			{
				if ((this._Nomer != value))
				{
					this.OnNomerChanging(value);
					this.SendPropertyChanging();
					this._Nomer = value;
					this.SendPropertyChanged("Nomer");
					this.OnNomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAF", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NAF
		{
			get
			{
				return this._NAF;
			}
			set
			{
				if ((this._NAF != value))
				{
					this.OnNAFChanging(value);
					this.SendPropertyChanging();
					this._NAF = value;
					this.SendPropertyChanged("NAF");
					this.OnNAFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Series", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Series
		{
			get
			{
				return this._Series;
			}
			set
			{
				if ((this._Series != value))
				{
					this.OnSeriesChanging(value);
					this.SendPropertyChanging();
					this._Series = value;
					this.SendPropertyChanged("Series");
					this.OnSeriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.findPathTable_short")]
	public partial class findPathTable_short
	{
		
		private int _Nomer;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _NAF;
		
		public findPathTable_short()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nomer", DbType="Int NOT NULL")]
		public int Nomer
		{
			get
			{
				return this._Nomer;
			}
			set
			{
				if ((this._Nomer != value))
				{
					this._Nomer = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAF", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NAF
		{
			get
			{
				return this._NAF;
			}
			set
			{
				if ((this._NAF != value))
				{
					this._NAF = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.findPathTableEGE")]
	public partial class findPathTableEGE
	{
		
		private System.Nullable<System.Guid> _ParticipantID;
		
		private string _Surname;
		
		private string _Name;
		
		private string _SecondName;
		
		private string _DocumentSeries;
		
		private string _DocumentNumber;
		
		public findPathTableEGE()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParticipantID
		{
			get
			{
				return this._ParticipantID;
			}
			set
			{
				if ((this._ParticipantID != value))
				{
					this._ParticipantID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(80)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this._Surname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(80)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondName", DbType="VarChar(80)")]
		public string SecondName
		{
			get
			{
				return this._SecondName;
			}
			set
			{
				if ((this._SecondName != value))
				{
					this._SecondName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentSeries", DbType="VarChar(9)")]
		public string DocumentSeries
		{
			get
			{
				return this._DocumentSeries;
			}
			set
			{
				if ((this._DocumentSeries != value))
				{
					this._DocumentSeries = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="VarChar(10)")]
		public string DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this._DocumentNumber = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ForeignLanguageType")]
	public partial class ForeignLanguageType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LanguageID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<EntrantLanguage> _EntrantLanguages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(int value);
    partial void OnLanguageIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ForeignLanguageType()
		{
			this._EntrantLanguages = new EntitySet<EntrantLanguage>(new Action<EntrantLanguage>(this.attach_EntrantLanguages), new Action<EntrantLanguage>(this.detach_EntrantLanguages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LanguageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ForeignLanguageType_EntrantLanguage", Storage="_EntrantLanguages", ThisKey="LanguageID", OtherKey="LanguageID")]
		public EntitySet<EntrantLanguage> EntrantLanguages
		{
			get
			{
				return this._EntrantLanguages;
			}
			set
			{
				this._EntrantLanguages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EntrantLanguages(EntrantLanguage entity)
		{
			this.SendPropertyChanging();
			entity.ForeignLanguageType = this;
		}
		
		private void detach_EntrantLanguages(EntrantLanguage entity)
		{
			this.SendPropertyChanging();
			entity.ForeignLanguageType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FormOfLaw")]
	public partial class FormOfLaw : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FormOfLawID;
		
		private string _Name;
		
		private int _DisplayOrder;
		
		private System.Nullable<int> _Code;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<Institution> _Institutions;
		
		private EntitySet<InstitutionHistory> _InstitutionHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFormOfLawIDChanging(int value);
    partial void OnFormOfLawIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnCodeChanging(System.Nullable<int> value);
    partial void OnCodeChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public FormOfLaw()
		{
			this._Institutions = new EntitySet<Institution>(new Action<Institution>(this.attach_Institutions), new Action<Institution>(this.detach_Institutions));
			this._InstitutionHistories = new EntitySet<InstitutionHistory>(new Action<InstitutionHistory>(this.attach_InstitutionHistories), new Action<InstitutionHistory>(this.detach_InstitutionHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormOfLawID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FormOfLawID
		{
			get
			{
				return this._FormOfLawID;
			}
			set
			{
				if ((this._FormOfLawID != value))
				{
					this.OnFormOfLawIDChanging(value);
					this.SendPropertyChanging();
					this._FormOfLawID = value;
					this.SendPropertyChanged("FormOfLawID");
					this.OnFormOfLawIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int")]
		public System.Nullable<int> Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FormOfLaw_Institution", Storage="_Institutions", ThisKey="FormOfLawID", OtherKey="FormOfLawID")]
		public EntitySet<Institution> Institutions
		{
			get
			{
				return this._Institutions;
			}
			set
			{
				this._Institutions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FormOfLaw_InstitutionHistory", Storage="_InstitutionHistories", ThisKey="FormOfLawID", OtherKey="FormOfLawID")]
		public EntitySet<InstitutionHistory> InstitutionHistories
		{
			get
			{
				return this._InstitutionHistories;
			}
			set
			{
				this._InstitutionHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Institutions(Institution entity)
		{
			this.SendPropertyChanging();
			entity.FormOfLaw = this;
		}
		
		private void detach_Institutions(Institution entity)
		{
			this.SendPropertyChanging();
			entity.FormOfLaw = null;
		}
		
		private void attach_InstitutionHistories(InstitutionHistory entity)
		{
			this.SendPropertyChanging();
			entity.FormOfLaw = this;
		}
		
		private void detach_InstitutionHistories(InstitutionHistory entity)
		{
			this.SendPropertyChanging();
			entity.FormOfLaw = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GenderType")]
	public partial class GenderType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GenderID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<Entrant> _Entrants;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGenderIDChanging(int value);
    partial void OnGenderIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public GenderType()
		{
			this._Entrants = new EntitySet<Entrant>(new Action<Entrant>(this.attach_Entrants), new Action<Entrant>(this.detach_Entrants));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GenderID
		{
			get
			{
				return this._GenderID;
			}
			set
			{
				if ((this._GenderID != value))
				{
					this.OnGenderIDChanging(value);
					this.SendPropertyChanging();
					this._GenderID = value;
					this.SendPropertyChanged("GenderID");
					this.OnGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GenderType_Entrant", Storage="_Entrants", ThisKey="GenderID", OtherKey="GenderID")]
		public EntitySet<Entrant> Entrants
		{
			get
			{
				return this._Entrants;
			}
			set
			{
				this._Entrants.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Entrants(Entrant entity)
		{
			this.SendPropertyChanging();
			entity.GenderType = this;
		}
		
		private void detach_Entrants(Entrant entity)
		{
			this.SendPropertyChanging();
			entity.GenderType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GlobalMinEge")]
	public partial class GlobalMinEge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _EgeYear;
		
		private int _MinEgeScore;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEgeYearChanging(int value);
    partial void OnEgeYearChanged();
    partial void OnMinEgeScoreChanging(int value);
    partial void OnMinEgeScoreChanged();
    #endregion
		
		public GlobalMinEge()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeYear", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int EgeYear
		{
			get
			{
				return this._EgeYear;
			}
			set
			{
				if ((this._EgeYear != value))
				{
					this.OnEgeYearChanging(value);
					this.SendPropertyChanging();
					this._EgeYear = value;
					this.SendPropertyChanged("EgeYear");
					this.OnEgeYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinEgeScore", DbType="Int NOT NULL")]
		public int MinEgeScore
		{
			get
			{
				return this._MinEgeScore;
			}
			set
			{
				if ((this._MinEgeScore != value))
				{
					this.OnMinEgeScoreChanging(value);
					this.SendPropertyChanging();
					this._MinEgeScore = value;
					this.SendPropertyChanged("MinEgeScore");
					this.OnMinEgeScoreChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IdentityDocumentType")]
	public partial class IdentityDocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdentityDocumentTypeID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private bool _IsRussianNationality;
		
		private EntitySet<OlympicDiplomantDocument> _OlympicDiplomantDocuments;
		
		private EntitySet<Translation_RVIDT_IdentityDT> _Translation_RVIDT_IdentityDTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdentityDocumentTypeIDChanging(int value);
    partial void OnIdentityDocumentTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnIsRussianNationalityChanging(bool value);
    partial void OnIsRussianNationalityChanged();
    #endregion
		
		public IdentityDocumentType()
		{
			this._OlympicDiplomantDocuments = new EntitySet<OlympicDiplomantDocument>(new Action<OlympicDiplomantDocument>(this.attach_OlympicDiplomantDocuments), new Action<OlympicDiplomantDocument>(this.detach_OlympicDiplomantDocuments));
			this._Translation_RVIDT_IdentityDTs = new EntitySet<Translation_RVIDT_IdentityDT>(new Action<Translation_RVIDT_IdentityDT>(this.attach_Translation_RVIDT_IdentityDTs), new Action<Translation_RVIDT_IdentityDT>(this.detach_Translation_RVIDT_IdentityDTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityDocumentTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdentityDocumentTypeID
		{
			get
			{
				return this._IdentityDocumentTypeID;
			}
			set
			{
				if ((this._IdentityDocumentTypeID != value))
				{
					this.OnIdentityDocumentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._IdentityDocumentTypeID = value;
					this.SendPropertyChanged("IdentityDocumentTypeID");
					this.OnIdentityDocumentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRussianNationality", DbType="Bit NOT NULL")]
		public bool IsRussianNationality
		{
			get
			{
				return this._IsRussianNationality;
			}
			set
			{
				if ((this._IsRussianNationality != value))
				{
					this.OnIsRussianNationalityChanging(value);
					this.SendPropertyChanging();
					this._IsRussianNationality = value;
					this.SendPropertyChanged("IsRussianNationality");
					this.OnIsRussianNationalityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IdentityDocumentType_OlympicDiplomantDocument", Storage="_OlympicDiplomantDocuments", ThisKey="IdentityDocumentTypeID", OtherKey="IdentityDocumentTypeID")]
		public EntitySet<OlympicDiplomantDocument> OlympicDiplomantDocuments
		{
			get
			{
				return this._OlympicDiplomantDocuments;
			}
			set
			{
				this._OlympicDiplomantDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IdentityDocumentType_Translation_RVIDT_IdentityDT", Storage="_Translation_RVIDT_IdentityDTs", ThisKey="IdentityDocumentTypeID", OtherKey="IdentityDocumentTypeID")]
		public EntitySet<Translation_RVIDT_IdentityDT> Translation_RVIDT_IdentityDTs
		{
			get
			{
				return this._Translation_RVIDT_IdentityDTs;
			}
			set
			{
				this._Translation_RVIDT_IdentityDTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OlympicDiplomantDocuments(OlympicDiplomantDocument entity)
		{
			this.SendPropertyChanging();
			entity.IdentityDocumentType = this;
		}
		
		private void detach_OlympicDiplomantDocuments(OlympicDiplomantDocument entity)
		{
			this.SendPropertyChanging();
			entity.IdentityDocumentType = null;
		}
		
		private void attach_Translation_RVIDT_IdentityDTs(Translation_RVIDT_IdentityDT entity)
		{
			this.SendPropertyChanging();
			entity.IdentityDocumentType = this;
		}
		
		private void detach_Translation_RVIDT_IdentityDTs(Translation_RVIDT_IdentityDT entity)
		{
			this.SendPropertyChanging();
			entity.IdentityDocumentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImportPackage")]
	public partial class ImportPackage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PackageID;
		
		private int _InstitutionID;
		
		private int _TypeID;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastDateChanged;
		
		private int _StatusID;
		
		private string _Comment;
		
		private System.Xml.Linq.XElement _PackageData;
		
		private System.Xml.Linq.XElement _ProcessResultInfo;
		
		private System.Nullable<int> _CheckStatusID;
		
		private System.Xml.Linq.XElement _CheckResultInfo;
		
		private System.Xml.Linq.XElement _ImportedAppIDs;
		
		private string _UserLogin;
		
		private string _Content;
		
		private EntityRef<ImportPackageStatus> _ImportPackageStatus;
		
		private EntityRef<ImportPackageType> _ImportPackageType;
		
		private EntityRef<Institution> _Institution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPackageIDChanging(int value);
    partial void OnPackageIDChanged();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastDateChangedChanging(System.DateTime value);
    partial void OnLastDateChangedChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnPackageDataChanging(System.Xml.Linq.XElement value);
    partial void OnPackageDataChanged();
    partial void OnProcessResultInfoChanging(System.Xml.Linq.XElement value);
    partial void OnProcessResultInfoChanged();
    partial void OnCheckStatusIDChanging(System.Nullable<int> value);
    partial void OnCheckStatusIDChanged();
    partial void OnCheckResultInfoChanging(System.Xml.Linq.XElement value);
    partial void OnCheckResultInfoChanged();
    partial void OnImportedAppIDsChanging(System.Xml.Linq.XElement value);
    partial void OnImportedAppIDsChanged();
    partial void OnUserLoginChanging(string value);
    partial void OnUserLoginChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    #endregion
		
		public ImportPackage()
		{
			this._ImportPackageStatus = default(EntityRef<ImportPackageStatus>);
			this._ImportPackageType = default(EntityRef<ImportPackageType>);
			this._Institution = default(EntityRef<Institution>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					if (this._Institution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._ImportPackageType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDateChanged", DbType="DateTime NOT NULL")]
		public System.DateTime LastDateChanged
		{
			get
			{
				return this._LastDateChanged;
			}
			set
			{
				if ((this._LastDateChanged != value))
				{
					this.OnLastDateChangedChanging(value);
					this.SendPropertyChanging();
					this._LastDateChanged = value;
					this.SendPropertyChanged("LastDateChanged");
					this.OnLastDateChangedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._ImportPackageStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageData", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement PackageData
		{
			get
			{
				return this._PackageData;
			}
			set
			{
				if ((this._PackageData != value))
				{
					this.OnPackageDataChanging(value);
					this.SendPropertyChanging();
					this._PackageData = value;
					this.SendPropertyChanged("PackageData");
					this.OnPackageDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessResultInfo", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement ProcessResultInfo
		{
			get
			{
				return this._ProcessResultInfo;
			}
			set
			{
				if ((this._ProcessResultInfo != value))
				{
					this.OnProcessResultInfoChanging(value);
					this.SendPropertyChanging();
					this._ProcessResultInfo = value;
					this.SendPropertyChanged("ProcessResultInfo");
					this.OnProcessResultInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckStatusID", DbType="Int")]
		public System.Nullable<int> CheckStatusID
		{
			get
			{
				return this._CheckStatusID;
			}
			set
			{
				if ((this._CheckStatusID != value))
				{
					this.OnCheckStatusIDChanging(value);
					this.SendPropertyChanging();
					this._CheckStatusID = value;
					this.SendPropertyChanged("CheckStatusID");
					this.OnCheckStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckResultInfo", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement CheckResultInfo
		{
			get
			{
				return this._CheckResultInfo;
			}
			set
			{
				if ((this._CheckResultInfo != value))
				{
					this.OnCheckResultInfoChanging(value);
					this.SendPropertyChanging();
					this._CheckResultInfo = value;
					this.SendPropertyChanged("CheckResultInfo");
					this.OnCheckResultInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportedAppIDs", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement ImportedAppIDs
		{
			get
			{
				return this._ImportedAppIDs;
			}
			set
			{
				if ((this._ImportedAppIDs != value))
				{
					this.OnImportedAppIDsChanging(value);
					this.SendPropertyChanging();
					this._ImportedAppIDs = value;
					this.SendPropertyChanged("ImportedAppIDs");
					this.OnImportedAppIDsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLogin", DbType="VarChar(250)")]
		public string UserLogin
		{
			get
			{
				return this._UserLogin;
			}
			set
			{
				if ((this._UserLogin != value))
				{
					this.OnUserLoginChanging(value);
					this.SendPropertyChanging();
					this._UserLogin = value;
					this.SendPropertyChanged("UserLogin");
					this.OnUserLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="VarChar(255)")]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ImportPackageStatus_ImportPackage", Storage="_ImportPackageStatus", ThisKey="StatusID", OtherKey="StatusID", IsForeignKey=true)]
		public ImportPackageStatus ImportPackageStatus
		{
			get
			{
				return this._ImportPackageStatus.Entity;
			}
			set
			{
				ImportPackageStatus previousValue = this._ImportPackageStatus.Entity;
				if (((previousValue != value) 
							|| (this._ImportPackageStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ImportPackageStatus.Entity = null;
						previousValue.ImportPackages.Remove(this);
					}
					this._ImportPackageStatus.Entity = value;
					if ((value != null))
					{
						value.ImportPackages.Add(this);
						this._StatusID = value.StatusID;
					}
					else
					{
						this._StatusID = default(int);
					}
					this.SendPropertyChanged("ImportPackageStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ImportPackageType_ImportPackage", Storage="_ImportPackageType", ThisKey="TypeID", OtherKey="TypeID", IsForeignKey=true)]
		public ImportPackageType ImportPackageType
		{
			get
			{
				return this._ImportPackageType.Entity;
			}
			set
			{
				ImportPackageType previousValue = this._ImportPackageType.Entity;
				if (((previousValue != value) 
							|| (this._ImportPackageType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ImportPackageType.Entity = null;
						previousValue.ImportPackages.Remove(this);
					}
					this._ImportPackageType.Entity = value;
					if ((value != null))
					{
						value.ImportPackages.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("ImportPackageType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_ImportPackage", Storage="_Institution", ThisKey="InstitutionID", OtherKey="InstitutionID", IsForeignKey=true)]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.ImportPackages.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.ImportPackages.Add(this);
						this._InstitutionID = value.InstitutionID;
					}
					else
					{
						this._InstitutionID = default(int);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImportPackageParsed")]
	public partial class ImportPackageParsed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _PackageID;
		
		private System.Nullable<int> _InstitutionID;
		
		private System.Nullable<System.DateTime> _PackageCreatedDate;
		
		private System.Nullable<System.DateTime> _PackageModifiedDate;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _ApplicationNumber;
		
		private System.Nullable<System.DateTime> _RegistrationDate;
		
		private System.Nullable<int> _DirectionID;
		
		private System.Nullable<int> _EducationFormID;
		
		private System.Nullable<int> _FinanceSourceID;
		
		private System.Nullable<int> _EducationLevelID;
		
		private System.Nullable<int> _Stage;
		
		private bool _IsBeneficiary;
		
		private bool _IsForeigner;
		
		private System.Nullable<int> _Status;
		
		private string _Comment;
		
		private System.Nullable<int> _ApplicationID;
		
		private int _TrashTypeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPackageIDChanging(System.Nullable<int> value);
    partial void OnPackageIDChanged();
    partial void OnInstitutionIDChanging(System.Nullable<int> value);
    partial void OnInstitutionIDChanged();
    partial void OnPackageCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPackageCreatedDateChanged();
    partial void OnPackageModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPackageModifiedDateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnApplicationNumberChanging(string value);
    partial void OnApplicationNumberChanged();
    partial void OnRegistrationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegistrationDateChanged();
    partial void OnDirectionIDChanging(System.Nullable<int> value);
    partial void OnDirectionIDChanged();
    partial void OnEducationFormIDChanging(System.Nullable<int> value);
    partial void OnEducationFormIDChanged();
    partial void OnFinanceSourceIDChanging(System.Nullable<int> value);
    partial void OnFinanceSourceIDChanged();
    partial void OnEducationLevelIDChanging(System.Nullable<int> value);
    partial void OnEducationLevelIDChanged();
    partial void OnStageChanging(System.Nullable<int> value);
    partial void OnStageChanged();
    partial void OnIsBeneficiaryChanging(bool value);
    partial void OnIsBeneficiaryChanged();
    partial void OnIsForeignerChanging(bool value);
    partial void OnIsForeignerChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnApplicationIDChanging(System.Nullable<int> value);
    partial void OnApplicationIDChanged();
    partial void OnTrashTypeIDChanging(int value);
    partial void OnTrashTypeIDChanged();
    #endregion
		
		public ImportPackageParsed()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int")]
		public System.Nullable<int> PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int")]
		public System.Nullable<int> InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageCreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PackageCreatedDate
		{
			get
			{
				return this._PackageCreatedDate;
			}
			set
			{
				if ((this._PackageCreatedDate != value))
				{
					this.OnPackageCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._PackageCreatedDate = value;
					this.SendPropertyChanged("PackageCreatedDate");
					this.OnPackageCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PackageModifiedDate
		{
			get
			{
				return this._PackageModifiedDate;
			}
			set
			{
				if ((this._PackageModifiedDate != value))
				{
					this.OnPackageModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._PackageModifiedDate = value;
					this.SendPropertyChanged("PackageModifiedDate");
					this.OnPackageModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationNumber", DbType="VarChar(50)")]
		public string ApplicationNumber
		{
			get
			{
				return this._ApplicationNumber;
			}
			set
			{
				if ((this._ApplicationNumber != value))
				{
					this.OnApplicationNumberChanging(value);
					this.SendPropertyChanging();
					this._ApplicationNumber = value;
					this.SendPropertyChanged("ApplicationNumber");
					this.OnApplicationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this.OnRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDate = value;
					this.SendPropertyChanged("RegistrationDate");
					this.OnRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int")]
		public System.Nullable<int> DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationFormID", DbType="Int")]
		public System.Nullable<int> EducationFormID
		{
			get
			{
				return this._EducationFormID;
			}
			set
			{
				if ((this._EducationFormID != value))
				{
					this.OnEducationFormIDChanging(value);
					this.SendPropertyChanging();
					this._EducationFormID = value;
					this.SendPropertyChanged("EducationFormID");
					this.OnEducationFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceSourceID", DbType="Int")]
		public System.Nullable<int> FinanceSourceID
		{
			get
			{
				return this._FinanceSourceID;
			}
			set
			{
				if ((this._FinanceSourceID != value))
				{
					this.OnFinanceSourceIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceSourceID = value;
					this.SendPropertyChanged("FinanceSourceID");
					this.OnFinanceSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelID", DbType="Int")]
		public System.Nullable<int> EducationLevelID
		{
			get
			{
				return this._EducationLevelID;
			}
			set
			{
				if ((this._EducationLevelID != value))
				{
					this.OnEducationLevelIDChanging(value);
					this.SendPropertyChanging();
					this._EducationLevelID = value;
					this.SendPropertyChanged("EducationLevelID");
					this.OnEducationLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stage", DbType="Int")]
		public System.Nullable<int> Stage
		{
			get
			{
				return this._Stage;
			}
			set
			{
				if ((this._Stage != value))
				{
					this.OnStageChanging(value);
					this.SendPropertyChanging();
					this._Stage = value;
					this.SendPropertyChanged("Stage");
					this.OnStageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBeneficiary", DbType="Bit NOT NULL")]
		public bool IsBeneficiary
		{
			get
			{
				return this._IsBeneficiary;
			}
			set
			{
				if ((this._IsBeneficiary != value))
				{
					this.OnIsBeneficiaryChanging(value);
					this.SendPropertyChanging();
					this._IsBeneficiary = value;
					this.SendPropertyChanged("IsBeneficiary");
					this.OnIsBeneficiaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForeigner", DbType="Bit NOT NULL")]
		public bool IsForeigner
		{
			get
			{
				return this._IsForeigner;
			}
			set
			{
				if ((this._IsForeigner != value))
				{
					this.OnIsForeignerChanging(value);
					this.SendPropertyChanging();
					this._IsForeigner = value;
					this.SendPropertyChanged("IsForeigner");
					this.OnIsForeignerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int")]
		public System.Nullable<int> ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrashTypeID", DbType="Int NOT NULL")]
		public int TrashTypeID
		{
			get
			{
				return this._TrashTypeID;
			}
			set
			{
				if ((this._TrashTypeID != value))
				{
					this.OnTrashTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TrashTypeID = value;
					this.SendPropertyChanged("TrashTypeID");
					this.OnTrashTypeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImportPackageParsed_back")]
	public partial class ImportPackageParsed_back : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _PackageID;
		
		private System.Nullable<int> _InstitutionID;
		
		private System.Nullable<System.DateTime> _PackageCreatedDate;
		
		private System.Nullable<System.DateTime> _PackageModifiedDate;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _ApplicationNumber;
		
		private System.Nullable<System.DateTime> _RegistrationDate;
		
		private System.Nullable<int> _DirectionID;
		
		private System.Nullable<int> _EducationFormID;
		
		private System.Nullable<int> _FinanceSourceID;
		
		private System.Nullable<int> _EducationLevelID;
		
		private System.Nullable<int> _Stage;
		
		private bool _IsBeneficiary;
		
		private bool _IsForeigner;
		
		private System.Nullable<int> _Status;
		
		private string _Comment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPackageIDChanging(System.Nullable<int> value);
    partial void OnPackageIDChanged();
    partial void OnInstitutionIDChanging(System.Nullable<int> value);
    partial void OnInstitutionIDChanged();
    partial void OnPackageCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPackageCreatedDateChanged();
    partial void OnPackageModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPackageModifiedDateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnApplicationNumberChanging(string value);
    partial void OnApplicationNumberChanged();
    partial void OnRegistrationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnRegistrationDateChanged();
    partial void OnDirectionIDChanging(System.Nullable<int> value);
    partial void OnDirectionIDChanged();
    partial void OnEducationFormIDChanging(System.Nullable<int> value);
    partial void OnEducationFormIDChanged();
    partial void OnFinanceSourceIDChanging(System.Nullable<int> value);
    partial void OnFinanceSourceIDChanged();
    partial void OnEducationLevelIDChanging(System.Nullable<int> value);
    partial void OnEducationLevelIDChanged();
    partial void OnStageChanging(System.Nullable<int> value);
    partial void OnStageChanged();
    partial void OnIsBeneficiaryChanging(bool value);
    partial void OnIsBeneficiaryChanged();
    partial void OnIsForeignerChanging(bool value);
    partial void OnIsForeignerChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public ImportPackageParsed_back()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int")]
		public System.Nullable<int> PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					this.OnPackageIDChanging(value);
					this.SendPropertyChanging();
					this._PackageID = value;
					this.SendPropertyChanged("PackageID");
					this.OnPackageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int")]
		public System.Nullable<int> InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageCreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PackageCreatedDate
		{
			get
			{
				return this._PackageCreatedDate;
			}
			set
			{
				if ((this._PackageCreatedDate != value))
				{
					this.OnPackageCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._PackageCreatedDate = value;
					this.SendPropertyChanged("PackageCreatedDate");
					this.OnPackageCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PackageModifiedDate
		{
			get
			{
				return this._PackageModifiedDate;
			}
			set
			{
				if ((this._PackageModifiedDate != value))
				{
					this.OnPackageModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._PackageModifiedDate = value;
					this.SendPropertyChanged("PackageModifiedDate");
					this.OnPackageModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationNumber", DbType="VarChar(50)")]
		public string ApplicationNumber
		{
			get
			{
				return this._ApplicationNumber;
			}
			set
			{
				if ((this._ApplicationNumber != value))
				{
					this.OnApplicationNumberChanging(value);
					this.SendPropertyChanging();
					this._ApplicationNumber = value;
					this.SendPropertyChanged("ApplicationNumber");
					this.OnApplicationNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> RegistrationDate
		{
			get
			{
				return this._RegistrationDate;
			}
			set
			{
				if ((this._RegistrationDate != value))
				{
					this.OnRegistrationDateChanging(value);
					this.SendPropertyChanging();
					this._RegistrationDate = value;
					this.SendPropertyChanged("RegistrationDate");
					this.OnRegistrationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int")]
		public System.Nullable<int> DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationFormID", DbType="Int")]
		public System.Nullable<int> EducationFormID
		{
			get
			{
				return this._EducationFormID;
			}
			set
			{
				if ((this._EducationFormID != value))
				{
					this.OnEducationFormIDChanging(value);
					this.SendPropertyChanging();
					this._EducationFormID = value;
					this.SendPropertyChanged("EducationFormID");
					this.OnEducationFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceSourceID", DbType="Int")]
		public System.Nullable<int> FinanceSourceID
		{
			get
			{
				return this._FinanceSourceID;
			}
			set
			{
				if ((this._FinanceSourceID != value))
				{
					this.OnFinanceSourceIDChanging(value);
					this.SendPropertyChanging();
					this._FinanceSourceID = value;
					this.SendPropertyChanged("FinanceSourceID");
					this.OnFinanceSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelID", DbType="Int")]
		public System.Nullable<int> EducationLevelID
		{
			get
			{
				return this._EducationLevelID;
			}
			set
			{
				if ((this._EducationLevelID != value))
				{
					this.OnEducationLevelIDChanging(value);
					this.SendPropertyChanging();
					this._EducationLevelID = value;
					this.SendPropertyChanged("EducationLevelID");
					this.OnEducationLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stage", DbType="Int")]
		public System.Nullable<int> Stage
		{
			get
			{
				return this._Stage;
			}
			set
			{
				if ((this._Stage != value))
				{
					this.OnStageChanging(value);
					this.SendPropertyChanging();
					this._Stage = value;
					this.SendPropertyChanged("Stage");
					this.OnStageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBeneficiary", DbType="Bit NOT NULL")]
		public bool IsBeneficiary
		{
			get
			{
				return this._IsBeneficiary;
			}
			set
			{
				if ((this._IsBeneficiary != value))
				{
					this.OnIsBeneficiaryChanging(value);
					this.SendPropertyChanging();
					this._IsBeneficiary = value;
					this.SendPropertyChanged("IsBeneficiary");
					this.OnIsBeneficiaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForeigner", DbType="Bit NOT NULL")]
		public bool IsForeigner
		{
			get
			{
				return this._IsForeigner;
			}
			set
			{
				if ((this._IsForeigner != value))
				{
					this.OnIsForeignerChanging(value);
					this.SendPropertyChanging();
					this._IsForeigner = value;
					this.SendPropertyChanged("IsForeigner");
					this.OnIsForeignerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImportPackageStatus")]
	public partial class ImportPackageStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StatusID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<ImportPackage> _ImportPackages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ImportPackageStatus()
		{
			this._ImportPackages = new EntitySet<ImportPackage>(new Action<ImportPackage>(this.attach_ImportPackages), new Action<ImportPackage>(this.detach_ImportPackages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ImportPackageStatus_ImportPackage", Storage="_ImportPackages", ThisKey="StatusID", OtherKey="StatusID")]
		public EntitySet<ImportPackage> ImportPackages
		{
			get
			{
				return this._ImportPackages;
			}
			set
			{
				this._ImportPackages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ImportPackages(ImportPackage entity)
		{
			this.SendPropertyChanging();
			entity.ImportPackageStatus = this;
		}
		
		private void detach_ImportPackages(ImportPackage entity)
		{
			this.SendPropertyChanging();
			entity.ImportPackageStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ImportPackageType")]
	public partial class ImportPackageType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<ImportPackage> _ImportPackages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ImportPackageType()
		{
			this._ImportPackages = new EntitySet<ImportPackage>(new Action<ImportPackage>(this.attach_ImportPackages), new Action<ImportPackage>(this.detach_ImportPackages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ImportPackageType_ImportPackage", Storage="_ImportPackages", ThisKey="TypeID", OtherKey="TypeID")]
		public EntitySet<ImportPackage> ImportPackages
		{
			get
			{
				return this._ImportPackages;
			}
			set
			{
				this._ImportPackages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ImportPackages(ImportPackage entity)
		{
			this.SendPropertyChanging();
			entity.ImportPackageType = this;
		}
		
		private void detach_ImportPackages(ImportPackage entity)
		{
			this.SendPropertyChanging();
			entity.ImportPackageType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IndividualAchievementsCategory")]
	public partial class IndividualAchievementsCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCategory;
		
		private string _CategoryName;
		
		private EntitySet<InstitutionAchievement> _InstitutionAchievements;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCategoryChanging(int value);
    partial void OnIdCategoryChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    #endregion
		
		public IndividualAchievementsCategory()
		{
			this._InstitutionAchievements = new EntitySet<InstitutionAchievement>(new Action<InstitutionAchievement>(this.attach_InstitutionAchievements), new Action<InstitutionAchievement>(this.detach_InstitutionAchievements));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategory", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCategory
		{
			get
			{
				return this._IdCategory;
			}
			set
			{
				if ((this._IdCategory != value))
				{
					this.OnIdCategoryChanging(value);
					this.SendPropertyChanging();
					this._IdCategory = value;
					this.SendPropertyChanged("IdCategory");
					this.OnIdCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IndividualAchievementsCategory_InstitutionAchievement", Storage="_InstitutionAchievements", ThisKey="IdCategory", OtherKey="IdCategory")]
		public EntitySet<InstitutionAchievement> InstitutionAchievements
		{
			get
			{
				return this._InstitutionAchievements;
			}
			set
			{
				this._InstitutionAchievements.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InstitutionAchievements(InstitutionAchievement entity)
		{
			this.SendPropertyChanging();
			entity.IndividualAchievementsCategory = this;
		}
		
		private void detach_InstitutionAchievements(InstitutionAchievement entity)
		{
			this.SendPropertyChanging();
			entity.IndividualAchievementsCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IndividualAchivement")]
	public partial class IndividualAchivement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IAID;
		
		private int _ApplicationID;
		
		private string _IAUID;
		
		private string _IAName;
		
		private System.Nullable<decimal> _IAMark;
		
		private System.Nullable<int> _EntrantDocumentID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<int> _IdAchievement;
		
		private EntityRef<Application> _Application;
		
		private EntityRef<EntrantDocument> _EntrantDocument;
		
		private EntityRef<InstitutionAchievement> _InstitutionAchievement;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIAIDChanging(int value);
    partial void OnIAIDChanged();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnIAUIDChanging(string value);
    partial void OnIAUIDChanged();
    partial void OnIANameChanging(string value);
    partial void OnIANameChanged();
    partial void OnIAMarkChanging(System.Nullable<decimal> value);
    partial void OnIAMarkChanged();
    partial void OnEntrantDocumentIDChanging(System.Nullable<int> value);
    partial void OnEntrantDocumentIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnIdAchievementChanging(System.Nullable<int> value);
    partial void OnIdAchievementChanged();
    #endregion
		
		public IndividualAchivement()
		{
			this._Application = default(EntityRef<Application>);
			this._EntrantDocument = default(EntityRef<EntrantDocument>);
			this._InstitutionAchievement = default(EntityRef<InstitutionAchievement>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IAID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IAID
		{
			get
			{
				return this._IAID;
			}
			set
			{
				if ((this._IAID != value))
				{
					this.OnIAIDChanging(value);
					this.SendPropertyChanging();
					this._IAID = value;
					this.SendPropertyChanged("IAID");
					this.OnIAIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL")]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IAUID", DbType="VarChar(200)")]
		public string IAUID
		{
			get
			{
				return this._IAUID;
			}
			set
			{
				if ((this._IAUID != value))
				{
					this.OnIAUIDChanging(value);
					this.SendPropertyChanging();
					this._IAUID = value;
					this.SendPropertyChanged("IAUID");
					this.OnIAUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IAName", DbType="VarChar(500)")]
		public string IAName
		{
			get
			{
				return this._IAName;
			}
			set
			{
				if ((this._IAName != value))
				{
					this.OnIANameChanging(value);
					this.SendPropertyChanging();
					this._IAName = value;
					this.SendPropertyChanged("IAName");
					this.OnIANameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IAMark", DbType="Decimal(7,4)")]
		public System.Nullable<decimal> IAMark
		{
			get
			{
				return this._IAMark;
			}
			set
			{
				if ((this._IAMark != value))
				{
					this.OnIAMarkChanging(value);
					this.SendPropertyChanging();
					this._IAMark = value;
					this.SendPropertyChanged("IAMark");
					this.OnIAMarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantDocumentID", DbType="Int")]
		public System.Nullable<int> EntrantDocumentID
		{
			get
			{
				return this._EntrantDocumentID;
			}
			set
			{
				if ((this._EntrantDocumentID != value))
				{
					if (this._EntrantDocument.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEntrantDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._EntrantDocumentID = value;
					this.SendPropertyChanged("EntrantDocumentID");
					this.OnEntrantDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAchievement", DbType="Int")]
		public System.Nullable<int> IdAchievement
		{
			get
			{
				return this._IdAchievement;
			}
			set
			{
				if ((this._IdAchievement != value))
				{
					if (this._InstitutionAchievement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdAchievementChanging(value);
					this.SendPropertyChanging();
					this._IdAchievement = value;
					this.SendPropertyChanged("IdAchievement");
					this.OnIdAchievementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_IndividualAchivement", Storage="_Application", ThisKey="ApplicationID", OtherKey="ApplicationID", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.IndividualAchivements.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.IndividualAchivements.Add(this);
						this._ApplicationID = value.ApplicationID;
					}
					else
					{
						this._ApplicationID = default(int);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EntrantDocument_IndividualAchivement", Storage="_EntrantDocument", ThisKey="EntrantDocumentID", OtherKey="EntrantDocumentID", IsForeignKey=true)]
		public EntrantDocument EntrantDocument
		{
			get
			{
				return this._EntrantDocument.Entity;
			}
			set
			{
				EntrantDocument previousValue = this._EntrantDocument.Entity;
				if (((previousValue != value) 
							|| (this._EntrantDocument.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EntrantDocument.Entity = null;
						previousValue.IndividualAchivements.Remove(this);
					}
					this._EntrantDocument.Entity = value;
					if ((value != null))
					{
						value.IndividualAchivements.Add(this);
						this._EntrantDocumentID = value.EntrantDocumentID;
					}
					else
					{
						this._EntrantDocumentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("EntrantDocument");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstitutionAchievement_IndividualAchivement", Storage="_InstitutionAchievement", ThisKey="IdAchievement", OtherKey="IdAchievement", IsForeignKey=true)]
		public InstitutionAchievement InstitutionAchievement
		{
			get
			{
				return this._InstitutionAchievement.Entity;
			}
			set
			{
				InstitutionAchievement previousValue = this._InstitutionAchievement.Entity;
				if (((previousValue != value) 
							|| (this._InstitutionAchievement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstitutionAchievement.Entity = null;
						previousValue.IndividualAchivements.Remove(this);
					}
					this._InstitutionAchievement.Entity = value;
					if ((value != null))
					{
						value.IndividualAchivements.Add(this);
						this._IdAchievement = value.IdAchievement;
					}
					else
					{
						this._IdAchievement = default(Nullable<int>);
					}
					this.SendPropertyChanged("InstitutionAchievement");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Institution")]
	public partial class Institution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstitutionID;
		
		private short _InstitutionTypeID;
		
		private string _FullName;
		
		private string _BriefName;
		
		private System.Nullable<int> _FormOfLawID;
		
		private System.Nullable<int> _RegionID;
		
		private string _Site;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Fax;
		
		private bool _HasMilitaryDepartment;
		
		private bool _HasHostel;
		
		private System.Nullable<int> _HostelCapacity;
		
		private bool _HasHostelForEntrants;
		
		private System.Nullable<int> _HostelAttachmentID;
		
		private string _INN;
		
		private string _OGRN;
		
		private System.Nullable<System.DateTime> _AdmissionStructurePublishDate;
		
		private System.Nullable<System.DateTime> _ReceivingApplicationDate;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<int> _EsrpOrgID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _OwnerDepartment;
		
		private System.Nullable<int> _MainEsrpOrgId;
		
		private System.Nullable<int> _FounderEsrpOrgId;
		
		private System.Nullable<int> _StatusId;
		
		private string _City;
		
		private bool _IsPrivate;
		
		private bool _IsFilial;
		
		private string _LawAddress;
		
		private string _KPP;
		
		private string _EIIS_ID;
		
		private EntitySet<AdmissionVolume> _AdmissionVolumes;
		
		private EntitySet<AllowedDirection> _AllowedDirections;
		
		private EntitySet<Application> _Applications;
		
		private EntitySet<Campaign> _Campaigns;
		
		private EntitySet<CompetitiveGroup> _CompetitiveGroups;
		
		private EntitySet<CompetitiveGroupTarget> _CompetitiveGroupTargets;
		
		private EntitySet<EntranceTestProfileDirection> _EntranceTestProfileDirections;
		
		private EntitySet<Entrant> _Entrants;
		
		private EntitySet<ImportPackage> _ImportPackages;
		
		private EntitySet<InstitutionAccreditation> _InstitutionAccreditations;
		
		private EntitySet<InstitutionDirectionRequest> _InstitutionDirectionRequests;
		
		private EntitySet<InstitutionDocument> _InstitutionDocuments;
		
		private EntitySet<InstitutionItem> _InstitutionItems;
		
		private EntitySet<InstitutionLicense> _InstitutionLicenses;
		
		private EntitySet<OlympicTypeProfile> _OlympicTypeProfiles;
		
		private EntitySet<OlympicTypeProfile> _OlympicTypeProfiles1;
		
		private EntitySet<OlympicTypeProfile> _OlympicTypeProfiles2;
		
		private EntitySet<OrderOfAdmission> _OrderOfAdmissions;
		
		private EntitySet<PreparatoryCourse> _PreparatoryCourses;
		
		private EntitySet<RequestDirection> _RequestDirections;
		
		private EntitySet<UserPolicy> _UserPolicies;
		
		private EntityRef<Attachment> _Attachment;
		
		private EntityRef<FormOfLaw> _FormOfLaw;
		
		private EntityRef<InstitutionType> _InstitutionType;
		
		private EntityRef<RegionType> _RegionType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnInstitutionTypeIDChanging(short value);
    partial void OnInstitutionTypeIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnBriefNameChanging(string value);
    partial void OnBriefNameChanged();
    partial void OnFormOfLawIDChanging(System.Nullable<int> value);
    partial void OnFormOfLawIDChanged();
    partial void OnRegionIDChanging(System.Nullable<int> value);
    partial void OnRegionIDChanged();
    partial void OnSiteChanging(string value);
    partial void OnSiteChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnHasMilitaryDepartmentChanging(bool value);
    partial void OnHasMilitaryDepartmentChanged();
    partial void OnHasHostelChanging(bool value);
    partial void OnHasHostelChanged();
    partial void OnHostelCapacityChanging(System.Nullable<int> value);
    partial void OnHostelCapacityChanged();
    partial void OnHasHostelForEntrantsChanging(bool value);
    partial void OnHasHostelForEntrantsChanged();
    partial void OnHostelAttachmentIDChanging(System.Nullable<int> value);
    partial void OnHostelAttachmentIDChanged();
    partial void OnINNChanging(string value);
    partial void OnINNChanged();
    partial void OnOGRNChanging(string value);
    partial void OnOGRNChanged();
    partial void OnAdmissionStructurePublishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAdmissionStructurePublishDateChanged();
    partial void OnReceivingApplicationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceivingApplicationDateChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnEsrpOrgIDChanging(System.Nullable<int> value);
    partial void OnEsrpOrgIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnOwnerDepartmentChanging(string value);
    partial void OnOwnerDepartmentChanged();
    partial void OnMainEsrpOrgIdChanging(System.Nullable<int> value);
    partial void OnMainEsrpOrgIdChanged();
    partial void OnFounderEsrpOrgIdChanging(System.Nullable<int> value);
    partial void OnFounderEsrpOrgIdChanged();
    partial void OnStatusIdChanging(System.Nullable<int> value);
    partial void OnStatusIdChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnIsPrivateChanging(bool value);
    partial void OnIsPrivateChanged();
    partial void OnIsFilialChanging(bool value);
    partial void OnIsFilialChanged();
    partial void OnLawAddressChanging(string value);
    partial void OnLawAddressChanged();
    partial void OnKPPChanging(string value);
    partial void OnKPPChanged();
    partial void OnEIIS_IDChanging(string value);
    partial void OnEIIS_IDChanged();
    #endregion
		
		public Institution()
		{
			this._AdmissionVolumes = new EntitySet<AdmissionVolume>(new Action<AdmissionVolume>(this.attach_AdmissionVolumes), new Action<AdmissionVolume>(this.detach_AdmissionVolumes));
			this._AllowedDirections = new EntitySet<AllowedDirection>(new Action<AllowedDirection>(this.attach_AllowedDirections), new Action<AllowedDirection>(this.detach_AllowedDirections));
			this._Applications = new EntitySet<Application>(new Action<Application>(this.attach_Applications), new Action<Application>(this.detach_Applications));
			this._Campaigns = new EntitySet<Campaign>(new Action<Campaign>(this.attach_Campaigns), new Action<Campaign>(this.detach_Campaigns));
			this._CompetitiveGroups = new EntitySet<CompetitiveGroup>(new Action<CompetitiveGroup>(this.attach_CompetitiveGroups), new Action<CompetitiveGroup>(this.detach_CompetitiveGroups));
			this._CompetitiveGroupTargets = new EntitySet<CompetitiveGroupTarget>(new Action<CompetitiveGroupTarget>(this.attach_CompetitiveGroupTargets), new Action<CompetitiveGroupTarget>(this.detach_CompetitiveGroupTargets));
			this._EntranceTestProfileDirections = new EntitySet<EntranceTestProfileDirection>(new Action<EntranceTestProfileDirection>(this.attach_EntranceTestProfileDirections), new Action<EntranceTestProfileDirection>(this.detach_EntranceTestProfileDirections));
			this._Entrants = new EntitySet<Entrant>(new Action<Entrant>(this.attach_Entrants), new Action<Entrant>(this.detach_Entrants));
			this._ImportPackages = new EntitySet<ImportPackage>(new Action<ImportPackage>(this.attach_ImportPackages), new Action<ImportPackage>(this.detach_ImportPackages));
			this._InstitutionAccreditations = new EntitySet<InstitutionAccreditation>(new Action<InstitutionAccreditation>(this.attach_InstitutionAccreditations), new Action<InstitutionAccreditation>(this.detach_InstitutionAccreditations));
			this._InstitutionDirectionRequests = new EntitySet<InstitutionDirectionRequest>(new Action<InstitutionDirectionRequest>(this.attach_InstitutionDirectionRequests), new Action<InstitutionDirectionRequest>(this.detach_InstitutionDirectionRequests));
			this._InstitutionDocuments = new EntitySet<InstitutionDocument>(new Action<InstitutionDocument>(this.attach_InstitutionDocuments), new Action<InstitutionDocument>(this.detach_InstitutionDocuments));
			this._InstitutionItems = new EntitySet<InstitutionItem>(new Action<InstitutionItem>(this.attach_InstitutionItems), new Action<InstitutionItem>(this.detach_InstitutionItems));
			this._InstitutionLicenses = new EntitySet<InstitutionLicense>(new Action<InstitutionLicense>(this.attach_InstitutionLicenses), new Action<InstitutionLicense>(this.detach_InstitutionLicenses));
			this._OlympicTypeProfiles = new EntitySet<OlympicTypeProfile>(new Action<OlympicTypeProfile>(this.attach_OlympicTypeProfiles), new Action<OlympicTypeProfile>(this.detach_OlympicTypeProfiles));
			this._OlympicTypeProfiles1 = new EntitySet<OlympicTypeProfile>(new Action<OlympicTypeProfile>(this.attach_OlympicTypeProfiles1), new Action<OlympicTypeProfile>(this.detach_OlympicTypeProfiles1));
			this._OlympicTypeProfiles2 = new EntitySet<OlympicTypeProfile>(new Action<OlympicTypeProfile>(this.attach_OlympicTypeProfiles2), new Action<OlympicTypeProfile>(this.detach_OlympicTypeProfiles2));
			this._OrderOfAdmissions = new EntitySet<OrderOfAdmission>(new Action<OrderOfAdmission>(this.attach_OrderOfAdmissions), new Action<OrderOfAdmission>(this.detach_OrderOfAdmissions));
			this._PreparatoryCourses = new EntitySet<PreparatoryCourse>(new Action<PreparatoryCourse>(this.attach_PreparatoryCourses), new Action<PreparatoryCourse>(this.detach_PreparatoryCourses));
			this._RequestDirections = new EntitySet<RequestDirection>(new Action<RequestDirection>(this.attach_RequestDirections), new Action<RequestDirection>(this.detach_RequestDirections));
			this._UserPolicies = new EntitySet<UserPolicy>(new Action<UserPolicy>(this.attach_UserPolicies), new Action<UserPolicy>(this.detach_UserPolicies));
			this._Attachment = default(EntityRef<Attachment>);
			this._FormOfLaw = default(EntityRef<FormOfLaw>);
			this._InstitutionType = default(EntityRef<InstitutionType>);
			this._RegionType = default(EntityRef<RegionType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionTypeID", DbType="SmallInt NOT NULL")]
		public short InstitutionTypeID
		{
			get
			{
				return this._InstitutionTypeID;
			}
			set
			{
				if ((this._InstitutionTypeID != value))
				{
					if (this._InstitutionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionTypeIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionTypeID = value;
					this.SendPropertyChanged("InstitutionTypeID");
					this.OnInstitutionTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(1000)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BriefName", DbType="VarChar(1000)")]
		public string BriefName
		{
			get
			{
				return this._BriefName;
			}
			set
			{
				if ((this._BriefName != value))
				{
					this.OnBriefNameChanging(value);
					this.SendPropertyChanging();
					this._BriefName = value;
					this.SendPropertyChanged("BriefName");
					this.OnBriefNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormOfLawID", DbType="Int")]
		public System.Nullable<int> FormOfLawID
		{
			get
			{
				return this._FormOfLawID;
			}
			set
			{
				if ((this._FormOfLawID != value))
				{
					if (this._FormOfLaw.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormOfLawIDChanging(value);
					this.SendPropertyChanging();
					this._FormOfLawID = value;
					this.SendPropertyChanged("FormOfLawID");
					this.OnFormOfLawIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int")]
		public System.Nullable<int> RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					if (this._RegionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="VarChar(255)")]
		public string Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(1000)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(1000)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(1000)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasMilitaryDepartment", DbType="Bit NOT NULL")]
		public bool HasMilitaryDepartment
		{
			get
			{
				return this._HasMilitaryDepartment;
			}
			set
			{
				if ((this._HasMilitaryDepartment != value))
				{
					this.OnHasMilitaryDepartmentChanging(value);
					this.SendPropertyChanging();
					this._HasMilitaryDepartment = value;
					this.SendPropertyChanged("HasMilitaryDepartment");
					this.OnHasMilitaryDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasHostel", DbType="Bit NOT NULL")]
		public bool HasHostel
		{
			get
			{
				return this._HasHostel;
			}
			set
			{
				if ((this._HasHostel != value))
				{
					this.OnHasHostelChanging(value);
					this.SendPropertyChanging();
					this._HasHostel = value;
					this.SendPropertyChanged("HasHostel");
					this.OnHasHostelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostelCapacity", DbType="Int")]
		public System.Nullable<int> HostelCapacity
		{
			get
			{
				return this._HostelCapacity;
			}
			set
			{
				if ((this._HostelCapacity != value))
				{
					this.OnHostelCapacityChanging(value);
					this.SendPropertyChanging();
					this._HostelCapacity = value;
					this.SendPropertyChanged("HostelCapacity");
					this.OnHostelCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasHostelForEntrants", DbType="Bit NOT NULL")]
		public bool HasHostelForEntrants
		{
			get
			{
				return this._HasHostelForEntrants;
			}
			set
			{
				if ((this._HasHostelForEntrants != value))
				{
					this.OnHasHostelForEntrantsChanging(value);
					this.SendPropertyChanging();
					this._HasHostelForEntrants = value;
					this.SendPropertyChanged("HasHostelForEntrants");
					this.OnHasHostelForEntrantsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostelAttachmentID", DbType="Int")]
		public System.Nullable<int> HostelAttachmentID
		{
			get
			{
				return this._HostelAttachmentID;
			}
			set
			{
				if ((this._HostelAttachmentID != value))
				{
					if (this._Attachment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostelAttachmentIDChanging(value);
					this.SendPropertyChanging();
					this._HostelAttachmentID = value;
					this.SendPropertyChanged("HostelAttachmentID");
					this.OnHostelAttachmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INN", DbType="VarChar(14)")]
		public string INN
		{
			get
			{
				return this._INN;
			}
			set
			{
				if ((this._INN != value))
				{
					this.OnINNChanging(value);
					this.SendPropertyChanging();
					this._INN = value;
					this.SendPropertyChanged("INN");
					this.OnINNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OGRN", DbType="VarChar(18)")]
		public string OGRN
		{
			get
			{
				return this._OGRN;
			}
			set
			{
				if ((this._OGRN != value))
				{
					this.OnOGRNChanging(value);
					this.SendPropertyChanging();
					this._OGRN = value;
					this.SendPropertyChanged("OGRN");
					this.OnOGRNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionStructurePublishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AdmissionStructurePublishDate
		{
			get
			{
				return this._AdmissionStructurePublishDate;
			}
			set
			{
				if ((this._AdmissionStructurePublishDate != value))
				{
					this.OnAdmissionStructurePublishDateChanging(value);
					this.SendPropertyChanging();
					this._AdmissionStructurePublishDate = value;
					this.SendPropertyChanged("AdmissionStructurePublishDate");
					this.OnAdmissionStructurePublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivingApplicationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceivingApplicationDate
		{
			get
			{
				return this._ReceivingApplicationDate;
			}
			set
			{
				if ((this._ReceivingApplicationDate != value))
				{
					this.OnReceivingApplicationDateChanging(value);
					this.SendPropertyChanging();
					this._ReceivingApplicationDate = value;
					this.SendPropertyChanged("ReceivingApplicationDate");
					this.OnReceivingApplicationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EsrpOrgID", DbType="Int")]
		public System.Nullable<int> EsrpOrgID
		{
			get
			{
				return this._EsrpOrgID;
			}
			set
			{
				if ((this._EsrpOrgID != value))
				{
					this.OnEsrpOrgIDChanging(value);
					this.SendPropertyChanging();
					this._EsrpOrgID = value;
					this.SendPropertyChanged("EsrpOrgID");
					this.OnEsrpOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerDepartment", DbType="VarChar(1000)")]
		public string OwnerDepartment
		{
			get
			{
				return this._OwnerDepartment;
			}
			set
			{
				if ((this._OwnerDepartment != value))
				{
					this.OnOwnerDepartmentChanging(value);
					this.SendPropertyChanging();
					this._OwnerDepartment = value;
					this.SendPropertyChanged("OwnerDepartment");
					this.OnOwnerDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainEsrpOrgId", DbType="Int")]
		public System.Nullable<int> MainEsrpOrgId
		{
			get
			{
				return this._MainEsrpOrgId;
			}
			set
			{
				if ((this._MainEsrpOrgId != value))
				{
					this.OnMainEsrpOrgIdChanging(value);
					this.SendPropertyChanging();
					this._MainEsrpOrgId = value;
					this.SendPropertyChanged("MainEsrpOrgId");
					this.OnMainEsrpOrgIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FounderEsrpOrgId", DbType="Int")]
		public System.Nullable<int> FounderEsrpOrgId
		{
			get
			{
				return this._FounderEsrpOrgId;
			}
			set
			{
				if ((this._FounderEsrpOrgId != value))
				{
					this.OnFounderEsrpOrgIdChanging(value);
					this.SendPropertyChanging();
					this._FounderEsrpOrgId = value;
					this.SendPropertyChanged("FounderEsrpOrgId");
					this.OnFounderEsrpOrgIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusId", DbType="Int")]
		public System.Nullable<int> StatusId
		{
			get
			{
				return this._StatusId;
			}
			set
			{
				if ((this._StatusId != value))
				{
					this.OnStatusIdChanging(value);
					this.SendPropertyChanging();
					this._StatusId = value;
					this.SendPropertyChanged("StatusId");
					this.OnStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(255)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrivate", DbType="Bit NOT NULL")]
		public bool IsPrivate
		{
			get
			{
				return this._IsPrivate;
			}
			set
			{
				if ((this._IsPrivate != value))
				{
					this.OnIsPrivateChanging(value);
					this.SendPropertyChanging();
					this._IsPrivate = value;
					this.SendPropertyChanged("IsPrivate");
					this.OnIsPrivateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFilial", DbType="Bit NOT NULL")]
		public bool IsFilial
		{
			get
			{
				return this._IsFilial;
			}
			set
			{
				if ((this._IsFilial != value))
				{
					this.OnIsFilialChanging(value);
					this.SendPropertyChanging();
					this._IsFilial = value;
					this.SendPropertyChanged("IsFilial");
					this.OnIsFilialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LawAddress", DbType="VarChar(1000)")]
		public string LawAddress
		{
			get
			{
				return this._LawAddress;
			}
			set
			{
				if ((this._LawAddress != value))
				{
					this.OnLawAddressChanging(value);
					this.SendPropertyChanging();
					this._LawAddress = value;
					this.SendPropertyChanged("LawAddress");
					this.OnLawAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KPP", DbType="VarChar(13)")]
		public string KPP
		{
			get
			{
				return this._KPP;
			}
			set
			{
				if ((this._KPP != value))
				{
					this.OnKPPChanging(value);
					this.SendPropertyChanging();
					this._KPP = value;
					this.SendPropertyChanged("KPP");
					this.OnKPPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIIS_ID", DbType="VarChar(50)")]
		public string EIIS_ID
		{
			get
			{
				return this._EIIS_ID;
			}
			set
			{
				if ((this._EIIS_ID != value))
				{
					this.OnEIIS_IDChanging(value);
					this.SendPropertyChanging();
					this._EIIS_ID = value;
					this.SendPropertyChanged("EIIS_ID");
					this.OnEIIS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_AdmissionVolume", Storage="_AdmissionVolumes", ThisKey="InstitutionID", OtherKey="InstitutionID")]
		public EntitySet<AdmissionVolume> AdmissionVolumes
		{
			get
			{
				return this._AdmissionVolumes;
			}
			set
			{
				this._AdmissionVolumes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_AllowedDirection", Storage="_AllowedDirections", ThisKey="InstitutionID", OtherKey="InstitutionID")]
		public EntitySet<AllowedDirection> AllowedDirections
		{
			get
			{
				return this._AllowedDirections;
			}
			set
			{
				this._AllowedDirections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_Application", Storage="_Applications", ThisKey="InstitutionID", OtherKey="InstitutionID")]
		public EntitySet<Application> Applications
		{
			get
			{
				return this._Applications;
			}
			set
			{
				this._Applications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_Campaign", Storage="_Campaigns", ThisKey="InstitutionID", OtherKey="InstitutionID")]
		public EntitySet<Campaign> Campaigns
		{
			get
			{
				return this._Campaigns;
			}
			set
			{
				this._Campaigns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_CompetitiveGroup", Storage="_CompetitiveGroups", ThisKey="InstitutionID", OtherKey="InstitutionID")]
		public EntitySet<CompetitiveGroup> CompetitiveGroups
		{
			get
			{
				return this._CompetitiveGroups;
			}
			set
			{
				this._CompetitiveGroups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_CompetitiveGroupTarget", Storage="_CompetitiveGroupTargets", ThisKey="InstitutionID", OtherKey="InstitutionID")]
		public EntitySet<CompetitiveGroupTarget> CompetitiveGroupTargets
		{
			get
			{
				return this._CompetitiveGroupTargets;
			}
			set
			{
				this._CompetitiveGroupTargets.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_EntranceTestProfileDirection", Storage="_EntranceTestProfileDirections", ThisKey="InstitutionID", OtherKey="InstitutionID")]
		public EntitySet<EntranceTestProfileDirection> EntranceTestProfileDirections
		{
			get
			{
				return this._EntranceTestProfileDirections;
			}
			set
			{
				this._EntranceTestProfileDirections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_Entrant", Storage="_Entrants", ThisKey="InstitutionID", OtherKey="InstitutionID")]
		public EntitySet<Entrant> Entrants
		{
			get
			{
				return this._Entrants;
			}
			set
			{
				this._Entrants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_ImportPackage", Storage="_ImportPackages", ThisKey="InstitutionID", OtherKey="InstitutionID")]
		public EntitySet<ImportPackage> ImportPackages
		{
			get
			{
				return this._ImportPackages;
			}
			set
			{
				this._ImportPackages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_InstitutionAccreditation", Storage="_InstitutionAccreditations", ThisKey="InstitutionID", OtherKey="InstitutionID")]
		public EntitySet<InstitutionAccreditation> InstitutionAccreditations
		{
			get
			{
				return this._InstitutionAccreditations;
			}
			set
			{
				this._InstitutionAccreditations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_InstitutionDirectionRequest", Storage="_InstitutionDirectionRequests", ThisKey="InstitutionID", OtherKey="InstitutionId")]
		public EntitySet<InstitutionDirectionRequest> InstitutionDirectionRequests
		{
			get
			{
				return this._InstitutionDirectionRequests;
			}
			set
			{
				this._InstitutionDirectionRequests.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_InstitutionDocument", Storage="_InstitutionDocuments", ThisKey="InstitutionID", OtherKey="InstitutionId")]
		public EntitySet<InstitutionDocument> InstitutionDocuments
		{
			get
			{
				return this._InstitutionDocuments;
			}
			set
			{
				this._InstitutionDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_InstitutionItem", Storage="_InstitutionItems", ThisKey="InstitutionID", OtherKey="InstitutionID")]
		public EntitySet<InstitutionItem> InstitutionItems
		{
			get
			{
				return this._InstitutionItems;
			}
			set
			{
				this._InstitutionItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_InstitutionLicense", Storage="_InstitutionLicenses", ThisKey="InstitutionID", OtherKey="InstitutionID")]
		public EntitySet<InstitutionLicense> InstitutionLicenses
		{
			get
			{
				return this._InstitutionLicenses;
			}
			set
			{
				this._InstitutionLicenses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_OlympicTypeProfile", Storage="_OlympicTypeProfiles", ThisKey="InstitutionID", OtherKey="CoOrganizerID")]
		public EntitySet<OlympicTypeProfile> OlympicTypeProfiles
		{
			get
			{
				return this._OlympicTypeProfiles;
			}
			set
			{
				this._OlympicTypeProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_OlympicTypeProfile1", Storage="_OlympicTypeProfiles1", ThisKey="InstitutionID", OtherKey="OrgOlympicEnterID")]
		public EntitySet<OlympicTypeProfile> OlympicTypeProfiles1
		{
			get
			{
				return this._OlympicTypeProfiles1;
			}
			set
			{
				this._OlympicTypeProfiles1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_OlympicTypeProfile2", Storage="_OlympicTypeProfiles2", ThisKey="InstitutionID", OtherKey="OrganizerID")]
		public EntitySet<OlympicTypeProfile> OlympicTypeProfiles2
		{
			get
			{
				return this._OlympicTypeProfiles2;
			}
			set
			{
				this._OlympicTypeProfiles2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_OrderOfAdmission", Storage="_OrderOfAdmissions", ThisKey="InstitutionID", OtherKey="InstitutionID")]
		public EntitySet<OrderOfAdmission> OrderOfAdmissions
		{
			get
			{
				return this._OrderOfAdmissions;
			}
			set
			{
				this._OrderOfAdmissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_PreparatoryCourse", Storage="_PreparatoryCourses", ThisKey="InstitutionID", OtherKey="InstitutionID")]
		public EntitySet<PreparatoryCourse> PreparatoryCourses
		{
			get
			{
				return this._PreparatoryCourses;
			}
			set
			{
				this._PreparatoryCourses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_RequestDirection", Storage="_RequestDirections", ThisKey="InstitutionID", OtherKey="Request_ID")]
		public EntitySet<RequestDirection> RequestDirections
		{
			get
			{
				return this._RequestDirections;
			}
			set
			{
				this._RequestDirections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_UserPolicy", Storage="_UserPolicies", ThisKey="InstitutionID", OtherKey="InstitutionID")]
		public EntitySet<UserPolicy> UserPolicies
		{
			get
			{
				return this._UserPolicies;
			}
			set
			{
				this._UserPolicies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attachment_Institution", Storage="_Attachment", ThisKey="HostelAttachmentID", OtherKey="AttachmentID", IsForeignKey=true)]
		public Attachment Attachment
		{
			get
			{
				return this._Attachment.Entity;
			}
			set
			{
				Attachment previousValue = this._Attachment.Entity;
				if (((previousValue != value) 
							|| (this._Attachment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Attachment.Entity = null;
						previousValue.Institutions.Remove(this);
					}
					this._Attachment.Entity = value;
					if ((value != null))
					{
						value.Institutions.Add(this);
						this._HostelAttachmentID = value.AttachmentID;
					}
					else
					{
						this._HostelAttachmentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Attachment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FormOfLaw_Institution", Storage="_FormOfLaw", ThisKey="FormOfLawID", OtherKey="FormOfLawID", IsForeignKey=true)]
		public FormOfLaw FormOfLaw
		{
			get
			{
				return this._FormOfLaw.Entity;
			}
			set
			{
				FormOfLaw previousValue = this._FormOfLaw.Entity;
				if (((previousValue != value) 
							|| (this._FormOfLaw.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FormOfLaw.Entity = null;
						previousValue.Institutions.Remove(this);
					}
					this._FormOfLaw.Entity = value;
					if ((value != null))
					{
						value.Institutions.Add(this);
						this._FormOfLawID = value.FormOfLawID;
					}
					else
					{
						this._FormOfLawID = default(Nullable<int>);
					}
					this.SendPropertyChanged("FormOfLaw");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstitutionType_Institution", Storage="_InstitutionType", ThisKey="InstitutionTypeID", OtherKey="InstitutionTypeID", IsForeignKey=true)]
		public InstitutionType InstitutionType
		{
			get
			{
				return this._InstitutionType.Entity;
			}
			set
			{
				InstitutionType previousValue = this._InstitutionType.Entity;
				if (((previousValue != value) 
							|| (this._InstitutionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstitutionType.Entity = null;
						previousValue.Institutions.Remove(this);
					}
					this._InstitutionType.Entity = value;
					if ((value != null))
					{
						value.Institutions.Add(this);
						this._InstitutionTypeID = value.InstitutionTypeID;
					}
					else
					{
						this._InstitutionTypeID = default(short);
					}
					this.SendPropertyChanged("InstitutionType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegionType_Institution", Storage="_RegionType", ThisKey="RegionID", OtherKey="RegionId", IsForeignKey=true)]
		public RegionType RegionType
		{
			get
			{
				return this._RegionType.Entity;
			}
			set
			{
				RegionType previousValue = this._RegionType.Entity;
				if (((previousValue != value) 
							|| (this._RegionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegionType.Entity = null;
						previousValue.Institutions.Remove(this);
					}
					this._RegionType.Entity = value;
					if ((value != null))
					{
						value.Institutions.Add(this);
						this._RegionID = value.RegionId;
					}
					else
					{
						this._RegionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RegionType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdmissionVolumes(AdmissionVolume entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_AdmissionVolumes(AdmissionVolume entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
		
		private void attach_AllowedDirections(AllowedDirection entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_AllowedDirections(AllowedDirection entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
		
		private void attach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
		
		private void attach_Campaigns(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_Campaigns(Campaign entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
		
		private void attach_CompetitiveGroups(CompetitiveGroup entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_CompetitiveGroups(CompetitiveGroup entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
		
		private void attach_CompetitiveGroupTargets(CompetitiveGroupTarget entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_CompetitiveGroupTargets(CompetitiveGroupTarget entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
		
		private void attach_EntranceTestProfileDirections(EntranceTestProfileDirection entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_EntranceTestProfileDirections(EntranceTestProfileDirection entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
		
		private void attach_Entrants(Entrant entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_Entrants(Entrant entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
		
		private void attach_ImportPackages(ImportPackage entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_ImportPackages(ImportPackage entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
		
		private void attach_InstitutionAccreditations(InstitutionAccreditation entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_InstitutionAccreditations(InstitutionAccreditation entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
		
		private void attach_InstitutionDirectionRequests(InstitutionDirectionRequest entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_InstitutionDirectionRequests(InstitutionDirectionRequest entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
		
		private void attach_InstitutionDocuments(InstitutionDocument entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_InstitutionDocuments(InstitutionDocument entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
		
		private void attach_InstitutionItems(InstitutionItem entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_InstitutionItems(InstitutionItem entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
		
		private void attach_InstitutionLicenses(InstitutionLicense entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_InstitutionLicenses(InstitutionLicense entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
		
		private void attach_OlympicTypeProfiles(OlympicTypeProfile entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_OlympicTypeProfiles(OlympicTypeProfile entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
		
		private void attach_OlympicTypeProfiles1(OlympicTypeProfile entity)
		{
			this.SendPropertyChanging();
			entity.Institution1 = this;
		}
		
		private void detach_OlympicTypeProfiles1(OlympicTypeProfile entity)
		{
			this.SendPropertyChanging();
			entity.Institution1 = null;
		}
		
		private void attach_OlympicTypeProfiles2(OlympicTypeProfile entity)
		{
			this.SendPropertyChanging();
			entity.Institution2 = this;
		}
		
		private void detach_OlympicTypeProfiles2(OlympicTypeProfile entity)
		{
			this.SendPropertyChanging();
			entity.Institution2 = null;
		}
		
		private void attach_OrderOfAdmissions(OrderOfAdmission entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_OrderOfAdmissions(OrderOfAdmission entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
		
		private void attach_PreparatoryCourses(PreparatoryCourse entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_PreparatoryCourses(PreparatoryCourse entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
		
		private void attach_RequestDirections(RequestDirection entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_RequestDirections(RequestDirection entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
		
		private void attach_UserPolicies(UserPolicy entity)
		{
			this.SendPropertyChanging();
			entity.Institution = this;
		}
		
		private void detach_UserPolicies(UserPolicy entity)
		{
			this.SendPropertyChanging();
			entity.Institution = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstitutionAccreditation")]
	public partial class InstitutionAccreditation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccreditationID;
		
		private int _InstitutionID;
		
		private string _Accreditation;
		
		private System.Nullable<int> _AttachmentID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<Attachment> _Attachment;
		
		private EntityRef<Institution> _Institution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccreditationIDChanging(int value);
    partial void OnAccreditationIDChanged();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnAccreditationChanging(string value);
    partial void OnAccreditationChanged();
    partial void OnAttachmentIDChanging(System.Nullable<int> value);
    partial void OnAttachmentIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public InstitutionAccreditation()
		{
			this._Attachment = default(EntityRef<Attachment>);
			this._Institution = default(EntityRef<Institution>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccreditationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccreditationID
		{
			get
			{
				return this._AccreditationID;
			}
			set
			{
				if ((this._AccreditationID != value))
				{
					this.OnAccreditationIDChanging(value);
					this.SendPropertyChanging();
					this._AccreditationID = value;
					this.SendPropertyChanged("AccreditationID");
					this.OnAccreditationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					if (this._Institution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accreditation", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Accreditation
		{
			get
			{
				return this._Accreditation;
			}
			set
			{
				if ((this._Accreditation != value))
				{
					this.OnAccreditationChanging(value);
					this.SendPropertyChanging();
					this._Accreditation = value;
					this.SendPropertyChanged("Accreditation");
					this.OnAccreditationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentID", DbType="Int")]
		public System.Nullable<int> AttachmentID
		{
			get
			{
				return this._AttachmentID;
			}
			set
			{
				if ((this._AttachmentID != value))
				{
					if (this._Attachment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttachmentIDChanging(value);
					this.SendPropertyChanging();
					this._AttachmentID = value;
					this.SendPropertyChanged("AttachmentID");
					this.OnAttachmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attachment_InstitutionAccreditation", Storage="_Attachment", ThisKey="AttachmentID", OtherKey="AttachmentID", IsForeignKey=true)]
		public Attachment Attachment
		{
			get
			{
				return this._Attachment.Entity;
			}
			set
			{
				Attachment previousValue = this._Attachment.Entity;
				if (((previousValue != value) 
							|| (this._Attachment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Attachment.Entity = null;
						previousValue.InstitutionAccreditations.Remove(this);
					}
					this._Attachment.Entity = value;
					if ((value != null))
					{
						value.InstitutionAccreditations.Add(this);
						this._AttachmentID = value.AttachmentID;
					}
					else
					{
						this._AttachmentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Attachment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_InstitutionAccreditation", Storage="_Institution", ThisKey="InstitutionID", OtherKey="InstitutionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.InstitutionAccreditations.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.InstitutionAccreditations.Add(this);
						this._InstitutionID = value.InstitutionID;
					}
					else
					{
						this._InstitutionID = default(int);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstitutionAchievements")]
	public partial class InstitutionAchievement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdAchievement;
		
		private string _UID;
		
		private string _Name;
		
		private int _IdCategory;
		
		private decimal _MaxValue;
		
		private System.Nullable<int> _CampaignID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<IndividualAchivement> _IndividualAchivements;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<IndividualAchievementsCategory> _IndividualAchievementsCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdAchievementChanging(int value);
    partial void OnIdAchievementChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIdCategoryChanging(int value);
    partial void OnIdCategoryChanged();
    partial void OnMaxValueChanging(decimal value);
    partial void OnMaxValueChanged();
    partial void OnCampaignIDChanging(System.Nullable<int> value);
    partial void OnCampaignIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public InstitutionAchievement()
		{
			this._IndividualAchivements = new EntitySet<IndividualAchivement>(new Action<IndividualAchivement>(this.attach_IndividualAchivements), new Action<IndividualAchivement>(this.detach_IndividualAchivements));
			this._Campaign = default(EntityRef<Campaign>);
			this._IndividualAchievementsCategory = default(EntityRef<IndividualAchievementsCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdAchievement", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdAchievement
		{
			get
			{
				return this._IdAchievement;
			}
			set
			{
				if ((this._IdAchievement != value))
				{
					this.OnIdAchievementChanging(value);
					this.SendPropertyChanging();
					this._IdAchievement = value;
					this.SendPropertyChanged("IdAchievement");
					this.OnIdAchievementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(500)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(4000)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCategory", DbType="Int NOT NULL")]
		public int IdCategory
		{
			get
			{
				return this._IdCategory;
			}
			set
			{
				if ((this._IdCategory != value))
				{
					if (this._IndividualAchievementsCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdCategoryChanging(value);
					this.SendPropertyChanging();
					this._IdCategory = value;
					this.SendPropertyChanged("IdCategory");
					this.OnIdCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxValue", DbType="Decimal(7,4) NOT NULL")]
		public decimal MaxValue
		{
			get
			{
				return this._MaxValue;
			}
			set
			{
				if ((this._MaxValue != value))
				{
					this.OnMaxValueChanging(value);
					this.SendPropertyChanging();
					this._MaxValue = value;
					this.SendPropertyChanged("MaxValue");
					this.OnMaxValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int")]
		public System.Nullable<int> CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstitutionAchievement_IndividualAchivement", Storage="_IndividualAchivements", ThisKey="IdAchievement", OtherKey="IdAchievement")]
		public EntitySet<IndividualAchivement> IndividualAchivements
		{
			get
			{
				return this._IndividualAchivements;
			}
			set
			{
				this._IndividualAchivements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_InstitutionAchievement", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true)]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.InstitutionAchievements.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.InstitutionAchievements.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IndividualAchievementsCategory_InstitutionAchievement", Storage="_IndividualAchievementsCategory", ThisKey="IdCategory", OtherKey="IdCategory", IsForeignKey=true)]
		public IndividualAchievementsCategory IndividualAchievementsCategory
		{
			get
			{
				return this._IndividualAchievementsCategory.Entity;
			}
			set
			{
				IndividualAchievementsCategory previousValue = this._IndividualAchievementsCategory.Entity;
				if (((previousValue != value) 
							|| (this._IndividualAchievementsCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IndividualAchievementsCategory.Entity = null;
						previousValue.InstitutionAchievements.Remove(this);
					}
					this._IndividualAchievementsCategory.Entity = value;
					if ((value != null))
					{
						value.InstitutionAchievements.Add(this);
						this._IdCategory = value.IdCategory;
					}
					else
					{
						this._IdCategory = default(int);
					}
					this.SendPropertyChanged("IndividualAchievementsCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IndividualAchivements(IndividualAchivement entity)
		{
			this.SendPropertyChanging();
			entity.InstitutionAchievement = this;
		}
		
		private void detach_IndividualAchivements(IndividualAchivement entity)
		{
			this.SendPropertyChanging();
			entity.InstitutionAchievement = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstitutionDirectionRequest")]
	public partial class InstitutionDirectionRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RequestId;
		
		private int _InstitutionId;
		
		private int _DirectionId;
		
		private short _EducationLevelId;
		
		private int _RequestType;
		
		private System.DateTime _RequestDate;
		
		private string _RequestComment;
		
		private System.Nullable<System.DateTime> _DenialDate;
		
		private string _DenialComment;
		
		private EntityRef<AdmissionItemType> _AdmissionItemType;
		
		private EntityRef<Direction> _Direction;
		
		private EntityRef<Institution> _Institution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRequestIdChanging(int value);
    partial void OnRequestIdChanged();
    partial void OnInstitutionIdChanging(int value);
    partial void OnInstitutionIdChanged();
    partial void OnDirectionIdChanging(int value);
    partial void OnDirectionIdChanged();
    partial void OnEducationLevelIdChanging(short value);
    partial void OnEducationLevelIdChanged();
    partial void OnRequestTypeChanging(int value);
    partial void OnRequestTypeChanged();
    partial void OnRequestDateChanging(System.DateTime value);
    partial void OnRequestDateChanged();
    partial void OnRequestCommentChanging(string value);
    partial void OnRequestCommentChanged();
    partial void OnDenialDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDenialDateChanged();
    partial void OnDenialCommentChanging(string value);
    partial void OnDenialCommentChanged();
    #endregion
		
		public InstitutionDirectionRequest()
		{
			this._AdmissionItemType = default(EntityRef<AdmissionItemType>);
			this._Direction = default(EntityRef<Direction>);
			this._Institution = default(EntityRef<Institution>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RequestId
		{
			get
			{
				return this._RequestId;
			}
			set
			{
				if ((this._RequestId != value))
				{
					this.OnRequestIdChanging(value);
					this.SendPropertyChanging();
					this._RequestId = value;
					this.SendPropertyChanged("RequestId");
					this.OnRequestIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionId", DbType="Int NOT NULL")]
		public int InstitutionId
		{
			get
			{
				return this._InstitutionId;
			}
			set
			{
				if ((this._InstitutionId != value))
				{
					if (this._Institution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionIdChanging(value);
					this.SendPropertyChanging();
					this._InstitutionId = value;
					this.SendPropertyChanged("InstitutionId");
					this.OnInstitutionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionId", DbType="Int NOT NULL")]
		public int DirectionId
		{
			get
			{
				return this._DirectionId;
			}
			set
			{
				if ((this._DirectionId != value))
				{
					if (this._Direction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirectionIdChanging(value);
					this.SendPropertyChanging();
					this._DirectionId = value;
					this.SendPropertyChanged("DirectionId");
					this.OnDirectionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelId", DbType="SmallInt NOT NULL")]
		public short EducationLevelId
		{
			get
			{
				return this._EducationLevelId;
			}
			set
			{
				if ((this._EducationLevelId != value))
				{
					if (this._AdmissionItemType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEducationLevelIdChanging(value);
					this.SendPropertyChanging();
					this._EducationLevelId = value;
					this.SendPropertyChanged("EducationLevelId");
					this.OnEducationLevelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestType", DbType="Int NOT NULL")]
		public int RequestType
		{
			get
			{
				return this._RequestType;
			}
			set
			{
				if ((this._RequestType != value))
				{
					this.OnRequestTypeChanging(value);
					this.SendPropertyChanging();
					this._RequestType = value;
					this.SendPropertyChanged("RequestType");
					this.OnRequestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestComment", DbType="VarChar(2048)")]
		public string RequestComment
		{
			get
			{
				return this._RequestComment;
			}
			set
			{
				if ((this._RequestComment != value))
				{
					this.OnRequestCommentChanging(value);
					this.SendPropertyChanging();
					this._RequestComment = value;
					this.SendPropertyChanged("RequestComment");
					this.OnRequestCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DenialDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DenialDate
		{
			get
			{
				return this._DenialDate;
			}
			set
			{
				if ((this._DenialDate != value))
				{
					this.OnDenialDateChanging(value);
					this.SendPropertyChanging();
					this._DenialDate = value;
					this.SendPropertyChanged("DenialDate");
					this.OnDenialDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DenialComment", DbType="VarChar(2048)")]
		public string DenialComment
		{
			get
			{
				return this._DenialComment;
			}
			set
			{
				if ((this._DenialComment != value))
				{
					this.OnDenialCommentChanging(value);
					this.SendPropertyChanging();
					this._DenialComment = value;
					this.SendPropertyChanged("DenialComment");
					this.OnDenialCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_InstitutionDirectionRequest", Storage="_AdmissionItemType", ThisKey="EducationLevelId", OtherKey="ItemTypeID", IsForeignKey=true)]
		public AdmissionItemType AdmissionItemType
		{
			get
			{
				return this._AdmissionItemType.Entity;
			}
			set
			{
				AdmissionItemType previousValue = this._AdmissionItemType.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionItemType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionItemType.Entity = null;
						previousValue.InstitutionDirectionRequests.Remove(this);
					}
					this._AdmissionItemType.Entity = value;
					if ((value != null))
					{
						value.InstitutionDirectionRequests.Add(this);
						this._EducationLevelId = value.ItemTypeID;
					}
					else
					{
						this._EducationLevelId = default(short);
					}
					this.SendPropertyChanged("AdmissionItemType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_InstitutionDirectionRequest", Storage="_Direction", ThisKey="DirectionId", OtherKey="DirectionID", IsForeignKey=true)]
		public Direction Direction
		{
			get
			{
				return this._Direction.Entity;
			}
			set
			{
				Direction previousValue = this._Direction.Entity;
				if (((previousValue != value) 
							|| (this._Direction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direction.Entity = null;
						previousValue.InstitutionDirectionRequests.Remove(this);
					}
					this._Direction.Entity = value;
					if ((value != null))
					{
						value.InstitutionDirectionRequests.Add(this);
						this._DirectionId = value.DirectionID;
					}
					else
					{
						this._DirectionId = default(int);
					}
					this.SendPropertyChanged("Direction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_InstitutionDirectionRequest", Storage="_Institution", ThisKey="InstitutionId", OtherKey="InstitutionID", IsForeignKey=true)]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.InstitutionDirectionRequests.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.InstitutionDirectionRequests.Add(this);
						this._InstitutionId = value.InstitutionID;
					}
					else
					{
						this._InstitutionId = default(int);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstitutionDocuments")]
	public partial class InstitutionDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstitutionId;
		
		private int _AttachmentId;
		
		private int _Year;
		
		private EntityRef<Attachment> _Attachment;
		
		private EntityRef<Institution> _Institution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstitutionIdChanging(int value);
    partial void OnInstitutionIdChanged();
    partial void OnAttachmentIdChanging(int value);
    partial void OnAttachmentIdChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    #endregion
		
		public InstitutionDocument()
		{
			this._Attachment = default(EntityRef<Attachment>);
			this._Institution = default(EntityRef<Institution>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int InstitutionId
		{
			get
			{
				return this._InstitutionId;
			}
			set
			{
				if ((this._InstitutionId != value))
				{
					if (this._Institution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionIdChanging(value);
					this.SendPropertyChanging();
					this._InstitutionId = value;
					this.SendPropertyChanged("InstitutionId");
					this.OnInstitutionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int AttachmentId
		{
			get
			{
				return this._AttachmentId;
			}
			set
			{
				if ((this._AttachmentId != value))
				{
					if (this._Attachment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttachmentIdChanging(value);
					this.SendPropertyChanging();
					this._AttachmentId = value;
					this.SendPropertyChanged("AttachmentId");
					this.OnAttachmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attachment_InstitutionDocument", Storage="_Attachment", ThisKey="AttachmentId", OtherKey="AttachmentID", IsForeignKey=true)]
		public Attachment Attachment
		{
			get
			{
				return this._Attachment.Entity;
			}
			set
			{
				Attachment previousValue = this._Attachment.Entity;
				if (((previousValue != value) 
							|| (this._Attachment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Attachment.Entity = null;
						previousValue.InstitutionDocuments.Remove(this);
					}
					this._Attachment.Entity = value;
					if ((value != null))
					{
						value.InstitutionDocuments.Add(this);
						this._AttachmentId = value.AttachmentID;
					}
					else
					{
						this._AttachmentId = default(int);
					}
					this.SendPropertyChanged("Attachment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_InstitutionDocument", Storage="_Institution", ThisKey="InstitutionId", OtherKey="InstitutionID", IsForeignKey=true)]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.InstitutionDocuments.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.InstitutionDocuments.Add(this);
						this._InstitutionId = value.InstitutionID;
					}
					else
					{
						this._InstitutionId = default(int);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstitutionDocumentType")]
	public partial class InstitutionDocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstitutionDocumentTypeID;
		
		private string _Name;
		
		private int _DisplayOrder;
		
		private EntitySet<ApplicationEntranceTestDocument> _ApplicationEntranceTestDocuments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstitutionDocumentTypeIDChanging(int value);
    partial void OnInstitutionDocumentTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    #endregion
		
		public InstitutionDocumentType()
		{
			this._ApplicationEntranceTestDocuments = new EntitySet<ApplicationEntranceTestDocument>(new Action<ApplicationEntranceTestDocument>(this.attach_ApplicationEntranceTestDocuments), new Action<ApplicationEntranceTestDocument>(this.detach_ApplicationEntranceTestDocuments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionDocumentTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InstitutionDocumentTypeID
		{
			get
			{
				return this._InstitutionDocumentTypeID;
			}
			set
			{
				if ((this._InstitutionDocumentTypeID != value))
				{
					this.OnInstitutionDocumentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionDocumentTypeID = value;
					this.SendPropertyChanged("InstitutionDocumentTypeID");
					this.OnInstitutionDocumentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstitutionDocumentType_ApplicationEntranceTestDocument", Storage="_ApplicationEntranceTestDocuments", ThisKey="InstitutionDocumentTypeID", OtherKey="InstitutionDocumentTypeID")]
		public EntitySet<ApplicationEntranceTestDocument> ApplicationEntranceTestDocuments
		{
			get
			{
				return this._ApplicationEntranceTestDocuments;
			}
			set
			{
				this._ApplicationEntranceTestDocuments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApplicationEntranceTestDocuments(ApplicationEntranceTestDocument entity)
		{
			this.SendPropertyChanging();
			entity.InstitutionDocumentType = this;
		}
		
		private void detach_ApplicationEntranceTestDocuments(ApplicationEntranceTestDocument entity)
		{
			this.SendPropertyChanging();
			entity.InstitutionDocumentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstitutionHistory")]
	public partial class InstitutionHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstitutionHistoryID;
		
		private short _InstitutionTypeID;
		
		private int _InstitutionID;
		
		private string _FullName;
		
		private string _BriefName;
		
		private System.Nullable<int> _FormOfLawID;
		
		private System.Nullable<int> _RegionID;
		
		private string _Site;
		
		private string _Address;
		
		private string _Phone;
		
		private string _Fax;
		
		private bool _HasMilitaryDepartment;
		
		private bool _HasHostel;
		
		private System.Nullable<int> _HostelCapacity;
		
		private bool _HasHostelForEntrants;
		
		private System.Nullable<int> _HostelAttachmentID;
		
		private string _INN;
		
		private string _OGRN;
		
		private System.Nullable<System.DateTime> _AdmissionStructurePublishDate;
		
		private System.Nullable<System.DateTime> _ReceivingApplicationDate;
		
		private System.Nullable<int> _EsrpOrgID;
		
		private string _OwnerDepartment;
		
		private string _Accreditation;
		
		private System.Nullable<int> _AccreditationAttachmentID;
		
		private string _LicenseNumber;
		
		private System.Nullable<System.DateTime> _LicenseDate;
		
		private System.Nullable<int> _LicenseAttachmentID;
		
		private System.DateTime _CreatedDate;
		
		private EntityRef<Attachment> _Attachment;
		
		private EntityRef<FormOfLaw> _FormOfLaw;
		
		private EntityRef<Attachment> _Attachment1;
		
		private EntityRef<Attachment> _Attachment2;
		
		private EntityRef<InstitutionType> _InstitutionType;
		
		private EntityRef<RegionType> _RegionType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstitutionHistoryIDChanging(int value);
    partial void OnInstitutionHistoryIDChanged();
    partial void OnInstitutionTypeIDChanging(short value);
    partial void OnInstitutionTypeIDChanged();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnBriefNameChanging(string value);
    partial void OnBriefNameChanged();
    partial void OnFormOfLawIDChanging(System.Nullable<int> value);
    partial void OnFormOfLawIDChanged();
    partial void OnRegionIDChanging(System.Nullable<int> value);
    partial void OnRegionIDChanged();
    partial void OnSiteChanging(string value);
    partial void OnSiteChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnHasMilitaryDepartmentChanging(bool value);
    partial void OnHasMilitaryDepartmentChanged();
    partial void OnHasHostelChanging(bool value);
    partial void OnHasHostelChanged();
    partial void OnHostelCapacityChanging(System.Nullable<int> value);
    partial void OnHostelCapacityChanged();
    partial void OnHasHostelForEntrantsChanging(bool value);
    partial void OnHasHostelForEntrantsChanged();
    partial void OnHostelAttachmentIDChanging(System.Nullable<int> value);
    partial void OnHostelAttachmentIDChanged();
    partial void OnINNChanging(string value);
    partial void OnINNChanged();
    partial void OnOGRNChanging(string value);
    partial void OnOGRNChanged();
    partial void OnAdmissionStructurePublishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAdmissionStructurePublishDateChanged();
    partial void OnReceivingApplicationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceivingApplicationDateChanged();
    partial void OnEsrpOrgIDChanging(System.Nullable<int> value);
    partial void OnEsrpOrgIDChanged();
    partial void OnOwnerDepartmentChanging(string value);
    partial void OnOwnerDepartmentChanged();
    partial void OnAccreditationChanging(string value);
    partial void OnAccreditationChanged();
    partial void OnAccreditationAttachmentIDChanging(System.Nullable<int> value);
    partial void OnAccreditationAttachmentIDChanged();
    partial void OnLicenseNumberChanging(string value);
    partial void OnLicenseNumberChanged();
    partial void OnLicenseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLicenseDateChanged();
    partial void OnLicenseAttachmentIDChanging(System.Nullable<int> value);
    partial void OnLicenseAttachmentIDChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public InstitutionHistory()
		{
			this._Attachment = default(EntityRef<Attachment>);
			this._FormOfLaw = default(EntityRef<FormOfLaw>);
			this._Attachment1 = default(EntityRef<Attachment>);
			this._Attachment2 = default(EntityRef<Attachment>);
			this._InstitutionType = default(EntityRef<InstitutionType>);
			this._RegionType = default(EntityRef<RegionType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionHistoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InstitutionHistoryID
		{
			get
			{
				return this._InstitutionHistoryID;
			}
			set
			{
				if ((this._InstitutionHistoryID != value))
				{
					this.OnInstitutionHistoryIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionHistoryID = value;
					this.SendPropertyChanged("InstitutionHistoryID");
					this.OnInstitutionHistoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionTypeID", DbType="SmallInt NOT NULL")]
		public short InstitutionTypeID
		{
			get
			{
				return this._InstitutionTypeID;
			}
			set
			{
				if ((this._InstitutionTypeID != value))
				{
					if (this._InstitutionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionTypeIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionTypeID = value;
					this.SendPropertyChanged("InstitutionTypeID");
					this.OnInstitutionTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(1000)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BriefName", DbType="VarChar(500)")]
		public string BriefName
		{
			get
			{
				return this._BriefName;
			}
			set
			{
				if ((this._BriefName != value))
				{
					this.OnBriefNameChanging(value);
					this.SendPropertyChanging();
					this._BriefName = value;
					this.SendPropertyChanged("BriefName");
					this.OnBriefNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormOfLawID", DbType="Int")]
		public System.Nullable<int> FormOfLawID
		{
			get
			{
				return this._FormOfLawID;
			}
			set
			{
				if ((this._FormOfLawID != value))
				{
					if (this._FormOfLaw.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFormOfLawIDChanging(value);
					this.SendPropertyChanging();
					this._FormOfLawID = value;
					this.SendPropertyChanged("FormOfLawID");
					this.OnFormOfLawIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int")]
		public System.Nullable<int> RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					if (this._RegionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="VarChar(255)")]
		public string Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(500)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(50)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasMilitaryDepartment", DbType="Bit NOT NULL")]
		public bool HasMilitaryDepartment
		{
			get
			{
				return this._HasMilitaryDepartment;
			}
			set
			{
				if ((this._HasMilitaryDepartment != value))
				{
					this.OnHasMilitaryDepartmentChanging(value);
					this.SendPropertyChanging();
					this._HasMilitaryDepartment = value;
					this.SendPropertyChanged("HasMilitaryDepartment");
					this.OnHasMilitaryDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasHostel", DbType="Bit NOT NULL")]
		public bool HasHostel
		{
			get
			{
				return this._HasHostel;
			}
			set
			{
				if ((this._HasHostel != value))
				{
					this.OnHasHostelChanging(value);
					this.SendPropertyChanging();
					this._HasHostel = value;
					this.SendPropertyChanged("HasHostel");
					this.OnHasHostelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostelCapacity", DbType="Int")]
		public System.Nullable<int> HostelCapacity
		{
			get
			{
				return this._HostelCapacity;
			}
			set
			{
				if ((this._HostelCapacity != value))
				{
					this.OnHostelCapacityChanging(value);
					this.SendPropertyChanging();
					this._HostelCapacity = value;
					this.SendPropertyChanged("HostelCapacity");
					this.OnHostelCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasHostelForEntrants", DbType="Bit NOT NULL")]
		public bool HasHostelForEntrants
		{
			get
			{
				return this._HasHostelForEntrants;
			}
			set
			{
				if ((this._HasHostelForEntrants != value))
				{
					this.OnHasHostelForEntrantsChanging(value);
					this.SendPropertyChanging();
					this._HasHostelForEntrants = value;
					this.SendPropertyChanged("HasHostelForEntrants");
					this.OnHasHostelForEntrantsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HostelAttachmentID", DbType="Int")]
		public System.Nullable<int> HostelAttachmentID
		{
			get
			{
				return this._HostelAttachmentID;
			}
			set
			{
				if ((this._HostelAttachmentID != value))
				{
					if (this._Attachment1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnHostelAttachmentIDChanging(value);
					this.SendPropertyChanging();
					this._HostelAttachmentID = value;
					this.SendPropertyChanged("HostelAttachmentID");
					this.OnHostelAttachmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INN", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string INN
		{
			get
			{
				return this._INN;
			}
			set
			{
				if ((this._INN != value))
				{
					this.OnINNChanging(value);
					this.SendPropertyChanging();
					this._INN = value;
					this.SendPropertyChanged("INN");
					this.OnINNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OGRN", DbType="Char(13) NOT NULL", CanBeNull=false)]
		public string OGRN
		{
			get
			{
				return this._OGRN;
			}
			set
			{
				if ((this._OGRN != value))
				{
					this.OnOGRNChanging(value);
					this.SendPropertyChanging();
					this._OGRN = value;
					this.SendPropertyChanged("OGRN");
					this.OnOGRNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionStructurePublishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AdmissionStructurePublishDate
		{
			get
			{
				return this._AdmissionStructurePublishDate;
			}
			set
			{
				if ((this._AdmissionStructurePublishDate != value))
				{
					this.OnAdmissionStructurePublishDateChanging(value);
					this.SendPropertyChanging();
					this._AdmissionStructurePublishDate = value;
					this.SendPropertyChanged("AdmissionStructurePublishDate");
					this.OnAdmissionStructurePublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivingApplicationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceivingApplicationDate
		{
			get
			{
				return this._ReceivingApplicationDate;
			}
			set
			{
				if ((this._ReceivingApplicationDate != value))
				{
					this.OnReceivingApplicationDateChanging(value);
					this.SendPropertyChanging();
					this._ReceivingApplicationDate = value;
					this.SendPropertyChanged("ReceivingApplicationDate");
					this.OnReceivingApplicationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EsrpOrgID", DbType="Int")]
		public System.Nullable<int> EsrpOrgID
		{
			get
			{
				return this._EsrpOrgID;
			}
			set
			{
				if ((this._EsrpOrgID != value))
				{
					this.OnEsrpOrgIDChanging(value);
					this.SendPropertyChanging();
					this._EsrpOrgID = value;
					this.SendPropertyChanged("EsrpOrgID");
					this.OnEsrpOrgIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerDepartment", DbType="VarChar(255)")]
		public string OwnerDepartment
		{
			get
			{
				return this._OwnerDepartment;
			}
			set
			{
				if ((this._OwnerDepartment != value))
				{
					this.OnOwnerDepartmentChanging(value);
					this.SendPropertyChanging();
					this._OwnerDepartment = value;
					this.SendPropertyChanged("OwnerDepartment");
					this.OnOwnerDepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accreditation", DbType="VarChar(500)")]
		public string Accreditation
		{
			get
			{
				return this._Accreditation;
			}
			set
			{
				if ((this._Accreditation != value))
				{
					this.OnAccreditationChanging(value);
					this.SendPropertyChanging();
					this._Accreditation = value;
					this.SendPropertyChanged("Accreditation");
					this.OnAccreditationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccreditationAttachmentID", DbType="Int")]
		public System.Nullable<int> AccreditationAttachmentID
		{
			get
			{
				return this._AccreditationAttachmentID;
			}
			set
			{
				if ((this._AccreditationAttachmentID != value))
				{
					if (this._Attachment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccreditationAttachmentIDChanging(value);
					this.SendPropertyChanging();
					this._AccreditationAttachmentID = value;
					this.SendPropertyChanged("AccreditationAttachmentID");
					this.OnAccreditationAttachmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseNumber", DbType="VarChar(50)")]
		public string LicenseNumber
		{
			get
			{
				return this._LicenseNumber;
			}
			set
			{
				if ((this._LicenseNumber != value))
				{
					this.OnLicenseNumberChanging(value);
					this.SendPropertyChanging();
					this._LicenseNumber = value;
					this.SendPropertyChanged("LicenseNumber");
					this.OnLicenseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LicenseDate
		{
			get
			{
				return this._LicenseDate;
			}
			set
			{
				if ((this._LicenseDate != value))
				{
					this.OnLicenseDateChanging(value);
					this.SendPropertyChanging();
					this._LicenseDate = value;
					this.SendPropertyChanged("LicenseDate");
					this.OnLicenseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseAttachmentID", DbType="Int")]
		public System.Nullable<int> LicenseAttachmentID
		{
			get
			{
				return this._LicenseAttachmentID;
			}
			set
			{
				if ((this._LicenseAttachmentID != value))
				{
					if (this._Attachment2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLicenseAttachmentIDChanging(value);
					this.SendPropertyChanging();
					this._LicenseAttachmentID = value;
					this.SendPropertyChanged("LicenseAttachmentID");
					this.OnLicenseAttachmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attachment_InstitutionHistory", Storage="_Attachment", ThisKey="AccreditationAttachmentID", OtherKey="AttachmentID", IsForeignKey=true)]
		public Attachment Attachment
		{
			get
			{
				return this._Attachment.Entity;
			}
			set
			{
				Attachment previousValue = this._Attachment.Entity;
				if (((previousValue != value) 
							|| (this._Attachment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Attachment.Entity = null;
						previousValue.InstitutionHistories.Remove(this);
					}
					this._Attachment.Entity = value;
					if ((value != null))
					{
						value.InstitutionHistories.Add(this);
						this._AccreditationAttachmentID = value.AttachmentID;
					}
					else
					{
						this._AccreditationAttachmentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Attachment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FormOfLaw_InstitutionHistory", Storage="_FormOfLaw", ThisKey="FormOfLawID", OtherKey="FormOfLawID", IsForeignKey=true)]
		public FormOfLaw FormOfLaw
		{
			get
			{
				return this._FormOfLaw.Entity;
			}
			set
			{
				FormOfLaw previousValue = this._FormOfLaw.Entity;
				if (((previousValue != value) 
							|| (this._FormOfLaw.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FormOfLaw.Entity = null;
						previousValue.InstitutionHistories.Remove(this);
					}
					this._FormOfLaw.Entity = value;
					if ((value != null))
					{
						value.InstitutionHistories.Add(this);
						this._FormOfLawID = value.FormOfLawID;
					}
					else
					{
						this._FormOfLawID = default(Nullable<int>);
					}
					this.SendPropertyChanged("FormOfLaw");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attachment_InstitutionHistory1", Storage="_Attachment1", ThisKey="HostelAttachmentID", OtherKey="AttachmentID", IsForeignKey=true)]
		public Attachment Attachment1
		{
			get
			{
				return this._Attachment1.Entity;
			}
			set
			{
				Attachment previousValue = this._Attachment1.Entity;
				if (((previousValue != value) 
							|| (this._Attachment1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Attachment1.Entity = null;
						previousValue.InstitutionHistories1.Remove(this);
					}
					this._Attachment1.Entity = value;
					if ((value != null))
					{
						value.InstitutionHistories1.Add(this);
						this._HostelAttachmentID = value.AttachmentID;
					}
					else
					{
						this._HostelAttachmentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Attachment1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attachment_InstitutionHistory2", Storage="_Attachment2", ThisKey="LicenseAttachmentID", OtherKey="AttachmentID", IsForeignKey=true)]
		public Attachment Attachment2
		{
			get
			{
				return this._Attachment2.Entity;
			}
			set
			{
				Attachment previousValue = this._Attachment2.Entity;
				if (((previousValue != value) 
							|| (this._Attachment2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Attachment2.Entity = null;
						previousValue.InstitutionHistories2.Remove(this);
					}
					this._Attachment2.Entity = value;
					if ((value != null))
					{
						value.InstitutionHistories2.Add(this);
						this._LicenseAttachmentID = value.AttachmentID;
					}
					else
					{
						this._LicenseAttachmentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Attachment2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstitutionType_InstitutionHistory", Storage="_InstitutionType", ThisKey="InstitutionTypeID", OtherKey="InstitutionTypeID", IsForeignKey=true)]
		public InstitutionType InstitutionType
		{
			get
			{
				return this._InstitutionType.Entity;
			}
			set
			{
				InstitutionType previousValue = this._InstitutionType.Entity;
				if (((previousValue != value) 
							|| (this._InstitutionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstitutionType.Entity = null;
						previousValue.InstitutionHistories.Remove(this);
					}
					this._InstitutionType.Entity = value;
					if ((value != null))
					{
						value.InstitutionHistories.Add(this);
						this._InstitutionTypeID = value.InstitutionTypeID;
					}
					else
					{
						this._InstitutionTypeID = default(short);
					}
					this.SendPropertyChanged("InstitutionType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegionType_InstitutionHistory", Storage="_RegionType", ThisKey="RegionID", OtherKey="RegionId", IsForeignKey=true, DeleteRule="SET NULL")]
		public RegionType RegionType
		{
			get
			{
				return this._RegionType.Entity;
			}
			set
			{
				RegionType previousValue = this._RegionType.Entity;
				if (((previousValue != value) 
							|| (this._RegionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegionType.Entity = null;
						previousValue.InstitutionHistories.Remove(this);
					}
					this._RegionType.Entity = value;
					if ((value != null))
					{
						value.InstitutionHistories.Add(this);
						this._RegionID = value.RegionId;
					}
					else
					{
						this._RegionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RegionType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstitutionItem")]
	public partial class InstitutionItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstitutionItemID;
		
		private int _InstitutionID;
		
		private short _ItemTypeID;
		
		private string _Name;
		
		private string _BriefName;
		
		private System.Nullable<int> _DirectionID;
		
		private System.Nullable<int> _ParentID;
		
		private string _Site;
		
		private string _UID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<InstitutionItem> _InstitutionItems;
		
		private EntitySet<InstitutionStructure> _InstitutionStructures;
		
		private EntityRef<Direction> _Direction;
		
		private EntityRef<Institution> _Institution;
		
		private EntityRef<InstitutionItem> _InstitutionItem1;
		
		private EntityRef<InstitutionItemType> _InstitutionItemType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstitutionItemIDChanging(int value);
    partial void OnInstitutionItemIDChanged();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnItemTypeIDChanging(short value);
    partial void OnItemTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBriefNameChanging(string value);
    partial void OnBriefNameChanged();
    partial void OnDirectionIDChanging(System.Nullable<int> value);
    partial void OnDirectionIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnSiteChanging(string value);
    partial void OnSiteChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public InstitutionItem()
		{
			this._InstitutionItems = new EntitySet<InstitutionItem>(new Action<InstitutionItem>(this.attach_InstitutionItems), new Action<InstitutionItem>(this.detach_InstitutionItems));
			this._InstitutionStructures = new EntitySet<InstitutionStructure>(new Action<InstitutionStructure>(this.attach_InstitutionStructures), new Action<InstitutionStructure>(this.detach_InstitutionStructures));
			this._Direction = default(EntityRef<Direction>);
			this._Institution = default(EntityRef<Institution>);
			this._InstitutionItem1 = default(EntityRef<InstitutionItem>);
			this._InstitutionItemType = default(EntityRef<InstitutionItemType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionItemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InstitutionItemID
		{
			get
			{
				return this._InstitutionItemID;
			}
			set
			{
				if ((this._InstitutionItemID != value))
				{
					this.OnInstitutionItemIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionItemID = value;
					this.SendPropertyChanged("InstitutionItemID");
					this.OnInstitutionItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					if (this._Institution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTypeID", DbType="SmallInt NOT NULL")]
		public short ItemTypeID
		{
			get
			{
				return this._ItemTypeID;
			}
			set
			{
				if ((this._ItemTypeID != value))
				{
					if (this._InstitutionItemType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ItemTypeID = value;
					this.SendPropertyChanged("ItemTypeID");
					this.OnItemTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BriefName", DbType="VarChar(50)")]
		public string BriefName
		{
			get
			{
				return this._BriefName;
			}
			set
			{
				if ((this._BriefName != value))
				{
					this.OnBriefNameChanging(value);
					this.SendPropertyChanging();
					this._BriefName = value;
					this.SendPropertyChanged("BriefName");
					this.OnBriefNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int")]
		public System.Nullable<int> DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					if (this._Direction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._InstitutionItem1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Site", DbType="VarChar(255)")]
		public string Site
		{
			get
			{
				return this._Site;
			}
			set
			{
				if ((this._Site != value))
				{
					this.OnSiteChanging(value);
					this.SendPropertyChanging();
					this._Site = value;
					this.SendPropertyChanged("Site");
					this.OnSiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstitutionItem_InstitutionItem", Storage="_InstitutionItems", ThisKey="InstitutionItemID", OtherKey="ParentID")]
		public EntitySet<InstitutionItem> InstitutionItems
		{
			get
			{
				return this._InstitutionItems;
			}
			set
			{
				this._InstitutionItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstitutionItem_InstitutionStructure", Storage="_InstitutionStructures", ThisKey="InstitutionItemID", OtherKey="InstitutionItemID")]
		public EntitySet<InstitutionStructure> InstitutionStructures
		{
			get
			{
				return this._InstitutionStructures;
			}
			set
			{
				this._InstitutionStructures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Direction_InstitutionItem", Storage="_Direction", ThisKey="DirectionID", OtherKey="DirectionID", IsForeignKey=true)]
		public Direction Direction
		{
			get
			{
				return this._Direction.Entity;
			}
			set
			{
				Direction previousValue = this._Direction.Entity;
				if (((previousValue != value) 
							|| (this._Direction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Direction.Entity = null;
						previousValue.InstitutionItems.Remove(this);
					}
					this._Direction.Entity = value;
					if ((value != null))
					{
						value.InstitutionItems.Add(this);
						this._DirectionID = value.DirectionID;
					}
					else
					{
						this._DirectionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Direction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_InstitutionItem", Storage="_Institution", ThisKey="InstitutionID", OtherKey="InstitutionID", IsForeignKey=true)]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.InstitutionItems.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.InstitutionItems.Add(this);
						this._InstitutionID = value.InstitutionID;
					}
					else
					{
						this._InstitutionID = default(int);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstitutionItem_InstitutionItem", Storage="_InstitutionItem1", ThisKey="ParentID", OtherKey="InstitutionItemID", IsForeignKey=true)]
		public InstitutionItem InstitutionItem1
		{
			get
			{
				return this._InstitutionItem1.Entity;
			}
			set
			{
				InstitutionItem previousValue = this._InstitutionItem1.Entity;
				if (((previousValue != value) 
							|| (this._InstitutionItem1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstitutionItem1.Entity = null;
						previousValue.InstitutionItems.Remove(this);
					}
					this._InstitutionItem1.Entity = value;
					if ((value != null))
					{
						value.InstitutionItems.Add(this);
						this._ParentID = value.InstitutionItemID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("InstitutionItem1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstitutionItemType_InstitutionItem", Storage="_InstitutionItemType", ThisKey="ItemTypeID", OtherKey="ItemTypeID", IsForeignKey=true)]
		public InstitutionItemType InstitutionItemType
		{
			get
			{
				return this._InstitutionItemType.Entity;
			}
			set
			{
				InstitutionItemType previousValue = this._InstitutionItemType.Entity;
				if (((previousValue != value) 
							|| (this._InstitutionItemType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstitutionItemType.Entity = null;
						previousValue.InstitutionItems.Remove(this);
					}
					this._InstitutionItemType.Entity = value;
					if ((value != null))
					{
						value.InstitutionItems.Add(this);
						this._ItemTypeID = value.ItemTypeID;
					}
					else
					{
						this._ItemTypeID = default(short);
					}
					this.SendPropertyChanged("InstitutionItemType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InstitutionItems(InstitutionItem entity)
		{
			this.SendPropertyChanging();
			entity.InstitutionItem1 = this;
		}
		
		private void detach_InstitutionItems(InstitutionItem entity)
		{
			this.SendPropertyChanging();
			entity.InstitutionItem1 = null;
		}
		
		private void attach_InstitutionStructures(InstitutionStructure entity)
		{
			this.SendPropertyChanging();
			entity.InstitutionItem = this;
		}
		
		private void detach_InstitutionStructures(InstitutionStructure entity)
		{
			this.SendPropertyChanging();
			entity.InstitutionItem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstitutionItemType")]
	public partial class InstitutionItemType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _ItemTypeID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<InstitutionItem> _InstitutionItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemTypeIDChanging(short value);
    partial void OnItemTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public InstitutionItemType()
		{
			this._InstitutionItems = new EntitySet<InstitutionItem>(new Action<InstitutionItem>(this.attach_InstitutionItems), new Action<InstitutionItem>(this.detach_InstitutionItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemTypeID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short ItemTypeID
		{
			get
			{
				return this._ItemTypeID;
			}
			set
			{
				if ((this._ItemTypeID != value))
				{
					this.OnItemTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ItemTypeID = value;
					this.SendPropertyChanged("ItemTypeID");
					this.OnItemTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstitutionItemType_InstitutionItem", Storage="_InstitutionItems", ThisKey="ItemTypeID", OtherKey="ItemTypeID")]
		public EntitySet<InstitutionItem> InstitutionItems
		{
			get
			{
				return this._InstitutionItems;
			}
			set
			{
				this._InstitutionItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InstitutionItems(InstitutionItem entity)
		{
			this.SendPropertyChanging();
			entity.InstitutionItemType = this;
		}
		
		private void detach_InstitutionItems(InstitutionItem entity)
		{
			this.SendPropertyChanging();
			entity.InstitutionItemType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstitutionLicense")]
	public partial class InstitutionLicense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LicenseID;
		
		private int _InstitutionID;
		
		private string _LicenseNumber;
		
		private System.DateTime _LicenseDate;
		
		private System.Nullable<int> _AttachmentID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<Attachment> _Attachment;
		
		private EntityRef<Institution> _Institution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLicenseIDChanging(int value);
    partial void OnLicenseIDChanged();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnLicenseNumberChanging(string value);
    partial void OnLicenseNumberChanged();
    partial void OnLicenseDateChanging(System.DateTime value);
    partial void OnLicenseDateChanged();
    partial void OnAttachmentIDChanging(System.Nullable<int> value);
    partial void OnAttachmentIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public InstitutionLicense()
		{
			this._Attachment = default(EntityRef<Attachment>);
			this._Institution = default(EntityRef<Institution>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LicenseID
		{
			get
			{
				return this._LicenseID;
			}
			set
			{
				if ((this._LicenseID != value))
				{
					this.OnLicenseIDChanging(value);
					this.SendPropertyChanging();
					this._LicenseID = value;
					this.SendPropertyChanged("LicenseID");
					this.OnLicenseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					if (this._Institution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LicenseNumber
		{
			get
			{
				return this._LicenseNumber;
			}
			set
			{
				if ((this._LicenseNumber != value))
				{
					this.OnLicenseNumberChanging(value);
					this.SendPropertyChanging();
					this._LicenseNumber = value;
					this.SendPropertyChanged("LicenseNumber");
					this.OnLicenseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseDate", DbType="DateTime NOT NULL")]
		public System.DateTime LicenseDate
		{
			get
			{
				return this._LicenseDate;
			}
			set
			{
				if ((this._LicenseDate != value))
				{
					this.OnLicenseDateChanging(value);
					this.SendPropertyChanging();
					this._LicenseDate = value;
					this.SendPropertyChanged("LicenseDate");
					this.OnLicenseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentID", DbType="Int")]
		public System.Nullable<int> AttachmentID
		{
			get
			{
				return this._AttachmentID;
			}
			set
			{
				if ((this._AttachmentID != value))
				{
					if (this._Attachment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAttachmentIDChanging(value);
					this.SendPropertyChanging();
					this._AttachmentID = value;
					this.SendPropertyChanged("AttachmentID");
					this.OnAttachmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attachment_InstitutionLicense", Storage="_Attachment", ThisKey="AttachmentID", OtherKey="AttachmentID", IsForeignKey=true)]
		public Attachment Attachment
		{
			get
			{
				return this._Attachment.Entity;
			}
			set
			{
				Attachment previousValue = this._Attachment.Entity;
				if (((previousValue != value) 
							|| (this._Attachment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Attachment.Entity = null;
						previousValue.InstitutionLicenses.Remove(this);
					}
					this._Attachment.Entity = value;
					if ((value != null))
					{
						value.InstitutionLicenses.Add(this);
						this._AttachmentID = value.AttachmentID;
					}
					else
					{
						this._AttachmentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Attachment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_InstitutionLicense", Storage="_Institution", ThisKey="InstitutionID", OtherKey="InstitutionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.InstitutionLicenses.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.InstitutionLicenses.Add(this);
						this._InstitutionID = value.InstitutionID;
					}
					else
					{
						this._InstitutionID = default(int);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstitutionStructure")]
	public partial class InstitutionStructure : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InstitutionStructureID;
		
		private int _InstitutionItemID;
		
		private System.Nullable<int> _ParentID;
		
		private short _Depth;
		
		private string _Lineage;
		
		private string _UID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<InstitutionStructure> _InstitutionStructures;
		
		private EntityRef<InstitutionItem> _InstitutionItem;
		
		private EntityRef<InstitutionStructure> _InstitutionStructure1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstitutionStructureIDChanging(int value);
    partial void OnInstitutionStructureIDChanged();
    partial void OnInstitutionItemIDChanging(int value);
    partial void OnInstitutionItemIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnDepthChanging(short value);
    partial void OnDepthChanged();
    partial void OnLineageChanging(string value);
    partial void OnLineageChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public InstitutionStructure()
		{
			this._InstitutionStructures = new EntitySet<InstitutionStructure>(new Action<InstitutionStructure>(this.attach_InstitutionStructures), new Action<InstitutionStructure>(this.detach_InstitutionStructures));
			this._InstitutionItem = default(EntityRef<InstitutionItem>);
			this._InstitutionStructure1 = default(EntityRef<InstitutionStructure>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionStructureID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InstitutionStructureID
		{
			get
			{
				return this._InstitutionStructureID;
			}
			set
			{
				if ((this._InstitutionStructureID != value))
				{
					this.OnInstitutionStructureIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionStructureID = value;
					this.SendPropertyChanged("InstitutionStructureID");
					this.OnInstitutionStructureIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionItemID", DbType="Int NOT NULL")]
		public int InstitutionItemID
		{
			get
			{
				return this._InstitutionItemID;
			}
			set
			{
				if ((this._InstitutionItemID != value))
				{
					if (this._InstitutionItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionItemIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionItemID = value;
					this.SendPropertyChanged("InstitutionItemID");
					this.OnInstitutionItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					if (this._InstitutionStructure1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Depth", DbType="SmallInt NOT NULL")]
		public short Depth
		{
			get
			{
				return this._Depth;
			}
			set
			{
				if ((this._Depth != value))
				{
					this.OnDepthChanging(value);
					this.SendPropertyChanging();
					this._Depth = value;
					this.SendPropertyChanged("Depth");
					this.OnDepthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lineage", DbType="VarChar(76) NOT NULL", CanBeNull=false)]
		public string Lineage
		{
			get
			{
				return this._Lineage;
			}
			set
			{
				if ((this._Lineage != value))
				{
					this.OnLineageChanging(value);
					this.SendPropertyChanging();
					this._Lineage = value;
					this.SendPropertyChanged("Lineage");
					this.OnLineageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstitutionStructure_InstitutionStructure", Storage="_InstitutionStructures", ThisKey="InstitutionStructureID", OtherKey="ParentID")]
		public EntitySet<InstitutionStructure> InstitutionStructures
		{
			get
			{
				return this._InstitutionStructures;
			}
			set
			{
				this._InstitutionStructures.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstitutionItem_InstitutionStructure", Storage="_InstitutionItem", ThisKey="InstitutionItemID", OtherKey="InstitutionItemID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public InstitutionItem InstitutionItem
		{
			get
			{
				return this._InstitutionItem.Entity;
			}
			set
			{
				InstitutionItem previousValue = this._InstitutionItem.Entity;
				if (((previousValue != value) 
							|| (this._InstitutionItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstitutionItem.Entity = null;
						previousValue.InstitutionStructures.Remove(this);
					}
					this._InstitutionItem.Entity = value;
					if ((value != null))
					{
						value.InstitutionStructures.Add(this);
						this._InstitutionItemID = value.InstitutionItemID;
					}
					else
					{
						this._InstitutionItemID = default(int);
					}
					this.SendPropertyChanged("InstitutionItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstitutionStructure_InstitutionStructure", Storage="_InstitutionStructure1", ThisKey="ParentID", OtherKey="InstitutionStructureID", IsForeignKey=true)]
		public InstitutionStructure InstitutionStructure1
		{
			get
			{
				return this._InstitutionStructure1.Entity;
			}
			set
			{
				InstitutionStructure previousValue = this._InstitutionStructure1.Entity;
				if (((previousValue != value) 
							|| (this._InstitutionStructure1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._InstitutionStructure1.Entity = null;
						previousValue.InstitutionStructures.Remove(this);
					}
					this._InstitutionStructure1.Entity = value;
					if ((value != null))
					{
						value.InstitutionStructures.Add(this);
						this._ParentID = value.InstitutionStructureID;
					}
					else
					{
						this._ParentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("InstitutionStructure1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InstitutionStructures(InstitutionStructure entity)
		{
			this.SendPropertyChanging();
			entity.InstitutionStructure1 = this;
		}
		
		private void detach_InstitutionStructures(InstitutionStructure entity)
		{
			this.SendPropertyChanging();
			entity.InstitutionStructure1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InstitutionType")]
	public partial class InstitutionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _InstitutionTypeID;
		
		private string _BriefName;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<Institution> _Institutions;
		
		private EntitySet<InstitutionHistory> _InstitutionHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInstitutionTypeIDChanging(short value);
    partial void OnInstitutionTypeIDChanged();
    partial void OnBriefNameChanging(string value);
    partial void OnBriefNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public InstitutionType()
		{
			this._Institutions = new EntitySet<Institution>(new Action<Institution>(this.attach_Institutions), new Action<Institution>(this.detach_Institutions));
			this._InstitutionHistories = new EntitySet<InstitutionHistory>(new Action<InstitutionHistory>(this.attach_InstitutionHistories), new Action<InstitutionHistory>(this.detach_InstitutionHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionTypeID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short InstitutionTypeID
		{
			get
			{
				return this._InstitutionTypeID;
			}
			set
			{
				if ((this._InstitutionTypeID != value))
				{
					this.OnInstitutionTypeIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionTypeID = value;
					this.SendPropertyChanged("InstitutionTypeID");
					this.OnInstitutionTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BriefName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string BriefName
		{
			get
			{
				return this._BriefName;
			}
			set
			{
				if ((this._BriefName != value))
				{
					this.OnBriefNameChanging(value);
					this.SendPropertyChanging();
					this._BriefName = value;
					this.SendPropertyChanged("BriefName");
					this.OnBriefNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstitutionType_Institution", Storage="_Institutions", ThisKey="InstitutionTypeID", OtherKey="InstitutionTypeID")]
		public EntitySet<Institution> Institutions
		{
			get
			{
				return this._Institutions;
			}
			set
			{
				this._Institutions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="InstitutionType_InstitutionHistory", Storage="_InstitutionHistories", ThisKey="InstitutionTypeID", OtherKey="InstitutionTypeID")]
		public EntitySet<InstitutionHistory> InstitutionHistories
		{
			get
			{
				return this._InstitutionHistories;
			}
			set
			{
				this._InstitutionHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Institutions(Institution entity)
		{
			this.SendPropertyChanging();
			entity.InstitutionType = this;
		}
		
		private void detach_Institutions(Institution entity)
		{
			this.SendPropertyChanging();
			entity.InstitutionType = null;
		}
		
		private void attach_InstitutionHistories(InstitutionHistory entity)
		{
			this.SendPropertyChanging();
			entity.InstitutionType = this;
		}
		
		private void detach_InstitutionHistories(InstitutionHistory entity)
		{
			this.SendPropertyChanging();
			entity.InstitutionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LevelBudget")]
	public partial class LevelBudget : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdLevelBudget;
		
		private string _BudgetName;
		
		private EntitySet<Application> _Applications;
		
		private EntitySet<DistributedAdmissionVolume> _DistributedAdmissionVolumes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdLevelBudgetChanging(int value);
    partial void OnIdLevelBudgetChanged();
    partial void OnBudgetNameChanging(string value);
    partial void OnBudgetNameChanged();
    #endregion
		
		public LevelBudget()
		{
			this._Applications = new EntitySet<Application>(new Action<Application>(this.attach_Applications), new Action<Application>(this.detach_Applications));
			this._DistributedAdmissionVolumes = new EntitySet<DistributedAdmissionVolume>(new Action<DistributedAdmissionVolume>(this.attach_DistributedAdmissionVolumes), new Action<DistributedAdmissionVolume>(this.detach_DistributedAdmissionVolumes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLevelBudget", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdLevelBudget
		{
			get
			{
				return this._IdLevelBudget;
			}
			set
			{
				if ((this._IdLevelBudget != value))
				{
					this.OnIdLevelBudgetChanging(value);
					this.SendPropertyChanging();
					this._IdLevelBudget = value;
					this.SendPropertyChanged("IdLevelBudget");
					this.OnIdLevelBudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BudgetName", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string BudgetName
		{
			get
			{
				return this._BudgetName;
			}
			set
			{
				if ((this._BudgetName != value))
				{
					this.OnBudgetNameChanging(value);
					this.SendPropertyChanging();
					this._BudgetName = value;
					this.SendPropertyChanged("BudgetName");
					this.OnBudgetNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelBudget_Application", Storage="_Applications", ThisKey="IdLevelBudget", OtherKey="OrderIdLevelBudget")]
		public EntitySet<Application> Applications
		{
			get
			{
				return this._Applications;
			}
			set
			{
				this._Applications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LevelBudget_DistributedAdmissionVolume", Storage="_DistributedAdmissionVolumes", ThisKey="IdLevelBudget", OtherKey="IdLevelBudget")]
		public EntitySet<DistributedAdmissionVolume> DistributedAdmissionVolumes
		{
			get
			{
				return this._DistributedAdmissionVolumes;
			}
			set
			{
				this._DistributedAdmissionVolumes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.LevelBudget = this;
		}
		
		private void detach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.LevelBudget = null;
		}
		
		private void attach_DistributedAdmissionVolumes(DistributedAdmissionVolume entity)
		{
			this.SendPropertyChanging();
			entity.LevelBudget = this;
		}
		
		private void detach_DistributedAdmissionVolumes(DistributedAdmissionVolume entity)
		{
			this.SendPropertyChanging();
			entity.LevelBudget = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.map_AdmissionData")]
	public partial class map_AdmissionData
	{
		
		private int _NewAdmissionStructureId;
		
		private System.Nullable<int> _OldAdmissionStructureId;
		
		public map_AdmissionData()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewAdmissionStructureId", DbType="Int NOT NULL")]
		public int NewAdmissionStructureId
		{
			get
			{
				return this._NewAdmissionStructureId;
			}
			set
			{
				if ((this._NewAdmissionStructureId != value))
				{
					this._NewAdmissionStructureId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldAdmissionStructureId", DbType="Int")]
		public System.Nullable<int> OldAdmissionStructureId
		{
			get
			{
				return this._OldAdmissionStructureId;
			}
			set
			{
				if ((this._OldAdmissionStructureId != value))
				{
					this._OldAdmissionStructureId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.map_AdmissionVolume")]
	public partial class map_AdmissionVolume
	{
		
		private int _NewAdmissionVolumeId;
		
		private System.Nullable<int> _OldAdmissionVolumeId;
		
		private string _NewUID;
		
		private string _OldUID;
		
		public map_AdmissionVolume()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewAdmissionVolumeId", DbType="Int NOT NULL")]
		public int NewAdmissionVolumeId
		{
			get
			{
				return this._NewAdmissionVolumeId;
			}
			set
			{
				if ((this._NewAdmissionVolumeId != value))
				{
					this._NewAdmissionVolumeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldAdmissionVolumeId", DbType="Int")]
		public System.Nullable<int> OldAdmissionVolumeId
		{
			get
			{
				return this._OldAdmissionVolumeId;
			}
			set
			{
				if ((this._OldAdmissionVolumeId != value))
				{
					this._OldAdmissionVolumeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUID", DbType="VarChar(200)")]
		public string NewUID
		{
			get
			{
				return this._NewUID;
			}
			set
			{
				if ((this._NewUID != value))
				{
					this._NewUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldUID", DbType="VarChar(200)")]
		public string OldUID
		{
			get
			{
				return this._OldUID;
			}
			set
			{
				if ((this._OldUID != value))
				{
					this._OldUID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.map_Application")]
	public partial class map_Application
	{
		
		private int _NewCompetitiveGroupItemId;
		
		private System.Nullable<int> _OldCompetitiveGroupItemId;
		
		public map_Application()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCompetitiveGroupItemId", DbType="Int NOT NULL")]
		public int NewCompetitiveGroupItemId
		{
			get
			{
				return this._NewCompetitiveGroupItemId;
			}
			set
			{
				if ((this._NewCompetitiveGroupItemId != value))
				{
					this._NewCompetitiveGroupItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCompetitiveGroupItemId", DbType="Int")]
		public System.Nullable<int> OldCompetitiveGroupItemId
		{
			get
			{
				return this._OldCompetitiveGroupItemId;
			}
			set
			{
				if ((this._OldCompetitiveGroupItemId != value))
				{
					this._OldCompetitiveGroupItemId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.map_ApplicationSelectedCompetitiveGroupItem")]
	public partial class map_ApplicationSelectedCompetitiveGroupItem
	{
		
		private int _NewItemId;
		
		private System.Nullable<int> _OldItemId;
		
		public map_ApplicationSelectedCompetitiveGroupItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewItemId", DbType="Int NOT NULL")]
		public int NewItemId
		{
			get
			{
				return this._NewItemId;
			}
			set
			{
				if ((this._NewItemId != value))
				{
					this._NewItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldItemId", DbType="Int")]
		public System.Nullable<int> OldItemId
		{
			get
			{
				return this._OldItemId;
			}
			set
			{
				if ((this._OldItemId != value))
				{
					this._OldItemId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.map_CompetitiveGroupItem")]
	public partial class map_CompetitiveGroupItem
	{
		
		private int _NewCompetitiveGroupItemId;
		
		private System.Nullable<int> _OldCompetitiveGroupItemId;
		
		private string _NewUID;
		
		private string _OldUID;
		
		public map_CompetitiveGroupItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCompetitiveGroupItemId", DbType="Int NOT NULL")]
		public int NewCompetitiveGroupItemId
		{
			get
			{
				return this._NewCompetitiveGroupItemId;
			}
			set
			{
				if ((this._NewCompetitiveGroupItemId != value))
				{
					this._NewCompetitiveGroupItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCompetitiveGroupItemId", DbType="Int")]
		public System.Nullable<int> OldCompetitiveGroupItemId
		{
			get
			{
				return this._OldCompetitiveGroupItemId;
			}
			set
			{
				if ((this._OldCompetitiveGroupItemId != value))
				{
					this._OldCompetitiveGroupItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUID", DbType="VarChar(200)")]
		public string NewUID
		{
			get
			{
				return this._NewUID;
			}
			set
			{
				if ((this._NewUID != value))
				{
					this._NewUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldUID", DbType="VarChar(200)")]
		public string OldUID
		{
			get
			{
				return this._OldUID;
			}
			set
			{
				if ((this._OldUID != value))
				{
					this._OldUID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.map_CompetitiveGroupTargetItem")]
	public partial class map_CompetitiveGroupTargetItem
	{
		
		private int _NewCompetitiveGroupTargetItemId;
		
		private System.Nullable<int> _OldCompetitiveGroupTargetItemId;
		
		private string _NewUID;
		
		private string _OldUID;
		
		public map_CompetitiveGroupTargetItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCompetitiveGroupTargetItemId", DbType="Int NOT NULL")]
		public int NewCompetitiveGroupTargetItemId
		{
			get
			{
				return this._NewCompetitiveGroupTargetItemId;
			}
			set
			{
				if ((this._NewCompetitiveGroupTargetItemId != value))
				{
					this._NewCompetitiveGroupTargetItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCompetitiveGroupTargetItemId", DbType="Int")]
		public System.Nullable<int> OldCompetitiveGroupTargetItemId
		{
			get
			{
				return this._OldCompetitiveGroupTargetItemId;
			}
			set
			{
				if ((this._OldCompetitiveGroupTargetItemId != value))
				{
					this._OldCompetitiveGroupTargetItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUID", DbType="VarChar(200)")]
		public string NewUID
		{
			get
			{
				return this._NewUID;
			}
			set
			{
				if ((this._NewUID != value))
				{
					this._NewUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldUID", DbType="VarChar(200)")]
		public string OldUID
		{
			get
			{
				return this._OldUID;
			}
			set
			{
				if ((this._OldUID != value))
				{
					this._OldUID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.map_Directions")]
	public partial class map_Direction
	{
		
		private int _NewDirectionId;
		
		private System.Nullable<int> _OldDirectionId;
		
		private string _NewUID;
		
		private string _OldUID;
		
		public map_Direction()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewDirectionId", DbType="Int NOT NULL")]
		public int NewDirectionId
		{
			get
			{
				return this._NewDirectionId;
			}
			set
			{
				if ((this._NewDirectionId != value))
				{
					this._NewDirectionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldDirectionId", DbType="Int")]
		public System.Nullable<int> OldDirectionId
		{
			get
			{
				return this._OldDirectionId;
			}
			set
			{
				if ((this._OldDirectionId != value))
				{
					this._OldDirectionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUID", DbType="VarChar(200)")]
		public string NewUID
		{
			get
			{
				return this._NewUID;
			}
			set
			{
				if ((this._NewUID != value))
				{
					this._NewUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldUID", DbType="VarChar(200)")]
		public string OldUID
		{
			get
			{
				return this._OldUID;
			}
			set
			{
				if ((this._OldUID != value))
				{
					this._OldUID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.map_EntranceTestProfileDirection")]
	public partial class map_EntranceTestProfileDirection
	{
		
		private int _NewProfileDirectionId;
		
		private System.Nullable<int> _OldProfileDirectionId;
		
		public map_EntranceTestProfileDirection()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewProfileDirectionId", DbType="Int NOT NULL")]
		public int NewProfileDirectionId
		{
			get
			{
				return this._NewProfileDirectionId;
			}
			set
			{
				if ((this._NewProfileDirectionId != value))
				{
					this._NewProfileDirectionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldProfileDirectionId", DbType="Int")]
		public System.Nullable<int> OldProfileDirectionId
		{
			get
			{
				return this._OldProfileDirectionId;
			}
			set
			{
				if ((this._OldProfileDirectionId != value))
				{
					this._OldProfileDirectionId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.map_InstitutionItem")]
	public partial class map_InstitutionItem
	{
		
		private int _NewInstitutionItemId;
		
		private System.Nullable<int> _OldInstitutionItemId;
		
		private string _NewUID;
		
		private string _OldUID;
		
		public map_InstitutionItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewInstitutionItemId", DbType="Int NOT NULL")]
		public int NewInstitutionItemId
		{
			get
			{
				return this._NewInstitutionItemId;
			}
			set
			{
				if ((this._NewInstitutionItemId != value))
				{
					this._NewInstitutionItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldInstitutionItemId", DbType="Int")]
		public System.Nullable<int> OldInstitutionItemId
		{
			get
			{
				return this._OldInstitutionItemId;
			}
			set
			{
				if ((this._OldInstitutionItemId != value))
				{
					this._OldInstitutionItemId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUID", DbType="VarChar(200)")]
		public string NewUID
		{
			get
			{
				return this._NewUID;
			}
			set
			{
				if ((this._NewUID != value))
				{
					this._NewUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldUID", DbType="VarChar(200)")]
		public string OldUID
		{
			get
			{
				return this._OldUID;
			}
			set
			{
				if ((this._OldUID != value))
				{
					this._OldUID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.map_InstitutionStructure")]
	public partial class map_InstitutionStructure
	{
		
		private int _NewInstitutionStructureId;
		
		private System.Nullable<int> _OldInstitutionStructureId;
		
		private string _NewUID;
		
		private string _OldUID;
		
		public map_InstitutionStructure()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewInstitutionStructureId", DbType="Int NOT NULL")]
		public int NewInstitutionStructureId
		{
			get
			{
				return this._NewInstitutionStructureId;
			}
			set
			{
				if ((this._NewInstitutionStructureId != value))
				{
					this._NewInstitutionStructureId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldInstitutionStructureId", DbType="Int")]
		public System.Nullable<int> OldInstitutionStructureId
		{
			get
			{
				return this._OldInstitutionStructureId;
			}
			set
			{
				if ((this._OldInstitutionStructureId != value))
				{
					this._OldInstitutionStructureId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUID", DbType="VarChar(200)")]
		public string NewUID
		{
			get
			{
				return this._NewUID;
			}
			set
			{
				if ((this._NewUID != value))
				{
					this._NewUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldUID", DbType="VarChar(200)")]
		public string OldUID
		{
			get
			{
				return this._OldUID;
			}
			set
			{
				if ((this._OldUID != value))
				{
					this._OldUID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Migrations")]
	public partial class Migration
	{
		
		private int _Id;
		
		private string _ScriptName;
		
		private System.DateTime _ScriptDate;
		
		public Migration()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScriptName", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string ScriptName
		{
			get
			{
				return this._ScriptName;
			}
			set
			{
				if ((this._ScriptName != value))
				{
					this._ScriptName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScriptDate", DbType="DateTime NOT NULL")]
		public System.DateTime ScriptDate
		{
			get
			{
				return this._ScriptDate;
			}
			set
			{
				if ((this._ScriptDate != value))
				{
					this._ScriptDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MinScoreByRON")]
	public partial class MinScoreByRON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _SubjectId;
		
		private int _Year;
		
		private int _MinScore;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSubjectIdChanging(int value);
    partial void OnSubjectIdChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnMinScoreChanging(int value);
    partial void OnMinScoreChanged();
    #endregion
		
		public MinScoreByRON()
		{
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectId", DbType="Int NOT NULL")]
		public int SubjectId
		{
			get
			{
				return this._SubjectId;
			}
			set
			{
				if ((this._SubjectId != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIdChanging(value);
					this.SendPropertyChanging();
					this._SubjectId = value;
					this.SendPropertyChanged("SubjectId");
					this.OnSubjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
		public int Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinScore", DbType="Int NOT NULL")]
		public int MinScore
		{
			get
			{
				return this._MinScore;
			}
			set
			{
				if ((this._MinScore != value))
				{
					this.OnMinScoreChanging(value);
					this.SendPropertyChanging();
					this._MinScore = value;
					this.SendPropertyChanged("MinScore");
					this.OnMinScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_MinScoreByRON", Storage="_Subject", ThisKey="SubjectId", OtherKey="SubjectID", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.MinScoreByRONs.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.MinScoreByRONs.Add(this);
						this._SubjectId = value.SubjectID;
					}
					else
					{
						this._SubjectId = default(int);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonitoringPriem")]
	public partial class MonitoringPriem
	{
		
		private System.Nullable<int> _Id;
		
		private System.Nullable<int> _EsrpId;
		
		private string _GUID;
		
		private System.Nullable<System.DateTime> _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private string _Action;
		
		public MonitoringPriem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int")]
		public System.Nullable<int> Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EsrpId", DbType="Int")]
		public System.Nullable<int> EsrpId
		{
			get
			{
				return this._EsrpId;
			}
			set
			{
				if ((this._EsrpId != value))
				{
					this._EsrpId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="VarChar(50)")]
		public string GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this._GUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this._DateBegin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this._DateEnd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="VarChar(500)")]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this._Action = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonitoringPriemV2")]
	public partial class MonitoringPriemV2
	{
		
		private System.Nullable<int> _id;
		
		private System.Nullable<int> _Esrpid;
		
		private string _GUID;
		
		private System.Nullable<System.DateTime> _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private string _Type;
		
		private string _number;
		
		public MonitoringPriemV2()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int")]
		public System.Nullable<int> id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Esrpid", DbType="Int")]
		public System.Nullable<int> Esrpid
		{
			get
			{
				return this._Esrpid;
			}
			set
			{
				if ((this._Esrpid != value))
				{
					this._Esrpid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="VarChar(50)")]
		public string GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this._GUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this._DateBegin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this._DateEnd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(100)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number", DbType="VarChar(50)")]
		public string number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this._number = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonitoringPriemV3")]
	public partial class MonitoringPriemV3
	{
		
		private System.Nullable<int> _id;
		
		private System.Nullable<int> _Esrpid;
		
		private string _GUID;
		
		private System.Nullable<System.DateTime> _DateBegin;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private string _Type;
		
		private string _number;
		
		public MonitoringPriemV3()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int")]
		public System.Nullable<int> id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Esrpid", DbType="Int")]
		public System.Nullable<int> Esrpid
		{
			get
			{
				return this._Esrpid;
			}
			set
			{
				if ((this._Esrpid != value))
				{
					this._Esrpid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GUID", DbType="VarChar(50)")]
		public string GUID
		{
			get
			{
				return this._GUID;
			}
			set
			{
				if ((this._GUID != value))
				{
					this._GUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateBegin", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateBegin
		{
			get
			{
				return this._DateBegin;
			}
			set
			{
				if ((this._DateBegin != value))
				{
					this._DateBegin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this._DateEnd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(100)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number", DbType="VarChar(50)")]
		public string number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this._number = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NationalityType")]
	public partial class NationalityType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NationalityID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNationalityIDChanging(int value);
    partial void OnNationalityIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public NationalityType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalityID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NationalityID
		{
			get
			{
				return this._NationalityID;
			}
			set
			{
				if ((this._NationalityID != value))
				{
					this.OnNationalityIDChanging(value);
					this.SendPropertyChanging();
					this._NationalityID = value;
					this.SendPropertyChanged("NationalityID");
					this.OnNationalityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NormativeDictionary")]
	public partial class NormativeDictionary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DictionaryID;
		
		private string _Name;
		
		private int _VersionID;
		
		private System.Nullable<System.DateTime> _ActivationDate;
		
		private byte _VersionStateID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<NormativeVersionState> _NormativeVersionState;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDictionaryIDChanging(int value);
    partial void OnDictionaryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnVersionIDChanging(int value);
    partial void OnVersionIDChanged();
    partial void OnActivationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActivationDateChanged();
    partial void OnVersionStateIDChanging(byte value);
    partial void OnVersionStateIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public NormativeDictionary()
		{
			this._NormativeVersionState = default(EntityRef<NormativeVersionState>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DictionaryID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DictionaryID
		{
			get
			{
				return this._DictionaryID;
			}
			set
			{
				if ((this._DictionaryID != value))
				{
					this.OnDictionaryIDChanging(value);
					this.SendPropertyChanging();
					this._DictionaryID = value;
					this.SendPropertyChanged("DictionaryID");
					this.OnDictionaryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionID", DbType="Int NOT NULL")]
		public int VersionID
		{
			get
			{
				return this._VersionID;
			}
			set
			{
				if ((this._VersionID != value))
				{
					this.OnVersionIDChanging(value);
					this.SendPropertyChanging();
					this._VersionID = value;
					this.SendPropertyChanged("VersionID");
					this.OnVersionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActivationDate
		{
			get
			{
				return this._ActivationDate;
			}
			set
			{
				if ((this._ActivationDate != value))
				{
					this.OnActivationDateChanging(value);
					this.SendPropertyChanging();
					this._ActivationDate = value;
					this.SendPropertyChanged("ActivationDate");
					this.OnActivationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionStateID", DbType="TinyInt NOT NULL")]
		public byte VersionStateID
		{
			get
			{
				return this._VersionStateID;
			}
			set
			{
				if ((this._VersionStateID != value))
				{
					if (this._NormativeVersionState.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVersionStateIDChanging(value);
					this.SendPropertyChanging();
					this._VersionStateID = value;
					this.SendPropertyChanged("VersionStateID");
					this.OnVersionStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NormativeVersionState_NormativeDictionary", Storage="_NormativeVersionState", ThisKey="VersionStateID", OtherKey="VersionStateID", IsForeignKey=true)]
		public NormativeVersionState NormativeVersionState
		{
			get
			{
				return this._NormativeVersionState.Entity;
			}
			set
			{
				NormativeVersionState previousValue = this._NormativeVersionState.Entity;
				if (((previousValue != value) 
							|| (this._NormativeVersionState.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NormativeVersionState.Entity = null;
						previousValue.NormativeDictionaries.Remove(this);
					}
					this._NormativeVersionState.Entity = value;
					if ((value != null))
					{
						value.NormativeDictionaries.Add(this);
						this._VersionStateID = value.VersionStateID;
					}
					else
					{
						this._VersionStateID = default(byte);
					}
					this.SendPropertyChanged("NormativeVersionState");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NormativeVersionState")]
	public partial class NormativeVersionState : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _VersionStateID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<NormativeDictionary> _NormativeDictionaries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVersionStateIDChanging(byte value);
    partial void OnVersionStateIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public NormativeVersionState()
		{
			this._NormativeDictionaries = new EntitySet<NormativeDictionary>(new Action<NormativeDictionary>(this.attach_NormativeDictionaries), new Action<NormativeDictionary>(this.detach_NormativeDictionaries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionStateID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte VersionStateID
		{
			get
			{
				return this._VersionStateID;
			}
			set
			{
				if ((this._VersionStateID != value))
				{
					this.OnVersionStateIDChanging(value);
					this.SendPropertyChanging();
					this._VersionStateID = value;
					this.SendPropertyChanged("VersionStateID");
					this.OnVersionStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NormativeVersionState_NormativeDictionary", Storage="_NormativeDictionaries", ThisKey="VersionStateID", OtherKey="VersionStateID")]
		public EntitySet<NormativeDictionary> NormativeDictionaries
		{
			get
			{
				return this._NormativeDictionaries;
			}
			set
			{
				this._NormativeDictionaries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NormativeDictionaries(NormativeDictionary entity)
		{
			this.SendPropertyChanging();
			entity.NormativeVersionState = this;
		}
		
		private void detach_NormativeDictionaries(NormativeDictionary entity)
		{
			this.SendPropertyChanging();
			entity.NormativeVersionState = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OlympicDiplomant")]
	public partial class OlympicDiplomant : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OlympicDiplomantID;
		
		private int _OlympicTypeProfileID;
		
		private System.Nullable<long> _OlympicDiplomantIdentityDocumentID;
		
		private System.Nullable<int> _SchoolRegionID;
		
		private System.Nullable<long> _SchoolEgeCode;
		
		private string _SchoolEgeName;
		
		private System.Nullable<System.DateTime> _EndingDate;
		
		private System.Nullable<int> _FormNumber;
		
		private string _DiplomaSeries;
		
		private string _DiplomaNumber;
		
		private System.Nullable<System.DateTime> _DiplomaDateIssue;
		
		private short _ResultLevelID;
		
		private System.DateTime _CreateDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private System.Nullable<System.DateTime> _DeleteDate;
		
		private string _Comment;
		
		private System.Nullable<int> _StatusID;
		
		private string _AdoptionUnfoundedComment;
		
		private System.Nullable<int> _PersonId;
		
		private System.Nullable<System.DateTime> _PersonLinkDate;
		
		private EntitySet<OlympicDiplomantDocument> _OlympicDiplomantDocuments;
		
		private EntityRef<OlympicDiplomantDocument> _OlympicDiplomantDocument;
		
		private EntityRef<OlympicDiplomantStatus> _OlympicDiplomantStatus;
		
		private EntityRef<OlympicDiplomType> _OlympicDiplomType;
		
		private EntityRef<OlympicTypeProfile> _OlympicTypeProfile;
		
		private EntityRef<RegionType> _RegionType;
		
		private EntityRef<RVIPerson> _RVIPerson;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOlympicDiplomantIDChanging(long value);
    partial void OnOlympicDiplomantIDChanged();
    partial void OnOlympicTypeProfileIDChanging(int value);
    partial void OnOlympicTypeProfileIDChanged();
    partial void OnOlympicDiplomantIdentityDocumentIDChanging(System.Nullable<long> value);
    partial void OnOlympicDiplomantIdentityDocumentIDChanged();
    partial void OnSchoolRegionIDChanging(System.Nullable<int> value);
    partial void OnSchoolRegionIDChanged();
    partial void OnSchoolEgeCodeChanging(System.Nullable<long> value);
    partial void OnSchoolEgeCodeChanged();
    partial void OnSchoolEgeNameChanging(string value);
    partial void OnSchoolEgeNameChanged();
    partial void OnEndingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndingDateChanged();
    partial void OnFormNumberChanging(System.Nullable<int> value);
    partial void OnFormNumberChanged();
    partial void OnDiplomaSeriesChanging(string value);
    partial void OnDiplomaSeriesChanged();
    partial void OnDiplomaNumberChanging(string value);
    partial void OnDiplomaNumberChanged();
    partial void OnDiplomaDateIssueChanging(System.Nullable<System.DateTime> value);
    partial void OnDiplomaDateIssueChanged();
    partial void OnResultLevelIDChanging(short value);
    partial void OnResultLevelIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnDeleteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDeleteDateChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnStatusIDChanging(System.Nullable<int> value);
    partial void OnStatusIDChanged();
    partial void OnAdoptionUnfoundedCommentChanging(string value);
    partial void OnAdoptionUnfoundedCommentChanged();
    partial void OnPersonIdChanging(System.Nullable<int> value);
    partial void OnPersonIdChanged();
    partial void OnPersonLinkDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPersonLinkDateChanged();
    #endregion
		
		public OlympicDiplomant()
		{
			this._OlympicDiplomantDocuments = new EntitySet<OlympicDiplomantDocument>(new Action<OlympicDiplomantDocument>(this.attach_OlympicDiplomantDocuments), new Action<OlympicDiplomantDocument>(this.detach_OlympicDiplomantDocuments));
			this._OlympicDiplomantDocument = default(EntityRef<OlympicDiplomantDocument>);
			this._OlympicDiplomantStatus = default(EntityRef<OlympicDiplomantStatus>);
			this._OlympicDiplomType = default(EntityRef<OlympicDiplomType>);
			this._OlympicTypeProfile = default(EntityRef<OlympicTypeProfile>);
			this._RegionType = default(EntityRef<RegionType>);
			this._RVIPerson = default(EntityRef<RVIPerson>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicDiplomantID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OlympicDiplomantID
		{
			get
			{
				return this._OlympicDiplomantID;
			}
			set
			{
				if ((this._OlympicDiplomantID != value))
				{
					this.OnOlympicDiplomantIDChanging(value);
					this.SendPropertyChanging();
					this._OlympicDiplomantID = value;
					this.SendPropertyChanged("OlympicDiplomantID");
					this.OnOlympicDiplomantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicTypeProfileID", DbType="Int NOT NULL")]
		public int OlympicTypeProfileID
		{
			get
			{
				return this._OlympicTypeProfileID;
			}
			set
			{
				if ((this._OlympicTypeProfileID != value))
				{
					if (this._OlympicTypeProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOlympicTypeProfileIDChanging(value);
					this.SendPropertyChanging();
					this._OlympicTypeProfileID = value;
					this.SendPropertyChanged("OlympicTypeProfileID");
					this.OnOlympicTypeProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicDiplomantIdentityDocumentID", DbType="BigInt")]
		public System.Nullable<long> OlympicDiplomantIdentityDocumentID
		{
			get
			{
				return this._OlympicDiplomantIdentityDocumentID;
			}
			set
			{
				if ((this._OlympicDiplomantIdentityDocumentID != value))
				{
					if (this._OlympicDiplomantDocument.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOlympicDiplomantIdentityDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._OlympicDiplomantIdentityDocumentID = value;
					this.SendPropertyChanged("OlympicDiplomantIdentityDocumentID");
					this.OnOlympicDiplomantIdentityDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolRegionID", DbType="Int")]
		public System.Nullable<int> SchoolRegionID
		{
			get
			{
				return this._SchoolRegionID;
			}
			set
			{
				if ((this._SchoolRegionID != value))
				{
					if (this._RegionType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSchoolRegionIDChanging(value);
					this.SendPropertyChanging();
					this._SchoolRegionID = value;
					this.SendPropertyChanged("SchoolRegionID");
					this.OnSchoolRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolEgeCode", DbType="BigInt")]
		public System.Nullable<long> SchoolEgeCode
		{
			get
			{
				return this._SchoolEgeCode;
			}
			set
			{
				if ((this._SchoolEgeCode != value))
				{
					this.OnSchoolEgeCodeChanging(value);
					this.SendPropertyChanging();
					this._SchoolEgeCode = value;
					this.SendPropertyChanged("SchoolEgeCode");
					this.OnSchoolEgeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolEgeName", DbType="VarChar(1000)")]
		public string SchoolEgeName
		{
			get
			{
				return this._SchoolEgeName;
			}
			set
			{
				if ((this._SchoolEgeName != value))
				{
					this.OnSchoolEgeNameChanging(value);
					this.SendPropertyChanging();
					this._SchoolEgeName = value;
					this.SendPropertyChanged("SchoolEgeName");
					this.OnSchoolEgeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndingDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndingDate
		{
			get
			{
				return this._EndingDate;
			}
			set
			{
				if ((this._EndingDate != value))
				{
					this.OnEndingDateChanging(value);
					this.SendPropertyChanging();
					this._EndingDate = value;
					this.SendPropertyChanged("EndingDate");
					this.OnEndingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormNumber", DbType="Int")]
		public System.Nullable<int> FormNumber
		{
			get
			{
				return this._FormNumber;
			}
			set
			{
				if ((this._FormNumber != value))
				{
					this.OnFormNumberChanging(value);
					this.SendPropertyChanging();
					this._FormNumber = value;
					this.SendPropertyChanged("FormNumber");
					this.OnFormNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiplomaSeries", DbType="VarChar(20)")]
		public string DiplomaSeries
		{
			get
			{
				return this._DiplomaSeries;
			}
			set
			{
				if ((this._DiplomaSeries != value))
				{
					this.OnDiplomaSeriesChanging(value);
					this.SendPropertyChanging();
					this._DiplomaSeries = value;
					this.SendPropertyChanged("DiplomaSeries");
					this.OnDiplomaSeriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiplomaNumber", DbType="VarChar(100)")]
		public string DiplomaNumber
		{
			get
			{
				return this._DiplomaNumber;
			}
			set
			{
				if ((this._DiplomaNumber != value))
				{
					this.OnDiplomaNumberChanging(value);
					this.SendPropertyChanging();
					this._DiplomaNumber = value;
					this.SendPropertyChanged("DiplomaNumber");
					this.OnDiplomaNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiplomaDateIssue", DbType="DateTime")]
		public System.Nullable<System.DateTime> DiplomaDateIssue
		{
			get
			{
				return this._DiplomaDateIssue;
			}
			set
			{
				if ((this._DiplomaDateIssue != value))
				{
					this.OnDiplomaDateIssueChanging(value);
					this.SendPropertyChanging();
					this._DiplomaDateIssue = value;
					this.SendPropertyChanged("DiplomaDateIssue");
					this.OnDiplomaDateIssueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultLevelID", DbType="SmallInt NOT NULL")]
		public short ResultLevelID
		{
			get
			{
				return this._ResultLevelID;
			}
			set
			{
				if ((this._ResultLevelID != value))
				{
					if (this._OlympicDiplomType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResultLevelIDChanging(value);
					this.SendPropertyChanging();
					this._ResultLevelID = value;
					this.SendPropertyChanged("ResultLevelID");
					this.OnResultLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeleteDate
		{
			get
			{
				return this._DeleteDate;
			}
			set
			{
				if ((this._DeleteDate != value))
				{
					this.OnDeleteDateChanging(value);
					this.SendPropertyChanging();
					this._DeleteDate = value;
					this.SendPropertyChanged("DeleteDate");
					this.OnDeleteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int")]
		public System.Nullable<int> StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					if (this._OlympicDiplomantStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdoptionUnfoundedComment", DbType="VarChar(MAX)")]
		public string AdoptionUnfoundedComment
		{
			get
			{
				return this._AdoptionUnfoundedComment;
			}
			set
			{
				if ((this._AdoptionUnfoundedComment != value))
				{
					this.OnAdoptionUnfoundedCommentChanging(value);
					this.SendPropertyChanging();
					this._AdoptionUnfoundedComment = value;
					this.SendPropertyChanged("AdoptionUnfoundedComment");
					this.OnAdoptionUnfoundedCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="Int")]
		public System.Nullable<int> PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._RVIPerson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonLinkDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PersonLinkDate
		{
			get
			{
				return this._PersonLinkDate;
			}
			set
			{
				if ((this._PersonLinkDate != value))
				{
					this.OnPersonLinkDateChanging(value);
					this.SendPropertyChanging();
					this._PersonLinkDate = value;
					this.SendPropertyChanged("PersonLinkDate");
					this.OnPersonLinkDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicDiplomant_OlympicDiplomantDocument", Storage="_OlympicDiplomantDocuments", ThisKey="OlympicDiplomantID", OtherKey="OlympicDiplomantID")]
		public EntitySet<OlympicDiplomantDocument> OlympicDiplomantDocuments
		{
			get
			{
				return this._OlympicDiplomantDocuments;
			}
			set
			{
				this._OlympicDiplomantDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicDiplomantDocument_OlympicDiplomant", Storage="_OlympicDiplomantDocument", ThisKey="OlympicDiplomantIdentityDocumentID", OtherKey="OlympicDiplomantDocumentID", IsForeignKey=true)]
		public OlympicDiplomantDocument OlympicDiplomantDocument
		{
			get
			{
				return this._OlympicDiplomantDocument.Entity;
			}
			set
			{
				OlympicDiplomantDocument previousValue = this._OlympicDiplomantDocument.Entity;
				if (((previousValue != value) 
							|| (this._OlympicDiplomantDocument.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OlympicDiplomantDocument.Entity = null;
						previousValue.OlympicDiplomants.Remove(this);
					}
					this._OlympicDiplomantDocument.Entity = value;
					if ((value != null))
					{
						value.OlympicDiplomants.Add(this);
						this._OlympicDiplomantIdentityDocumentID = value.OlympicDiplomantDocumentID;
					}
					else
					{
						this._OlympicDiplomantIdentityDocumentID = default(Nullable<long>);
					}
					this.SendPropertyChanged("OlympicDiplomantDocument");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicDiplomantStatus_OlympicDiplomant", Storage="_OlympicDiplomantStatus", ThisKey="StatusID", OtherKey="OlympicDiplomantStatusID", IsForeignKey=true)]
		public OlympicDiplomantStatus OlympicDiplomantStatus
		{
			get
			{
				return this._OlympicDiplomantStatus.Entity;
			}
			set
			{
				OlympicDiplomantStatus previousValue = this._OlympicDiplomantStatus.Entity;
				if (((previousValue != value) 
							|| (this._OlympicDiplomantStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OlympicDiplomantStatus.Entity = null;
						previousValue.OlympicDiplomants.Remove(this);
					}
					this._OlympicDiplomantStatus.Entity = value;
					if ((value != null))
					{
						value.OlympicDiplomants.Add(this);
						this._StatusID = value.OlympicDiplomantStatusID;
					}
					else
					{
						this._StatusID = default(Nullable<int>);
					}
					this.SendPropertyChanged("OlympicDiplomantStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicDiplomType_OlympicDiplomant", Storage="_OlympicDiplomType", ThisKey="ResultLevelID", OtherKey="OlympicDiplomTypeID", IsForeignKey=true)]
		public OlympicDiplomType OlympicDiplomType
		{
			get
			{
				return this._OlympicDiplomType.Entity;
			}
			set
			{
				OlympicDiplomType previousValue = this._OlympicDiplomType.Entity;
				if (((previousValue != value) 
							|| (this._OlympicDiplomType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OlympicDiplomType.Entity = null;
						previousValue.OlympicDiplomants.Remove(this);
					}
					this._OlympicDiplomType.Entity = value;
					if ((value != null))
					{
						value.OlympicDiplomants.Add(this);
						this._ResultLevelID = value.OlympicDiplomTypeID;
					}
					else
					{
						this._ResultLevelID = default(short);
					}
					this.SendPropertyChanged("OlympicDiplomType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicTypeProfile_OlympicDiplomant", Storage="_OlympicTypeProfile", ThisKey="OlympicTypeProfileID", OtherKey="OlympicTypeProfileID", IsForeignKey=true)]
		public OlympicTypeProfile OlympicTypeProfile
		{
			get
			{
				return this._OlympicTypeProfile.Entity;
			}
			set
			{
				OlympicTypeProfile previousValue = this._OlympicTypeProfile.Entity;
				if (((previousValue != value) 
							|| (this._OlympicTypeProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OlympicTypeProfile.Entity = null;
						previousValue.OlympicDiplomants.Remove(this);
					}
					this._OlympicTypeProfile.Entity = value;
					if ((value != null))
					{
						value.OlympicDiplomants.Add(this);
						this._OlympicTypeProfileID = value.OlympicTypeProfileID;
					}
					else
					{
						this._OlympicTypeProfileID = default(int);
					}
					this.SendPropertyChanged("OlympicTypeProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegionType_OlympicDiplomant", Storage="_RegionType", ThisKey="SchoolRegionID", OtherKey="RegionId", IsForeignKey=true)]
		public RegionType RegionType
		{
			get
			{
				return this._RegionType.Entity;
			}
			set
			{
				RegionType previousValue = this._RegionType.Entity;
				if (((previousValue != value) 
							|| (this._RegionType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegionType.Entity = null;
						previousValue.OlympicDiplomants.Remove(this);
					}
					this._RegionType.Entity = value;
					if ((value != null))
					{
						value.OlympicDiplomants.Add(this);
						this._SchoolRegionID = value.RegionId;
					}
					else
					{
						this._SchoolRegionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("RegionType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RVIPerson_OlympicDiplomant", Storage="_RVIPerson", ThisKey="PersonId", OtherKey="PersonId", IsForeignKey=true)]
		public RVIPerson RVIPerson
		{
			get
			{
				return this._RVIPerson.Entity;
			}
			set
			{
				RVIPerson previousValue = this._RVIPerson.Entity;
				if (((previousValue != value) 
							|| (this._RVIPerson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RVIPerson.Entity = null;
						previousValue.OlympicDiplomants.Remove(this);
					}
					this._RVIPerson.Entity = value;
					if ((value != null))
					{
						value.OlympicDiplomants.Add(this);
						this._PersonId = value.PersonId;
					}
					else
					{
						this._PersonId = default(Nullable<int>);
					}
					this.SendPropertyChanged("RVIPerson");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OlympicDiplomantDocuments(OlympicDiplomantDocument entity)
		{
			this.SendPropertyChanging();
			entity.OlympicDiplomant = this;
		}
		
		private void detach_OlympicDiplomantDocuments(OlympicDiplomantDocument entity)
		{
			this.SendPropertyChanging();
			entity.OlympicDiplomant = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OlympicDiplomantDocument")]
	public partial class OlympicDiplomantDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _OlympicDiplomantDocumentID;
		
		private long _OlympicDiplomantID;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private int _IdentityDocumentTypeID;
		
		private string _DocumentSeries;
		
		private string _DocumentNumber;
		
		private string _OrganizationIssue;
		
		private System.Nullable<System.DateTime> _DateIssue;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private EntitySet<OlympicDiplomant> _OlympicDiplomants;
		
		private EntityRef<IdentityDocumentType> _IdentityDocumentType;
		
		private EntityRef<OlympicDiplomant> _OlympicDiplomant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOlympicDiplomantDocumentIDChanging(long value);
    partial void OnOlympicDiplomantDocumentIDChanged();
    partial void OnOlympicDiplomantIDChanging(long value);
    partial void OnOlympicDiplomantIDChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnIdentityDocumentTypeIDChanging(int value);
    partial void OnIdentityDocumentTypeIDChanged();
    partial void OnDocumentSeriesChanging(string value);
    partial void OnDocumentSeriesChanged();
    partial void OnDocumentNumberChanging(string value);
    partial void OnDocumentNumberChanged();
    partial void OnOrganizationIssueChanging(string value);
    partial void OnOrganizationIssueChanged();
    partial void OnDateIssueChanging(System.Nullable<System.DateTime> value);
    partial void OnDateIssueChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    #endregion
		
		public OlympicDiplomantDocument()
		{
			this._OlympicDiplomants = new EntitySet<OlympicDiplomant>(new Action<OlympicDiplomant>(this.attach_OlympicDiplomants), new Action<OlympicDiplomant>(this.detach_OlympicDiplomants));
			this._IdentityDocumentType = default(EntityRef<IdentityDocumentType>);
			this._OlympicDiplomant = default(EntityRef<OlympicDiplomant>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicDiplomantDocumentID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long OlympicDiplomantDocumentID
		{
			get
			{
				return this._OlympicDiplomantDocumentID;
			}
			set
			{
				if ((this._OlympicDiplomantDocumentID != value))
				{
					this.OnOlympicDiplomantDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._OlympicDiplomantDocumentID = value;
					this.SendPropertyChanged("OlympicDiplomantDocumentID");
					this.OnOlympicDiplomantDocumentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicDiplomantID", DbType="BigInt NOT NULL")]
		public long OlympicDiplomantID
		{
			get
			{
				return this._OlympicDiplomantID;
			}
			set
			{
				if ((this._OlympicDiplomantID != value))
				{
					if (this._OlympicDiplomant.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOlympicDiplomantIDChanging(value);
					this.SendPropertyChanging();
					this._OlympicDiplomantID = value;
					this.SendPropertyChanged("OlympicDiplomantID");
					this.OnOlympicDiplomantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityDocumentTypeID", DbType="Int NOT NULL")]
		public int IdentityDocumentTypeID
		{
			get
			{
				return this._IdentityDocumentTypeID;
			}
			set
			{
				if ((this._IdentityDocumentTypeID != value))
				{
					if (this._IdentityDocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdentityDocumentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._IdentityDocumentTypeID = value;
					this.SendPropertyChanged("IdentityDocumentTypeID");
					this.OnIdentityDocumentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentSeries", DbType="VarChar(20)")]
		public string DocumentSeries
		{
			get
			{
				return this._DocumentSeries;
			}
			set
			{
				if ((this._DocumentSeries != value))
				{
					this.OnDocumentSeriesChanging(value);
					this.SendPropertyChanging();
					this._DocumentSeries = value;
					this.SendPropertyChanged("DocumentSeries");
					this.OnDocumentSeriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="VarChar(100)")]
		public string DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this.OnDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._DocumentNumber = value;
					this.SendPropertyChanged("DocumentNumber");
					this.OnDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationIssue", DbType="VarChar(1000)")]
		public string OrganizationIssue
		{
			get
			{
				return this._OrganizationIssue;
			}
			set
			{
				if ((this._OrganizationIssue != value))
				{
					this.OnOrganizationIssueChanging(value);
					this.SendPropertyChanging();
					this._OrganizationIssue = value;
					this.SendPropertyChanged("OrganizationIssue");
					this.OnOrganizationIssueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateIssue", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateIssue
		{
			get
			{
				return this._DateIssue;
			}
			set
			{
				if ((this._DateIssue != value))
				{
					this.OnDateIssueChanging(value);
					this.SendPropertyChanging();
					this._DateIssue = value;
					this.SendPropertyChanged("DateIssue");
					this.OnDateIssueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(255)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicDiplomantDocument_OlympicDiplomant", Storage="_OlympicDiplomants", ThisKey="OlympicDiplomantDocumentID", OtherKey="OlympicDiplomantIdentityDocumentID")]
		public EntitySet<OlympicDiplomant> OlympicDiplomants
		{
			get
			{
				return this._OlympicDiplomants;
			}
			set
			{
				this._OlympicDiplomants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IdentityDocumentType_OlympicDiplomantDocument", Storage="_IdentityDocumentType", ThisKey="IdentityDocumentTypeID", OtherKey="IdentityDocumentTypeID", IsForeignKey=true)]
		public IdentityDocumentType IdentityDocumentType
		{
			get
			{
				return this._IdentityDocumentType.Entity;
			}
			set
			{
				IdentityDocumentType previousValue = this._IdentityDocumentType.Entity;
				if (((previousValue != value) 
							|| (this._IdentityDocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IdentityDocumentType.Entity = null;
						previousValue.OlympicDiplomantDocuments.Remove(this);
					}
					this._IdentityDocumentType.Entity = value;
					if ((value != null))
					{
						value.OlympicDiplomantDocuments.Add(this);
						this._IdentityDocumentTypeID = value.IdentityDocumentTypeID;
					}
					else
					{
						this._IdentityDocumentTypeID = default(int);
					}
					this.SendPropertyChanged("IdentityDocumentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicDiplomant_OlympicDiplomantDocument", Storage="_OlympicDiplomant", ThisKey="OlympicDiplomantID", OtherKey="OlympicDiplomantID", IsForeignKey=true)]
		public OlympicDiplomant OlympicDiplomant
		{
			get
			{
				return this._OlympicDiplomant.Entity;
			}
			set
			{
				OlympicDiplomant previousValue = this._OlympicDiplomant.Entity;
				if (((previousValue != value) 
							|| (this._OlympicDiplomant.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OlympicDiplomant.Entity = null;
						previousValue.OlympicDiplomantDocuments.Remove(this);
					}
					this._OlympicDiplomant.Entity = value;
					if ((value != null))
					{
						value.OlympicDiplomantDocuments.Add(this);
						this._OlympicDiplomantID = value.OlympicDiplomantID;
					}
					else
					{
						this._OlympicDiplomantID = default(long);
					}
					this.SendPropertyChanged("OlympicDiplomant");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OlympicDiplomants(OlympicDiplomant entity)
		{
			this.SendPropertyChanging();
			entity.OlympicDiplomantDocument = this;
		}
		
		private void detach_OlympicDiplomants(OlympicDiplomant entity)
		{
			this.SendPropertyChanging();
			entity.OlympicDiplomantDocument = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OlympicDiplomantStatus")]
	public partial class OlympicDiplomantStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OlympicDiplomantStatusID;
		
		private string _Name;
		
		private EntitySet<OlympicDiplomant> _OlympicDiplomants;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOlympicDiplomantStatusIDChanging(int value);
    partial void OnOlympicDiplomantStatusIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public OlympicDiplomantStatus()
		{
			this._OlympicDiplomants = new EntitySet<OlympicDiplomant>(new Action<OlympicDiplomant>(this.attach_OlympicDiplomants), new Action<OlympicDiplomant>(this.detach_OlympicDiplomants));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicDiplomantStatusID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OlympicDiplomantStatusID
		{
			get
			{
				return this._OlympicDiplomantStatusID;
			}
			set
			{
				if ((this._OlympicDiplomantStatusID != value))
				{
					this.OnOlympicDiplomantStatusIDChanging(value);
					this.SendPropertyChanging();
					this._OlympicDiplomantStatusID = value;
					this.SendPropertyChanged("OlympicDiplomantStatusID");
					this.OnOlympicDiplomantStatusIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicDiplomantStatus_OlympicDiplomant", Storage="_OlympicDiplomants", ThisKey="OlympicDiplomantStatusID", OtherKey="StatusID")]
		public EntitySet<OlympicDiplomant> OlympicDiplomants
		{
			get
			{
				return this._OlympicDiplomants;
			}
			set
			{
				this._OlympicDiplomants.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OlympicDiplomants(OlympicDiplomant entity)
		{
			this.SendPropertyChanging();
			entity.OlympicDiplomantStatus = this;
		}
		
		private void detach_OlympicDiplomants(OlympicDiplomant entity)
		{
			this.SendPropertyChanging();
			entity.OlympicDiplomantStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OlympicDiplomType")]
	public partial class OlympicDiplomType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _OlympicDiplomTypeID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<BenefitItemC> _BenefitItemCs;
		
		private EntitySet<OlympicDiplomant> _OlympicDiplomants;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOlympicDiplomTypeIDChanging(short value);
    partial void OnOlympicDiplomTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public OlympicDiplomType()
		{
			this._BenefitItemCs = new EntitySet<BenefitItemC>(new Action<BenefitItemC>(this.attach_BenefitItemCs), new Action<BenefitItemC>(this.detach_BenefitItemCs));
			this._OlympicDiplomants = new EntitySet<OlympicDiplomant>(new Action<OlympicDiplomant>(this.attach_OlympicDiplomants), new Action<OlympicDiplomant>(this.detach_OlympicDiplomants));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicDiplomTypeID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short OlympicDiplomTypeID
		{
			get
			{
				return this._OlympicDiplomTypeID;
			}
			set
			{
				if ((this._OlympicDiplomTypeID != value))
				{
					this.OnOlympicDiplomTypeIDChanging(value);
					this.SendPropertyChanging();
					this._OlympicDiplomTypeID = value;
					this.SendPropertyChanged("OlympicDiplomTypeID");
					this.OnOlympicDiplomTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicDiplomType_BenefitItemC", Storage="_BenefitItemCs", ThisKey="OlympicDiplomTypeID", OtherKey="OlympicDiplomTypeID")]
		public EntitySet<BenefitItemC> BenefitItemCs
		{
			get
			{
				return this._BenefitItemCs;
			}
			set
			{
				this._BenefitItemCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicDiplomType_OlympicDiplomant", Storage="_OlympicDiplomants", ThisKey="OlympicDiplomTypeID", OtherKey="ResultLevelID")]
		public EntitySet<OlympicDiplomant> OlympicDiplomants
		{
			get
			{
				return this._OlympicDiplomants;
			}
			set
			{
				this._OlympicDiplomants.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BenefitItemCs(BenefitItemC entity)
		{
			this.SendPropertyChanging();
			entity.OlympicDiplomType = this;
		}
		
		private void detach_BenefitItemCs(BenefitItemC entity)
		{
			this.SendPropertyChanging();
			entity.OlympicDiplomType = null;
		}
		
		private void attach_OlympicDiplomants(OlympicDiplomant entity)
		{
			this.SendPropertyChanging();
			entity.OlympicDiplomType = this;
		}
		
		private void detach_OlympicDiplomants(OlympicDiplomant entity)
		{
			this.SendPropertyChanging();
			entity.OlympicDiplomType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OlympicLevel")]
	public partial class OlympicLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _OlympicLevelID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<OlympicTypeProfile> _OlympicTypeProfiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOlympicLevelIDChanging(short value);
    partial void OnOlympicLevelIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public OlympicLevel()
		{
			this._OlympicTypeProfiles = new EntitySet<OlympicTypeProfile>(new Action<OlympicTypeProfile>(this.attach_OlympicTypeProfiles), new Action<OlympicTypeProfile>(this.detach_OlympicTypeProfiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicLevelID", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short OlympicLevelID
		{
			get
			{
				return this._OlympicLevelID;
			}
			set
			{
				if ((this._OlympicLevelID != value))
				{
					this.OnOlympicLevelIDChanging(value);
					this.SendPropertyChanging();
					this._OlympicLevelID = value;
					this.SendPropertyChanged("OlympicLevelID");
					this.OnOlympicLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicLevel_OlympicTypeProfile", Storage="_OlympicTypeProfiles", ThisKey="OlympicLevelID", OtherKey="OlympicLevelID")]
		public EntitySet<OlympicTypeProfile> OlympicTypeProfiles
		{
			get
			{
				return this._OlympicTypeProfiles;
			}
			set
			{
				this._OlympicTypeProfiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OlympicTypeProfiles(OlympicTypeProfile entity)
		{
			this.SendPropertyChanging();
			entity.OlympicLevel = this;
		}
		
		private void detach_OlympicTypeProfiles(OlympicTypeProfile entity)
		{
			this.SendPropertyChanging();
			entity.OlympicLevel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OlympicProfile")]
	public partial class OlympicProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OlympicProfileID;
		
		private string _ProfileName;
		
		private EntitySet<BenefitItemCOlympicTypeProfile> _BenefitItemCOlympicTypeProfiles;
		
		private EntitySet<BenefitItemCProfile> _BenefitItemCProfiles;
		
		private EntitySet<OlympicTypeProfile> _OlympicTypeProfiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOlympicProfileIDChanging(int value);
    partial void OnOlympicProfileIDChanged();
    partial void OnProfileNameChanging(string value);
    partial void OnProfileNameChanged();
    #endregion
		
		public OlympicProfile()
		{
			this._BenefitItemCOlympicTypeProfiles = new EntitySet<BenefitItemCOlympicTypeProfile>(new Action<BenefitItemCOlympicTypeProfile>(this.attach_BenefitItemCOlympicTypeProfiles), new Action<BenefitItemCOlympicTypeProfile>(this.detach_BenefitItemCOlympicTypeProfiles));
			this._BenefitItemCProfiles = new EntitySet<BenefitItemCProfile>(new Action<BenefitItemCProfile>(this.attach_BenefitItemCProfiles), new Action<BenefitItemCProfile>(this.detach_BenefitItemCProfiles));
			this._OlympicTypeProfiles = new EntitySet<OlympicTypeProfile>(new Action<OlympicTypeProfile>(this.attach_OlympicTypeProfiles), new Action<OlympicTypeProfile>(this.detach_OlympicTypeProfiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicProfileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OlympicProfileID
		{
			get
			{
				return this._OlympicProfileID;
			}
			set
			{
				if ((this._OlympicProfileID != value))
				{
					this.OnOlympicProfileIDChanging(value);
					this.SendPropertyChanging();
					this._OlympicProfileID = value;
					this.SendPropertyChanged("OlympicProfileID");
					this.OnOlympicProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string ProfileName
		{
			get
			{
				return this._ProfileName;
			}
			set
			{
				if ((this._ProfileName != value))
				{
					this.OnProfileNameChanging(value);
					this.SendPropertyChanging();
					this._ProfileName = value;
					this.SendPropertyChanged("ProfileName");
					this.OnProfileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicProfile_BenefitItemCOlympicTypeProfile", Storage="_BenefitItemCOlympicTypeProfiles", ThisKey="OlympicProfileID", OtherKey="OlympicProfileID")]
		public EntitySet<BenefitItemCOlympicTypeProfile> BenefitItemCOlympicTypeProfiles
		{
			get
			{
				return this._BenefitItemCOlympicTypeProfiles;
			}
			set
			{
				this._BenefitItemCOlympicTypeProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicProfile_BenefitItemCProfile", Storage="_BenefitItemCProfiles", ThisKey="OlympicProfileID", OtherKey="OlympicProfileID")]
		public EntitySet<BenefitItemCProfile> BenefitItemCProfiles
		{
			get
			{
				return this._BenefitItemCProfiles;
			}
			set
			{
				this._BenefitItemCProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicProfile_OlympicTypeProfile", Storage="_OlympicTypeProfiles", ThisKey="OlympicProfileID", OtherKey="OlympicProfileID")]
		public EntitySet<OlympicTypeProfile> OlympicTypeProfiles
		{
			get
			{
				return this._OlympicTypeProfiles;
			}
			set
			{
				this._OlympicTypeProfiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BenefitItemCOlympicTypeProfiles(BenefitItemCOlympicTypeProfile entity)
		{
			this.SendPropertyChanging();
			entity.OlympicProfile = this;
		}
		
		private void detach_BenefitItemCOlympicTypeProfiles(BenefitItemCOlympicTypeProfile entity)
		{
			this.SendPropertyChanging();
			entity.OlympicProfile = null;
		}
		
		private void attach_BenefitItemCProfiles(BenefitItemCProfile entity)
		{
			this.SendPropertyChanging();
			entity.OlympicProfile = this;
		}
		
		private void detach_BenefitItemCProfiles(BenefitItemCProfile entity)
		{
			this.SendPropertyChanging();
			entity.OlympicProfile = null;
		}
		
		private void attach_OlympicTypeProfiles(OlympicTypeProfile entity)
		{
			this.SendPropertyChanging();
			entity.OlympicProfile = this;
		}
		
		private void detach_OlympicTypeProfiles(OlympicTypeProfile entity)
		{
			this.SendPropertyChanging();
			entity.OlympicProfile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OlympicSubject")]
	public partial class OlympicSubject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OlympicSubjectID;
		
		private int _OlympicTypeProfileID;
		
		private int _SubjectID;
		
		private EntityRef<OlympicTypeProfile> _OlympicTypeProfile;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOlympicSubjectIDChanging(int value);
    partial void OnOlympicSubjectIDChanged();
    partial void OnOlympicTypeProfileIDChanging(int value);
    partial void OnOlympicTypeProfileIDChanged();
    partial void OnSubjectIDChanging(int value);
    partial void OnSubjectIDChanged();
    #endregion
		
		public OlympicSubject()
		{
			this._OlympicTypeProfile = default(EntityRef<OlympicTypeProfile>);
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicSubjectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OlympicSubjectID
		{
			get
			{
				return this._OlympicSubjectID;
			}
			set
			{
				if ((this._OlympicSubjectID != value))
				{
					this.OnOlympicSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._OlympicSubjectID = value;
					this.SendPropertyChanged("OlympicSubjectID");
					this.OnOlympicSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicTypeProfileID", DbType="Int NOT NULL")]
		public int OlympicTypeProfileID
		{
			get
			{
				return this._OlympicTypeProfileID;
			}
			set
			{
				if ((this._OlympicTypeProfileID != value))
				{
					if (this._OlympicTypeProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOlympicTypeProfileIDChanging(value);
					this.SendPropertyChanging();
					this._OlympicTypeProfileID = value;
					this.SendPropertyChanged("OlympicTypeProfileID");
					this.OnOlympicTypeProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicTypeProfile_OlympicSubject", Storage="_OlympicTypeProfile", ThisKey="OlympicTypeProfileID", OtherKey="OlympicTypeProfileID", IsForeignKey=true)]
		public OlympicTypeProfile OlympicTypeProfile
		{
			get
			{
				return this._OlympicTypeProfile.Entity;
			}
			set
			{
				OlympicTypeProfile previousValue = this._OlympicTypeProfile.Entity;
				if (((previousValue != value) 
							|| (this._OlympicTypeProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OlympicTypeProfile.Entity = null;
						previousValue.OlympicSubjects.Remove(this);
					}
					this._OlympicTypeProfile.Entity = value;
					if ((value != null))
					{
						value.OlympicSubjects.Add(this);
						this._OlympicTypeProfileID = value.OlympicTypeProfileID;
					}
					else
					{
						this._OlympicTypeProfileID = default(int);
					}
					this.SendPropertyChanged("OlympicTypeProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_OlympicSubject", Storage="_Subject", ThisKey="SubjectID", OtherKey="SubjectID", IsForeignKey=true)]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.OlympicSubjects.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.OlympicSubjects.Add(this);
						this._SubjectID = value.SubjectID;
					}
					else
					{
						this._SubjectID = default(int);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OlympicType")]
	public partial class OlympicType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OlympicID;
		
		private string _Name;
		
		private System.Nullable<int> _OlympicNumber;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private int _OlympicYear;
		
		private EntitySet<BenefitItemCOlympicType> _BenefitItemCOlympicTypes;
		
		private EntitySet<OlympicTypeProfile> _OlympicTypeProfiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOlympicIDChanging(int value);
    partial void OnOlympicIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOlympicNumberChanging(System.Nullable<int> value);
    partial void OnOlympicNumberChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnOlympicYearChanging(int value);
    partial void OnOlympicYearChanged();
    #endregion
		
		public OlympicType()
		{
			this._BenefitItemCOlympicTypes = new EntitySet<BenefitItemCOlympicType>(new Action<BenefitItemCOlympicType>(this.attach_BenefitItemCOlympicTypes), new Action<BenefitItemCOlympicType>(this.detach_BenefitItemCOlympicTypes));
			this._OlympicTypeProfiles = new EntitySet<OlympicTypeProfile>(new Action<OlympicTypeProfile>(this.attach_OlympicTypeProfiles), new Action<OlympicTypeProfile>(this.detach_OlympicTypeProfiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OlympicID
		{
			get
			{
				return this._OlympicID;
			}
			set
			{
				if ((this._OlympicID != value))
				{
					this.OnOlympicIDChanging(value);
					this.SendPropertyChanging();
					this._OlympicID = value;
					this.SendPropertyChanged("OlympicID");
					this.OnOlympicIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(1023) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicNumber", DbType="Int")]
		public System.Nullable<int> OlympicNumber
		{
			get
			{
				return this._OlympicNumber;
			}
			set
			{
				if ((this._OlympicNumber != value))
				{
					this.OnOlympicNumberChanging(value);
					this.SendPropertyChanging();
					this._OlympicNumber = value;
					this.SendPropertyChanged("OlympicNumber");
					this.OnOlympicNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicYear", DbType="Int NOT NULL")]
		public int OlympicYear
		{
			get
			{
				return this._OlympicYear;
			}
			set
			{
				if ((this._OlympicYear != value))
				{
					this.OnOlympicYearChanging(value);
					this.SendPropertyChanging();
					this._OlympicYear = value;
					this.SendPropertyChanged("OlympicYear");
					this.OnOlympicYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicType_BenefitItemCOlympicType", Storage="_BenefitItemCOlympicTypes", ThisKey="OlympicID", OtherKey="OlympicTypeID")]
		public EntitySet<BenefitItemCOlympicType> BenefitItemCOlympicTypes
		{
			get
			{
				return this._BenefitItemCOlympicTypes;
			}
			set
			{
				this._BenefitItemCOlympicTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicType_OlympicTypeProfile", Storage="_OlympicTypeProfiles", ThisKey="OlympicID", OtherKey="OlympicTypeID")]
		public EntitySet<OlympicTypeProfile> OlympicTypeProfiles
		{
			get
			{
				return this._OlympicTypeProfiles;
			}
			set
			{
				this._OlympicTypeProfiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BenefitItemCOlympicTypes(BenefitItemCOlympicType entity)
		{
			this.SendPropertyChanging();
			entity.OlympicType = this;
		}
		
		private void detach_BenefitItemCOlympicTypes(BenefitItemCOlympicType entity)
		{
			this.SendPropertyChanging();
			entity.OlympicType = null;
		}
		
		private void attach_OlympicTypeProfiles(OlympicTypeProfile entity)
		{
			this.SendPropertyChanging();
			entity.OlympicType = this;
		}
		
		private void detach_OlympicTypeProfiles(OlympicTypeProfile entity)
		{
			this.SendPropertyChanging();
			entity.OlympicType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OlympicType_copy")]
	public partial class OlympicType_copy
	{
		
		private int _OlympicID;
		
		private string _Name;
		
		private System.Nullable<short> _OlympicLevelID;
		
		private string _OrganizerName;
		
		private int _OlympicNumber;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private int _OlympicYear;
		
		public OlympicType_copy()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicID", DbType="Int NOT NULL")]
		public int OlympicID
		{
			get
			{
				return this._OlympicID;
			}
			set
			{
				if ((this._OlympicID != value))
				{
					this._OlympicID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(1023) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicLevelID", DbType="SmallInt")]
		public System.Nullable<short> OlympicLevelID
		{
			get
			{
				return this._OlympicLevelID;
			}
			set
			{
				if ((this._OlympicLevelID != value))
				{
					this._OlympicLevelID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizerName", DbType="VarChar(4000)")]
		public string OrganizerName
		{
			get
			{
				return this._OrganizerName;
			}
			set
			{
				if ((this._OrganizerName != value))
				{
					this._OrganizerName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicNumber", DbType="Int NOT NULL")]
		public int OlympicNumber
		{
			get
			{
				return this._OlympicNumber;
			}
			set
			{
				if ((this._OlympicNumber != value))
				{
					this._OlympicNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicYear", DbType="Int NOT NULL")]
		public int OlympicYear
		{
			get
			{
				return this._OlympicYear;
			}
			set
			{
				if ((this._OlympicYear != value))
				{
					this._OlympicYear = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OlympicTypeProfile")]
	public partial class OlympicTypeProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OlympicTypeProfileID;
		
		private int _OlympicTypeID;
		
		private System.Nullable<short> _OlympicLevelID;
		
		private int _OlympicProfileID;
		
		private System.Nullable<int> _OrganizerID;
		
		private string _OrganizerName;
		
		private string _OrganizerAddress;
		
		private System.Nullable<bool> _OrganizerConnected;
		
		private System.Nullable<int> _CoOrganizerID;
		
		private System.Nullable<bool> _CoOrganizerConnected;
		
		private System.Nullable<int> _OrgOlympicEnterID;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _Position;
		
		private string _Email;
		
		private string _PhoneNumber;
		
		private EntitySet<OlympicDiplomant> _OlympicDiplomants;
		
		private EntitySet<OlympicSubject> _OlympicSubjects;
		
		private EntityRef<Institution> _Institution;
		
		private EntityRef<Institution> _Institution1;
		
		private EntityRef<OlympicLevel> _OlympicLevel;
		
		private EntityRef<OlympicProfile> _OlympicProfile;
		
		private EntityRef<OlympicType> _OlympicType;
		
		private EntityRef<Institution> _Institution2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOlympicTypeProfileIDChanging(int value);
    partial void OnOlympicTypeProfileIDChanged();
    partial void OnOlympicTypeIDChanging(int value);
    partial void OnOlympicTypeIDChanged();
    partial void OnOlympicLevelIDChanging(System.Nullable<short> value);
    partial void OnOlympicLevelIDChanged();
    partial void OnOlympicProfileIDChanging(int value);
    partial void OnOlympicProfileIDChanged();
    partial void OnOrganizerIDChanging(System.Nullable<int> value);
    partial void OnOrganizerIDChanged();
    partial void OnOrganizerNameChanging(string value);
    partial void OnOrganizerNameChanged();
    partial void OnOrganizerAddressChanging(string value);
    partial void OnOrganizerAddressChanged();
    partial void OnOrganizerConnectedChanging(System.Nullable<bool> value);
    partial void OnOrganizerConnectedChanged();
    partial void OnCoOrganizerIDChanging(System.Nullable<int> value);
    partial void OnCoOrganizerIDChanged();
    partial void OnCoOrganizerConnectedChanging(System.Nullable<bool> value);
    partial void OnCoOrganizerConnectedChanged();
    partial void OnOrgOlympicEnterIDChanging(System.Nullable<int> value);
    partial void OnOrgOlympicEnterIDChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    #endregion
		
		public OlympicTypeProfile()
		{
			this._OlympicDiplomants = new EntitySet<OlympicDiplomant>(new Action<OlympicDiplomant>(this.attach_OlympicDiplomants), new Action<OlympicDiplomant>(this.detach_OlympicDiplomants));
			this._OlympicSubjects = new EntitySet<OlympicSubject>(new Action<OlympicSubject>(this.attach_OlympicSubjects), new Action<OlympicSubject>(this.detach_OlympicSubjects));
			this._Institution = default(EntityRef<Institution>);
			this._Institution1 = default(EntityRef<Institution>);
			this._OlympicLevel = default(EntityRef<OlympicLevel>);
			this._OlympicProfile = default(EntityRef<OlympicProfile>);
			this._OlympicType = default(EntityRef<OlympicType>);
			this._Institution2 = default(EntityRef<Institution>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicTypeProfileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OlympicTypeProfileID
		{
			get
			{
				return this._OlympicTypeProfileID;
			}
			set
			{
				if ((this._OlympicTypeProfileID != value))
				{
					this.OnOlympicTypeProfileIDChanging(value);
					this.SendPropertyChanging();
					this._OlympicTypeProfileID = value;
					this.SendPropertyChanged("OlympicTypeProfileID");
					this.OnOlympicTypeProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicTypeID", DbType="Int NOT NULL")]
		public int OlympicTypeID
		{
			get
			{
				return this._OlympicTypeID;
			}
			set
			{
				if ((this._OlympicTypeID != value))
				{
					if (this._OlympicType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOlympicTypeIDChanging(value);
					this.SendPropertyChanging();
					this._OlympicTypeID = value;
					this.SendPropertyChanged("OlympicTypeID");
					this.OnOlympicTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicLevelID", DbType="SmallInt")]
		public System.Nullable<short> OlympicLevelID
		{
			get
			{
				return this._OlympicLevelID;
			}
			set
			{
				if ((this._OlympicLevelID != value))
				{
					if (this._OlympicLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOlympicLevelIDChanging(value);
					this.SendPropertyChanging();
					this._OlympicLevelID = value;
					this.SendPropertyChanged("OlympicLevelID");
					this.OnOlympicLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicProfileID", DbType="Int NOT NULL")]
		public int OlympicProfileID
		{
			get
			{
				return this._OlympicProfileID;
			}
			set
			{
				if ((this._OlympicProfileID != value))
				{
					if (this._OlympicProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOlympicProfileIDChanging(value);
					this.SendPropertyChanging();
					this._OlympicProfileID = value;
					this.SendPropertyChanged("OlympicProfileID");
					this.OnOlympicProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizerID", DbType="Int")]
		public System.Nullable<int> OrganizerID
		{
			get
			{
				return this._OrganizerID;
			}
			set
			{
				if ((this._OrganizerID != value))
				{
					if (this._Institution2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrganizerIDChanging(value);
					this.SendPropertyChanging();
					this._OrganizerID = value;
					this.SendPropertyChanged("OrganizerID");
					this.OnOrganizerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizerName", DbType="VarChar(1000)")]
		public string OrganizerName
		{
			get
			{
				return this._OrganizerName;
			}
			set
			{
				if ((this._OrganizerName != value))
				{
					this.OnOrganizerNameChanging(value);
					this.SendPropertyChanging();
					this._OrganizerName = value;
					this.SendPropertyChanged("OrganizerName");
					this.OnOrganizerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizerAddress", DbType="VarChar(1000)")]
		public string OrganizerAddress
		{
			get
			{
				return this._OrganizerAddress;
			}
			set
			{
				if ((this._OrganizerAddress != value))
				{
					this.OnOrganizerAddressChanging(value);
					this.SendPropertyChanging();
					this._OrganizerAddress = value;
					this.SendPropertyChanged("OrganizerAddress");
					this.OnOrganizerAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizerConnected", DbType="Bit")]
		public System.Nullable<bool> OrganizerConnected
		{
			get
			{
				return this._OrganizerConnected;
			}
			set
			{
				if ((this._OrganizerConnected != value))
				{
					this.OnOrganizerConnectedChanging(value);
					this.SendPropertyChanging();
					this._OrganizerConnected = value;
					this.SendPropertyChanged("OrganizerConnected");
					this.OnOrganizerConnectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoOrganizerID", DbType="Int")]
		public System.Nullable<int> CoOrganizerID
		{
			get
			{
				return this._CoOrganizerID;
			}
			set
			{
				if ((this._CoOrganizerID != value))
				{
					if (this._Institution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCoOrganizerIDChanging(value);
					this.SendPropertyChanging();
					this._CoOrganizerID = value;
					this.SendPropertyChanged("CoOrganizerID");
					this.OnCoOrganizerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoOrganizerConnected", DbType="Bit")]
		public System.Nullable<bool> CoOrganizerConnected
		{
			get
			{
				return this._CoOrganizerConnected;
			}
			set
			{
				if ((this._CoOrganizerConnected != value))
				{
					this.OnCoOrganizerConnectedChanging(value);
					this.SendPropertyChanging();
					this._CoOrganizerConnected = value;
					this.SendPropertyChanged("CoOrganizerConnected");
					this.OnCoOrganizerConnectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrgOlympicEnterID", DbType="Int")]
		public System.Nullable<int> OrgOlympicEnterID
		{
			get
			{
				return this._OrgOlympicEnterID;
			}
			set
			{
				if ((this._OrgOlympicEnterID != value))
				{
					if (this._Institution1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrgOlympicEnterIDChanging(value);
					this.SendPropertyChanging();
					this._OrgOlympicEnterID = value;
					this.SendPropertyChanged("OrgOlympicEnterID");
					this.OnOrgOlympicEnterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(255)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(255)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(255)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(255)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicTypeProfile_OlympicDiplomant", Storage="_OlympicDiplomants", ThisKey="OlympicTypeProfileID", OtherKey="OlympicTypeProfileID")]
		public EntitySet<OlympicDiplomant> OlympicDiplomants
		{
			get
			{
				return this._OlympicDiplomants;
			}
			set
			{
				this._OlympicDiplomants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicTypeProfile_OlympicSubject", Storage="_OlympicSubjects", ThisKey="OlympicTypeProfileID", OtherKey="OlympicTypeProfileID")]
		public EntitySet<OlympicSubject> OlympicSubjects
		{
			get
			{
				return this._OlympicSubjects;
			}
			set
			{
				this._OlympicSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_OlympicTypeProfile", Storage="_Institution", ThisKey="CoOrganizerID", OtherKey="InstitutionID", IsForeignKey=true)]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.OlympicTypeProfiles.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.OlympicTypeProfiles.Add(this);
						this._CoOrganizerID = value.InstitutionID;
					}
					else
					{
						this._CoOrganizerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_OlympicTypeProfile1", Storage="_Institution1", ThisKey="OrgOlympicEnterID", OtherKey="InstitutionID", IsForeignKey=true)]
		public Institution Institution1
		{
			get
			{
				return this._Institution1.Entity;
			}
			set
			{
				Institution previousValue = this._Institution1.Entity;
				if (((previousValue != value) 
							|| (this._Institution1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution1.Entity = null;
						previousValue.OlympicTypeProfiles1.Remove(this);
					}
					this._Institution1.Entity = value;
					if ((value != null))
					{
						value.OlympicTypeProfiles1.Add(this);
						this._OrgOlympicEnterID = value.InstitutionID;
					}
					else
					{
						this._OrgOlympicEnterID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Institution1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicLevel_OlympicTypeProfile", Storage="_OlympicLevel", ThisKey="OlympicLevelID", OtherKey="OlympicLevelID", IsForeignKey=true)]
		public OlympicLevel OlympicLevel
		{
			get
			{
				return this._OlympicLevel.Entity;
			}
			set
			{
				OlympicLevel previousValue = this._OlympicLevel.Entity;
				if (((previousValue != value) 
							|| (this._OlympicLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OlympicLevel.Entity = null;
						previousValue.OlympicTypeProfiles.Remove(this);
					}
					this._OlympicLevel.Entity = value;
					if ((value != null))
					{
						value.OlympicTypeProfiles.Add(this);
						this._OlympicLevelID = value.OlympicLevelID;
					}
					else
					{
						this._OlympicLevelID = default(Nullable<short>);
					}
					this.SendPropertyChanged("OlympicLevel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicProfile_OlympicTypeProfile", Storage="_OlympicProfile", ThisKey="OlympicProfileID", OtherKey="OlympicProfileID", IsForeignKey=true)]
		public OlympicProfile OlympicProfile
		{
			get
			{
				return this._OlympicProfile.Entity;
			}
			set
			{
				OlympicProfile previousValue = this._OlympicProfile.Entity;
				if (((previousValue != value) 
							|| (this._OlympicProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OlympicProfile.Entity = null;
						previousValue.OlympicTypeProfiles.Remove(this);
					}
					this._OlympicProfile.Entity = value;
					if ((value != null))
					{
						value.OlympicTypeProfiles.Add(this);
						this._OlympicProfileID = value.OlympicProfileID;
					}
					else
					{
						this._OlympicProfileID = default(int);
					}
					this.SendPropertyChanged("OlympicProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OlympicType_OlympicTypeProfile", Storage="_OlympicType", ThisKey="OlympicTypeID", OtherKey="OlympicID", IsForeignKey=true)]
		public OlympicType OlympicType
		{
			get
			{
				return this._OlympicType.Entity;
			}
			set
			{
				OlympicType previousValue = this._OlympicType.Entity;
				if (((previousValue != value) 
							|| (this._OlympicType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OlympicType.Entity = null;
						previousValue.OlympicTypeProfiles.Remove(this);
					}
					this._OlympicType.Entity = value;
					if ((value != null))
					{
						value.OlympicTypeProfiles.Add(this);
						this._OlympicTypeID = value.OlympicID;
					}
					else
					{
						this._OlympicTypeID = default(int);
					}
					this.SendPropertyChanged("OlympicType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_OlympicTypeProfile2", Storage="_Institution2", ThisKey="OrganizerID", OtherKey="InstitutionID", IsForeignKey=true)]
		public Institution Institution2
		{
			get
			{
				return this._Institution2.Entity;
			}
			set
			{
				Institution previousValue = this._Institution2.Entity;
				if (((previousValue != value) 
							|| (this._Institution2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution2.Entity = null;
						previousValue.OlympicTypeProfiles2.Remove(this);
					}
					this._Institution2.Entity = value;
					if ((value != null))
					{
						value.OlympicTypeProfiles2.Add(this);
						this._OrganizerID = value.InstitutionID;
					}
					else
					{
						this._OrganizerID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Institution2");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OlympicDiplomants(OlympicDiplomant entity)
		{
			this.SendPropertyChanging();
			entity.OlympicTypeProfile = this;
		}
		
		private void detach_OlympicDiplomants(OlympicDiplomant entity)
		{
			this.SendPropertyChanging();
			entity.OlympicTypeProfile = null;
		}
		
		private void attach_OlympicSubjects(OlympicSubject entity)
		{
			this.SendPropertyChanging();
			entity.OlympicTypeProfile = this;
		}
		
		private void detach_OlympicSubjects(OlympicSubject entity)
		{
			this.SendPropertyChanging();
			entity.OlympicTypeProfile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderOfAdmission")]
	public partial class OrderOfAdmission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderID;
		
		private short _OrderStatus;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateEdited;
		
		private System.Nullable<System.DateTime> _DatePublished;
		
		private int _InstitutionID;
		
		private string _UID;
		
		private int _CampaignID;
		
		private System.Nullable<int> _Course;
		
		private System.Nullable<short> _EducationLevelID;
		
		private System.Nullable<short> _EducationFormID;
		
		private System.Nullable<short> _EducationSourceID;
		
		private System.Nullable<short> _Stage;
		
		private bool _IsForBeneficiary;
		
		private bool _IsForeigner;
		
		private string _OrderName;
		
		private string _OrderNumber;
		
		private System.Nullable<System.DateTime> _OrderDate;
		
		private EntitySet<Application> _Applications;
		
		private EntitySet<OrderOfAdmissionHistory> _OrderOfAdmissionHistories;
		
		private EntityRef<AdmissionItemType> _AdmissionItemType;
		
		private EntityRef<AdmissionItemType> _AdmissionItemType1;
		
		private EntityRef<AdmissionItemType> _AdmissionItemType2;
		
		private EntityRef<Campaign> _Campaign;
		
		private EntityRef<Institution> _Institution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnOrderStatusChanging(short value);
    partial void OnOrderStatusChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateEditedChanging(System.DateTime value);
    partial void OnDateEditedChanged();
    partial void OnDatePublishedChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePublishedChanged();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnUIDChanging(string value);
    partial void OnUIDChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnCourseChanging(System.Nullable<int> value);
    partial void OnCourseChanged();
    partial void OnEducationLevelIDChanging(System.Nullable<short> value);
    partial void OnEducationLevelIDChanged();
    partial void OnEducationFormIDChanging(System.Nullable<short> value);
    partial void OnEducationFormIDChanged();
    partial void OnEducationSourceIDChanging(System.Nullable<short> value);
    partial void OnEducationSourceIDChanged();
    partial void OnStageChanging(System.Nullable<short> value);
    partial void OnStageChanged();
    partial void OnIsForBeneficiaryChanging(bool value);
    partial void OnIsForBeneficiaryChanged();
    partial void OnIsForeignerChanging(bool value);
    partial void OnIsForeignerChanged();
    partial void OnOrderNameChanging(string value);
    partial void OnOrderNameChanged();
    partial void OnOrderNumberChanging(string value);
    partial void OnOrderNumberChanged();
    partial void OnOrderDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrderDateChanged();
    #endregion
		
		public OrderOfAdmission()
		{
			this._Applications = new EntitySet<Application>(new Action<Application>(this.attach_Applications), new Action<Application>(this.detach_Applications));
			this._OrderOfAdmissionHistories = new EntitySet<OrderOfAdmissionHistory>(new Action<OrderOfAdmissionHistory>(this.attach_OrderOfAdmissionHistories), new Action<OrderOfAdmissionHistory>(this.detach_OrderOfAdmissionHistories));
			this._AdmissionItemType = default(EntityRef<AdmissionItemType>);
			this._AdmissionItemType1 = default(EntityRef<AdmissionItemType>);
			this._AdmissionItemType2 = default(EntityRef<AdmissionItemType>);
			this._Campaign = default(EntityRef<Campaign>);
			this._Institution = default(EntityRef<Institution>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatus", DbType="SmallInt NOT NULL")]
		public short OrderStatus
		{
			get
			{
				return this._OrderStatus;
			}
			set
			{
				if ((this._OrderStatus != value))
				{
					this.OnOrderStatusChanging(value);
					this.SendPropertyChanging();
					this._OrderStatus = value;
					this.SendPropertyChanged("OrderStatus");
					this.OnOrderStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEdited", DbType="DateTime NOT NULL")]
		public System.DateTime DateEdited
		{
			get
			{
				return this._DateEdited;
			}
			set
			{
				if ((this._DateEdited != value))
				{
					this.OnDateEditedChanging(value);
					this.SendPropertyChanging();
					this._DateEdited = value;
					this.SendPropertyChanged("DateEdited");
					this.OnDateEditedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePublished", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatePublished
		{
			get
			{
				return this._DatePublished;
			}
			set
			{
				if ((this._DatePublished != value))
				{
					this.OnDatePublishedChanging(value);
					this.SendPropertyChanging();
					this._DatePublished = value;
					this.SendPropertyChanged("DatePublished");
					this.OnDatePublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					if (this._Institution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="VarChar(200)")]
		public string UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL")]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._Campaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="Int")]
		public System.Nullable<int> Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this.OnCourseChanging(value);
					this.SendPropertyChanging();
					this._Course = value;
					this.SendPropertyChanged("Course");
					this.OnCourseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationLevelID", DbType="SmallInt")]
		public System.Nullable<short> EducationLevelID
		{
			get
			{
				return this._EducationLevelID;
			}
			set
			{
				if ((this._EducationLevelID != value))
				{
					if (this._AdmissionItemType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEducationLevelIDChanging(value);
					this.SendPropertyChanging();
					this._EducationLevelID = value;
					this.SendPropertyChanged("EducationLevelID");
					this.OnEducationLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationFormID", DbType="SmallInt")]
		public System.Nullable<short> EducationFormID
		{
			get
			{
				return this._EducationFormID;
			}
			set
			{
				if ((this._EducationFormID != value))
				{
					if (this._AdmissionItemType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEducationFormIDChanging(value);
					this.SendPropertyChanging();
					this._EducationFormID = value;
					this.SendPropertyChanged("EducationFormID");
					this.OnEducationFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EducationSourceID", DbType="SmallInt")]
		public System.Nullable<short> EducationSourceID
		{
			get
			{
				return this._EducationSourceID;
			}
			set
			{
				if ((this._EducationSourceID != value))
				{
					if (this._AdmissionItemType2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEducationSourceIDChanging(value);
					this.SendPropertyChanging();
					this._EducationSourceID = value;
					this.SendPropertyChanged("EducationSourceID");
					this.OnEducationSourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stage", DbType="SmallInt")]
		public System.Nullable<short> Stage
		{
			get
			{
				return this._Stage;
			}
			set
			{
				if ((this._Stage != value))
				{
					this.OnStageChanging(value);
					this.SendPropertyChanging();
					this._Stage = value;
					this.SendPropertyChanged("Stage");
					this.OnStageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForBeneficiary", DbType="Bit NOT NULL")]
		public bool IsForBeneficiary
		{
			get
			{
				return this._IsForBeneficiary;
			}
			set
			{
				if ((this._IsForBeneficiary != value))
				{
					this.OnIsForBeneficiaryChanging(value);
					this.SendPropertyChanging();
					this._IsForBeneficiary = value;
					this.SendPropertyChanged("IsForBeneficiary");
					this.OnIsForBeneficiaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsForeigner", DbType="Bit NOT NULL")]
		public bool IsForeigner
		{
			get
			{
				return this._IsForeigner;
			}
			set
			{
				if ((this._IsForeigner != value))
				{
					this.OnIsForeignerChanging(value);
					this.SendPropertyChanging();
					this._IsForeigner = value;
					this.SendPropertyChanged("IsForeigner");
					this.OnIsForeignerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderName", DbType="VarChar(200)")]
		public string OrderName
		{
			get
			{
				return this._OrderName;
			}
			set
			{
				if ((this._OrderName != value))
				{
					this.OnOrderNameChanging(value);
					this.SendPropertyChanging();
					this._OrderName = value;
					this.SendPropertyChanged("OrderName");
					this.OnOrderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNumber", DbType="VarChar(50)")]
		public string OrderNumber
		{
			get
			{
				return this._OrderNumber;
			}
			set
			{
				if ((this._OrderNumber != value))
				{
					this.OnOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._OrderNumber = value;
					this.SendPropertyChanged("OrderNumber");
					this.OnOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderOfAdmission_Application", Storage="_Applications", ThisKey="OrderID", OtherKey="OrderOfAdmissionID")]
		public EntitySet<Application> Applications
		{
			get
			{
				return this._Applications;
			}
			set
			{
				this._Applications.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderOfAdmission_OrderOfAdmissionHistory", Storage="_OrderOfAdmissionHistories", ThisKey="OrderID", OtherKey="OrderID")]
		public EntitySet<OrderOfAdmissionHistory> OrderOfAdmissionHistories
		{
			get
			{
				return this._OrderOfAdmissionHistories;
			}
			set
			{
				this._OrderOfAdmissionHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_OrderOfAdmission", Storage="_AdmissionItemType", ThisKey="EducationFormID", OtherKey="ItemTypeID", IsForeignKey=true)]
		public AdmissionItemType AdmissionItemType
		{
			get
			{
				return this._AdmissionItemType.Entity;
			}
			set
			{
				AdmissionItemType previousValue = this._AdmissionItemType.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionItemType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionItemType.Entity = null;
						previousValue.OrderOfAdmissions.Remove(this);
					}
					this._AdmissionItemType.Entity = value;
					if ((value != null))
					{
						value.OrderOfAdmissions.Add(this);
						this._EducationFormID = value.ItemTypeID;
					}
					else
					{
						this._EducationFormID = default(Nullable<short>);
					}
					this.SendPropertyChanged("AdmissionItemType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_OrderOfAdmission1", Storage="_AdmissionItemType1", ThisKey="EducationLevelID", OtherKey="ItemTypeID", IsForeignKey=true)]
		public AdmissionItemType AdmissionItemType1
		{
			get
			{
				return this._AdmissionItemType1.Entity;
			}
			set
			{
				AdmissionItemType previousValue = this._AdmissionItemType1.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionItemType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionItemType1.Entity = null;
						previousValue.OrderOfAdmissions1.Remove(this);
					}
					this._AdmissionItemType1.Entity = value;
					if ((value != null))
					{
						value.OrderOfAdmissions1.Add(this);
						this._EducationLevelID = value.ItemTypeID;
					}
					else
					{
						this._EducationLevelID = default(Nullable<short>);
					}
					this.SendPropertyChanged("AdmissionItemType1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AdmissionItemType_OrderOfAdmission2", Storage="_AdmissionItemType2", ThisKey="EducationSourceID", OtherKey="ItemTypeID", IsForeignKey=true)]
		public AdmissionItemType AdmissionItemType2
		{
			get
			{
				return this._AdmissionItemType2.Entity;
			}
			set
			{
				AdmissionItemType previousValue = this._AdmissionItemType2.Entity;
				if (((previousValue != value) 
							|| (this._AdmissionItemType2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AdmissionItemType2.Entity = null;
						previousValue.OrderOfAdmissions2.Remove(this);
					}
					this._AdmissionItemType2.Entity = value;
					if ((value != null))
					{
						value.OrderOfAdmissions2.Add(this);
						this._EducationSourceID = value.ItemTypeID;
					}
					else
					{
						this._EducationSourceID = default(Nullable<short>);
					}
					this.SendPropertyChanged("AdmissionItemType2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Campaign_OrderOfAdmission", Storage="_Campaign", ThisKey="CampaignID", OtherKey="CampaignID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Campaign Campaign
		{
			get
			{
				return this._Campaign.Entity;
			}
			set
			{
				Campaign previousValue = this._Campaign.Entity;
				if (((previousValue != value) 
							|| (this._Campaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Campaign.Entity = null;
						previousValue.OrderOfAdmissions.Remove(this);
					}
					this._Campaign.Entity = value;
					if ((value != null))
					{
						value.OrderOfAdmissions.Add(this);
						this._CampaignID = value.CampaignID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("Campaign");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_OrderOfAdmission", Storage="_Institution", ThisKey="InstitutionID", OtherKey="InstitutionID", IsForeignKey=true)]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.OrderOfAdmissions.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.OrderOfAdmissions.Add(this);
						this._InstitutionID = value.InstitutionID;
					}
					else
					{
						this._InstitutionID = default(int);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.OrderOfAdmission = this;
		}
		
		private void detach_Applications(Application entity)
		{
			this.SendPropertyChanging();
			entity.OrderOfAdmission = null;
		}
		
		private void attach_OrderOfAdmissionHistories(OrderOfAdmissionHistory entity)
		{
			this.SendPropertyChanging();
			entity.OrderOfAdmission = this;
		}
		
		private void detach_OrderOfAdmissionHistories(OrderOfAdmissionHistory entity)
		{
			this.SendPropertyChanging();
			entity.OrderOfAdmission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderOfAdmissionHistory")]
	public partial class OrderOfAdmissionHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _OrderID;
		
		private int _ApplicationID;
		
		private System.Nullable<System.DateTime> _DatePublished;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<Application> _Application;
		
		private EntityRef<OrderOfAdmission> _OrderOfAdmission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnDatePublishedChanging(System.Nullable<System.DateTime> value);
    partial void OnDatePublishedChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public OrderOfAdmissionHistory()
		{
			this._Application = default(EntityRef<Application>);
			this._OrderOfAdmission = default(EntityRef<OrderOfAdmission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					if (this._OrderOfAdmission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL")]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					if (this._Application.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatePublished", DbType="DateTime")]
		public System.Nullable<System.DateTime> DatePublished
		{
			get
			{
				return this._DatePublished;
			}
			set
			{
				if ((this._DatePublished != value))
				{
					this.OnDatePublishedChanging(value);
					this.SendPropertyChanging();
					this._DatePublished = value;
					this.SendPropertyChanged("DatePublished");
					this.OnDatePublishedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Application_OrderOfAdmissionHistory", Storage="_Application", ThisKey="ApplicationID", OtherKey="ApplicationID", IsForeignKey=true)]
		public Application Application
		{
			get
			{
				return this._Application.Entity;
			}
			set
			{
				Application previousValue = this._Application.Entity;
				if (((previousValue != value) 
							|| (this._Application.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Application.Entity = null;
						previousValue.OrderOfAdmissionHistories.Remove(this);
					}
					this._Application.Entity = value;
					if ((value != null))
					{
						value.OrderOfAdmissionHistories.Add(this);
						this._ApplicationID = value.ApplicationID;
					}
					else
					{
						this._ApplicationID = default(int);
					}
					this.SendPropertyChanged("Application");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderOfAdmission_OrderOfAdmissionHistory", Storage="_OrderOfAdmission", ThisKey="OrderID", OtherKey="OrderID", IsForeignKey=true)]
		public OrderOfAdmission OrderOfAdmission
		{
			get
			{
				return this._OrderOfAdmission.Entity;
			}
			set
			{
				OrderOfAdmission previousValue = this._OrderOfAdmission.Entity;
				if (((previousValue != value) 
							|| (this._OrderOfAdmission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderOfAdmission.Entity = null;
						previousValue.OrderOfAdmissionHistories.Remove(this);
					}
					this._OrderOfAdmission.Entity = value;
					if ((value != null))
					{
						value.OrderOfAdmissionHistories.Add(this);
						this._OrderID = value.OrderID;
					}
					else
					{
						this._OrderID = default(int);
					}
					this.SendPropertyChanged("OrderOfAdmission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderOfAdmissionType")]
	public partial class OrderOfAdmissionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderTypeID;
		
		private string _Name;
		
		private string _ShortName;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderTypeIDChanging(int value);
    partial void OnOrderTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public OrderOfAdmissionType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderTypeID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OrderTypeID
		{
			get
			{
				return this._OrderTypeID;
			}
			set
			{
				if ((this._OrderTypeID != value))
				{
					this.OnOrderTypeIDChanging(value);
					this.SendPropertyChanging();
					this._OrderTypeID = value;
					this.SendPropertyChanged("OrderTypeID");
					this.OnOrderTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pack")]
	public partial class Pack
	{
		
		private System.Nullable<int> _PackageID;
		
		private System.Nullable<int> _InstitutionID;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Xml.Linq.XElement _PackageData;
		
		private System.Xml.Linq.XElement _ProcessResultInfo;
		
		public Pack()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int")]
		public System.Nullable<int> PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					this._PackageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int")]
		public System.Nullable<int> InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this._InstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="Date")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageData", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement PackageData
		{
			get
			{
				return this._PackageData;
			}
			set
			{
				if ((this._PackageData != value))
				{
					this._PackageData = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessResultInfo", DbType="Xml", UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement ProcessResultInfo
		{
			get
			{
				return this._ProcessResultInfo;
			}
			set
			{
				if ((this._ProcessResultInfo != value))
				{
					this._ProcessResultInfo = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ParentDirection")]
	public partial class ParentDirection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ParentDirectionID;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private string _EIIS_ID;
		
		private System.Nullable<int> _Esrp_Id;
		
		private EntitySet<Direction> _Directions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParentDirectionIDChanging(int value);
    partial void OnParentDirectionIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnEIIS_IDChanging(string value);
    partial void OnEIIS_IDChanged();
    partial void OnEsrp_IdChanging(System.Nullable<int> value);
    partial void OnEsrp_IdChanged();
    #endregion
		
		public ParentDirection()
		{
			this._Directions = new EntitySet<Direction>(new Action<Direction>(this.attach_Directions), new Action<Direction>(this.detach_Directions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentDirectionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ParentDirectionID
		{
			get
			{
				return this._ParentDirectionID;
			}
			set
			{
				if ((this._ParentDirectionID != value))
				{
					this.OnParentDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._ParentDirectionID = value;
					this.SendPropertyChanged("ParentDirectionID");
					this.OnParentDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(10)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIIS_ID", DbType="VarChar(50)")]
		public string EIIS_ID
		{
			get
			{
				return this._EIIS_ID;
			}
			set
			{
				if ((this._EIIS_ID != value))
				{
					this.OnEIIS_IDChanging(value);
					this.SendPropertyChanging();
					this._EIIS_ID = value;
					this.SendPropertyChanged("EIIS_ID");
					this.OnEIIS_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Esrp_Id", DbType="Int")]
		public System.Nullable<int> Esrp_Id
		{
			get
			{
				return this._Esrp_Id;
			}
			set
			{
				if ((this._Esrp_Id != value))
				{
					this.OnEsrp_IdChanging(value);
					this.SendPropertyChanging();
					this._Esrp_Id = value;
					this.SendPropertyChanged("Esrp_Id");
					this.OnEsrp_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ParentDirection_Direction", Storage="_Directions", ThisKey="ParentDirectionID", OtherKey="ParentID")]
		public EntitySet<Direction> Directions
		{
			get
			{
				return this._Directions;
			}
			set
			{
				this._Directions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Directions(Direction entity)
		{
			this.SendPropertyChanging();
			entity.ParentDirection = this;
		}
		
		private void detach_Directions(Direction entity)
		{
			this.SendPropertyChanging();
			entity.ParentDirection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ParentDirection_old")]
	public partial class ParentDirection_old
	{
		
		private int _ParentDirectionID;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		public ParentDirection_old()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentDirectionID", DbType="Int NOT NULL")]
		public int ParentDirectionID
		{
			get
			{
				return this._ParentDirectionID;
			}
			set
			{
				if ((this._ParentDirectionID != value))
				{
					this._ParentDirectionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Char(8)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PersonalDataAccessLog")]
	public partial class PersonalDataAccessLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private char _Method;
		
		private string _OldData;
		
		private string _NewData;
		
		private string _ObjectType;
		
		private string _AccessMethod;
		
		private System.Nullable<int> _InstitutionID;
		
		private string _UserLogin;
		
		private System.Nullable<int> _ObjectID;
		
		private System.DateTime _AccessDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMethodChanging(char value);
    partial void OnMethodChanged();
    partial void OnOldDataChanging(string value);
    partial void OnOldDataChanged();
    partial void OnNewDataChanging(string value);
    partial void OnNewDataChanged();
    partial void OnObjectTypeChanging(string value);
    partial void OnObjectTypeChanged();
    partial void OnAccessMethodChanging(string value);
    partial void OnAccessMethodChanged();
    partial void OnInstitutionIDChanging(System.Nullable<int> value);
    partial void OnInstitutionIDChanged();
    partial void OnUserLoginChanging(string value);
    partial void OnUserLoginChanged();
    partial void OnObjectIDChanging(System.Nullable<int> value);
    partial void OnObjectIDChanged();
    partial void OnAccessDateChanging(System.DateTime value);
    partial void OnAccessDateChanged();
    #endregion
		
		public PersonalDataAccessLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Method", DbType="Char(1) NOT NULL")]
		public char Method
		{
			get
			{
				return this._Method;
			}
			set
			{
				if ((this._Method != value))
				{
					this.OnMethodChanging(value);
					this.SendPropertyChanging();
					this._Method = value;
					this.SendPropertyChanged("Method");
					this.OnMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldData", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string OldData
		{
			get
			{
				return this._OldData;
			}
			set
			{
				if ((this._OldData != value))
				{
					this.OnOldDataChanging(value);
					this.SendPropertyChanging();
					this._OldData = value;
					this.SendPropertyChanged("OldData");
					this.OnOldDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewData", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string NewData
		{
			get
			{
				return this._NewData;
			}
			set
			{
				if ((this._NewData != value))
				{
					this.OnNewDataChanging(value);
					this.SendPropertyChanging();
					this._NewData = value;
					this.SendPropertyChanged("NewData");
					this.OnNewDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ObjectType
		{
			get
			{
				return this._ObjectType;
			}
			set
			{
				if ((this._ObjectType != value))
				{
					this.OnObjectTypeChanging(value);
					this.SendPropertyChanging();
					this._ObjectType = value;
					this.SendPropertyChanged("ObjectType");
					this.OnObjectTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessMethod", DbType="VarChar(50)")]
		public string AccessMethod
		{
			get
			{
				return this._AccessMethod;
			}
			set
			{
				if ((this._AccessMethod != value))
				{
					this.OnAccessMethodChanging(value);
					this.SendPropertyChanging();
					this._AccessMethod = value;
					this.SendPropertyChanged("AccessMethod");
					this.OnAccessMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int")]
		public System.Nullable<int> InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLogin", DbType="VarChar(100)")]
		public string UserLogin
		{
			get
			{
				return this._UserLogin;
			}
			set
			{
				if ((this._UserLogin != value))
				{
					this.OnUserLoginChanging(value);
					this.SendPropertyChanging();
					this._UserLogin = value;
					this.SendPropertyChanged("UserLogin");
					this.OnUserLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectID", DbType="Int")]
		public System.Nullable<int> ObjectID
		{
			get
			{
				return this._ObjectID;
			}
			set
			{
				if ((this._ObjectID != value))
				{
					this.OnObjectIDChanging(value);
					this.SendPropertyChanging();
					this._ObjectID = value;
					this.SendPropertyChanged("ObjectID");
					this.OnObjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessDate", DbType="DateTime NOT NULL")]
		public System.DateTime AccessDate
		{
			get
			{
				return this._AccessDate;
			}
			set
			{
				if ((this._AccessDate != value))
				{
					this.OnAccessDateChanging(value);
					this.SendPropertyChanging();
					this._AccessDate = value;
					this.SendPropertyChanged("AccessDate");
					this.OnAccessDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PreparatoryCourse")]
	public partial class PreparatoryCourse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PreparatoryCourseID;
		
		private int _InstitutionID;
		
		private string _Information;
		
		private System.Nullable<int> _MoreInformation;
		
		private System.Nullable<int> _CourseTypeID;
		
		private string _CourseName;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<CourseSubject> _CourseSubjects;
		
		private EntityRef<Attachment> _Attachment;
		
		private EntityRef<CourseType> _CourseType;
		
		private EntityRef<Institution> _Institution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPreparatoryCourseIDChanging(int value);
    partial void OnPreparatoryCourseIDChanged();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnInformationChanging(string value);
    partial void OnInformationChanged();
    partial void OnMoreInformationChanging(System.Nullable<int> value);
    partial void OnMoreInformationChanged();
    partial void OnCourseTypeIDChanging(System.Nullable<int> value);
    partial void OnCourseTypeIDChanged();
    partial void OnCourseNameChanging(string value);
    partial void OnCourseNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public PreparatoryCourse()
		{
			this._CourseSubjects = new EntitySet<CourseSubject>(new Action<CourseSubject>(this.attach_CourseSubjects), new Action<CourseSubject>(this.detach_CourseSubjects));
			this._Attachment = default(EntityRef<Attachment>);
			this._CourseType = default(EntityRef<CourseType>);
			this._Institution = default(EntityRef<Institution>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparatoryCourseID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PreparatoryCourseID
		{
			get
			{
				return this._PreparatoryCourseID;
			}
			set
			{
				if ((this._PreparatoryCourseID != value))
				{
					this.OnPreparatoryCourseIDChanging(value);
					this.SendPropertyChanging();
					this._PreparatoryCourseID = value;
					this.SendPropertyChanged("PreparatoryCourseID");
					this.OnPreparatoryCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					if (this._Institution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Information", DbType="VarChar(MAX)")]
		public string Information
		{
			get
			{
				return this._Information;
			}
			set
			{
				if ((this._Information != value))
				{
					this.OnInformationChanging(value);
					this.SendPropertyChanging();
					this._Information = value;
					this.SendPropertyChanged("Information");
					this.OnInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoreInformation", DbType="Int")]
		public System.Nullable<int> MoreInformation
		{
			get
			{
				return this._MoreInformation;
			}
			set
			{
				if ((this._MoreInformation != value))
				{
					if (this._Attachment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMoreInformationChanging(value);
					this.SendPropertyChanging();
					this._MoreInformation = value;
					this.SendPropertyChanged("MoreInformation");
					this.OnMoreInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTypeID", DbType="Int")]
		public System.Nullable<int> CourseTypeID
		{
			get
			{
				return this._CourseTypeID;
			}
			set
			{
				if ((this._CourseTypeID != value))
				{
					if (this._CourseType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CourseTypeID = value;
					this.SendPropertyChanged("CourseTypeID");
					this.OnCourseTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this.OnCourseNameChanging(value);
					this.SendPropertyChanging();
					this._CourseName = value;
					this.SendPropertyChanged("CourseName");
					this.OnCourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PreparatoryCourse_CourseSubject", Storage="_CourseSubjects", ThisKey="PreparatoryCourseID", OtherKey="PreparatoryCourseID")]
		public EntitySet<CourseSubject> CourseSubjects
		{
			get
			{
				return this._CourseSubjects;
			}
			set
			{
				this._CourseSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Attachment_PreparatoryCourse", Storage="_Attachment", ThisKey="MoreInformation", OtherKey="AttachmentID", IsForeignKey=true)]
		public Attachment Attachment
		{
			get
			{
				return this._Attachment.Entity;
			}
			set
			{
				Attachment previousValue = this._Attachment.Entity;
				if (((previousValue != value) 
							|| (this._Attachment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Attachment.Entity = null;
						previousValue.PreparatoryCourses.Remove(this);
					}
					this._Attachment.Entity = value;
					if ((value != null))
					{
						value.PreparatoryCourses.Add(this);
						this._MoreInformation = value.AttachmentID;
					}
					else
					{
						this._MoreInformation = default(Nullable<int>);
					}
					this.SendPropertyChanged("Attachment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseType_PreparatoryCourse", Storage="_CourseType", ThisKey="CourseTypeID", OtherKey="CourseID", IsForeignKey=true)]
		public CourseType CourseType
		{
			get
			{
				return this._CourseType.Entity;
			}
			set
			{
				CourseType previousValue = this._CourseType.Entity;
				if (((previousValue != value) 
							|| (this._CourseType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseType.Entity = null;
						previousValue.PreparatoryCourses.Remove(this);
					}
					this._CourseType.Entity = value;
					if ((value != null))
					{
						value.PreparatoryCourses.Add(this);
						this._CourseTypeID = value.CourseID;
					}
					else
					{
						this._CourseTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("CourseType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_PreparatoryCourse", Storage="_Institution", ThisKey="InstitutionID", OtherKey="InstitutionID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.PreparatoryCourses.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.PreparatoryCourses.Add(this);
						this._InstitutionID = value.InstitutionID;
					}
					else
					{
						this._InstitutionID = default(int);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CourseSubjects(CourseSubject entity)
		{
			this.SendPropertyChanging();
			entity.PreparatoryCourse = this;
		}
		
		private void detach_CourseSubjects(CourseSubject entity)
		{
			this.SendPropertyChanging();
			entity.PreparatoryCourse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecomendedLists")]
	public partial class RecomendedList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecListID;
		
		private int _InstitutionID;
		
		private int _CampaignID;
		
		private int _EduLevelID;
		
		private int _EduFormID;
		
		private int _CompetitiveGroupID;
		
		private int _DirectionID;
		
		private byte _Stage;
		
		private int _ApplicationID;
		
		private System.Nullable<decimal> _Rating;
		
		private EntitySet<RecomendedListsHistory> _RecomendedListsHistories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecListIDChanging(int value);
    partial void OnRecListIDChanged();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnEduLevelIDChanging(int value);
    partial void OnEduLevelIDChanged();
    partial void OnEduFormIDChanging(int value);
    partial void OnEduFormIDChanged();
    partial void OnCompetitiveGroupIDChanging(int value);
    partial void OnCompetitiveGroupIDChanged();
    partial void OnDirectionIDChanging(int value);
    partial void OnDirectionIDChanged();
    partial void OnStageChanging(byte value);
    partial void OnStageChanged();
    partial void OnApplicationIDChanging(int value);
    partial void OnApplicationIDChanged();
    partial void OnRatingChanging(System.Nullable<decimal> value);
    partial void OnRatingChanged();
    #endregion
		
		public RecomendedList()
		{
			this._RecomendedListsHistories = new EntitySet<RecomendedListsHistory>(new Action<RecomendedListsHistory>(this.attach_RecomendedListsHistories), new Action<RecomendedListsHistory>(this.detach_RecomendedListsHistories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecListID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecListID
		{
			get
			{
				return this._RecListID;
			}
			set
			{
				if ((this._RecListID != value))
				{
					this.OnRecListIDChanging(value);
					this.SendPropertyChanging();
					this._RecListID = value;
					this.SendPropertyChanged("RecListID");
					this.OnRecListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL")]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EduLevelID", DbType="Int NOT NULL")]
		public int EduLevelID
		{
			get
			{
				return this._EduLevelID;
			}
			set
			{
				if ((this._EduLevelID != value))
				{
					this.OnEduLevelIDChanging(value);
					this.SendPropertyChanging();
					this._EduLevelID = value;
					this.SendPropertyChanged("EduLevelID");
					this.OnEduLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EduFormID", DbType="Int NOT NULL")]
		public int EduFormID
		{
			get
			{
				return this._EduFormID;
			}
			set
			{
				if ((this._EduFormID != value))
				{
					this.OnEduFormIDChanging(value);
					this.SendPropertyChanging();
					this._EduFormID = value;
					this.SendPropertyChanged("EduFormID");
					this.OnEduFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompetitiveGroupID", DbType="Int NOT NULL")]
		public int CompetitiveGroupID
		{
			get
			{
				return this._CompetitiveGroupID;
			}
			set
			{
				if ((this._CompetitiveGroupID != value))
				{
					this.OnCompetitiveGroupIDChanging(value);
					this.SendPropertyChanging();
					this._CompetitiveGroupID = value;
					this.SendPropertyChanged("CompetitiveGroupID");
					this.OnCompetitiveGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int NOT NULL")]
		public int DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stage", DbType="TinyInt NOT NULL")]
		public byte Stage
		{
			get
			{
				return this._Stage;
			}
			set
			{
				if ((this._Stage != value))
				{
					this.OnStageChanging(value);
					this.SendPropertyChanging();
					this._Stage = value;
					this.SendPropertyChanged("Stage");
					this.OnStageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="Int NOT NULL")]
		public int ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this.OnApplicationIDChanging(value);
					this.SendPropertyChanging();
					this._ApplicationID = value;
					this.SendPropertyChanged("ApplicationID");
					this.OnApplicationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="Decimal(7,4)")]
		public System.Nullable<decimal> Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this.OnRatingChanging(value);
					this.SendPropertyChanging();
					this._Rating = value;
					this.SendPropertyChanged("Rating");
					this.OnRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecomendedList_RecomendedListsHistory", Storage="_RecomendedListsHistories", ThisKey="RecListID", OtherKey="RecListID")]
		public EntitySet<RecomendedListsHistory> RecomendedListsHistories
		{
			get
			{
				return this._RecomendedListsHistories;
			}
			set
			{
				this._RecomendedListsHistories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RecomendedListsHistories(RecomendedListsHistory entity)
		{
			this.SendPropertyChanging();
			entity.RecomendedList = this;
		}
		
		private void detach_RecomendedListsHistories(RecomendedListsHistory entity)
		{
			this.SendPropertyChanging();
			entity.RecomendedList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecomendedListsHistory")]
	public partial class RecomendedListsHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RecListID;
		
		private System.DateTime _DateAdd;
		
		private System.Nullable<System.DateTime> _DateDelete;
		
		private EntityRef<RecomendedList> _RecomendedList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRecListIDChanging(int value);
    partial void OnRecListIDChanged();
    partial void OnDateAddChanging(System.DateTime value);
    partial void OnDateAddChanged();
    partial void OnDateDeleteChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeleteChanged();
    #endregion
		
		public RecomendedListsHistory()
		{
			this._RecomendedList = default(EntityRef<RecomendedList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecListID", DbType="Int NOT NULL")]
		public int RecListID
		{
			get
			{
				return this._RecListID;
			}
			set
			{
				if ((this._RecListID != value))
				{
					if (this._RecomendedList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecListIDChanging(value);
					this.SendPropertyChanging();
					this._RecListID = value;
					this.SendPropertyChanged("RecListID");
					this.OnRecListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdd", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdd
		{
			get
			{
				return this._DateAdd;
			}
			set
			{
				if ((this._DateAdd != value))
				{
					this.OnDateAddChanging(value);
					this.SendPropertyChanging();
					this._DateAdd = value;
					this.SendPropertyChanged("DateAdd");
					this.OnDateAddChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDelete", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDelete
		{
			get
			{
				return this._DateDelete;
			}
			set
			{
				if ((this._DateDelete != value))
				{
					this.OnDateDeleteChanging(value);
					this.SendPropertyChanging();
					this._DateDelete = value;
					this.SendPropertyChanged("DateDelete");
					this.OnDateDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RecomendedList_RecomendedListsHistory", Storage="_RecomendedList", ThisKey="RecListID", OtherKey="RecListID", IsForeignKey=true)]
		public RecomendedList RecomendedList
		{
			get
			{
				return this._RecomendedList.Entity;
			}
			set
			{
				RecomendedList previousValue = this._RecomendedList.Entity;
				if (((previousValue != value) 
							|| (this._RecomendedList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RecomendedList.Entity = null;
						previousValue.RecomendedListsHistories.Remove(this);
					}
					this._RecomendedList.Entity = value;
					if ((value != null))
					{
						value.RecomendedListsHistories.Add(this);
						this._RecListID = value.RecListID;
					}
					else
					{
						this._RecListID = default(int);
					}
					this.SendPropertyChanged("RecomendedList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegionType")]
	public partial class RegionType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CountryID;
		
		private string _Name;
		
		private string _OkatoCode;
		
		private System.Nullable<System.DateTime> _OkatoModified;
		
		private int _DisplayOrder;
		
		private string _EsrpCode;
		
		private int _RegionId;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntitySet<Address> _Addresses;
		
		private EntitySet<Institution> _Institutions;
		
		private EntitySet<InstitutionHistory> _InstitutionHistories;
		
		private EntitySet<OlympicDiplomant> _OlympicDiplomants;
		
		private EntityRef<CountryType> _CountryType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnOkatoCodeChanging(string value);
    partial void OnOkatoCodeChanged();
    partial void OnOkatoModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnOkatoModifiedChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    partial void OnEsrpCodeChanging(string value);
    partial void OnEsrpCodeChanged();
    partial void OnRegionIdChanging(int value);
    partial void OnRegionIdChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public RegionType()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			this._Institutions = new EntitySet<Institution>(new Action<Institution>(this.attach_Institutions), new Action<Institution>(this.detach_Institutions));
			this._InstitutionHistories = new EntitySet<InstitutionHistory>(new Action<InstitutionHistory>(this.attach_InstitutionHistories), new Action<InstitutionHistory>(this.detach_InstitutionHistories));
			this._OlympicDiplomants = new EntitySet<OlympicDiplomant>(new Action<OlympicDiplomant>(this.attach_OlympicDiplomants), new Action<OlympicDiplomant>(this.detach_OlympicDiplomants));
			this._CountryType = default(EntityRef<CountryType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._CountryType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OkatoCode", DbType="VarChar(16)")]
		public string OkatoCode
		{
			get
			{
				return this._OkatoCode;
			}
			set
			{
				if ((this._OkatoCode != value))
				{
					this.OnOkatoCodeChanging(value);
					this.SendPropertyChanging();
					this._OkatoCode = value;
					this.SendPropertyChanged("OkatoCode");
					this.OnOkatoCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OkatoModified", DbType="DateTime")]
		public System.Nullable<System.DateTime> OkatoModified
		{
			get
			{
				return this._OkatoModified;
			}
			set
			{
				if ((this._OkatoModified != value))
				{
					this.OnOkatoModifiedChanging(value);
					this.SendPropertyChanging();
					this._OkatoModified = value;
					this.SendPropertyChanged("OkatoModified");
					this.OnOkatoModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EsrpCode", DbType="VarChar(5)")]
		public string EsrpCode
		{
			get
			{
				return this._EsrpCode;
			}
			set
			{
				if ((this._EsrpCode != value))
				{
					this.OnEsrpCodeChanging(value);
					this.SendPropertyChanging();
					this._EsrpCode = value;
					this.SendPropertyChanged("EsrpCode");
					this.OnEsrpCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RegionId
		{
			get
			{
				return this._RegionId;
			}
			set
			{
				if ((this._RegionId != value))
				{
					this.OnRegionIdChanging(value);
					this.SendPropertyChanging();
					this._RegionId = value;
					this.SendPropertyChanged("RegionId");
					this.OnRegionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegionType_Address", Storage="_Addresses", ThisKey="RegionId", OtherKey="RegionID")]
		public EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegionType_Institution", Storage="_Institutions", ThisKey="RegionId", OtherKey="RegionID")]
		public EntitySet<Institution> Institutions
		{
			get
			{
				return this._Institutions;
			}
			set
			{
				this._Institutions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegionType_InstitutionHistory", Storage="_InstitutionHistories", ThisKey="RegionId", OtherKey="RegionID")]
		public EntitySet<InstitutionHistory> InstitutionHistories
		{
			get
			{
				return this._InstitutionHistories;
			}
			set
			{
				this._InstitutionHistories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegionType_OlympicDiplomant", Storage="_OlympicDiplomants", ThisKey="RegionId", OtherKey="SchoolRegionID")]
		public EntitySet<OlympicDiplomant> OlympicDiplomants
		{
			get
			{
				return this._OlympicDiplomants;
			}
			set
			{
				this._OlympicDiplomants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CountryType_RegionType", Storage="_CountryType", ThisKey="CountryID", OtherKey="CountryID", IsForeignKey=true)]
		public CountryType CountryType
		{
			get
			{
				return this._CountryType.Entity;
			}
			set
			{
				CountryType previousValue = this._CountryType.Entity;
				if (((previousValue != value) 
							|| (this._CountryType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CountryType.Entity = null;
						previousValue.RegionTypes.Remove(this);
					}
					this._CountryType.Entity = value;
					if ((value != null))
					{
						value.RegionTypes.Add(this);
						this._CountryID = value.CountryID;
					}
					else
					{
						this._CountryID = default(int);
					}
					this.SendPropertyChanged("CountryType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.RegionType = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.RegionType = null;
		}
		
		private void attach_Institutions(Institution entity)
		{
			this.SendPropertyChanging();
			entity.RegionType = this;
		}
		
		private void detach_Institutions(Institution entity)
		{
			this.SendPropertyChanging();
			entity.RegionType = null;
		}
		
		private void attach_InstitutionHistories(InstitutionHistory entity)
		{
			this.SendPropertyChanging();
			entity.RegionType = this;
		}
		
		private void detach_InstitutionHistories(InstitutionHistory entity)
		{
			this.SendPropertyChanging();
			entity.RegionType = null;
		}
		
		private void attach_OlympicDiplomants(OlympicDiplomant entity)
		{
			this.SendPropertyChanging();
			entity.RegionType = this;
		}
		
		private void detach_OlympicDiplomants(OlympicDiplomant entity)
		{
			this.SendPropertyChanging();
			entity.RegionType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestComments")]
	public partial class RequestComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Comment_ID;
		
		private string _Commentor;
		
		private string _Comment;
		
		private System.Nullable<System.DateTime> _Date;
		
		private int _DirectionID;
		
		private int _InstitutionID;
		
		private EntityRef<RequestDirection> _RequestDirection;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnComment_IDChanging(int value);
    partial void OnComment_IDChanged();
    partial void OnCommentorChanging(string value);
    partial void OnCommentorChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnDirectionIDChanging(int value);
    partial void OnDirectionIDChanged();
    partial void OnInstitutionIDChanging(int value);
    partial void OnInstitutionIDChanged();
    #endregion
		
		public RequestComment()
		{
			this._RequestDirection = default(EntityRef<RequestDirection>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Comment ID]", Storage="_Comment_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Comment_ID
		{
			get
			{
				return this._Comment_ID;
			}
			set
			{
				if ((this._Comment_ID != value))
				{
					this.OnComment_IDChanging(value);
					this.SendPropertyChanging();
					this._Comment_ID = value;
					this.SendPropertyChanged("Comment_ID");
					this.OnComment_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commentor", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Commentor
		{
			get
			{
				return this._Commentor;
			}
			set
			{
				if ((this._Commentor != value))
				{
					this.OnCommentorChanging(value);
					this.SendPropertyChanging();
					this._Commentor = value;
					this.SendPropertyChanged("Commentor");
					this.OnCommentorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectionID", DbType="Int NOT NULL")]
		public int DirectionID
		{
			get
			{
				return this._DirectionID;
			}
			set
			{
				if ((this._DirectionID != value))
				{
					if (this._RequestDirection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDirectionIDChanging(value);
					this.SendPropertyChanging();
					this._DirectionID = value;
					this.SendPropertyChanged("DirectionID");
					this.OnDirectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int NOT NULL")]
		public int InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					if (this._RequestDirection.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestDirection_RequestComment", Storage="_RequestDirection", ThisKey="DirectionID,InstitutionID", OtherKey="Direction_ID,Request_ID", IsForeignKey=true)]
		public RequestDirection RequestDirection
		{
			get
			{
				return this._RequestDirection.Entity;
			}
			set
			{
				RequestDirection previousValue = this._RequestDirection.Entity;
				if (((previousValue != value) 
							|| (this._RequestDirection.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RequestDirection.Entity = null;
						previousValue.RequestComments.Remove(this);
					}
					this._RequestDirection.Entity = value;
					if ((value != null))
					{
						value.RequestComments.Add(this);
						this._DirectionID = value.Direction_ID;
						this._InstitutionID = value.Request_ID;
					}
					else
					{
						this._DirectionID = default(int);
						this._InstitutionID = default(int);
					}
					this.SendPropertyChanged("RequestDirection");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RequestDirection")]
	public partial class RequestDirection : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Direction_ID;
		
		private int _Request_ID;
		
		private string _Activity;
		
		private string _Action;
		
		private int _AdmissionItemType;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private System.Nullable<System.DateTime> _ChangeDate;
		
		private EntitySet<RequestComment> _RequestComments;
		
		private EntityRef<Institution> _Institution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDirection_IDChanging(int value);
    partial void OnDirection_IDChanged();
    partial void OnRequest_IDChanging(int value);
    partial void OnRequest_IDChanged();
    partial void OnActivityChanging(string value);
    partial void OnActivityChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnAdmissionItemTypeChanging(int value);
    partial void OnAdmissionItemTypeChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnChangeDateChanging(System.Nullable<System.DateTime> value);
    partial void OnChangeDateChanged();
    #endregion
		
		public RequestDirection()
		{
			this._RequestComments = new EntitySet<RequestComment>(new Action<RequestComment>(this.attach_RequestComments), new Action<RequestComment>(this.detach_RequestComments));
			this._Institution = default(EntityRef<Institution>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Direction ID]", Storage="_Direction_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Direction_ID
		{
			get
			{
				return this._Direction_ID;
			}
			set
			{
				if ((this._Direction_ID != value))
				{
					this.OnDirection_IDChanging(value);
					this.SendPropertyChanging();
					this._Direction_ID = value;
					this.SendPropertyChanged("Direction_ID");
					this.OnDirection_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Request ID]", Storage="_Request_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Request_ID
		{
			get
			{
				return this._Request_ID;
			}
			set
			{
				if ((this._Request_ID != value))
				{
					this.OnRequest_IDChanging(value);
					this.SendPropertyChanging();
					this._Request_ID = value;
					this.SendPropertyChanged("Request_ID");
					this.OnRequest_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				if ((this._Activity != value))
				{
					this.OnActivityChanging(value);
					this.SendPropertyChanging();
					this._Activity = value;
					this.SendPropertyChanged("Activity");
					this.OnActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdmissionItemType", DbType="Int NOT NULL")]
		public int AdmissionItemType
		{
			get
			{
				return this._AdmissionItemType;
			}
			set
			{
				if ((this._AdmissionItemType != value))
				{
					this.OnAdmissionItemTypeChanging(value);
					this.SendPropertyChanging();
					this._AdmissionItemType = value;
					this.SendPropertyChanged("AdmissionItemType");
					this.OnAdmissionItemTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ChangeDate
		{
			get
			{
				return this._ChangeDate;
			}
			set
			{
				if ((this._ChangeDate != value))
				{
					this.OnChangeDateChanging(value);
					this.SendPropertyChanging();
					this._ChangeDate = value;
					this.SendPropertyChanged("ChangeDate");
					this.OnChangeDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RequestDirection_RequestComment", Storage="_RequestComments", ThisKey="Direction_ID,Request_ID", OtherKey="DirectionID,InstitutionID")]
		public EntitySet<RequestComment> RequestComments
		{
			get
			{
				return this._RequestComments;
			}
			set
			{
				this._RequestComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_RequestDirection", Storage="_Institution", ThisKey="Request_ID", OtherKey="InstitutionID", IsForeignKey=true)]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.RequestDirections.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.RequestDirections.Add(this);
						this._Request_ID = value.InstitutionID;
					}
					else
					{
						this._Request_ID = default(int);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RequestComments(RequestComment entity)
		{
			this.SendPropertyChanging();
			entity.RequestDirection = this;
		}
		
		private void detach_RequestComments(RequestComment entity)
		{
			this.SendPropertyChanging();
			entity.RequestDirection = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RVI_PersonID_new")]
	public partial class RVI_PersonID_new
	{
		
		private System.Nullable<int> _RVIPersonId;
		
		private string _RVINormSurname;
		
		private string _RVINormName;
		
		private string _RVINormSecondName;
		
		private System.Nullable<System.DateTime> _RVIBirthDay;
		
		private System.Nullable<int> _EEntrantID;
		
		private System.Nullable<int> _EIdentityDocumentID;
		
		private string _ELastName;
		
		private string _EFirstName;
		
		private string _EMiddleName;
		
		private string _EDDocumentSeries;
		
		private string _EDDocumentNumber;
		
		private System.Nullable<int> _EDIIdentityDocumentTypeID;
		
		private System.Nullable<System.DateTime> _EDIBirthDate;
		
		private System.Nullable<System.Guid> _PParticipantID;
		
		private string _PSurname;
		
		private string _PName;
		
		private string _PSecondName;
		
		private string _PDocumentSeries;
		
		private string _PDocumentNumber;
		
		private System.Nullable<int> _PDocumentTypeCode;
		
		private System.Nullable<System.DateTime> _PBirthDay;
		
		public RVI_PersonID_new()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RVIPersonId", DbType="Int")]
		public System.Nullable<int> RVIPersonId
		{
			get
			{
				return this._RVIPersonId;
			}
			set
			{
				if ((this._RVIPersonId != value))
				{
					this._RVIPersonId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RVINormSurname", DbType="VarChar(100)")]
		public string RVINormSurname
		{
			get
			{
				return this._RVINormSurname;
			}
			set
			{
				if ((this._RVINormSurname != value))
				{
					this._RVINormSurname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RVINormName", DbType="VarChar(100)")]
		public string RVINormName
		{
			get
			{
				return this._RVINormName;
			}
			set
			{
				if ((this._RVINormName != value))
				{
					this._RVINormName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RVINormSecondName", DbType="VarChar(100)")]
		public string RVINormSecondName
		{
			get
			{
				return this._RVINormSecondName;
			}
			set
			{
				if ((this._RVINormSecondName != value))
				{
					this._RVINormSecondName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RVIBirthDay", DbType="DateTime")]
		public System.Nullable<System.DateTime> RVIBirthDay
		{
			get
			{
				return this._RVIBirthDay;
			}
			set
			{
				if ((this._RVIBirthDay != value))
				{
					this._RVIBirthDay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EEntrantID", DbType="Int")]
		public System.Nullable<int> EEntrantID
		{
			get
			{
				return this._EEntrantID;
			}
			set
			{
				if ((this._EEntrantID != value))
				{
					this._EEntrantID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIdentityDocumentID", DbType="Int")]
		public System.Nullable<int> EIdentityDocumentID
		{
			get
			{
				return this._EIdentityDocumentID;
			}
			set
			{
				if ((this._EIdentityDocumentID != value))
				{
					this._EIdentityDocumentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELastName", DbType="VarChar(100)")]
		public string ELastName
		{
			get
			{
				return this._ELastName;
			}
			set
			{
				if ((this._ELastName != value))
				{
					this._ELastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EFirstName", DbType="VarChar(100)")]
		public string EFirstName
		{
			get
			{
				return this._EFirstName;
			}
			set
			{
				if ((this._EFirstName != value))
				{
					this._EFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMiddleName", DbType="VarChar(100)")]
		public string EMiddleName
		{
			get
			{
				return this._EMiddleName;
			}
			set
			{
				if ((this._EMiddleName != value))
				{
					this._EMiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDDocumentSeries", DbType="VarChar(100)")]
		public string EDDocumentSeries
		{
			get
			{
				return this._EDDocumentSeries;
			}
			set
			{
				if ((this._EDDocumentSeries != value))
				{
					this._EDDocumentSeries = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDDocumentNumber", DbType="VarChar(100)")]
		public string EDDocumentNumber
		{
			get
			{
				return this._EDDocumentNumber;
			}
			set
			{
				if ((this._EDDocumentNumber != value))
				{
					this._EDDocumentNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDIIdentityDocumentTypeID", DbType="Int")]
		public System.Nullable<int> EDIIdentityDocumentTypeID
		{
			get
			{
				return this._EDIIdentityDocumentTypeID;
			}
			set
			{
				if ((this._EDIIdentityDocumentTypeID != value))
				{
					this._EDIIdentityDocumentTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDIBirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EDIBirthDate
		{
			get
			{
				return this._EDIBirthDate;
			}
			set
			{
				if ((this._EDIBirthDate != value))
				{
					this._EDIBirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PParticipantID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PParticipantID
		{
			get
			{
				return this._PParticipantID;
			}
			set
			{
				if ((this._PParticipantID != value))
				{
					this._PParticipantID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PSurname", DbType="VarChar(100)")]
		public string PSurname
		{
			get
			{
				return this._PSurname;
			}
			set
			{
				if ((this._PSurname != value))
				{
					this._PSurname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PName", DbType="VarChar(100)")]
		public string PName
		{
			get
			{
				return this._PName;
			}
			set
			{
				if ((this._PName != value))
				{
					this._PName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PSecondName", DbType="VarChar(100)")]
		public string PSecondName
		{
			get
			{
				return this._PSecondName;
			}
			set
			{
				if ((this._PSecondName != value))
				{
					this._PSecondName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDocumentSeries", DbType="VarChar(100)")]
		public string PDocumentSeries
		{
			get
			{
				return this._PDocumentSeries;
			}
			set
			{
				if ((this._PDocumentSeries != value))
				{
					this._PDocumentSeries = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDocumentNumber", DbType="VarChar(100)")]
		public string PDocumentNumber
		{
			get
			{
				return this._PDocumentNumber;
			}
			set
			{
				if ((this._PDocumentNumber != value))
				{
					this._PDocumentNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDocumentTypeCode", DbType="Int")]
		public System.Nullable<int> PDocumentTypeCode
		{
			get
			{
				return this._PDocumentTypeCode;
			}
			set
			{
				if ((this._PDocumentTypeCode != value))
				{
					this._PDocumentTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBirthDay", DbType="DateTime")]
		public System.Nullable<System.DateTime> PBirthDay
		{
			get
			{
				return this._PBirthDay;
			}
			set
			{
				if ((this._PBirthDay != value))
				{
					this._PBirthDay = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RVI_PersonID_old")]
	public partial class RVI_PersonID_old
	{
		
		private System.Nullable<int> _RVIPersonId;
		
		private string _RVINormSurname;
		
		private string _RVINormName;
		
		private string _RVINormSecondName;
		
		private System.Nullable<System.DateTime> _RVIBirthDay;
		
		private System.Nullable<int> _EEntrantID;
		
		private System.Nullable<int> _EIdentityDocumentID;
		
		private string _ELastName;
		
		private string _EFirstName;
		
		private string _EMiddleName;
		
		private string _EDDocumentSeries;
		
		private string _EDDocumentNumber;
		
		private System.Nullable<int> _EDIIdentityDocumentTypeID;
		
		private System.Nullable<System.DateTime> _EDIBirthDate;
		
		private System.Nullable<System.Guid> _PParticipantID;
		
		private string _PSurname;
		
		private string _PName;
		
		private string _PSecondName;
		
		private string _PDocumentSeries;
		
		private string _PDocumentNumber;
		
		private System.Nullable<int> _PDocumentTypeCode;
		
		private System.Nullable<System.DateTime> _PBirthDay;
		
		public RVI_PersonID_old()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RVIPersonId", DbType="Int")]
		public System.Nullable<int> RVIPersonId
		{
			get
			{
				return this._RVIPersonId;
			}
			set
			{
				if ((this._RVIPersonId != value))
				{
					this._RVIPersonId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RVINormSurname", DbType="VarChar(100)")]
		public string RVINormSurname
		{
			get
			{
				return this._RVINormSurname;
			}
			set
			{
				if ((this._RVINormSurname != value))
				{
					this._RVINormSurname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RVINormName", DbType="VarChar(100)")]
		public string RVINormName
		{
			get
			{
				return this._RVINormName;
			}
			set
			{
				if ((this._RVINormName != value))
				{
					this._RVINormName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RVINormSecondName", DbType="VarChar(100)")]
		public string RVINormSecondName
		{
			get
			{
				return this._RVINormSecondName;
			}
			set
			{
				if ((this._RVINormSecondName != value))
				{
					this._RVINormSecondName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RVIBirthDay", DbType="DateTime")]
		public System.Nullable<System.DateTime> RVIBirthDay
		{
			get
			{
				return this._RVIBirthDay;
			}
			set
			{
				if ((this._RVIBirthDay != value))
				{
					this._RVIBirthDay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EEntrantID", DbType="Int")]
		public System.Nullable<int> EEntrantID
		{
			get
			{
				return this._EEntrantID;
			}
			set
			{
				if ((this._EEntrantID != value))
				{
					this._EEntrantID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EIdentityDocumentID", DbType="Int")]
		public System.Nullable<int> EIdentityDocumentID
		{
			get
			{
				return this._EIdentityDocumentID;
			}
			set
			{
				if ((this._EIdentityDocumentID != value))
				{
					this._EIdentityDocumentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ELastName", DbType="VarChar(100)")]
		public string ELastName
		{
			get
			{
				return this._ELastName;
			}
			set
			{
				if ((this._ELastName != value))
				{
					this._ELastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EFirstName", DbType="VarChar(100)")]
		public string EFirstName
		{
			get
			{
				return this._EFirstName;
			}
			set
			{
				if ((this._EFirstName != value))
				{
					this._EFirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMiddleName", DbType="VarChar(100)")]
		public string EMiddleName
		{
			get
			{
				return this._EMiddleName;
			}
			set
			{
				if ((this._EMiddleName != value))
				{
					this._EMiddleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDDocumentSeries", DbType="VarChar(100)")]
		public string EDDocumentSeries
		{
			get
			{
				return this._EDDocumentSeries;
			}
			set
			{
				if ((this._EDDocumentSeries != value))
				{
					this._EDDocumentSeries = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDDocumentNumber", DbType="VarChar(100)")]
		public string EDDocumentNumber
		{
			get
			{
				return this._EDDocumentNumber;
			}
			set
			{
				if ((this._EDDocumentNumber != value))
				{
					this._EDDocumentNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDIIdentityDocumentTypeID", DbType="Int")]
		public System.Nullable<int> EDIIdentityDocumentTypeID
		{
			get
			{
				return this._EDIIdentityDocumentTypeID;
			}
			set
			{
				if ((this._EDIIdentityDocumentTypeID != value))
				{
					this._EDIIdentityDocumentTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EDIBirthDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EDIBirthDate
		{
			get
			{
				return this._EDIBirthDate;
			}
			set
			{
				if ((this._EDIBirthDate != value))
				{
					this._EDIBirthDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PParticipantID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PParticipantID
		{
			get
			{
				return this._PParticipantID;
			}
			set
			{
				if ((this._PParticipantID != value))
				{
					this._PParticipantID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PSurname", DbType="VarChar(100)")]
		public string PSurname
		{
			get
			{
				return this._PSurname;
			}
			set
			{
				if ((this._PSurname != value))
				{
					this._PSurname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PName", DbType="VarChar(100)")]
		public string PName
		{
			get
			{
				return this._PName;
			}
			set
			{
				if ((this._PName != value))
				{
					this._PName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PSecondName", DbType="VarChar(100)")]
		public string PSecondName
		{
			get
			{
				return this._PSecondName;
			}
			set
			{
				if ((this._PSecondName != value))
				{
					this._PSecondName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDocumentSeries", DbType="VarChar(100)")]
		public string PDocumentSeries
		{
			get
			{
				return this._PDocumentSeries;
			}
			set
			{
				if ((this._PDocumentSeries != value))
				{
					this._PDocumentSeries = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDocumentNumber", DbType="VarChar(100)")]
		public string PDocumentNumber
		{
			get
			{
				return this._PDocumentNumber;
			}
			set
			{
				if ((this._PDocumentNumber != value))
				{
					this._PDocumentNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PDocumentTypeCode", DbType="Int")]
		public System.Nullable<int> PDocumentTypeCode
		{
			get
			{
				return this._PDocumentTypeCode;
			}
			set
			{
				if ((this._PDocumentTypeCode != value))
				{
					this._PDocumentTypeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBirthDay", DbType="DateTime")]
		public System.Nullable<System.DateTime> PBirthDay
		{
			get
			{
				return this._PBirthDay;
			}
			set
			{
				if ((this._PBirthDay != value))
				{
					this._PBirthDay = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RVIDocumentTypes")]
	public partial class RVIDocumentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentTypeCode;
		
		private string _DocumentTypeName;
		
		private bool _IsActive;
		
		private EntitySet<RVIPersonIdentDoc> _RVIPersonIdentDocs;
		
		private EntitySet<Translation_RVIDT_IdentityDT> _Translation_RVIDT_IdentityDTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentTypeCodeChanging(int value);
    partial void OnDocumentTypeCodeChanged();
    partial void OnDocumentTypeNameChanging(string value);
    partial void OnDocumentTypeNameChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public RVIDocumentType()
		{
			this._RVIPersonIdentDocs = new EntitySet<RVIPersonIdentDoc>(new Action<RVIPersonIdentDoc>(this.attach_RVIPersonIdentDocs), new Action<RVIPersonIdentDoc>(this.detach_RVIPersonIdentDocs));
			this._Translation_RVIDT_IdentityDTs = new EntitySet<Translation_RVIDT_IdentityDT>(new Action<Translation_RVIDT_IdentityDT>(this.attach_Translation_RVIDT_IdentityDTs), new Action<Translation_RVIDT_IdentityDT>(this.detach_Translation_RVIDT_IdentityDTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeCode", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int DocumentTypeCode
		{
			get
			{
				return this._DocumentTypeCode;
			}
			set
			{
				if ((this._DocumentTypeCode != value))
				{
					this.OnDocumentTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeCode = value;
					this.SendPropertyChanged("DocumentTypeCode");
					this.OnDocumentTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeName", DbType="VarChar(255)")]
		public string DocumentTypeName
		{
			get
			{
				return this._DocumentTypeName;
			}
			set
			{
				if ((this._DocumentTypeName != value))
				{
					this.OnDocumentTypeNameChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeName = value;
					this.SendPropertyChanged("DocumentTypeName");
					this.OnDocumentTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RVIDocumentType_RVIPersonIdentDoc", Storage="_RVIPersonIdentDocs", ThisKey="DocumentTypeCode", OtherKey="DocumentTypeCode")]
		public EntitySet<RVIPersonIdentDoc> RVIPersonIdentDocs
		{
			get
			{
				return this._RVIPersonIdentDocs;
			}
			set
			{
				this._RVIPersonIdentDocs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RVIDocumentType_Translation_RVIDT_IdentityDT", Storage="_Translation_RVIDT_IdentityDTs", ThisKey="DocumentTypeCode", OtherKey="DocumentTypeCode")]
		public EntitySet<Translation_RVIDT_IdentityDT> Translation_RVIDT_IdentityDTs
		{
			get
			{
				return this._Translation_RVIDT_IdentityDTs;
			}
			set
			{
				this._Translation_RVIDT_IdentityDTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RVIPersonIdentDocs(RVIPersonIdentDoc entity)
		{
			this.SendPropertyChanging();
			entity.RVIDocumentType = this;
		}
		
		private void detach_RVIPersonIdentDocs(RVIPersonIdentDoc entity)
		{
			this.SendPropertyChanging();
			entity.RVIDocumentType = null;
		}
		
		private void attach_Translation_RVIDT_IdentityDTs(Translation_RVIDT_IdentityDT entity)
		{
			this.SendPropertyChanging();
			entity.RVIDocumentType = this;
		}
		
		private void detach_Translation_RVIDT_IdentityDTs(Translation_RVIDT_IdentityDT entity)
		{
			this.SendPropertyChanging();
			entity.RVIDocumentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RVIPersonIdentDocs")]
	public partial class RVIPersonIdentDoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PersonIdentDocID;
		
		private int _PersonId;
		
		private int _DocumentTypeCode;
		
		private string _DocumentSeries;
		
		private string _DocumentNumber;
		
		private System.Nullable<System.DateTime> _DocumentDate;
		
		private string _DocumentOrganization;
		
		private string _DocumentName;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private EntityRef<RVIDocumentType> _RVIDocumentType;
		
		private EntityRef<RVIPerson> _RVIPerson;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonIdentDocIDChanging(int value);
    partial void OnPersonIdentDocIDChanged();
    partial void OnPersonIdChanging(int value);
    partial void OnPersonIdChanged();
    partial void OnDocumentTypeCodeChanging(int value);
    partial void OnDocumentTypeCodeChanged();
    partial void OnDocumentSeriesChanging(string value);
    partial void OnDocumentSeriesChanged();
    partial void OnDocumentNumberChanging(string value);
    partial void OnDocumentNumberChanged();
    partial void OnDocumentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDocumentDateChanged();
    partial void OnDocumentOrganizationChanging(string value);
    partial void OnDocumentOrganizationChanged();
    partial void OnDocumentNameChanging(string value);
    partial void OnDocumentNameChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public RVIPersonIdentDoc()
		{
			this._RVIDocumentType = default(EntityRef<RVIDocumentType>);
			this._RVIPerson = default(EntityRef<RVIPerson>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonIdentDocID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PersonIdentDocID
		{
			get
			{
				return this._PersonIdentDocID;
			}
			set
			{
				if ((this._PersonIdentDocID != value))
				{
					this.OnPersonIdentDocIDChanging(value);
					this.SendPropertyChanging();
					this._PersonIdentDocID = value;
					this.SendPropertyChanged("PersonIdentDocID");
					this.OnPersonIdentDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="Int NOT NULL")]
		public int PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					if (this._RVIPerson.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeCode", DbType="Int NOT NULL")]
		public int DocumentTypeCode
		{
			get
			{
				return this._DocumentTypeCode;
			}
			set
			{
				if ((this._DocumentTypeCode != value))
				{
					if (this._RVIDocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeCode = value;
					this.SendPropertyChanged("DocumentTypeCode");
					this.OnDocumentTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentSeries", DbType="VarChar(20)")]
		public string DocumentSeries
		{
			get
			{
				return this._DocumentSeries;
			}
			set
			{
				if ((this._DocumentSeries != value))
				{
					this.OnDocumentSeriesChanging(value);
					this.SendPropertyChanging();
					this._DocumentSeries = value;
					this.SendPropertyChanged("DocumentSeries");
					this.OnDocumentSeriesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentNumber", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DocumentNumber
		{
			get
			{
				return this._DocumentNumber;
			}
			set
			{
				if ((this._DocumentNumber != value))
				{
					this.OnDocumentNumberChanging(value);
					this.SendPropertyChanging();
					this._DocumentNumber = value;
					this.SendPropertyChanged("DocumentNumber");
					this.OnDocumentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DocumentDate
		{
			get
			{
				return this._DocumentDate;
			}
			set
			{
				if ((this._DocumentDate != value))
				{
					this.OnDocumentDateChanging(value);
					this.SendPropertyChanging();
					this._DocumentDate = value;
					this.SendPropertyChanged("DocumentDate");
					this.OnDocumentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentOrganization", DbType="VarChar(500)")]
		public string DocumentOrganization
		{
			get
			{
				return this._DocumentOrganization;
			}
			set
			{
				if ((this._DocumentOrganization != value))
				{
					this.OnDocumentOrganizationChanging(value);
					this.SendPropertyChanging();
					this._DocumentOrganization = value;
					this.SendPropertyChanged("DocumentOrganization");
					this.OnDocumentOrganizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentName", DbType="VarChar(100)")]
		public string DocumentName
		{
			get
			{
				return this._DocumentName;
			}
			set
			{
				if ((this._DocumentName != value))
				{
					this.OnDocumentNameChanging(value);
					this.SendPropertyChanging();
					this._DocumentName = value;
					this.SendPropertyChanged("DocumentName");
					this.OnDocumentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RVIDocumentType_RVIPersonIdentDoc", Storage="_RVIDocumentType", ThisKey="DocumentTypeCode", OtherKey="DocumentTypeCode", IsForeignKey=true)]
		public RVIDocumentType RVIDocumentType
		{
			get
			{
				return this._RVIDocumentType.Entity;
			}
			set
			{
				RVIDocumentType previousValue = this._RVIDocumentType.Entity;
				if (((previousValue != value) 
							|| (this._RVIDocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RVIDocumentType.Entity = null;
						previousValue.RVIPersonIdentDocs.Remove(this);
					}
					this._RVIDocumentType.Entity = value;
					if ((value != null))
					{
						value.RVIPersonIdentDocs.Add(this);
						this._DocumentTypeCode = value.DocumentTypeCode;
					}
					else
					{
						this._DocumentTypeCode = default(int);
					}
					this.SendPropertyChanged("RVIDocumentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RVIPerson_RVIPersonIdentDoc", Storage="_RVIPerson", ThisKey="PersonId", OtherKey="PersonId", IsForeignKey=true)]
		public RVIPerson RVIPerson
		{
			get
			{
				return this._RVIPerson.Entity;
			}
			set
			{
				RVIPerson previousValue = this._RVIPerson.Entity;
				if (((previousValue != value) 
							|| (this._RVIPerson.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RVIPerson.Entity = null;
						previousValue.RVIPersonIdentDocs.Remove(this);
					}
					this._RVIPerson.Entity = value;
					if ((value != null))
					{
						value.RVIPersonIdentDocs.Add(this);
						this._PersonId = value.PersonId;
					}
					else
					{
						this._PersonId = default(int);
					}
					this.SendPropertyChanged("RVIPerson");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RVIPersons")]
	public partial class RVIPerson : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PersonId;
		
		private bool _IsRecordDeleted;
		
		private string _NormSurname;
		
		private string _NormName;
		
		private string _NormSecondName;
		
		private System.Nullable<System.DateTime> _BirthDay;
		
		private System.Nullable<bool> _Sex;
		
		private string _Email;
		
		private string _MobilePhone;
		
		private string _SNILS;
		
		private string _INN;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _UpdateDate;
		
		private System.DateTime _IntegralUpdateDate;
		
		private System.Nullable<System.Guid> _ParticipantID;
		
		private System.Nullable<int> _UseYear;
		
		private EntitySet<Entrant> _Entrants;
		
		private EntitySet<OlympicDiplomant> _OlympicDiplomants;
		
		private EntitySet<RVIPersonIdentDoc> _RVIPersonIdentDocs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPersonIdChanging(int value);
    partial void OnPersonIdChanged();
    partial void OnIsRecordDeletedChanging(bool value);
    partial void OnIsRecordDeletedChanged();
    partial void OnNormSurnameChanging(string value);
    partial void OnNormSurnameChanged();
    partial void OnNormNameChanging(string value);
    partial void OnNormNameChanged();
    partial void OnNormSecondNameChanging(string value);
    partial void OnNormSecondNameChanged();
    partial void OnBirthDayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDayChanged();
    partial void OnSexChanging(System.Nullable<bool> value);
    partial void OnSexChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMobilePhoneChanging(string value);
    partial void OnMobilePhoneChanged();
    partial void OnSNILSChanging(string value);
    partial void OnSNILSChanged();
    partial void OnINNChanging(string value);
    partial void OnINNChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnUpdateDateChanging(System.DateTime value);
    partial void OnUpdateDateChanged();
    partial void OnIntegralUpdateDateChanging(System.DateTime value);
    partial void OnIntegralUpdateDateChanged();
    partial void OnParticipantIDChanging(System.Nullable<System.Guid> value);
    partial void OnParticipantIDChanged();
    partial void OnUseYearChanging(System.Nullable<int> value);
    partial void OnUseYearChanged();
    #endregion
		
		public RVIPerson()
		{
			this._Entrants = new EntitySet<Entrant>(new Action<Entrant>(this.attach_Entrants), new Action<Entrant>(this.detach_Entrants));
			this._OlympicDiplomants = new EntitySet<OlympicDiplomant>(new Action<OlympicDiplomant>(this.attach_OlympicDiplomants), new Action<OlympicDiplomant>(this.detach_OlympicDiplomants));
			this._RVIPersonIdentDocs = new EntitySet<RVIPersonIdentDoc>(new Action<RVIPersonIdentDoc>(this.attach_RVIPersonIdentDocs), new Action<RVIPersonIdentDoc>(this.detach_RVIPersonIdentDocs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PersonId
		{
			get
			{
				return this._PersonId;
			}
			set
			{
				if ((this._PersonId != value))
				{
					this.OnPersonIdChanging(value);
					this.SendPropertyChanging();
					this._PersonId = value;
					this.SendPropertyChanged("PersonId");
					this.OnPersonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRecordDeleted", DbType="Bit NOT NULL")]
		public bool IsRecordDeleted
		{
			get
			{
				return this._IsRecordDeleted;
			}
			set
			{
				if ((this._IsRecordDeleted != value))
				{
					this.OnIsRecordDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsRecordDeleted = value;
					this.SendPropertyChanged("IsRecordDeleted");
					this.OnIsRecordDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormSurname", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string NormSurname
		{
			get
			{
				return this._NormSurname;
			}
			set
			{
				if ((this._NormSurname != value))
				{
					this.OnNormSurnameChanging(value);
					this.SendPropertyChanging();
					this._NormSurname = value;
					this.SendPropertyChanged("NormSurname");
					this.OnNormSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormName", DbType="VarChar(255)")]
		public string NormName
		{
			get
			{
				return this._NormName;
			}
			set
			{
				if ((this._NormName != value))
				{
					this.OnNormNameChanging(value);
					this.SendPropertyChanging();
					this._NormName = value;
					this.SendPropertyChanged("NormName");
					this.OnNormNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormSecondName", DbType="VarChar(255)")]
		public string NormSecondName
		{
			get
			{
				return this._NormSecondName;
			}
			set
			{
				if ((this._NormSecondName != value))
				{
					this.OnNormSecondNameChanging(value);
					this.SendPropertyChanging();
					this._NormSecondName = value;
					this.SendPropertyChanged("NormSecondName");
					this.OnNormSecondNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDay", DbType="DateTime")]
		public System.Nullable<System.DateTime> BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this.OnBirthDayChanging(value);
					this.SendPropertyChanging();
					this._BirthDay = value;
					this.SendPropertyChanged("BirthDay");
					this.OnBirthDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sex", DbType="Bit")]
		public System.Nullable<bool> Sex
		{
			get
			{
				return this._Sex;
			}
			set
			{
				if ((this._Sex != value))
				{
					this.OnSexChanging(value);
					this.SendPropertyChanging();
					this._Sex = value;
					this.SendPropertyChanged("Sex");
					this.OnSexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePhone", DbType="VarChar(20)")]
		public string MobilePhone
		{
			get
			{
				return this._MobilePhone;
			}
			set
			{
				if ((this._MobilePhone != value))
				{
					this.OnMobilePhoneChanging(value);
					this.SendPropertyChanging();
					this._MobilePhone = value;
					this.SendPropertyChanged("MobilePhone");
					this.OnMobilePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNILS", DbType="Char(14)")]
		public string SNILS
		{
			get
			{
				return this._SNILS;
			}
			set
			{
				if ((this._SNILS != value))
				{
					this.OnSNILSChanging(value);
					this.SendPropertyChanging();
					this._SNILS = value;
					this.SendPropertyChanged("SNILS");
					this.OnSNILSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INN", DbType="Char(12)")]
		public string INN
		{
			get
			{
				return this._INN;
			}
			set
			{
				if ((this._INN != value))
				{
					this.OnINNChanging(value);
					this.SendPropertyChanging();
					this._INN = value;
					this.SendPropertyChanged("INN");
					this.OnINNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntegralUpdateDate", DbType="DateTime NOT NULL")]
		public System.DateTime IntegralUpdateDate
		{
			get
			{
				return this._IntegralUpdateDate;
			}
			set
			{
				if ((this._IntegralUpdateDate != value))
				{
					this.OnIntegralUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._IntegralUpdateDate = value;
					this.SendPropertyChanged("IntegralUpdateDate");
					this.OnIntegralUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParticipantID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParticipantID
		{
			get
			{
				return this._ParticipantID;
			}
			set
			{
				if ((this._ParticipantID != value))
				{
					this.OnParticipantIDChanging(value);
					this.SendPropertyChanging();
					this._ParticipantID = value;
					this.SendPropertyChanged("ParticipantID");
					this.OnParticipantIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UseYear", DbType="Int")]
		public System.Nullable<int> UseYear
		{
			get
			{
				return this._UseYear;
			}
			set
			{
				if ((this._UseYear != value))
				{
					this.OnUseYearChanging(value);
					this.SendPropertyChanging();
					this._UseYear = value;
					this.SendPropertyChanged("UseYear");
					this.OnUseYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RVIPerson_Entrant", Storage="_Entrants", ThisKey="PersonId", OtherKey="PersonId")]
		public EntitySet<Entrant> Entrants
		{
			get
			{
				return this._Entrants;
			}
			set
			{
				this._Entrants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RVIPerson_OlympicDiplomant", Storage="_OlympicDiplomants", ThisKey="PersonId", OtherKey="PersonId")]
		public EntitySet<OlympicDiplomant> OlympicDiplomants
		{
			get
			{
				return this._OlympicDiplomants;
			}
			set
			{
				this._OlympicDiplomants.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RVIPerson_RVIPersonIdentDoc", Storage="_RVIPersonIdentDocs", ThisKey="PersonId", OtherKey="PersonId")]
		public EntitySet<RVIPersonIdentDoc> RVIPersonIdentDocs
		{
			get
			{
				return this._RVIPersonIdentDocs;
			}
			set
			{
				this._RVIPersonIdentDocs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Entrants(Entrant entity)
		{
			this.SendPropertyChanging();
			entity.RVIPerson = this;
		}
		
		private void detach_Entrants(Entrant entity)
		{
			this.SendPropertyChanging();
			entity.RVIPerson = null;
		}
		
		private void attach_OlympicDiplomants(OlympicDiplomant entity)
		{
			this.SendPropertyChanging();
			entity.RVIPerson = this;
		}
		
		private void detach_OlympicDiplomants(OlympicDiplomant entity)
		{
			this.SendPropertyChanging();
			entity.RVIPerson = null;
		}
		
		private void attach_RVIPersonIdentDocs(RVIPersonIdentDoc entity)
		{
			this.SendPropertyChanging();
			entity.RVIPerson = this;
		}
		
		private void detach_RVIPersonIdentDocs(RVIPersonIdentDoc entity)
		{
			this.SendPropertyChanging();
			entity.RVIPerson = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SearchTMP")]
	public partial class SearchTMP
	{
		
		private int _AttachmentID;
		
		private string _MimeType;
		
		private string _Name;
		
		private System.Data.Linq.Binary _Body;
		
		private System.Guid _FileID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		public SearchTMP()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int AttachmentID
		{
			get
			{
				return this._AttachmentID;
			}
			set
			{
				if ((this._AttachmentID != value))
				{
					this._AttachmentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MimeType", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string MimeType
		{
			get
			{
				return this._MimeType;
			}
			set
			{
				if ((this._MimeType != value))
				{
					this._MimeType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this._Body = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this._FileID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Subject")]
	public partial class Subject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubjectID;
		
		private string _Name;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private bool _IsEge;
		
		private bool _IsOlympic;
		
		private EntitySet<ApplicationEntranceTestDocument> _ApplicationEntranceTestDocuments;
		
		private EntitySet<BenefitItemSubject> _BenefitItemSubjects;
		
		private EntitySet<CourseSubject> _CourseSubjects;
		
		private EntitySet<DirectionSubjectLink> _DirectionSubjectLinks;
		
		private EntitySet<DirectionSubjectLinkSubject> _DirectionSubjectLinkSubjects;
		
		private EntitySet<EntranceTestItemC> _EntranceTestItemCs;
		
		private EntitySet<EntrantDocumentMark> _EntrantDocumentMarks;
		
		private EntitySet<FbsToFisMap> _FbsToFisMaps;
		
		private EntitySet<MinScoreByRON> _MinScoreByRONs;
		
		private EntitySet<OlympicSubject> _OlympicSubjects;
		
		private EntitySet<SubjectEgeMinValue> _SubjectEgeMinValues;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubjectIDChanging(int value);
    partial void OnSubjectIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    partial void OnIsEgeChanging(bool value);
    partial void OnIsEgeChanged();
    partial void OnIsOlympicChanging(bool value);
    partial void OnIsOlympicChanged();
    #endregion
		
		public Subject()
		{
			this._ApplicationEntranceTestDocuments = new EntitySet<ApplicationEntranceTestDocument>(new Action<ApplicationEntranceTestDocument>(this.attach_ApplicationEntranceTestDocuments), new Action<ApplicationEntranceTestDocument>(this.detach_ApplicationEntranceTestDocuments));
			this._BenefitItemSubjects = new EntitySet<BenefitItemSubject>(new Action<BenefitItemSubject>(this.attach_BenefitItemSubjects), new Action<BenefitItemSubject>(this.detach_BenefitItemSubjects));
			this._CourseSubjects = new EntitySet<CourseSubject>(new Action<CourseSubject>(this.attach_CourseSubjects), new Action<CourseSubject>(this.detach_CourseSubjects));
			this._DirectionSubjectLinks = new EntitySet<DirectionSubjectLink>(new Action<DirectionSubjectLink>(this.attach_DirectionSubjectLinks), new Action<DirectionSubjectLink>(this.detach_DirectionSubjectLinks));
			this._DirectionSubjectLinkSubjects = new EntitySet<DirectionSubjectLinkSubject>(new Action<DirectionSubjectLinkSubject>(this.attach_DirectionSubjectLinkSubjects), new Action<DirectionSubjectLinkSubject>(this.detach_DirectionSubjectLinkSubjects));
			this._EntranceTestItemCs = new EntitySet<EntranceTestItemC>(new Action<EntranceTestItemC>(this.attach_EntranceTestItemCs), new Action<EntranceTestItemC>(this.detach_EntranceTestItemCs));
			this._EntrantDocumentMarks = new EntitySet<EntrantDocumentMark>(new Action<EntrantDocumentMark>(this.attach_EntrantDocumentMarks), new Action<EntrantDocumentMark>(this.detach_EntrantDocumentMarks));
			this._FbsToFisMaps = new EntitySet<FbsToFisMap>(new Action<FbsToFisMap>(this.attach_FbsToFisMaps), new Action<FbsToFisMap>(this.detach_FbsToFisMaps));
			this._MinScoreByRONs = new EntitySet<MinScoreByRON>(new Action<MinScoreByRON>(this.attach_MinScoreByRONs), new Action<MinScoreByRON>(this.detach_MinScoreByRONs));
			this._OlympicSubjects = new EntitySet<OlympicSubject>(new Action<OlympicSubject>(this.attach_OlympicSubjects), new Action<OlympicSubject>(this.detach_OlympicSubjects));
			this._SubjectEgeMinValues = new EntitySet<SubjectEgeMinValue>(new Action<SubjectEgeMinValue>(this.attach_SubjectEgeMinValues), new Action<SubjectEgeMinValue>(this.detach_SubjectEgeMinValues));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEge", DbType="Bit NOT NULL")]
		public bool IsEge
		{
			get
			{
				return this._IsEge;
			}
			set
			{
				if ((this._IsEge != value))
				{
					this.OnIsEgeChanging(value);
					this.SendPropertyChanging();
					this._IsEge = value;
					this.SendPropertyChanged("IsEge");
					this.OnIsEgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOlympic", DbType="Bit NOT NULL")]
		public bool IsOlympic
		{
			get
			{
				return this._IsOlympic;
			}
			set
			{
				if ((this._IsOlympic != value))
				{
					this.OnIsOlympicChanging(value);
					this.SendPropertyChanging();
					this._IsOlympic = value;
					this.SendPropertyChanged("IsOlympic");
					this.OnIsOlympicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_ApplicationEntranceTestDocument", Storage="_ApplicationEntranceTestDocuments", ThisKey="SubjectID", OtherKey="SubjectID")]
		public EntitySet<ApplicationEntranceTestDocument> ApplicationEntranceTestDocuments
		{
			get
			{
				return this._ApplicationEntranceTestDocuments;
			}
			set
			{
				this._ApplicationEntranceTestDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_BenefitItemSubject", Storage="_BenefitItemSubjects", ThisKey="SubjectID", OtherKey="SubjectId")]
		public EntitySet<BenefitItemSubject> BenefitItemSubjects
		{
			get
			{
				return this._BenefitItemSubjects;
			}
			set
			{
				this._BenefitItemSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_CourseSubject", Storage="_CourseSubjects", ThisKey="SubjectID", OtherKey="SubjectID")]
		public EntitySet<CourseSubject> CourseSubjects
		{
			get
			{
				return this._CourseSubjects;
			}
			set
			{
				this._CourseSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_DirectionSubjectLink", Storage="_DirectionSubjectLinks", ThisKey="SubjectID", OtherKey="ProfileSubjectID")]
		public EntitySet<DirectionSubjectLink> DirectionSubjectLinks
		{
			get
			{
				return this._DirectionSubjectLinks;
			}
			set
			{
				this._DirectionSubjectLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_DirectionSubjectLinkSubject", Storage="_DirectionSubjectLinkSubjects", ThisKey="SubjectID", OtherKey="SubjectID")]
		public EntitySet<DirectionSubjectLinkSubject> DirectionSubjectLinkSubjects
		{
			get
			{
				return this._DirectionSubjectLinkSubjects;
			}
			set
			{
				this._DirectionSubjectLinkSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_EntranceTestItemC", Storage="_EntranceTestItemCs", ThisKey="SubjectID", OtherKey="SubjectID")]
		public EntitySet<EntranceTestItemC> EntranceTestItemCs
		{
			get
			{
				return this._EntranceTestItemCs;
			}
			set
			{
				this._EntranceTestItemCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_EntrantDocumentMark", Storage="_EntrantDocumentMarks", ThisKey="SubjectID", OtherKey="SubjectID")]
		public EntitySet<EntrantDocumentMark> EntrantDocumentMarks
		{
			get
			{
				return this._EntrantDocumentMarks;
			}
			set
			{
				this._EntrantDocumentMarks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_FbsToFisMap", Storage="_FbsToFisMaps", ThisKey="SubjectID", OtherKey="IdSubjectFis")]
		public EntitySet<FbsToFisMap> FbsToFisMaps
		{
			get
			{
				return this._FbsToFisMaps;
			}
			set
			{
				this._FbsToFisMaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_MinScoreByRON", Storage="_MinScoreByRONs", ThisKey="SubjectID", OtherKey="SubjectId")]
		public EntitySet<MinScoreByRON> MinScoreByRONs
		{
			get
			{
				return this._MinScoreByRONs;
			}
			set
			{
				this._MinScoreByRONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_OlympicSubject", Storage="_OlympicSubjects", ThisKey="SubjectID", OtherKey="SubjectID")]
		public EntitySet<OlympicSubject> OlympicSubjects
		{
			get
			{
				return this._OlympicSubjects;
			}
			set
			{
				this._OlympicSubjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_SubjectEgeMinValue", Storage="_SubjectEgeMinValues", ThisKey="SubjectID", OtherKey="SubjectID")]
		public EntitySet<SubjectEgeMinValue> SubjectEgeMinValues
		{
			get
			{
				return this._SubjectEgeMinValues;
			}
			set
			{
				this._SubjectEgeMinValues.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ApplicationEntranceTestDocuments(ApplicationEntranceTestDocument entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_ApplicationEntranceTestDocuments(ApplicationEntranceTestDocument entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_BenefitItemSubjects(BenefitItemSubject entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_BenefitItemSubjects(BenefitItemSubject entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_CourseSubjects(CourseSubject entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_CourseSubjects(CourseSubject entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_DirectionSubjectLinks(DirectionSubjectLink entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_DirectionSubjectLinks(DirectionSubjectLink entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_DirectionSubjectLinkSubjects(DirectionSubjectLinkSubject entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_DirectionSubjectLinkSubjects(DirectionSubjectLinkSubject entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_EntranceTestItemCs(EntranceTestItemC entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_EntranceTestItemCs(EntranceTestItemC entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_EntrantDocumentMarks(EntrantDocumentMark entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_EntrantDocumentMarks(EntrantDocumentMark entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_FbsToFisMaps(FbsToFisMap entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_FbsToFisMaps(FbsToFisMap entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_MinScoreByRONs(MinScoreByRON entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_MinScoreByRONs(MinScoreByRON entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_OlympicSubjects(OlympicSubject entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_OlympicSubjects(OlympicSubject entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
		
		private void attach_SubjectEgeMinValues(SubjectEgeMinValue entity)
		{
			this.SendPropertyChanging();
			entity.Subject = this;
		}
		
		private void detach_SubjectEgeMinValues(SubjectEgeMinValue entity)
		{
			this.SendPropertyChanging();
			entity.Subject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubjectEgeMinValue")]
	public partial class SubjectEgeMinValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ScoreID;
		
		private int _SubjectID;
		
		private int _MinValue;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		private EntityRef<Subject> _Subject;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScoreIDChanging(int value);
    partial void OnScoreIDChanged();
    partial void OnSubjectIDChanging(int value);
    partial void OnSubjectIDChanged();
    partial void OnMinValueChanging(int value);
    partial void OnMinValueChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public SubjectEgeMinValue()
		{
			this._Subject = default(EntityRef<Subject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ScoreID
		{
			get
			{
				return this._ScoreID;
			}
			set
			{
				if ((this._ScoreID != value))
				{
					this.OnScoreIDChanging(value);
					this.SendPropertyChanging();
					this._ScoreID = value;
					this.SendPropertyChanged("ScoreID");
					this.OnScoreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					if (this._Subject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubjectIDChanging(value);
					this.SendPropertyChanging();
					this._SubjectID = value;
					this.SendPropertyChanged("SubjectID");
					this.OnSubjectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinValue", DbType="Int NOT NULL")]
		public int MinValue
		{
			get
			{
				return this._MinValue;
			}
			set
			{
				if ((this._MinValue != value))
				{
					this.OnMinValueChanging(value);
					this.SendPropertyChanging();
					this._MinValue = value;
					this.SendPropertyChanged("MinValue");
					this.OnMinValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Subject_SubjectEgeMinValue", Storage="_Subject", ThisKey="SubjectID", OtherKey="SubjectID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Subject Subject
		{
			get
			{
				return this._Subject.Entity;
			}
			set
			{
				Subject previousValue = this._Subject.Entity;
				if (((previousValue != value) 
							|| (this._Subject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Subject.Entity = null;
						previousValue.SubjectEgeMinValues.Remove(this);
					}
					this._Subject.Entity = value;
					if ((value != null))
					{
						value.SubjectEgeMinValues.Add(this);
						this._SubjectID = value.SubjectID;
					}
					else
					{
						this._SubjectID = default(int);
					}
					this.SendPropertyChanged("Subject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubjectEgeMinValue_copy")]
	public partial class SubjectEgeMinValue_copy
	{
		
		private int _ScoreID;
		
		private int _SubjectID;
		
		private int _MinValue;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _ModifiedDate;
		
		public SubjectEgeMinValue_copy()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScoreID", DbType="Int NOT NULL")]
		public int ScoreID
		{
			get
			{
				return this._ScoreID;
			}
			set
			{
				if ((this._ScoreID != value))
				{
					this._ScoreID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubjectID", DbType="Int NOT NULL")]
		public int SubjectID
		{
			get
			{
				return this._SubjectID;
			}
			set
			{
				if ((this._SubjectID != value))
				{
					this._SubjectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinValue", DbType="Int NOT NULL")]
		public int MinValue
		{
			get
			{
				return this._MinValue;
			}
			set
			{
				if ((this._MinValue != value))
				{
					this._MinValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.temp_apps")]
	public partial class temp_app
	{
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _PackageID;
		
		private System.Nullable<int> _apps;
		
		public temp_app()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PackageID", DbType="Int")]
		public System.Nullable<int> PackageID
		{
			get
			{
				return this._PackageID;
			}
			set
			{
				if ((this._PackageID != value))
				{
					this._PackageID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apps", DbType="Int")]
		public System.Nullable<int> apps
		{
			get
			{
				return this._apps;
			}
			set
			{
				if ((this._apps != value))
				{
					this._apps = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Temp_GGV")]
	public partial class Temp_GGV
	{
		
		private int _ЕСРП_ИД;
		
		private string _Тип;
		
		private string _Категория_ОО;
		
		private string _Категория_ОО_2;
		
		private string _ОПФ;
		
		private string _Головной_Филиал;
		
		private string _Статус_ОО;
		
		private string _Обязательность_подключения;
		
		private string _Статус_подключения;
		
		private string _Этап_подключения;
		
		private string _Схема_подключения;
		
		private string _Передают_данные_за_ПК_2015_года;
		
		private string _Полное_наименование;
		
		private string _Поданные_заявления;
		
		private string _Поданные_на_бюджет;
		
		private string _Поданные_на_платное;
		
		private string _Зачисленные;
		
		private string _Зачисленные_на_бюджет;
		
		private string _Зачисленные_на_платное;
		
		private string _КЦП_бюджет;
		
		private string _План_на_платное;
		
		private string _КЦП___план_на_платное;
		
		private string _Закрыли_ПК_2014;
		
		private string _ИНН;
		
		private string _КПП;
		
		private string _ОГРН;
		
		private string _Субъект_РФ;
		
		private string _ФО;
		
		private string _Статус_лицензии;
		
		private string _Учредитель;
		
		private string _Головная_организация;
		
		private string _CURRENT_DATE;
		
		public Temp_GGV()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[ЕСРП ИД]", Storage="_ЕСРП_ИД", DbType="Int NOT NULL")]
		public int ЕСРП_ИД
		{
			get
			{
				return this._ЕСРП_ИД;
			}
			set
			{
				if ((this._ЕСРП_ИД != value))
				{
					this._ЕСРП_ИД = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Тип", DbType="VarChar(MAX)")]
		public string Тип
		{
			get
			{
				return this._Тип;
			}
			set
			{
				if ((this._Тип != value))
				{
					this._Тип = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Категория ОО]", Storage="_Категория_ОО", DbType="VarChar(MAX)")]
		public string Категория_ОО
		{
			get
			{
				return this._Категория_ОО;
			}
			set
			{
				if ((this._Категория_ОО != value))
				{
					this._Категория_ОО = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Категория ОО 2]", Storage="_Категория_ОО_2", DbType="VarChar(MAX)")]
		public string Категория_ОО_2
		{
			get
			{
				return this._Категория_ОО_2;
			}
			set
			{
				if ((this._Категория_ОО_2 != value))
				{
					this._Категория_ОО_2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ОПФ", DbType="VarChar(MAX)")]
		public string ОПФ
		{
			get
			{
				return this._ОПФ;
			}
			set
			{
				if ((this._ОПФ != value))
				{
					this._ОПФ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Головной/Филиал]", Storage="_Головной_Филиал", DbType="VarChar(MAX)")]
		public string Головной_Филиал
		{
			get
			{
				return this._Головной_Филиал;
			}
			set
			{
				if ((this._Головной_Филиал != value))
				{
					this._Головной_Филиал = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Статус ОО]", Storage="_Статус_ОО", DbType="VarChar(MAX)")]
		public string Статус_ОО
		{
			get
			{
				return this._Статус_ОО;
			}
			set
			{
				if ((this._Статус_ОО != value))
				{
					this._Статус_ОО = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Обязательность подключения]", Storage="_Обязательность_подключения", DbType="VarChar(MAX)")]
		public string Обязательность_подключения
		{
			get
			{
				return this._Обязательность_подключения;
			}
			set
			{
				if ((this._Обязательность_подключения != value))
				{
					this._Обязательность_подключения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Статус подключения]", Storage="_Статус_подключения", DbType="VarChar(MAX)")]
		public string Статус_подключения
		{
			get
			{
				return this._Статус_подключения;
			}
			set
			{
				if ((this._Статус_подключения != value))
				{
					this._Статус_подключения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Этап подключения]", Storage="_Этап_подключения", DbType="VarChar(MAX)")]
		public string Этап_подключения
		{
			get
			{
				return this._Этап_подключения;
			}
			set
			{
				if ((this._Этап_подключения != value))
				{
					this._Этап_подключения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Схема подключения]", Storage="_Схема_подключения", DbType="VarChar(MAX)")]
		public string Схема_подключения
		{
			get
			{
				return this._Схема_подключения;
			}
			set
			{
				if ((this._Схема_подключения != value))
				{
					this._Схема_подключения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Передают данные за ПК 2015 года]", Storage="_Передают_данные_за_ПК_2015_года", DbType="VarChar(MAX)")]
		public string Передают_данные_за_ПК_2015_года
		{
			get
			{
				return this._Передают_данные_за_ПК_2015_года;
			}
			set
			{
				if ((this._Передают_данные_за_ПК_2015_года != value))
				{
					this._Передают_данные_за_ПК_2015_года = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Полное наименование]", Storage="_Полное_наименование", DbType="VarChar(MAX)")]
		public string Полное_наименование
		{
			get
			{
				return this._Полное_наименование;
			}
			set
			{
				if ((this._Полное_наименование != value))
				{
					this._Полное_наименование = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Поданные заявления]", Storage="_Поданные_заявления", DbType="VarChar(MAX)")]
		public string Поданные_заявления
		{
			get
			{
				return this._Поданные_заявления;
			}
			set
			{
				if ((this._Поданные_заявления != value))
				{
					this._Поданные_заявления = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Поданные на бюджет]", Storage="_Поданные_на_бюджет", DbType="VarChar(MAX)")]
		public string Поданные_на_бюджет
		{
			get
			{
				return this._Поданные_на_бюджет;
			}
			set
			{
				if ((this._Поданные_на_бюджет != value))
				{
					this._Поданные_на_бюджет = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Поданные на платное]", Storage="_Поданные_на_платное", DbType="VarChar(MAX)")]
		public string Поданные_на_платное
		{
			get
			{
				return this._Поданные_на_платное;
			}
			set
			{
				if ((this._Поданные_на_платное != value))
				{
					this._Поданные_на_платное = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Зачисленные", DbType="VarChar(MAX)")]
		public string Зачисленные
		{
			get
			{
				return this._Зачисленные;
			}
			set
			{
				if ((this._Зачисленные != value))
				{
					this._Зачисленные = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Зачисленные на бюджет]", Storage="_Зачисленные_на_бюджет", DbType="VarChar(MAX)")]
		public string Зачисленные_на_бюджет
		{
			get
			{
				return this._Зачисленные_на_бюджет;
			}
			set
			{
				if ((this._Зачисленные_на_бюджет != value))
				{
					this._Зачисленные_на_бюджет = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Зачисленные на платное]", Storage="_Зачисленные_на_платное", DbType="VarChar(MAX)")]
		public string Зачисленные_на_платное
		{
			get
			{
				return this._Зачисленные_на_платное;
			}
			set
			{
				if ((this._Зачисленные_на_платное != value))
				{
					this._Зачисленные_на_платное = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[КЦП бюджет]", Storage="_КЦП_бюджет", DbType="VarChar(MAX)")]
		public string КЦП_бюджет
		{
			get
			{
				return this._КЦП_бюджет;
			}
			set
			{
				if ((this._КЦП_бюджет != value))
				{
					this._КЦП_бюджет = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[План на платное]", Storage="_План_на_платное", DbType="VarChar(MAX)")]
		public string План_на_платное
		{
			get
			{
				return this._План_на_платное;
			}
			set
			{
				if ((this._План_на_платное != value))
				{
					this._План_на_платное = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[КЦП + план на платное]", Storage="_КЦП___план_на_платное", DbType="VarChar(MAX)")]
		public string КЦП___план_на_платное
		{
			get
			{
				return this._КЦП___план_на_платное;
			}
			set
			{
				if ((this._КЦП___план_на_платное != value))
				{
					this._КЦП___план_на_платное = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Закрыли ПК 2014]", Storage="_Закрыли_ПК_2014", DbType="VarChar(MAX)")]
		public string Закрыли_ПК_2014
		{
			get
			{
				return this._Закрыли_ПК_2014;
			}
			set
			{
				if ((this._Закрыли_ПК_2014 != value))
				{
					this._Закрыли_ПК_2014 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ИНН", DbType="VarChar(MAX)")]
		public string ИНН
		{
			get
			{
				return this._ИНН;
			}
			set
			{
				if ((this._ИНН != value))
				{
					this._ИНН = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_КПП", DbType="VarChar(MAX)")]
		public string КПП
		{
			get
			{
				return this._КПП;
			}
			set
			{
				if ((this._КПП != value))
				{
					this._КПП = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ОГРН", DbType="VarChar(MAX)")]
		public string ОГРН
		{
			get
			{
				return this._ОГРН;
			}
			set
			{
				if ((this._ОГРН != value))
				{
					this._ОГРН = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Субъект РФ]", Storage="_Субъект_РФ", DbType="VarChar(MAX)")]
		public string Субъект_РФ
		{
			get
			{
				return this._Субъект_РФ;
			}
			set
			{
				if ((this._Субъект_РФ != value))
				{
					this._Субъект_РФ = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ФО", DbType="VarChar(MAX)")]
		public string ФО
		{
			get
			{
				return this._ФО;
			}
			set
			{
				if ((this._ФО != value))
				{
					this._ФО = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Статус лицензии]", Storage="_Статус_лицензии", DbType="VarChar(MAX)")]
		public string Статус_лицензии
		{
			get
			{
				return this._Статус_лицензии;
			}
			set
			{
				if ((this._Статус_лицензии != value))
				{
					this._Статус_лицензии = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Учредитель", DbType="VarChar(MAX)")]
		public string Учредитель
		{
			get
			{
				return this._Учредитель;
			}
			set
			{
				if ((this._Учредитель != value))
				{
					this._Учредитель = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Головная организация]", Storage="_Головная_организация", DbType="VarChar(MAX)")]
		public string Головная_организация
		{
			get
			{
				return this._Головная_организация;
			}
			set
			{
				if ((this._Головная_организация != value))
				{
					this._Головная_организация = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[CURRENT_DATE]", Storage="_CURRENT_DATE", DbType="VarChar(MAX)")]
		public string CURRENT_DATE
		{
			get
			{
				return this._CURRENT_DATE;
			}
			set
			{
				if ((this._CURRENT_DATE != value))
				{
					this._CURRENT_DATE = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TEMP_HighMarks_2015")]
	public partial class TEMP_HighMarks_2015 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _fio;
		
		private string _DocNumber;
		
		private string _DocSeries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfioChanging(string value);
    partial void OnfioChanged();
    partial void OnDocNumberChanging(string value);
    partial void OnDocNumberChanged();
    partial void OnDocSeriesChanging(string value);
    partial void OnDocSeriesChanged();
    #endregion
		
		public TEMP_HighMarks_2015()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fio", DbType="VarChar(100)")]
		public string fio
		{
			get
			{
				return this._fio;
			}
			set
			{
				if ((this._fio != value))
				{
					this.OnfioChanging(value);
					this.SendPropertyChanging();
					this._fio = value;
					this.SendPropertyChanged("fio");
					this.OnfioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocNumber", DbType="VarChar(100)")]
		public string DocNumber
		{
			get
			{
				return this._DocNumber;
			}
			set
			{
				if ((this._DocNumber != value))
				{
					this.OnDocNumberChanging(value);
					this.SendPropertyChanging();
					this._DocNumber = value;
					this.SendPropertyChanged("DocNumber");
					this.OnDocNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocSeries", DbType="VarChar(20)")]
		public string DocSeries
		{
			get
			{
				return this._DocSeries;
			}
			set
			{
				if ((this._DocSeries != value))
				{
					this.OnDocSeriesChanging(value);
					this.SendPropertyChanging();
					this._DocSeries = value;
					this.SendPropertyChanged("DocSeries");
					this.OnDocSeriesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TEMP_HSE_0")]
	public partial class TEMP_HSE_0
	{
		
		private string _SYS_GUID;
		
		private string _OrganizationName;
		
		private string _Edulevel;
		
		private string _OFCount;
		
		private string _ZFOZFCount;
		
		public TEMP_HSE_0()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SYS_GUID", DbType="NVarChar(50)")]
		public string SYS_GUID
		{
			get
			{
				return this._SYS_GUID;
			}
			set
			{
				if ((this._SYS_GUID != value))
				{
					this._SYS_GUID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrganizationName", DbType="NVarChar(MAX)")]
		public string OrganizationName
		{
			get
			{
				return this._OrganizationName;
			}
			set
			{
				if ((this._OrganizationName != value))
				{
					this._OrganizationName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Edulevel", DbType="NVarChar(250)")]
		public string Edulevel
		{
			get
			{
				return this._Edulevel;
			}
			set
			{
				if ((this._Edulevel != value))
				{
					this._Edulevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OFCount", DbType="NVarChar(50)")]
		public string OFCount
		{
			get
			{
				return this._OFCount;
			}
			set
			{
				if ((this._OFCount != value))
				{
					this._OFCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZFOZFCount", DbType="NVarChar(50)")]
		public string ZFOZFCount
		{
			get
			{
				return this._ZFOZFCount;
			}
			set
			{
				if ((this._ZFOZFCount != value))
				{
					this._ZFOZFCount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TEMP_HSE_11")]
	public partial class TEMP_HSE_11
	{
		
		private string _ApplicationID;
		
		private string _PersonID;
		
		private string _EntrantID;
		
		private string _RegionName;
		
		private string _RegionCode;
		
		private string _InstitutionID;
		
		private string _ParentInstitutionID;
		
		private string _IstitutionName;
		
		private string _ParentInstitutionName;
		
		private string _GosNegos;
		
		private string _Vedomstvo;
		
		private string _ProgramName;
		
		private string _ProgramCode;
		
		private string _EduForm;
		
		private string _EduLevel;
		
		private string _FinanceLevel;
		
		private string _EnterCondition;
		
		private string _EgeRegionCode;
		
		private string _EgeRegionName;
		
		private string _EgeBallRus;
		
		private string _EgeBallMath;
		
		private string _EgeBallObsh;
		
		private string _EgeBallHist;
		
		private string _EgeBallPhys;
		
		private string _EgeBallChem;
		
		private string _EgeBallBiol;
		
		private string _EgeBallLang;
		
		private string _EgeBallLiter;
		
		private string _EgeBallGeog;
		
		private string _EgeBallInfo;
		
		private string _EgeBallAll;
		
		private string _EnterWitoutVI;
		
		private string _OlympicName;
		
		private string _OlympicKurator;
		
		private string _OlympicBallRus;
		
		private string _OlympicMathRus;
		
		private string _OlympicBallObsh;
		
		private string _OlympicBallHist;
		
		private string _OlympicBallPhys;
		
		private string _OlympicBallChem;
		
		private string _OlympicBallBiol;
		
		private string _OlympicBallLang;
		
		private string _OlympicBallLiter;
		
		private string _OlympicBallGeog;
		
		private string _OlympicBallInfo;
		
		public TEMP_HSE_11()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="NVarChar(50)")]
		public string ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this._ApplicationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="NVarChar(50)")]
		public string PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantID", DbType="NVarChar(50)")]
		public string EntrantID
		{
			get
			{
				return this._EntrantID;
			}
			set
			{
				if ((this._EntrantID != value))
				{
					this._EntrantID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(250)")]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this._RegionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionCode", DbType="NVarChar(50)")]
		public string RegionCode
		{
			get
			{
				return this._RegionCode;
			}
			set
			{
				if ((this._RegionCode != value))
				{
					this._RegionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="NVarChar(50)")]
		public string InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this._InstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentInstitutionID", DbType="NVarChar(50)")]
		public string ParentInstitutionID
		{
			get
			{
				return this._ParentInstitutionID;
			}
			set
			{
				if ((this._ParentInstitutionID != value))
				{
					this._ParentInstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IstitutionName", DbType="NVarChar(MAX)")]
		public string IstitutionName
		{
			get
			{
				return this._IstitutionName;
			}
			set
			{
				if ((this._IstitutionName != value))
				{
					this._IstitutionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentInstitutionName", DbType="NVarChar(MAX)")]
		public string ParentInstitutionName
		{
			get
			{
				return this._ParentInstitutionName;
			}
			set
			{
				if ((this._ParentInstitutionName != value))
				{
					this._ParentInstitutionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GosNegos", DbType="NVarChar(150)")]
		public string GosNegos
		{
			get
			{
				return this._GosNegos;
			}
			set
			{
				if ((this._GosNegos != value))
				{
					this._GosNegos = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vedomstvo", DbType="NVarChar(MAX)")]
		public string Vedomstvo
		{
			get
			{
				return this._Vedomstvo;
			}
			set
			{
				if ((this._Vedomstvo != value))
				{
					this._Vedomstvo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramName", DbType="NVarChar(MAX)")]
		public string ProgramName
		{
			get
			{
				return this._ProgramName;
			}
			set
			{
				if ((this._ProgramName != value))
				{
					this._ProgramName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramCode", DbType="NVarChar(50)")]
		public string ProgramCode
		{
			get
			{
				return this._ProgramCode;
			}
			set
			{
				if ((this._ProgramCode != value))
				{
					this._ProgramCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EduForm", DbType="NVarChar(500)")]
		public string EduForm
		{
			get
			{
				return this._EduForm;
			}
			set
			{
				if ((this._EduForm != value))
				{
					this._EduForm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EduLevel", DbType="NVarChar(500)")]
		public string EduLevel
		{
			get
			{
				return this._EduLevel;
			}
			set
			{
				if ((this._EduLevel != value))
				{
					this._EduLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceLevel", DbType="NVarChar(500)")]
		public string FinanceLevel
		{
			get
			{
				return this._FinanceLevel;
			}
			set
			{
				if ((this._FinanceLevel != value))
				{
					this._FinanceLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterCondition", DbType="NVarChar(500)")]
		public string EnterCondition
		{
			get
			{
				return this._EnterCondition;
			}
			set
			{
				if ((this._EnterCondition != value))
				{
					this._EnterCondition = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeRegionCode", DbType="NVarChar(50)")]
		public string EgeRegionCode
		{
			get
			{
				return this._EgeRegionCode;
			}
			set
			{
				if ((this._EgeRegionCode != value))
				{
					this._EgeRegionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeRegionName", DbType="NVarChar(250)")]
		public string EgeRegionName
		{
			get
			{
				return this._EgeRegionName;
			}
			set
			{
				if ((this._EgeRegionName != value))
				{
					this._EgeRegionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallRus", DbType="NVarChar(50)")]
		public string EgeBallRus
		{
			get
			{
				return this._EgeBallRus;
			}
			set
			{
				if ((this._EgeBallRus != value))
				{
					this._EgeBallRus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallMath", DbType="NVarChar(50)")]
		public string EgeBallMath
		{
			get
			{
				return this._EgeBallMath;
			}
			set
			{
				if ((this._EgeBallMath != value))
				{
					this._EgeBallMath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallObsh", DbType="NVarChar(50)")]
		public string EgeBallObsh
		{
			get
			{
				return this._EgeBallObsh;
			}
			set
			{
				if ((this._EgeBallObsh != value))
				{
					this._EgeBallObsh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallHist", DbType="NVarChar(50)")]
		public string EgeBallHist
		{
			get
			{
				return this._EgeBallHist;
			}
			set
			{
				if ((this._EgeBallHist != value))
				{
					this._EgeBallHist = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallPhys", DbType="NVarChar(50)")]
		public string EgeBallPhys
		{
			get
			{
				return this._EgeBallPhys;
			}
			set
			{
				if ((this._EgeBallPhys != value))
				{
					this._EgeBallPhys = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallChem", DbType="NVarChar(50)")]
		public string EgeBallChem
		{
			get
			{
				return this._EgeBallChem;
			}
			set
			{
				if ((this._EgeBallChem != value))
				{
					this._EgeBallChem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallBiol", DbType="NVarChar(50)")]
		public string EgeBallBiol
		{
			get
			{
				return this._EgeBallBiol;
			}
			set
			{
				if ((this._EgeBallBiol != value))
				{
					this._EgeBallBiol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallLang", DbType="NVarChar(50)")]
		public string EgeBallLang
		{
			get
			{
				return this._EgeBallLang;
			}
			set
			{
				if ((this._EgeBallLang != value))
				{
					this._EgeBallLang = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallLiter", DbType="NVarChar(50)")]
		public string EgeBallLiter
		{
			get
			{
				return this._EgeBallLiter;
			}
			set
			{
				if ((this._EgeBallLiter != value))
				{
					this._EgeBallLiter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallGeog", DbType="NVarChar(50)")]
		public string EgeBallGeog
		{
			get
			{
				return this._EgeBallGeog;
			}
			set
			{
				if ((this._EgeBallGeog != value))
				{
					this._EgeBallGeog = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallInfo", DbType="NVarChar(50)")]
		public string EgeBallInfo
		{
			get
			{
				return this._EgeBallInfo;
			}
			set
			{
				if ((this._EgeBallInfo != value))
				{
					this._EgeBallInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallAll", DbType="NVarChar(50)")]
		public string EgeBallAll
		{
			get
			{
				return this._EgeBallAll;
			}
			set
			{
				if ((this._EgeBallAll != value))
				{
					this._EgeBallAll = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterWitoutVI", DbType="NVarChar(50)")]
		public string EnterWitoutVI
		{
			get
			{
				return this._EnterWitoutVI;
			}
			set
			{
				if ((this._EnterWitoutVI != value))
				{
					this._EnterWitoutVI = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicName", DbType="NVarChar(MAX)")]
		public string OlympicName
		{
			get
			{
				return this._OlympicName;
			}
			set
			{
				if ((this._OlympicName != value))
				{
					this._OlympicName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicKurator", DbType="NVarChar(MAX)")]
		public string OlympicKurator
		{
			get
			{
				return this._OlympicKurator;
			}
			set
			{
				if ((this._OlympicKurator != value))
				{
					this._OlympicKurator = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicBallRus", DbType="NVarChar(50)")]
		public string OlympicBallRus
		{
			get
			{
				return this._OlympicBallRus;
			}
			set
			{
				if ((this._OlympicBallRus != value))
				{
					this._OlympicBallRus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicMathRus", DbType="NVarChar(50)")]
		public string OlympicMathRus
		{
			get
			{
				return this._OlympicMathRus;
			}
			set
			{
				if ((this._OlympicMathRus != value))
				{
					this._OlympicMathRus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicBallObsh", DbType="NVarChar(50)")]
		public string OlympicBallObsh
		{
			get
			{
				return this._OlympicBallObsh;
			}
			set
			{
				if ((this._OlympicBallObsh != value))
				{
					this._OlympicBallObsh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicBallHist", DbType="NVarChar(50)")]
		public string OlympicBallHist
		{
			get
			{
				return this._OlympicBallHist;
			}
			set
			{
				if ((this._OlympicBallHist != value))
				{
					this._OlympicBallHist = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicBallPhys", DbType="NVarChar(50)")]
		public string OlympicBallPhys
		{
			get
			{
				return this._OlympicBallPhys;
			}
			set
			{
				if ((this._OlympicBallPhys != value))
				{
					this._OlympicBallPhys = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicBallChem", DbType="NVarChar(50)")]
		public string OlympicBallChem
		{
			get
			{
				return this._OlympicBallChem;
			}
			set
			{
				if ((this._OlympicBallChem != value))
				{
					this._OlympicBallChem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicBallBiol", DbType="NVarChar(50)")]
		public string OlympicBallBiol
		{
			get
			{
				return this._OlympicBallBiol;
			}
			set
			{
				if ((this._OlympicBallBiol != value))
				{
					this._OlympicBallBiol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicBallLang", DbType="NVarChar(50)")]
		public string OlympicBallLang
		{
			get
			{
				return this._OlympicBallLang;
			}
			set
			{
				if ((this._OlympicBallLang != value))
				{
					this._OlympicBallLang = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicBallLiter", DbType="NVarChar(50)")]
		public string OlympicBallLiter
		{
			get
			{
				return this._OlympicBallLiter;
			}
			set
			{
				if ((this._OlympicBallLiter != value))
				{
					this._OlympicBallLiter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicBallGeog", DbType="NVarChar(50)")]
		public string OlympicBallGeog
		{
			get
			{
				return this._OlympicBallGeog;
			}
			set
			{
				if ((this._OlympicBallGeog != value))
				{
					this._OlympicBallGeog = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicBallInfo", DbType="NVarChar(50)")]
		public string OlympicBallInfo
		{
			get
			{
				return this._OlympicBallInfo;
			}
			set
			{
				if ((this._OlympicBallInfo != value))
				{
					this._OlympicBallInfo = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TEMP_HSE_11_2")]
	public partial class TEMP_HSE_11_2
	{
		
		private string _RegionName;
		
		private string _RegionCode;
		
		private string _InstitutionID;
		
		private string _ParentInstitutionID;
		
		private string _IstitutionName;
		
		private string _ParentInstitutionName;
		
		private string _GosNegos;
		
		private string _Vedomstvo;
		
		private string _ProgramName;
		
		private string _ProgramCode;
		
		private string _EduForm;
		
		private string _EduLevel;
		
		private string _FinanceLevel;
		
		private string _EnterCondition;
		
		private string _EgeBallRus;
		
		private string _EgeBallMath;
		
		private string _EgeBallObsh;
		
		private string _EgeBallHist;
		
		private string _EgeBallPhys;
		
		private string _EgeBallChem;
		
		private string _EgeBallBiol;
		
		private string _EgeBallLang;
		
		private string _EgeBallLiter;
		
		private string _EgeBallGeog;
		
		private string _EgeBallInfo;
		
		private string _EgeBallAll;
		
		public TEMP_HSE_11_2()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(250)")]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this._RegionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionCode", DbType="NVarChar(50)")]
		public string RegionCode
		{
			get
			{
				return this._RegionCode;
			}
			set
			{
				if ((this._RegionCode != value))
				{
					this._RegionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="NVarChar(50)")]
		public string InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this._InstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentInstitutionID", DbType="NVarChar(50)")]
		public string ParentInstitutionID
		{
			get
			{
				return this._ParentInstitutionID;
			}
			set
			{
				if ((this._ParentInstitutionID != value))
				{
					this._ParentInstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IstitutionName", DbType="NVarChar(MAX)")]
		public string IstitutionName
		{
			get
			{
				return this._IstitutionName;
			}
			set
			{
				if ((this._IstitutionName != value))
				{
					this._IstitutionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentInstitutionName", DbType="NVarChar(MAX)")]
		public string ParentInstitutionName
		{
			get
			{
				return this._ParentInstitutionName;
			}
			set
			{
				if ((this._ParentInstitutionName != value))
				{
					this._ParentInstitutionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GosNegos", DbType="NVarChar(150)")]
		public string GosNegos
		{
			get
			{
				return this._GosNegos;
			}
			set
			{
				if ((this._GosNegos != value))
				{
					this._GosNegos = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vedomstvo", DbType="NVarChar(MAX)")]
		public string Vedomstvo
		{
			get
			{
				return this._Vedomstvo;
			}
			set
			{
				if ((this._Vedomstvo != value))
				{
					this._Vedomstvo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramName", DbType="NVarChar(MAX)")]
		public string ProgramName
		{
			get
			{
				return this._ProgramName;
			}
			set
			{
				if ((this._ProgramName != value))
				{
					this._ProgramName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramCode", DbType="NVarChar(50)")]
		public string ProgramCode
		{
			get
			{
				return this._ProgramCode;
			}
			set
			{
				if ((this._ProgramCode != value))
				{
					this._ProgramCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EduForm", DbType="NVarChar(500)")]
		public string EduForm
		{
			get
			{
				return this._EduForm;
			}
			set
			{
				if ((this._EduForm != value))
				{
					this._EduForm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EduLevel", DbType="NVarChar(500)")]
		public string EduLevel
		{
			get
			{
				return this._EduLevel;
			}
			set
			{
				if ((this._EduLevel != value))
				{
					this._EduLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceLevel", DbType="NVarChar(500)")]
		public string FinanceLevel
		{
			get
			{
				return this._FinanceLevel;
			}
			set
			{
				if ((this._FinanceLevel != value))
				{
					this._FinanceLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterCondition", DbType="NVarChar(500)")]
		public string EnterCondition
		{
			get
			{
				return this._EnterCondition;
			}
			set
			{
				if ((this._EnterCondition != value))
				{
					this._EnterCondition = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallRus", DbType="NVarChar(50)")]
		public string EgeBallRus
		{
			get
			{
				return this._EgeBallRus;
			}
			set
			{
				if ((this._EgeBallRus != value))
				{
					this._EgeBallRus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallMath", DbType="NVarChar(50)")]
		public string EgeBallMath
		{
			get
			{
				return this._EgeBallMath;
			}
			set
			{
				if ((this._EgeBallMath != value))
				{
					this._EgeBallMath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallObsh", DbType="NVarChar(50)")]
		public string EgeBallObsh
		{
			get
			{
				return this._EgeBallObsh;
			}
			set
			{
				if ((this._EgeBallObsh != value))
				{
					this._EgeBallObsh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallHist", DbType="NVarChar(50)")]
		public string EgeBallHist
		{
			get
			{
				return this._EgeBallHist;
			}
			set
			{
				if ((this._EgeBallHist != value))
				{
					this._EgeBallHist = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallPhys", DbType="NVarChar(50)")]
		public string EgeBallPhys
		{
			get
			{
				return this._EgeBallPhys;
			}
			set
			{
				if ((this._EgeBallPhys != value))
				{
					this._EgeBallPhys = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallChem", DbType="NVarChar(50)")]
		public string EgeBallChem
		{
			get
			{
				return this._EgeBallChem;
			}
			set
			{
				if ((this._EgeBallChem != value))
				{
					this._EgeBallChem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallBiol", DbType="NVarChar(50)")]
		public string EgeBallBiol
		{
			get
			{
				return this._EgeBallBiol;
			}
			set
			{
				if ((this._EgeBallBiol != value))
				{
					this._EgeBallBiol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallLang", DbType="NVarChar(50)")]
		public string EgeBallLang
		{
			get
			{
				return this._EgeBallLang;
			}
			set
			{
				if ((this._EgeBallLang != value))
				{
					this._EgeBallLang = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallLiter", DbType="NVarChar(50)")]
		public string EgeBallLiter
		{
			get
			{
				return this._EgeBallLiter;
			}
			set
			{
				if ((this._EgeBallLiter != value))
				{
					this._EgeBallLiter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallGeog", DbType="NVarChar(50)")]
		public string EgeBallGeog
		{
			get
			{
				return this._EgeBallGeog;
			}
			set
			{
				if ((this._EgeBallGeog != value))
				{
					this._EgeBallGeog = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallInfo", DbType="NVarChar(50)")]
		public string EgeBallInfo
		{
			get
			{
				return this._EgeBallInfo;
			}
			set
			{
				if ((this._EgeBallInfo != value))
				{
					this._EgeBallInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallAll", DbType="NVarChar(50)")]
		public string EgeBallAll
		{
			get
			{
				return this._EgeBallAll;
			}
			set
			{
				if ((this._EgeBallAll != value))
				{
					this._EgeBallAll = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TEMP_HSE_12")]
	public partial class TEMP_HSE_12
	{
		
		private string _ApplicationID;
		
		private string _PersonID;
		
		private string _EntrantID;
		
		private string _RegionName;
		
		private string _RegionCode;
		
		private string _InstitutionID;
		
		private string _ParentInstitutionID;
		
		private string _IstitutionName;
		
		private string _ParentInstitutionName;
		
		private string _GosNegos;
		
		private string _Vedomstvo;
		
		private string _ProgramName;
		
		private string _ProgramCode;
		
		private string _EduForm;
		
		private string _EduLevel;
		
		private string _FinanceLevel;
		
		private string _EnterCondition;
		
		private string _EgeRegionCode;
		
		private string _EgeRegionName;
		
		private string _EgeBallRus;
		
		private string _EgeBallMath;
		
		private string _EgeBallObsh;
		
		private string _EgeBallHist;
		
		private string _EgeBallPhys;
		
		private string _EgeBallChem;
		
		private string _EgeBallBiol;
		
		private string _EgeBallLang;
		
		private string _EgeBallLiter;
		
		private string _EgeBallGeog;
		
		private string _EgeBallInfo;
		
		private string _EgeBallAll;
		
		private string _EnterWitoutVI;
		
		private string _OlympicName;
		
		private string _OlympicKurator;
		
		private string _OlympicBallRus;
		
		private string _OlympicMathRus;
		
		private string _OlympicBallObsh;
		
		private string _OlympicBallHist;
		
		private string _OlympicBallPhys;
		
		private string _OlympicBallChem;
		
		private string _OlympicBallBiol;
		
		private string _OlympicBallLang;
		
		private string _OlympicBallLiter;
		
		private string _OlympicBallGeog;
		
		private string _OlympicBallInfo;
		
		public TEMP_HSE_12()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationID", DbType="NVarChar(50)")]
		public string ApplicationID
		{
			get
			{
				return this._ApplicationID;
			}
			set
			{
				if ((this._ApplicationID != value))
				{
					this._ApplicationID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="NVarChar(50)")]
		public string PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EntrantID", DbType="NVarChar(50)")]
		public string EntrantID
		{
			get
			{
				return this._EntrantID;
			}
			set
			{
				if ((this._EntrantID != value))
				{
					this._EntrantID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(250)")]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this._RegionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionCode", DbType="NVarChar(50)")]
		public string RegionCode
		{
			get
			{
				return this._RegionCode;
			}
			set
			{
				if ((this._RegionCode != value))
				{
					this._RegionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="NVarChar(50)")]
		public string InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this._InstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentInstitutionID", DbType="NVarChar(50)")]
		public string ParentInstitutionID
		{
			get
			{
				return this._ParentInstitutionID;
			}
			set
			{
				if ((this._ParentInstitutionID != value))
				{
					this._ParentInstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IstitutionName", DbType="NVarChar(MAX)")]
		public string IstitutionName
		{
			get
			{
				return this._IstitutionName;
			}
			set
			{
				if ((this._IstitutionName != value))
				{
					this._IstitutionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentInstitutionName", DbType="NVarChar(MAX)")]
		public string ParentInstitutionName
		{
			get
			{
				return this._ParentInstitutionName;
			}
			set
			{
				if ((this._ParentInstitutionName != value))
				{
					this._ParentInstitutionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GosNegos", DbType="NVarChar(150)")]
		public string GosNegos
		{
			get
			{
				return this._GosNegos;
			}
			set
			{
				if ((this._GosNegos != value))
				{
					this._GosNegos = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vedomstvo", DbType="NVarChar(MAX)")]
		public string Vedomstvo
		{
			get
			{
				return this._Vedomstvo;
			}
			set
			{
				if ((this._Vedomstvo != value))
				{
					this._Vedomstvo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramName", DbType="NVarChar(MAX)")]
		public string ProgramName
		{
			get
			{
				return this._ProgramName;
			}
			set
			{
				if ((this._ProgramName != value))
				{
					this._ProgramName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramCode", DbType="NVarChar(50)")]
		public string ProgramCode
		{
			get
			{
				return this._ProgramCode;
			}
			set
			{
				if ((this._ProgramCode != value))
				{
					this._ProgramCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EduForm", DbType="NVarChar(500)")]
		public string EduForm
		{
			get
			{
				return this._EduForm;
			}
			set
			{
				if ((this._EduForm != value))
				{
					this._EduForm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EduLevel", DbType="NVarChar(500)")]
		public string EduLevel
		{
			get
			{
				return this._EduLevel;
			}
			set
			{
				if ((this._EduLevel != value))
				{
					this._EduLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceLevel", DbType="NVarChar(500)")]
		public string FinanceLevel
		{
			get
			{
				return this._FinanceLevel;
			}
			set
			{
				if ((this._FinanceLevel != value))
				{
					this._FinanceLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterCondition", DbType="NVarChar(500)")]
		public string EnterCondition
		{
			get
			{
				return this._EnterCondition;
			}
			set
			{
				if ((this._EnterCondition != value))
				{
					this._EnterCondition = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeRegionCode", DbType="NVarChar(50)")]
		public string EgeRegionCode
		{
			get
			{
				return this._EgeRegionCode;
			}
			set
			{
				if ((this._EgeRegionCode != value))
				{
					this._EgeRegionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeRegionName", DbType="NVarChar(250)")]
		public string EgeRegionName
		{
			get
			{
				return this._EgeRegionName;
			}
			set
			{
				if ((this._EgeRegionName != value))
				{
					this._EgeRegionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallRus", DbType="NVarChar(50)")]
		public string EgeBallRus
		{
			get
			{
				return this._EgeBallRus;
			}
			set
			{
				if ((this._EgeBallRus != value))
				{
					this._EgeBallRus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallMath", DbType="NVarChar(50)")]
		public string EgeBallMath
		{
			get
			{
				return this._EgeBallMath;
			}
			set
			{
				if ((this._EgeBallMath != value))
				{
					this._EgeBallMath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallObsh", DbType="NVarChar(50)")]
		public string EgeBallObsh
		{
			get
			{
				return this._EgeBallObsh;
			}
			set
			{
				if ((this._EgeBallObsh != value))
				{
					this._EgeBallObsh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallHist", DbType="NVarChar(50)")]
		public string EgeBallHist
		{
			get
			{
				return this._EgeBallHist;
			}
			set
			{
				if ((this._EgeBallHist != value))
				{
					this._EgeBallHist = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallPhys", DbType="NVarChar(50)")]
		public string EgeBallPhys
		{
			get
			{
				return this._EgeBallPhys;
			}
			set
			{
				if ((this._EgeBallPhys != value))
				{
					this._EgeBallPhys = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallChem", DbType="NVarChar(50)")]
		public string EgeBallChem
		{
			get
			{
				return this._EgeBallChem;
			}
			set
			{
				if ((this._EgeBallChem != value))
				{
					this._EgeBallChem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallBiol", DbType="NVarChar(50)")]
		public string EgeBallBiol
		{
			get
			{
				return this._EgeBallBiol;
			}
			set
			{
				if ((this._EgeBallBiol != value))
				{
					this._EgeBallBiol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallLang", DbType="NVarChar(50)")]
		public string EgeBallLang
		{
			get
			{
				return this._EgeBallLang;
			}
			set
			{
				if ((this._EgeBallLang != value))
				{
					this._EgeBallLang = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallLiter", DbType="NVarChar(50)")]
		public string EgeBallLiter
		{
			get
			{
				return this._EgeBallLiter;
			}
			set
			{
				if ((this._EgeBallLiter != value))
				{
					this._EgeBallLiter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallGeog", DbType="NVarChar(50)")]
		public string EgeBallGeog
		{
			get
			{
				return this._EgeBallGeog;
			}
			set
			{
				if ((this._EgeBallGeog != value))
				{
					this._EgeBallGeog = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallInfo", DbType="NVarChar(50)")]
		public string EgeBallInfo
		{
			get
			{
				return this._EgeBallInfo;
			}
			set
			{
				if ((this._EgeBallInfo != value))
				{
					this._EgeBallInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallAll", DbType="NVarChar(50)")]
		public string EgeBallAll
		{
			get
			{
				return this._EgeBallAll;
			}
			set
			{
				if ((this._EgeBallAll != value))
				{
					this._EgeBallAll = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterWitoutVI", DbType="NVarChar(50)")]
		public string EnterWitoutVI
		{
			get
			{
				return this._EnterWitoutVI;
			}
			set
			{
				if ((this._EnterWitoutVI != value))
				{
					this._EnterWitoutVI = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicName", DbType="NVarChar(MAX)")]
		public string OlympicName
		{
			get
			{
				return this._OlympicName;
			}
			set
			{
				if ((this._OlympicName != value))
				{
					this._OlympicName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicKurator", DbType="NVarChar(MAX)")]
		public string OlympicKurator
		{
			get
			{
				return this._OlympicKurator;
			}
			set
			{
				if ((this._OlympicKurator != value))
				{
					this._OlympicKurator = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicBallRus", DbType="NVarChar(50)")]
		public string OlympicBallRus
		{
			get
			{
				return this._OlympicBallRus;
			}
			set
			{
				if ((this._OlympicBallRus != value))
				{
					this._OlympicBallRus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicMathRus", DbType="NVarChar(50)")]
		public string OlympicMathRus
		{
			get
			{
				return this._OlympicMathRus;
			}
			set
			{
				if ((this._OlympicMathRus != value))
				{
					this._OlympicMathRus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicBallObsh", DbType="NVarChar(50)")]
		public string OlympicBallObsh
		{
			get
			{
				return this._OlympicBallObsh;
			}
			set
			{
				if ((this._OlympicBallObsh != value))
				{
					this._OlympicBallObsh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicBallHist", DbType="NVarChar(50)")]
		public string OlympicBallHist
		{
			get
			{
				return this._OlympicBallHist;
			}
			set
			{
				if ((this._OlympicBallHist != value))
				{
					this._OlympicBallHist = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicBallPhys", DbType="NVarChar(50)")]
		public string OlympicBallPhys
		{
			get
			{
				return this._OlympicBallPhys;
			}
			set
			{
				if ((this._OlympicBallPhys != value))
				{
					this._OlympicBallPhys = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicBallChem", DbType="NVarChar(50)")]
		public string OlympicBallChem
		{
			get
			{
				return this._OlympicBallChem;
			}
			set
			{
				if ((this._OlympicBallChem != value))
				{
					this._OlympicBallChem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicBallBiol", DbType="NVarChar(50)")]
		public string OlympicBallBiol
		{
			get
			{
				return this._OlympicBallBiol;
			}
			set
			{
				if ((this._OlympicBallBiol != value))
				{
					this._OlympicBallBiol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicBallLang", DbType="NVarChar(50)")]
		public string OlympicBallLang
		{
			get
			{
				return this._OlympicBallLang;
			}
			set
			{
				if ((this._OlympicBallLang != value))
				{
					this._OlympicBallLang = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicBallLiter", DbType="NVarChar(50)")]
		public string OlympicBallLiter
		{
			get
			{
				return this._OlympicBallLiter;
			}
			set
			{
				if ((this._OlympicBallLiter != value))
				{
					this._OlympicBallLiter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicBallGeog", DbType="NVarChar(50)")]
		public string OlympicBallGeog
		{
			get
			{
				return this._OlympicBallGeog;
			}
			set
			{
				if ((this._OlympicBallGeog != value))
				{
					this._OlympicBallGeog = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OlympicBallInfo", DbType="NVarChar(50)")]
		public string OlympicBallInfo
		{
			get
			{
				return this._OlympicBallInfo;
			}
			set
			{
				if ((this._OlympicBallInfo != value))
				{
					this._OlympicBallInfo = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TEMP_HSE_12_2")]
	public partial class TEMP_HSE_12_2
	{
		
		private string _RegionName;
		
		private string _RegionCode;
		
		private string _InstitutionID;
		
		private string _ParentInstitutionID;
		
		private string _IstitutionName;
		
		private string _ParentInstitutionName;
		
		private string _GosNegos;
		
		private string _Vedomstvo;
		
		private string _ProgramName;
		
		private string _ProgramCode;
		
		private string _EduForm;
		
		private string _EduLevel;
		
		private string _FinanceLevel;
		
		private string _EnterCondition;
		
		private string _EgeBallRus;
		
		private string _EgeBallMath;
		
		private string _EgeBallObsh;
		
		private string _EgeBallHist;
		
		private string _EgeBallPhys;
		
		private string _EgeBallChem;
		
		private string _EgeBallBiol;
		
		private string _EgeBallLang;
		
		private string _EgeBallLiter;
		
		private string _EgeBallGeog;
		
		private string _EgeBallInfo;
		
		private string _EgeBallAll;
		
		public TEMP_HSE_12_2()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="NVarChar(250)")]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this._RegionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionCode", DbType="NVarChar(50)")]
		public string RegionCode
		{
			get
			{
				return this._RegionCode;
			}
			set
			{
				if ((this._RegionCode != value))
				{
					this._RegionCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="NVarChar(50)")]
		public string InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					this._InstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentInstitutionID", DbType="NVarChar(50)")]
		public string ParentInstitutionID
		{
			get
			{
				return this._ParentInstitutionID;
			}
			set
			{
				if ((this._ParentInstitutionID != value))
				{
					this._ParentInstitutionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IstitutionName", DbType="NVarChar(MAX)")]
		public string IstitutionName
		{
			get
			{
				return this._IstitutionName;
			}
			set
			{
				if ((this._IstitutionName != value))
				{
					this._IstitutionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentInstitutionName", DbType="NVarChar(MAX)")]
		public string ParentInstitutionName
		{
			get
			{
				return this._ParentInstitutionName;
			}
			set
			{
				if ((this._ParentInstitutionName != value))
				{
					this._ParentInstitutionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GosNegos", DbType="NVarChar(150)")]
		public string GosNegos
		{
			get
			{
				return this._GosNegos;
			}
			set
			{
				if ((this._GosNegos != value))
				{
					this._GosNegos = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vedomstvo", DbType="NVarChar(MAX)")]
		public string Vedomstvo
		{
			get
			{
				return this._Vedomstvo;
			}
			set
			{
				if ((this._Vedomstvo != value))
				{
					this._Vedomstvo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramName", DbType="NVarChar(MAX)")]
		public string ProgramName
		{
			get
			{
				return this._ProgramName;
			}
			set
			{
				if ((this._ProgramName != value))
				{
					this._ProgramName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramCode", DbType="NVarChar(50)")]
		public string ProgramCode
		{
			get
			{
				return this._ProgramCode;
			}
			set
			{
				if ((this._ProgramCode != value))
				{
					this._ProgramCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EduForm", DbType="NVarChar(500)")]
		public string EduForm
		{
			get
			{
				return this._EduForm;
			}
			set
			{
				if ((this._EduForm != value))
				{
					this._EduForm = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EduLevel", DbType="NVarChar(500)")]
		public string EduLevel
		{
			get
			{
				return this._EduLevel;
			}
			set
			{
				if ((this._EduLevel != value))
				{
					this._EduLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceLevel", DbType="NVarChar(500)")]
		public string FinanceLevel
		{
			get
			{
				return this._FinanceLevel;
			}
			set
			{
				if ((this._FinanceLevel != value))
				{
					this._FinanceLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnterCondition", DbType="NVarChar(500)")]
		public string EnterCondition
		{
			get
			{
				return this._EnterCondition;
			}
			set
			{
				if ((this._EnterCondition != value))
				{
					this._EnterCondition = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallRus", DbType="NVarChar(50)")]
		public string EgeBallRus
		{
			get
			{
				return this._EgeBallRus;
			}
			set
			{
				if ((this._EgeBallRus != value))
				{
					this._EgeBallRus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallMath", DbType="NVarChar(50)")]
		public string EgeBallMath
		{
			get
			{
				return this._EgeBallMath;
			}
			set
			{
				if ((this._EgeBallMath != value))
				{
					this._EgeBallMath = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallObsh", DbType="NVarChar(50)")]
		public string EgeBallObsh
		{
			get
			{
				return this._EgeBallObsh;
			}
			set
			{
				if ((this._EgeBallObsh != value))
				{
					this._EgeBallObsh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallHist", DbType="NVarChar(50)")]
		public string EgeBallHist
		{
			get
			{
				return this._EgeBallHist;
			}
			set
			{
				if ((this._EgeBallHist != value))
				{
					this._EgeBallHist = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallPhys", DbType="NVarChar(50)")]
		public string EgeBallPhys
		{
			get
			{
				return this._EgeBallPhys;
			}
			set
			{
				if ((this._EgeBallPhys != value))
				{
					this._EgeBallPhys = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallChem", DbType="NVarChar(50)")]
		public string EgeBallChem
		{
			get
			{
				return this._EgeBallChem;
			}
			set
			{
				if ((this._EgeBallChem != value))
				{
					this._EgeBallChem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallBiol", DbType="NVarChar(50)")]
		public string EgeBallBiol
		{
			get
			{
				return this._EgeBallBiol;
			}
			set
			{
				if ((this._EgeBallBiol != value))
				{
					this._EgeBallBiol = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallLang", DbType="NVarChar(50)")]
		public string EgeBallLang
		{
			get
			{
				return this._EgeBallLang;
			}
			set
			{
				if ((this._EgeBallLang != value))
				{
					this._EgeBallLang = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallLiter", DbType="NVarChar(50)")]
		public string EgeBallLiter
		{
			get
			{
				return this._EgeBallLiter;
			}
			set
			{
				if ((this._EgeBallLiter != value))
				{
					this._EgeBallLiter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallGeog", DbType="NVarChar(50)")]
		public string EgeBallGeog
		{
			get
			{
				return this._EgeBallGeog;
			}
			set
			{
				if ((this._EgeBallGeog != value))
				{
					this._EgeBallGeog = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallInfo", DbType="NVarChar(50)")]
		public string EgeBallInfo
		{
			get
			{
				return this._EgeBallInfo;
			}
			set
			{
				if ((this._EgeBallInfo != value))
				{
					this._EgeBallInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EgeBallAll", DbType="NVarChar(50)")]
		public string EgeBallAll
		{
			get
			{
				return this._EgeBallAll;
			}
			set
			{
				if ((this._EgeBallAll != value))
				{
					this._EgeBallAll = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TEMP_ISLOD_ESRP")]
	public partial class TEMP_ISLOD_ESRP
	{
		
		private string _ISLOD_ID;
		
		private string _ESRP_ID;
		
		public TEMP_ISLOD_ESRP()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISLOD_ID", DbType="NVarChar(50)")]
		public string ISLOD_ID
		{
			get
			{
				return this._ISLOD_ID;
			}
			set
			{
				if ((this._ISLOD_ID != value))
				{
					this._ISLOD_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESRP_ID", DbType="NVarChar(50)")]
		public string ESRP_ID
		{
			get
			{
				return this._ESRP_ID;
			}
			set
			{
				if ((this._ESRP_ID != value))
				{
					this._ESRP_ID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TEMP1")]
	public partial class TEMP1
	{
		
		private string _ID_ERBD;
		
		private string _Vip2015;
		
		private string _Region;
		
		private string _Kategoria;
		
		public TEMP1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ERBD", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ID_ERBD
		{
			get
			{
				return this._ID_ERBD;
			}
			set
			{
				if ((this._ID_ERBD != value))
				{
					this._ID_ERBD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vip2015", DbType="NVarChar(MAX)")]
		public string Vip2015
		{
			get
			{
				return this._Vip2015;
			}
			set
			{
				if ((this._Vip2015 != value))
				{
					this._Vip2015 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(MAX)")]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this._Region = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kategoria", DbType="NVarChar(MAX)")]
		public string Kategoria
		{
			get
			{
				return this._Kategoria;
			}
			set
			{
				if ((this._Kategoria != value))
				{
					this._Kategoria = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TEMP2")]
	public partial class TEMP2
	{
		
		private string _ID;
		
		private string _source;
		
		private string _form;
		
		public TEMP2()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_source", DbType="NVarChar(MAX)")]
		public string source
		{
			get
			{
				return this._source;
			}
			set
			{
				if ((this._source != value))
				{
					this._source = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_form", DbType="NVarChar(MAX)")]
		public string form
		{
			get
			{
				return this._form;
			}
			set
			{
				if ((this._form != value))
				{
					this._form = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Translation_RVIDT_IdentityDT")]
	public partial class Translation_RVIDT_IdentityDT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _DocumentTypeCode;
		
		private int _IdentityDocumentTypeID;
		
		private EntityRef<IdentityDocumentType> _IdentityDocumentType;
		
		private EntityRef<RVIDocumentType> _RVIDocumentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDocumentTypeCodeChanging(int value);
    partial void OnDocumentTypeCodeChanged();
    partial void OnIdentityDocumentTypeIDChanging(int value);
    partial void OnIdentityDocumentTypeIDChanged();
    #endregion
		
		public Translation_RVIDT_IdentityDT()
		{
			this._IdentityDocumentType = default(EntityRef<IdentityDocumentType>);
			this._RVIDocumentType = default(EntityRef<RVIDocumentType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentTypeCode", DbType="Int NOT NULL")]
		public int DocumentTypeCode
		{
			get
			{
				return this._DocumentTypeCode;
			}
			set
			{
				if ((this._DocumentTypeCode != value))
				{
					if (this._RVIDocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocumentTypeCodeChanging(value);
					this.SendPropertyChanging();
					this._DocumentTypeCode = value;
					this.SendPropertyChanged("DocumentTypeCode");
					this.OnDocumentTypeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentityDocumentTypeID", DbType="Int NOT NULL")]
		public int IdentityDocumentTypeID
		{
			get
			{
				return this._IdentityDocumentTypeID;
			}
			set
			{
				if ((this._IdentityDocumentTypeID != value))
				{
					if (this._IdentityDocumentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdentityDocumentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._IdentityDocumentTypeID = value;
					this.SendPropertyChanged("IdentityDocumentTypeID");
					this.OnIdentityDocumentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IdentityDocumentType_Translation_RVIDT_IdentityDT", Storage="_IdentityDocumentType", ThisKey="IdentityDocumentTypeID", OtherKey="IdentityDocumentTypeID", IsForeignKey=true)]
		public IdentityDocumentType IdentityDocumentType
		{
			get
			{
				return this._IdentityDocumentType.Entity;
			}
			set
			{
				IdentityDocumentType previousValue = this._IdentityDocumentType.Entity;
				if (((previousValue != value) 
							|| (this._IdentityDocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IdentityDocumentType.Entity = null;
						previousValue.Translation_RVIDT_IdentityDTs.Remove(this);
					}
					this._IdentityDocumentType.Entity = value;
					if ((value != null))
					{
						value.Translation_RVIDT_IdentityDTs.Add(this);
						this._IdentityDocumentTypeID = value.IdentityDocumentTypeID;
					}
					else
					{
						this._IdentityDocumentTypeID = default(int);
					}
					this.SendPropertyChanged("IdentityDocumentType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RVIDocumentType_Translation_RVIDT_IdentityDT", Storage="_RVIDocumentType", ThisKey="DocumentTypeCode", OtherKey="DocumentTypeCode", IsForeignKey=true)]
		public RVIDocumentType RVIDocumentType
		{
			get
			{
				return this._RVIDocumentType.Entity;
			}
			set
			{
				RVIDocumentType previousValue = this._RVIDocumentType.Entity;
				if (((previousValue != value) 
							|| (this._RVIDocumentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RVIDocumentType.Entity = null;
						previousValue.Translation_RVIDT_IdentityDTs.Remove(this);
					}
					this._RVIDocumentType.Entity = value;
					if ((value != null))
					{
						value.Translation_RVIDT_IdentityDTs.Add(this);
						this._DocumentTypeCode = value.DocumentTypeCode;
					}
					else
					{
						this._DocumentTypeCode = default(int);
					}
					this.SendPropertyChanged("RVIDocumentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPolicy")]
	public partial class UserPolicy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserID;
		
		private System.Nullable<int> _InstitutionID;
		
		private bool _IsMainAdmin;
		
		private string _FullName;
		
		private string _UserName;
		
		private string _Position;
		
		private string _PhoneNumber;
		
		private string _Comment;
		
		private int _AvailableEgeCheckCount;
		
		private string _PinCode;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private bool _IsReadOnly;
		
		private int _Subrole;
		
		private System.Nullable<int> _FilialID;
		
		private System.Nullable<bool> _IsDeactivated;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
		private EntityRef<Institution> _Institution;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnInstitutionIDChanging(System.Nullable<int> value);
    partial void OnInstitutionIDChanged();
    partial void OnIsMainAdminChanging(bool value);
    partial void OnIsMainAdminChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPositionChanging(string value);
    partial void OnPositionChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void OnAvailableEgeCheckCountChanging(int value);
    partial void OnAvailableEgeCheckCountChanged();
    partial void OnPinCodeChanging(string value);
    partial void OnPinCodeChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnIsReadOnlyChanging(bool value);
    partial void OnIsReadOnlyChanged();
    partial void OnSubroleChanging(int value);
    partial void OnSubroleChanged();
    partial void OnFilialIDChanging(System.Nullable<int> value);
    partial void OnFilialIDChanged();
    partial void OnIsDeactivatedChanging(System.Nullable<bool> value);
    partial void OnIsDeactivatedChanged();
    #endregion
		
		public UserPolicy()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			this._Institution = default(EntityRef<Institution>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InstitutionID", DbType="Int")]
		public System.Nullable<int> InstitutionID
		{
			get
			{
				return this._InstitutionID;
			}
			set
			{
				if ((this._InstitutionID != value))
				{
					if (this._Institution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnInstitutionIDChanging(value);
					this.SendPropertyChanging();
					this._InstitutionID = value;
					this.SendPropertyChanged("InstitutionID");
					this.OnInstitutionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMainAdmin", DbType="Bit NOT NULL")]
		public bool IsMainAdmin
		{
			get
			{
				return this._IsMainAdmin;
			}
			set
			{
				if ((this._IsMainAdmin != value))
				{
					this.OnIsMainAdminChanging(value);
					this.SendPropertyChanging();
					this._IsMainAdmin = value;
					this.SendPropertyChanged("IsMainAdmin");
					this.OnIsMainAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Position", DbType="VarChar(100)")]
		public string Position
		{
			get
			{
				return this._Position;
			}
			set
			{
				if ((this._Position != value))
				{
					this.OnPositionChanging(value);
					this.SendPropertyChanging();
					this._Position = value;
					this.SendPropertyChanged("Position");
					this.OnPositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(3000)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableEgeCheckCount", DbType="Int NOT NULL")]
		public int AvailableEgeCheckCount
		{
			get
			{
				return this._AvailableEgeCheckCount;
			}
			set
			{
				if ((this._AvailableEgeCheckCount != value))
				{
					this.OnAvailableEgeCheckCountChanging(value);
					this.SendPropertyChanging();
					this._AvailableEgeCheckCount = value;
					this.SendPropertyChanged("AvailableEgeCheckCount");
					this.OnAvailableEgeCheckCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PinCode", DbType="VarChar(100)")]
		public string PinCode
		{
			get
			{
				return this._PinCode;
			}
			set
			{
				if ((this._PinCode != value))
				{
					this.OnPinCodeChanging(value);
					this.SendPropertyChanging();
					this._PinCode = value;
					this.SendPropertyChanged("PinCode");
					this.OnPinCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsReadOnly", DbType="Bit NOT NULL")]
		public bool IsReadOnly
		{
			get
			{
				return this._IsReadOnly;
			}
			set
			{
				if ((this._IsReadOnly != value))
				{
					this.OnIsReadOnlyChanging(value);
					this.SendPropertyChanging();
					this._IsReadOnly = value;
					this.SendPropertyChanged("IsReadOnly");
					this.OnIsReadOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subrole", DbType="Int NOT NULL")]
		public int Subrole
		{
			get
			{
				return this._Subrole;
			}
			set
			{
				if ((this._Subrole != value))
				{
					this.OnSubroleChanging(value);
					this.SendPropertyChanging();
					this._Subrole = value;
					this.SendPropertyChanged("Subrole");
					this.OnSubroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilialID", DbType="Int")]
		public System.Nullable<int> FilialID
		{
			get
			{
				return this._FilialID;
			}
			set
			{
				if ((this._FilialID != value))
				{
					this.OnFilialIDChanging(value);
					this.SendPropertyChanging();
					this._FilialID = value;
					this.SendPropertyChanged("FilialID");
					this.OnFilialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeactivated", DbType="Bit")]
		public System.Nullable<bool> IsDeactivated
		{
			get
			{
				return this._IsDeactivated;
			}
			set
			{
				if ((this._IsDeactivated != value))
				{
					this.OnIsDeactivatedChanging(value);
					this.SendPropertyChanging();
					this._IsDeactivated = value;
					this.SendPropertyChanged("IsDeactivated");
					this.OnIsDeactivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_UserPolicy", Storage="_aspnet_User", ThisKey="UserID", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.UserPolicy = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.UserPolicy = this;
						this._UserID = value.UserId;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Institution_UserPolicy", Storage="_Institution", ThisKey="InstitutionID", OtherKey="InstitutionID", IsForeignKey=true)]
		public Institution Institution
		{
			get
			{
				return this._Institution.Entity;
			}
			set
			{
				Institution previousValue = this._Institution.Entity;
				if (((previousValue != value) 
							|| (this._Institution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Institution.Entity = null;
						previousValue.UserPolicies.Remove(this);
					}
					this._Institution.Entity = value;
					if ((value != null))
					{
						value.UserPolicies.Add(this);
						this._InstitutionID = value.InstitutionID;
					}
					else
					{
						this._InstitutionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Institution");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
